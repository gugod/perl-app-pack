#!/usr/bin/env perl

# This chunk of stuff was generated by App::FatPacker. To find the original
# file's code, look for the end of this BEGIN block or the string 'FATPACK'
BEGIN {
my %fatpacked;

$fatpacked{"App/scan_prereqs_cpanfile.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'APP_SCAN_PREREQS_CPANFILE';
  package App::scan_prereqs_cpanfile;
  use strict;
  use warnings;
  use 5.008005;
  our $VERSION = "1.10";
  
  use Exporter 5.57 'import';
  our @EXPORT_OK = qw(
      debugf find_perl_files scan_inner_packages scan scan_test_requires load_diff_src
  );
  
  use version ();
  use CPAN::Meta ();
  use CPAN::Meta::Requirements ();
  use File::Find qw(find);
  use Module::CoreList ();
  use Module::CPANfile 0.9020 ();
  use File::Spec ();
  use File::Basename ();
  use Module::Metadata ();
  use Perl::PrereqScanner::Lite 0.21;
  
  sub debugf {
      if ($ENV{SCAN_PREREQS_CPANFILE_DEBUG}) {
          require Data::Dumper;
          my $format = shift;
          no warnings 'once';
          local $Data::Dumper::Terse  = 1;
          local $Data::Dumper::Indent = 0;
          my $txt = sprintf($format, map { defined($_) ? Data::Dumper::Dumper($_) : '-' } @_);
          print $txt, "\n";
      }
  }
  
  sub scan {
      my ($files, $inner_packages, $meta_prereqs, $prereq_types, $type, $optional_prereqs) = @_;
  
      my $prereqs = scan_files(@$files);
  
      # Remove internal packages.
      remove_prereqs($prereqs, +{ map { $_ => 1 } @$inner_packages });
  
      # Remove from meta
      for my $type (@$prereq_types) {
          remove_prereqs($prereqs, $meta_prereqs->{$type}->{requires});
          remove_prereqs($prereqs, $meta_prereqs->{$type}->{recommends});
      }
  
      # Runtime prereqs.
      if ($optional_prereqs) {
          remove_prereqs($prereqs, $optional_prereqs);
      }
  
      # Remove core modules.
      my $perl_version = $meta_prereqs->{perl} || '5.008001';
      remove_prereqs($prereqs, blead_corelist($perl_version));
  
      return $prereqs;
  }
  
  sub scan_inner_packages {
      my @files = @_;
      my %uniq;
      my @list;
      for my $file (@files) {
          push @list, grep { !$uniq{$_}++ } Module::Metadata->new_from_file($file)->packages_inside();
      }
      return @list;
  }
  
  sub scan_files {
      my @files = @_;
  
      my $combined = CPAN::Meta::Requirements->new;
      for my $file (@files) {
          debugf("Reading %s", $file);
  
          my $scanner = Perl::PrereqScanner::Lite->new;
          $scanner->add_extra_scanner('Moose');
          my $prereqs = $scanner->scan_file($file);
          $combined->add_requirements($prereqs);
      }
      my $prereqs = $combined->as_string_hash;
  }
  
  sub blead_corelist {
      my $perl_version = shift;
      my %corelist = %{$Module::CoreList::version{$perl_version}};
      for my $module (keys %corelist) {
          my $upstream = $Module::CoreList::upstream{$module};
          if ($upstream && $upstream eq 'cpan') {
              delete $corelist{$module};
          }
      }
      return \%corelist;
  }
  
  sub remove_prereqs {
      my ($prereqs, $allowed) = @_;
      return unless $allowed;
  
      for my $module (keys %$allowed) {
          if (exists $allowed->{$module}) {
              if (parse_version($allowed->{$module}) >= parse_version($prereqs->{$module})) {
                  debugf("Core: %s %s >= %s", $module, $allowed->{$module}, $prereqs->{$module});
                  delete $prereqs->{$module}
              }
          }
      }
  }
  
  sub parse_version {
      my $v = shift;
      return version->parse(0) unless defined $v;
      return version->parse(''.$v);
  }
  
  sub load_diff_src {
      my $src = shift;
      if (File::Basename::basename($src) eq 'cpanfile') {
          return Module::CPANfile->load($src)->prereq_specs;
      } elsif ($src =~ /\.(yml|json)$/) {
          my $meta = CPAN::Meta->load_file($src);
          my $meta_prereqs = CPAN::Meta::Prereqs->new($meta->prereqs)->as_string_hash;
          return $meta_prereqs;
      } else {
          die "No META.json and cpanfile\n";
      }
  }
  
  sub read_from_file {
      my ($fname, $length) = @_;
      return q{} if !-f $fname;
      open my $fh, '<', $fname
          or Carp::croak("Can't open '$fname' for reading: '$!'");
      my $buf;
      read $fh, $buf, $length;
      return $buf;
  }
  
  sub find_perl_files {
      my ($dir, %opts) = @_;
      my $ignore = $opts{ignore} || [];
      my $ignore_regexp = $opts{ignore_regexp};
  
      my (@runtime_files, @test_files, @configure_files, @develop_files);
      find(
          {
              no_chdir => 1,
              wanted   => sub {
                  return if $_ eq '.';
                  return if -S $_; # Ignore UNIX socket
  
                  # Ignore files.
                  my (undef, $topdir, ) = File::Spec->splitdir($_);
                  my $basename = File::Basename::basename($_);
                  return if $basename eq 'Build';
                  return if defined($ignore_regexp) && $_ =~ m/$ignore_regexp/;
  
                  # Ignore build dir like Dist-Name-0.01/.
                  return if -f "$topdir/META.json";
  
                  for my $ignored (@$ignore) {
                      return if $topdir eq $ignored;
                  }
  
                  if ($basename eq 'Build.PL' || $basename eq 'Makefile.PL') {
                      push @configure_files, $_
                  } elsif ($topdir eq 't') {
                      if (/\.(pl|pm|psgi|t)$/) {
                          if ($basename =~ /^(?:author|release)-/) {
                              # dzil creates author test files to t/author-XXX.t
                              push @develop_files, $_
                          } else {
                              push @test_files, $_
                          }
                      }
                  } elsif ($topdir eq 'xt' || $topdir eq 'author' || $topdir eq 'benchmark') {
                      if (/\.(pl|pm|psgi|t)$/) {
                          push @develop_files, $_
                      }
                  } else {
                      if (/\.(pl|pm|psgi)$/) {
                          push @runtime_files, $_
                      } else {
                          my $header = read_from_file($_, 1024);
                          if ($header && $header =~ /^#!.*perl/) {
                              # Skip fatpacked file.
                              if ($header =~ /This chunk of stuff was generated by App::FatPacker./) {
                                  debugf("fatpacked %s", $_);
                                  return;
                              }
  
                              push @runtime_files, $_
                          }
                      }
                  }
              }
          },
          $dir
      );
      return (\@runtime_files, \@test_files, \@configure_files, \@develop_files);
  }
  
  sub scan_test_requires {
      my ($dir, $develop_prereqs) = @_;
  
      require Test::Requires::Scanner;
  
      my @test_files;
      find(
          {
              no_chdir => 1,
              wanted   => sub {
                  return if $_ eq '.';
                  return if -S $_; # Ignore UNIX socket
  
                  my (undef, $topdir, ) = File::Spec->splitdir($_);
                  if (($topdir eq 'xt' || $topdir eq 't') && /\.(?:t|pm)$/ ) {
                      push @test_files, $_
                  }
              },
          },
          $dir
      );
      my $test_requires_prereqs = Test::Requires::Scanner->scan_files(@test_files);
  
      for my $module (keys %$test_requires_prereqs) {
          my $version = $test_requires_prereqs->{$module};
  
          if (! exists $develop_prereqs->{$module} ||
              parse_version($version) > parse_version($develop_prereqs->{$module})
          ) {
              $develop_prereqs->{$module} = $version || 0;
          }
      }
  
      return $develop_prereqs;
  }
  
  
  1;
  __END__
  
  =head1 NAME
  
  App::scan_prereqs_cpanfile - Scan prerequisite modules and generate CPANfile
  
  =head1 DESCRIPTION
  
  Please look L<scan-prereqs-cpanfile>.
  
  =head1 LICENSE
  
  Copyright (C) tokuhirom
  
  This library is free software; you can redistribute it and/or modify
  it under the same terms as Perl itself.
  
  =head1 AUTHOR
  
  tokuhirom E<lt>tokuhirom@gmail.comE<gt>
  
APP_SCAN_PREREQS_CPANFILE

$fatpacked{"CPAN/Meta.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'CPAN_META';
  use 5.006;
  use strict;
  use warnings;
  package CPAN::Meta;
  
  our $VERSION = '2.150010';
  
  #pod =head1 SYNOPSIS
  #pod
  #pod     use v5.10;
  #pod     use strict;
  #pod     use warnings;
  #pod     use CPAN::Meta;
  #pod     use Module::Load;
  #pod
  #pod     my $meta = CPAN::Meta->load_file('META.json');
  #pod
  #pod     printf "testing requirements for %s version %s\n",
  #pod     $meta->name,
  #pod     $meta->version;
  #pod
  #pod     my $prereqs = $meta->effective_prereqs;
  #pod
  #pod     for my $phase ( qw/configure runtime build test/ ) {
  #pod         say "Requirements for $phase:";
  #pod         my $reqs = $prereqs->requirements_for($phase, "requires");
  #pod         for my $module ( sort $reqs->required_modules ) {
  #pod             my $status;
  #pod             if ( eval { load $module unless $module eq 'perl'; 1 } ) {
  #pod                 my $version = $module eq 'perl' ? $] : $module->VERSION;
  #pod                 $status = $reqs->accepts_module($module, $version)
  #pod                         ? "$version ok" : "$version not ok";
  #pod             } else {
  #pod                 $status = "missing"
  #pod             };
  #pod             say "  $module ($status)";
  #pod         }
  #pod     }
  #pod
  #pod =head1 DESCRIPTION
  #pod
  #pod Software distributions released to the CPAN include a F<META.json> or, for
  #pod older distributions, F<META.yml>, which describes the distribution, its
  #pod contents, and the requirements for building and installing the distribution.
  #pod The data structure stored in the F<META.json> file is described in
  #pod L<CPAN::Meta::Spec>.
  #pod
  #pod CPAN::Meta provides a simple class to represent this distribution metadata (or
  #pod I<distmeta>), along with some helpful methods for interrogating that data.
  #pod
  #pod The documentation below is only for the methods of the CPAN::Meta object.  For
  #pod information on the meaning of individual fields, consult the spec.
  #pod
  #pod =cut
  
  use Carp qw(carp croak);
  use CPAN::Meta::Feature;
  use CPAN::Meta::Prereqs;
  use CPAN::Meta::Converter;
  use CPAN::Meta::Validator;
  use Parse::CPAN::Meta 1.4414 ();
  
  BEGIN { *_dclone = \&CPAN::Meta::Converter::_dclone }
  
  #pod =head1 STRING DATA
  #pod
  #pod The following methods return a single value, which is the value for the
  #pod corresponding entry in the distmeta structure.  Values should be either undef
  #pod or strings.
  #pod
  #pod =for :list
  #pod * abstract
  #pod * description
  #pod * dynamic_config
  #pod * generated_by
  #pod * name
  #pod * release_status
  #pod * version
  #pod
  #pod =cut
  
  BEGIN {
    my @STRING_READERS = qw(
      abstract
      description
      dynamic_config
      generated_by
      name
      release_status
      version
    );
  
    no strict 'refs';
    for my $attr (@STRING_READERS) {
      *$attr = sub { $_[0]{ $attr } };
    }
  }
  
  #pod =head1 LIST DATA
  #pod
  #pod These methods return lists of string values, which might be represented in the
  #pod distmeta structure as arrayrefs or scalars:
  #pod
  #pod =for :list
  #pod * authors
  #pod * keywords
  #pod * licenses
  #pod
  #pod The C<authors> and C<licenses> methods may also be called as C<author> and
  #pod C<license>, respectively, to match the field name in the distmeta structure.
  #pod
  #pod =cut
  
  BEGIN {
    my @LIST_READERS = qw(
      author
      keywords
      license
    );
  
    no strict 'refs';
    for my $attr (@LIST_READERS) {
      *$attr = sub {
        my $value = $_[0]{ $attr };
        croak "$attr must be called in list context"
          unless wantarray;
        return @{ _dclone($value) } if ref $value;
        return $value;
      };
    }
  }
  
  sub authors  { $_[0]->author }
  sub licenses { $_[0]->license }
  
  #pod =head1 MAP DATA
  #pod
  #pod These readers return hashrefs of arbitrary unblessed data structures, each
  #pod described more fully in the specification:
  #pod
  #pod =for :list
  #pod * meta_spec
  #pod * resources
  #pod * provides
  #pod * no_index
  #pod * prereqs
  #pod * optional_features
  #pod
  #pod =cut
  
  BEGIN {
    my @MAP_READERS = qw(
      meta-spec
      resources
      provides
      no_index
  
      prereqs
      optional_features
    );
  
    no strict 'refs';
    for my $attr (@MAP_READERS) {
      (my $subname = $attr) =~ s/-/_/;
      *$subname = sub {
        my $value = $_[0]{ $attr };
        return _dclone($value) if $value;
        return {};
      };
    }
  }
  
  #pod =head1 CUSTOM DATA
  #pod
  #pod A list of custom keys are available from the C<custom_keys> method and
  #pod particular keys may be retrieved with the C<custom> method.
  #pod
  #pod   say $meta->custom($_) for $meta->custom_keys;
  #pod
  #pod If a custom key refers to a data structure, a deep clone is returned.
  #pod
  #pod =cut
  
  sub custom_keys {
    return grep { /^x_/i } keys %{$_[0]};
  }
  
  sub custom {
    my ($self, $attr) = @_;
    my $value = $self->{$attr};
    return _dclone($value) if ref $value;
    return $value;
  }
  
  #pod =method new
  #pod
  #pod   my $meta = CPAN::Meta->new($distmeta_struct, \%options);
  #pod
  #pod Returns a valid CPAN::Meta object or dies if the supplied metadata hash
  #pod reference fails to validate.  Older-format metadata will be up-converted to
  #pod version 2 if they validate against the original stated specification.
  #pod
  #pod It takes an optional hashref of options. Valid options include:
  #pod
  #pod =over
  #pod
  #pod =item *
  #pod
  #pod lazy_validation -- if true, new will attempt to convert the given metadata
  #pod to version 2 before attempting to validate it.  This means than any
  #pod fixable errors will be handled by CPAN::Meta::Converter before validation.
  #pod (Note that this might result in invalid optional data being silently
  #pod dropped.)  The default is false.
  #pod
  #pod =back
  #pod
  #pod =cut
  
  sub _new {
    my ($class, $struct, $options) = @_;
    my $self;
  
    if ( $options->{lazy_validation} ) {
      # try to convert to a valid structure; if succeeds, then return it
      my $cmc = CPAN::Meta::Converter->new( $struct );
      $self = $cmc->convert( version => 2 ); # valid or dies
      return bless $self, $class;
    }
    else {
      # validate original struct
      my $cmv = CPAN::Meta::Validator->new( $struct );
      unless ( $cmv->is_valid) {
        die "Invalid metadata structure. Errors: "
          . join(", ", $cmv->errors) . "\n";
      }
    }
  
    # up-convert older spec versions
    my $version = $struct->{'meta-spec'}{version} || '1.0';
    if ( $version == 2 ) {
      $self = $struct;
    }
    else {
      my $cmc = CPAN::Meta::Converter->new( $struct );
      $self = $cmc->convert( version => 2 );
    }
  
    return bless $self, $class;
  }
  
  sub new {
    my ($class, $struct, $options) = @_;
    my $self = eval { $class->_new($struct, $options) };
    croak($@) if $@;
    return $self;
  }
  
  #pod =method create
  #pod
  #pod   my $meta = CPAN::Meta->create($distmeta_struct, \%options);
  #pod
  #pod This is same as C<new()>, except that C<generated_by> and C<meta-spec> fields
  #pod will be generated if not provided.  This means the metadata structure is
  #pod assumed to otherwise follow the latest L<CPAN::Meta::Spec>.
  #pod
  #pod =cut
  
  sub create {
    my ($class, $struct, $options) = @_;
    my $version = __PACKAGE__->VERSION || 2;
    $struct->{generated_by} ||= __PACKAGE__ . " version $version" ;
    $struct->{'meta-spec'}{version} ||= int($version);
    my $self = eval { $class->_new($struct, $options) };
    croak ($@) if $@;
    return $self;
  }
  
  #pod =method load_file
  #pod
  #pod   my $meta = CPAN::Meta->load_file($distmeta_file, \%options);
  #pod
  #pod Given a pathname to a file containing metadata, this deserializes the file
  #pod according to its file suffix and constructs a new C<CPAN::Meta> object, just
  #pod like C<new()>.  It will die if the deserialized version fails to validate
  #pod against its stated specification version.
  #pod
  #pod It takes the same options as C<new()> but C<lazy_validation> defaults to
  #pod true.
  #pod
  #pod =cut
  
  sub load_file {
    my ($class, $file, $options) = @_;
    $options->{lazy_validation} = 1 unless exists $options->{lazy_validation};
  
    croak "load_file() requires a valid, readable filename"
      unless -r $file;
  
    my $self;
    eval {
      my $struct = Parse::CPAN::Meta->load_file( $file );
      $self = $class->_new($struct, $options);
    };
    croak($@) if $@;
    return $self;
  }
  
  #pod =method load_yaml_string
  #pod
  #pod   my $meta = CPAN::Meta->load_yaml_string($yaml, \%options);
  #pod
  #pod This method returns a new CPAN::Meta object using the first document in the
  #pod given YAML string.  In other respects it is identical to C<load_file()>.
  #pod
  #pod =cut
  
  sub load_yaml_string {
    my ($class, $yaml, $options) = @_;
    $options->{lazy_validation} = 1 unless exists $options->{lazy_validation};
  
    my $self;
    eval {
      my ($struct) = Parse::CPAN::Meta->load_yaml_string( $yaml );
      $self = $class->_new($struct, $options);
    };
    croak($@) if $@;
    return $self;
  }
  
  #pod =method load_json_string
  #pod
  #pod   my $meta = CPAN::Meta->load_json_string($json, \%options);
  #pod
  #pod This method returns a new CPAN::Meta object using the structure represented by
  #pod the given JSON string.  In other respects it is identical to C<load_file()>.
  #pod
  #pod =cut
  
  sub load_json_string {
    my ($class, $json, $options) = @_;
    $options->{lazy_validation} = 1 unless exists $options->{lazy_validation};
  
    my $self;
    eval {
      my $struct = Parse::CPAN::Meta->load_json_string( $json );
      $self = $class->_new($struct, $options);
    };
    croak($@) if $@;
    return $self;
  }
  
  #pod =method load_string
  #pod
  #pod   my $meta = CPAN::Meta->load_string($string, \%options);
  #pod
  #pod If you don't know if a string contains YAML or JSON, this method will use
  #pod L<Parse::CPAN::Meta> to guess.  In other respects it is identical to
  #pod C<load_file()>.
  #pod
  #pod =cut
  
  sub load_string {
    my ($class, $string, $options) = @_;
    $options->{lazy_validation} = 1 unless exists $options->{lazy_validation};
  
    my $self;
    eval {
      my $struct = Parse::CPAN::Meta->load_string( $string );
      $self = $class->_new($struct, $options);
    };
    croak($@) if $@;
    return $self;
  }
  
  #pod =method save
  #pod
  #pod   $meta->save($distmeta_file, \%options);
  #pod
  #pod Serializes the object as JSON and writes it to the given file.  The only valid
  #pod option is C<version>, which defaults to '2'. On Perl 5.8.1 or later, the file
  #pod is saved with UTF-8 encoding.
  #pod
  #pod For C<version> 2 (or higher), the filename should end in '.json'.  L<JSON::PP>
  #pod is the default JSON backend. Using another JSON backend requires L<JSON> 2.5 or
  #pod later and you must set the C<$ENV{PERL_JSON_BACKEND}> to a supported alternate
  #pod backend like L<JSON::XS>.
  #pod
  #pod For C<version> less than 2, the filename should end in '.yml'.
  #pod L<CPAN::Meta::Converter> is used to generate an older metadata structure, which
  #pod is serialized to YAML.  CPAN::Meta::YAML is the default YAML backend.  You may
  #pod set the C<$ENV{PERL_YAML_BACKEND}> to a supported alternative backend, though
  #pod this is not recommended due to subtle incompatibilities between YAML parsers on
  #pod CPAN.
  #pod
  #pod =cut
  
  sub save {
    my ($self, $file, $options) = @_;
  
    my $version = $options->{version} || '2';
    my $layer = $] ge '5.008001' ? ':utf8' : '';
  
    if ( $version ge '2' ) {
      carp "'$file' should end in '.json'"
        unless $file =~ m{\.json$};
    }
    else {
      carp "'$file' should end in '.yml'"
        unless $file =~ m{\.yml$};
    }
  
    my $data = $self->as_string( $options );
    open my $fh, ">$layer", $file
      or die "Error opening '$file' for writing: $!\n";
  
    print {$fh} $data;
    close $fh
      or die "Error closing '$file': $!\n";
  
    return 1;
  }
  
  #pod =method meta_spec_version
  #pod
  #pod This method returns the version part of the C<meta_spec> entry in the distmeta
  #pod structure.  It is equivalent to:
  #pod
  #pod   $meta->meta_spec->{version};
  #pod
  #pod =cut
  
  sub meta_spec_version {
    my ($self) = @_;
    return $self->meta_spec->{version};
  }
  
  #pod =method effective_prereqs
  #pod
  #pod   my $prereqs = $meta->effective_prereqs;
  #pod
  #pod   my $prereqs = $meta->effective_prereqs( \@feature_identifiers );
  #pod
  #pod This method returns a L<CPAN::Meta::Prereqs> object describing all the
  #pod prereqs for the distribution.  If an arrayref of feature identifiers is given,
  #pod the prereqs for the identified features are merged together with the
  #pod distribution's core prereqs before the CPAN::Meta::Prereqs object is returned.
  #pod
  #pod =cut
  
  sub effective_prereqs {
    my ($self, $features) = @_;
    $features ||= [];
  
    my $prereq = CPAN::Meta::Prereqs->new($self->prereqs);
  
    return $prereq unless @$features;
  
    my @other = map {; $self->feature($_)->prereqs } @$features;
  
    return $prereq->with_merged_prereqs(\@other);
  }
  
  #pod =method should_index_file
  #pod
  #pod   ... if $meta->should_index_file( $filename );
  #pod
  #pod This method returns true if the given file should be indexed.  It decides this
  #pod by checking the C<file> and C<directory> keys in the C<no_index> property of
  #pod the distmeta structure. Note that neither the version format nor
  #pod C<release_status> are considered.
  #pod
  #pod C<$filename> should be given in unix format.
  #pod
  #pod =cut
  
  sub should_index_file {
    my ($self, $filename) = @_;
  
    for my $no_index_file (@{ $self->no_index->{file} || [] }) {
      return if $filename eq $no_index_file;
    }
  
    for my $no_index_dir (@{ $self->no_index->{directory} }) {
      $no_index_dir =~ s{$}{/} unless $no_index_dir =~ m{/\z};
      return if index($filename, $no_index_dir) == 0;
    }
  
    return 1;
  }
  
  #pod =method should_index_package
  #pod
  #pod   ... if $meta->should_index_package( $package );
  #pod
  #pod This method returns true if the given package should be indexed.  It decides
  #pod this by checking the C<package> and C<namespace> keys in the C<no_index>
  #pod property of the distmeta structure. Note that neither the version format nor
  #pod C<release_status> are considered.
  #pod
  #pod =cut
  
  sub should_index_package {
    my ($self, $package) = @_;
  
    for my $no_index_pkg (@{ $self->no_index->{package} || [] }) {
      return if $package eq $no_index_pkg;
    }
  
    for my $no_index_ns (@{ $self->no_index->{namespace} }) {
      return if index($package, "${no_index_ns}::") == 0;
    }
  
    return 1;
  }
  
  #pod =method features
  #pod
  #pod   my @feature_objects = $meta->features;
  #pod
  #pod This method returns a list of L<CPAN::Meta::Feature> objects, one for each
  #pod optional feature described by the distribution's metadata.
  #pod
  #pod =cut
  
  sub features {
    my ($self) = @_;
  
    my $opt_f = $self->optional_features;
    my @features = map {; CPAN::Meta::Feature->new($_ => $opt_f->{ $_ }) }
                   keys %$opt_f;
  
    return @features;
  }
  
  #pod =method feature
  #pod
  #pod   my $feature_object = $meta->feature( $identifier );
  #pod
  #pod This method returns a L<CPAN::Meta::Feature> object for the optional feature
  #pod with the given identifier.  If no feature with that identifier exists, an
  #pod exception will be raised.
  #pod
  #pod =cut
  
  sub feature {
    my ($self, $ident) = @_;
  
    croak "no feature named $ident"
      unless my $f = $self->optional_features->{ $ident };
  
    return CPAN::Meta::Feature->new($ident, $f);
  }
  
  #pod =method as_struct
  #pod
  #pod   my $copy = $meta->as_struct( \%options );
  #pod
  #pod This method returns a deep copy of the object's metadata as an unblessed hash
  #pod reference.  It takes an optional hashref of options.  If the hashref contains
  #pod a C<version> argument, the copied metadata will be converted to the version
  #pod of the specification and returned.  For example:
  #pod
  #pod   my $old_spec = $meta->as_struct( {version => "1.4"} );
  #pod
  #pod =cut
  
  sub as_struct {
    my ($self, $options) = @_;
    my $struct = _dclone($self);
    if ( $options->{version} ) {
      my $cmc = CPAN::Meta::Converter->new( $struct );
      $struct = $cmc->convert( version => $options->{version} );
    }
    return $struct;
  }
  
  #pod =method as_string
  #pod
  #pod   my $string = $meta->as_string( \%options );
  #pod
  #pod This method returns a serialized copy of the object's metadata as a character
  #pod string.  (The strings are B<not> UTF-8 encoded.)  It takes an optional hashref
  #pod of options.  If the hashref contains a C<version> argument, the copied metadata
  #pod will be converted to the version of the specification and returned.  For
  #pod example:
  #pod
  #pod   my $string = $meta->as_string( {version => "1.4"} );
  #pod
  #pod For C<version> greater than or equal to 2, the string will be serialized as
  #pod JSON.  For C<version> less than 2, the string will be serialized as YAML.  In
  #pod both cases, the same rules are followed as in the C<save()> method for choosing
  #pod a serialization backend.
  #pod
  #pod The serialized structure will include a C<x_serialization_backend> entry giving
  #pod the package and version used to serialize.  Any existing key in the given
  #pod C<$meta> object will be clobbered.
  #pod
  #pod =cut
  
  sub as_string {
    my ($self, $options) = @_;
  
    my $version = $options->{version} || '2';
  
    my $struct;
    if ( $self->meta_spec_version ne $version ) {
      my $cmc = CPAN::Meta::Converter->new( $self->as_struct );
      $struct = $cmc->convert( version => $version );
    }
    else {
      $struct = $self->as_struct;
    }
  
    my ($data, $backend);
    if ( $version ge '2' ) {
      $backend = Parse::CPAN::Meta->json_backend();
      local $struct->{x_serialization_backend} = sprintf '%s version %s',
        $backend, $backend->VERSION;
      $data = $backend->new->pretty->canonical->encode($struct);
    }
    else {
      $backend = Parse::CPAN::Meta->yaml_backend();
      local $struct->{x_serialization_backend} = sprintf '%s version %s',
        $backend, $backend->VERSION;
      $data = eval { no strict 'refs'; &{"$backend\::Dump"}($struct) };
      if ( $@ ) {
        croak $backend->can('errstr') ? $backend->errstr : $@
      }
    }
  
    return $data;
  }
  
  # Used by JSON::PP, etc. for "convert_blessed"
  sub TO_JSON {
    return { %{ $_[0] } };
  }
  
  1;
  
  # ABSTRACT: the distribution metadata for a CPAN dist
  
  =pod
  
  =encoding UTF-8
  
  =head1 NAME
  
  CPAN::Meta - the distribution metadata for a CPAN dist
  
  =head1 VERSION
  
  version 2.150010
  
  =head1 SYNOPSIS
  
      use v5.10;
      use strict;
      use warnings;
      use CPAN::Meta;
      use Module::Load;
  
      my $meta = CPAN::Meta->load_file('META.json');
  
      printf "testing requirements for %s version %s\n",
      $meta->name,
      $meta->version;
  
      my $prereqs = $meta->effective_prereqs;
  
      for my $phase ( qw/configure runtime build test/ ) {
          say "Requirements for $phase:";
          my $reqs = $prereqs->requirements_for($phase, "requires");
          for my $module ( sort $reqs->required_modules ) {
              my $status;
              if ( eval { load $module unless $module eq 'perl'; 1 } ) {
                  my $version = $module eq 'perl' ? $] : $module->VERSION;
                  $status = $reqs->accepts_module($module, $version)
                          ? "$version ok" : "$version not ok";
              } else {
                  $status = "missing"
              };
              say "  $module ($status)";
          }
      }
  
  =head1 DESCRIPTION
  
  Software distributions released to the CPAN include a F<META.json> or, for
  older distributions, F<META.yml>, which describes the distribution, its
  contents, and the requirements for building and installing the distribution.
  The data structure stored in the F<META.json> file is described in
  L<CPAN::Meta::Spec>.
  
  CPAN::Meta provides a simple class to represent this distribution metadata (or
  I<distmeta>), along with some helpful methods for interrogating that data.
  
  The documentation below is only for the methods of the CPAN::Meta object.  For
  information on the meaning of individual fields, consult the spec.
  
  =head1 METHODS
  
  =head2 new
  
    my $meta = CPAN::Meta->new($distmeta_struct, \%options);
  
  Returns a valid CPAN::Meta object or dies if the supplied metadata hash
  reference fails to validate.  Older-format metadata will be up-converted to
  version 2 if they validate against the original stated specification.
  
  It takes an optional hashref of options. Valid options include:
  
  =over
  
  =item *
  
  lazy_validation -- if true, new will attempt to convert the given metadata
  to version 2 before attempting to validate it.  This means than any
  fixable errors will be handled by CPAN::Meta::Converter before validation.
  (Note that this might result in invalid optional data being silently
  dropped.)  The default is false.
  
  =back
  
  =head2 create
  
    my $meta = CPAN::Meta->create($distmeta_struct, \%options);
  
  This is same as C<new()>, except that C<generated_by> and C<meta-spec> fields
  will be generated if not provided.  This means the metadata structure is
  assumed to otherwise follow the latest L<CPAN::Meta::Spec>.
  
  =head2 load_file
  
    my $meta = CPAN::Meta->load_file($distmeta_file, \%options);
  
  Given a pathname to a file containing metadata, this deserializes the file
  according to its file suffix and constructs a new C<CPAN::Meta> object, just
  like C<new()>.  It will die if the deserialized version fails to validate
  against its stated specification version.
  
  It takes the same options as C<new()> but C<lazy_validation> defaults to
  true.
  
  =head2 load_yaml_string
  
    my $meta = CPAN::Meta->load_yaml_string($yaml, \%options);
  
  This method returns a new CPAN::Meta object using the first document in the
  given YAML string.  In other respects it is identical to C<load_file()>.
  
  =head2 load_json_string
  
    my $meta = CPAN::Meta->load_json_string($json, \%options);
  
  This method returns a new CPAN::Meta object using the structure represented by
  the given JSON string.  In other respects it is identical to C<load_file()>.
  
  =head2 load_string
  
    my $meta = CPAN::Meta->load_string($string, \%options);
  
  If you don't know if a string contains YAML or JSON, this method will use
  L<Parse::CPAN::Meta> to guess.  In other respects it is identical to
  C<load_file()>.
  
  =head2 save
  
    $meta->save($distmeta_file, \%options);
  
  Serializes the object as JSON and writes it to the given file.  The only valid
  option is C<version>, which defaults to '2'. On Perl 5.8.1 or later, the file
  is saved with UTF-8 encoding.
  
  For C<version> 2 (or higher), the filename should end in '.json'.  L<JSON::PP>
  is the default JSON backend. Using another JSON backend requires L<JSON> 2.5 or
  later and you must set the C<$ENV{PERL_JSON_BACKEND}> to a supported alternate
  backend like L<JSON::XS>.
  
  For C<version> less than 2, the filename should end in '.yml'.
  L<CPAN::Meta::Converter> is used to generate an older metadata structure, which
  is serialized to YAML.  CPAN::Meta::YAML is the default YAML backend.  You may
  set the C<$ENV{PERL_YAML_BACKEND}> to a supported alternative backend, though
  this is not recommended due to subtle incompatibilities between YAML parsers on
  CPAN.
  
  =head2 meta_spec_version
  
  This method returns the version part of the C<meta_spec> entry in the distmeta
  structure.  It is equivalent to:
  
    $meta->meta_spec->{version};
  
  =head2 effective_prereqs
  
    my $prereqs = $meta->effective_prereqs;
  
    my $prereqs = $meta->effective_prereqs( \@feature_identifiers );
  
  This method returns a L<CPAN::Meta::Prereqs> object describing all the
  prereqs for the distribution.  If an arrayref of feature identifiers is given,
  the prereqs for the identified features are merged together with the
  distribution's core prereqs before the CPAN::Meta::Prereqs object is returned.
  
  =head2 should_index_file
  
    ... if $meta->should_index_file( $filename );
  
  This method returns true if the given file should be indexed.  It decides this
  by checking the C<file> and C<directory> keys in the C<no_index> property of
  the distmeta structure. Note that neither the version format nor
  C<release_status> are considered.
  
  C<$filename> should be given in unix format.
  
  =head2 should_index_package
  
    ... if $meta->should_index_package( $package );
  
  This method returns true if the given package should be indexed.  It decides
  this by checking the C<package> and C<namespace> keys in the C<no_index>
  property of the distmeta structure. Note that neither the version format nor
  C<release_status> are considered.
  
  =head2 features
  
    my @feature_objects = $meta->features;
  
  This method returns a list of L<CPAN::Meta::Feature> objects, one for each
  optional feature described by the distribution's metadata.
  
  =head2 feature
  
    my $feature_object = $meta->feature( $identifier );
  
  This method returns a L<CPAN::Meta::Feature> object for the optional feature
  with the given identifier.  If no feature with that identifier exists, an
  exception will be raised.
  
  =head2 as_struct
  
    my $copy = $meta->as_struct( \%options );
  
  This method returns a deep copy of the object's metadata as an unblessed hash
  reference.  It takes an optional hashref of options.  If the hashref contains
  a C<version> argument, the copied metadata will be converted to the version
  of the specification and returned.  For example:
  
    my $old_spec = $meta->as_struct( {version => "1.4"} );
  
  =head2 as_string
  
    my $string = $meta->as_string( \%options );
  
  This method returns a serialized copy of the object's metadata as a character
  string.  (The strings are B<not> UTF-8 encoded.)  It takes an optional hashref
  of options.  If the hashref contains a C<version> argument, the copied metadata
  will be converted to the version of the specification and returned.  For
  example:
  
    my $string = $meta->as_string( {version => "1.4"} );
  
  For C<version> greater than or equal to 2, the string will be serialized as
  JSON.  For C<version> less than 2, the string will be serialized as YAML.  In
  both cases, the same rules are followed as in the C<save()> method for choosing
  a serialization backend.
  
  The serialized structure will include a C<x_serialization_backend> entry giving
  the package and version used to serialize.  Any existing key in the given
  C<$meta> object will be clobbered.
  
  =head1 STRING DATA
  
  The following methods return a single value, which is the value for the
  corresponding entry in the distmeta structure.  Values should be either undef
  or strings.
  
  =over 4
  
  =item *
  
  abstract
  
  =item *
  
  description
  
  =item *
  
  dynamic_config
  
  =item *
  
  generated_by
  
  =item *
  
  name
  
  =item *
  
  release_status
  
  =item *
  
  version
  
  =back
  
  =head1 LIST DATA
  
  These methods return lists of string values, which might be represented in the
  distmeta structure as arrayrefs or scalars:
  
  =over 4
  
  =item *
  
  authors
  
  =item *
  
  keywords
  
  =item *
  
  licenses
  
  =back
  
  The C<authors> and C<licenses> methods may also be called as C<author> and
  C<license>, respectively, to match the field name in the distmeta structure.
  
  =head1 MAP DATA
  
  These readers return hashrefs of arbitrary unblessed data structures, each
  described more fully in the specification:
  
  =over 4
  
  =item *
  
  meta_spec
  
  =item *
  
  resources
  
  =item *
  
  provides
  
  =item *
  
  no_index
  
  =item *
  
  prereqs
  
  =item *
  
  optional_features
  
  =back
  
  =head1 CUSTOM DATA
  
  A list of custom keys are available from the C<custom_keys> method and
  particular keys may be retrieved with the C<custom> method.
  
    say $meta->custom($_) for $meta->custom_keys;
  
  If a custom key refers to a data structure, a deep clone is returned.
  
  =for Pod::Coverage TO_JSON abstract author authors custom custom_keys description dynamic_config
  generated_by keywords license licenses meta_spec name no_index
  optional_features prereqs provides release_status resources version
  
  =head1 BUGS
  
  Please report any bugs or feature using the CPAN Request Tracker.
  Bugs can be submitted through the web interface at
  L<http://rt.cpan.org/Dist/Display.html?Queue=CPAN-Meta>
  
  When submitting a bug or request, please include a test-file or a patch to an
  existing test-file that illustrates the bug or desired feature.
  
  =head1 SEE ALSO
  
  =over 4
  
  =item *
  
  L<CPAN::Meta::Converter>
  
  =item *
  
  L<CPAN::Meta::Validator>
  
  =back
  
  =for :stopwords cpan testmatrix url annocpan anno bugtracker rt cpants kwalitee diff irc mailto metadata placeholders metacpan
  
  =head1 SUPPORT
  
  =head2 Bugs / Feature Requests
  
  Please report any bugs or feature requests through the issue tracker
  at L<https://github.com/Perl-Toolchain-Gang/CPAN-Meta/issues>.
  You will be notified automatically of any progress on your issue.
  
  =head2 Source Code
  
  This is open source software.  The code repository is available for
  public review and contribution under the terms of the license.
  
  L<https://github.com/Perl-Toolchain-Gang/CPAN-Meta>
  
    git clone https://github.com/Perl-Toolchain-Gang/CPAN-Meta.git
  
  =head1 AUTHORS
  
  =over 4
  
  =item *
  
  David Golden <dagolden@cpan.org>
  
  =item *
  
  Ricardo Signes <rjbs@cpan.org>
  
  =item *
  
  Adam Kennedy <adamk@cpan.org>
  
  =back
  
  =head1 CONTRIBUTORS
  
  =for stopwords Ansgar Burchardt Avar Arnfjord Bjarmason Benjamin Noggle Christopher J. Madsen Chuck Adams Cory G Watson Damyan Ivanov David Golden Eric Wilhelm Graham Knop Gregor Hermann Karen Etheridge Kenichi Ishigaki Kent Fredric Ken Williams Lars Dieckow Leon Timmermans majensen Mark Fowler Matt S Trout Michael G. Schwern Mohammad Anwar mohawk2 moznion Niko Tyni Olaf Alders Olivier Mengué Randy Sims Tomohiro Hosaka
  
  =over 4
  
  =item *
  
  Ansgar Burchardt <ansgar@cpan.org>
  
  =item *
  
  Avar Arnfjord Bjarmason <avar@cpan.org>
  
  =item *
  
  Benjamin Noggle <agwind@users.noreply.github.com>
  
  =item *
  
  Christopher J. Madsen <cjm@cpan.org>
  
  =item *
  
  Chuck Adams <cja987@gmail.com>
  
  =item *
  
  Cory G Watson <gphat@cpan.org>
  
  =item *
  
  Damyan Ivanov <dam@cpan.org>
  
  =item *
  
  David Golden <xdg@xdg.me>
  
  =item *
  
  Eric Wilhelm <ewilhelm@cpan.org>
  
  =item *
  
  Graham Knop <haarg@haarg.org>
  
  =item *
  
  Gregor Hermann <gregoa@debian.org>
  
  =item *
  
  Karen Etheridge <ether@cpan.org>
  
  =item *
  
  Kenichi Ishigaki <ishigaki@cpan.org>
  
  =item *
  
  Kent Fredric <kentfredric@gmail.com>
  
  =item *
  
  Ken Williams <kwilliams@cpan.org>
  
  =item *
  
  Lars Dieckow <daxim@cpan.org>
  
  =item *
  
  Leon Timmermans <leont@cpan.org>
  
  =item *
  
  majensen <maj@fortinbras.us>
  
  =item *
  
  Mark Fowler <markf@cpan.org>
  
  =item *
  
  Matt S Trout <mst@shadowcat.co.uk>
  
  =item *
  
  Michael G. Schwern <mschwern@cpan.org>
  
  =item *
  
  Mohammad S Anwar <mohammad.anwar@yahoo.com>
  
  =item *
  
  mohawk2 <mohawk2@users.noreply.github.com>
  
  =item *
  
  moznion <moznion@gmail.com>
  
  =item *
  
  Niko Tyni <ntyni@debian.org>
  
  =item *
  
  Olaf Alders <olaf@wundersolutions.com>
  
  =item *
  
  Olivier Mengué <dolmen@cpan.org>
  
  =item *
  
  Randy Sims <randys@thepierianspring.org>
  
  =item *
  
  Tomohiro Hosaka <bokutin@bokut.in>
  
  =back
  
  =head1 COPYRIGHT AND LICENSE
  
  This software is copyright (c) 2010 by David Golden, Ricardo Signes, Adam Kennedy and Contributors.
  
  This is free software; you can redistribute it and/or modify it under
  the same terms as the Perl 5 programming language system itself.
  
  =cut
  
  __END__
  
  
  # vim: ts=2 sts=2 sw=2 et :
CPAN_META

$fatpacked{"CPAN/Meta/Converter.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'CPAN_META_CONVERTER';
  use 5.006;
  use strict;
  use warnings;
  package CPAN::Meta::Converter;
  
  our $VERSION = '2.150010';
  
  #pod =head1 SYNOPSIS
  #pod
  #pod   my $struct = decode_json_file('META.json');
  #pod
  #pod   my $cmc = CPAN::Meta::Converter->new( $struct );
  #pod
  #pod   my $new_struct = $cmc->convert( version => "2" );
  #pod
  #pod =head1 DESCRIPTION
  #pod
  #pod This module converts CPAN Meta structures from one form to another.  The
  #pod primary use is to convert older structures to the most modern version of
  #pod the specification, but other transformations may be implemented in the
  #pod future as needed.  (E.g. stripping all custom fields or stripping all
  #pod optional fields.)
  #pod
  #pod =cut
  
  use CPAN::Meta::Validator;
  use CPAN::Meta::Requirements;
  use Parse::CPAN::Meta 1.4400 ();
  
  # To help ExtUtils::MakeMaker bootstrap CPAN::Meta::Requirements on perls
  # before 5.10, we fall back to the EUMM bundled compatibility version module if
  # that's the only thing available.  This shouldn't ever happen in a normal CPAN
  # install of CPAN::Meta::Requirements, as version.pm will be picked up from
  # prereqs and be available at runtime.
  
  BEGIN {
    eval "use version ()"; ## no critic
    if ( my $err = $@ ) {
      eval "use ExtUtils::MakeMaker::version" or die $err; ## no critic
    }
  }
  
  # Perl 5.10.0 didn't have "is_qv" in version.pm
  *_is_qv = version->can('is_qv') ? sub { $_[0]->is_qv } : sub { exists $_[0]->{qv} };
  
  # We limit cloning to a maximum depth to bail out on circular data
  # structures.  While actual cycle detection might be technically better,
  # we expect circularity in META data structures to be rare and generally
  # the result of user error.  Therefore, a depth counter is lower overhead.
  our $DCLONE_MAXDEPTH = 1024;
  our $_CLONE_DEPTH;
  
  sub _dclone {
    my ( $ref  ) = @_;
    return $ref unless my $reftype = ref $ref;
  
    local $_CLONE_DEPTH = defined $_CLONE_DEPTH ? $_CLONE_DEPTH - 1 : $DCLONE_MAXDEPTH;
    die "Depth Limit $DCLONE_MAXDEPTH Exceeded" if $_CLONE_DEPTH == 0;
  
    return [ map { _dclone( $_ ) } @{$ref} ] if 'ARRAY' eq $reftype;
    return { map { $_ => _dclone( $ref->{$_} ) } keys %{$ref} } if 'HASH' eq $reftype;
  
    if ( 'SCALAR' eq $reftype ) {
      my $new = _dclone(${$ref});
      return \$new;
    }
  
    # We can't know if TO_JSON gives us cloned data, so refs must recurse
    if ( eval { $ref->can('TO_JSON') } ) {
      my $data = $ref->TO_JSON;
      return ref $data ? _dclone( $data ) : $data;
    }
  
    # Just stringify everything else
    return "$ref";
  }
  
  my %known_specs = (
      '2'   => 'http://search.cpan.org/perldoc?CPAN::Meta::Spec',
      '1.4' => 'http://module-build.sourceforge.net/META-spec-v1.4.html',
      '1.3' => 'http://module-build.sourceforge.net/META-spec-v1.3.html',
      '1.2' => 'http://module-build.sourceforge.net/META-spec-v1.2.html',
      '1.1' => 'http://module-build.sourceforge.net/META-spec-v1.1.html',
      '1.0' => 'http://module-build.sourceforge.net/META-spec-v1.0.html'
  );
  
  my @spec_list = sort { $a <=> $b } keys %known_specs;
  my ($LOWEST, $HIGHEST) = @spec_list[0,-1];
  
  #--------------------------------------------------------------------------#
  # converters
  #
  # called as $converter->($element, $field_name, $full_meta, $to_version)
  #
  # defined return value used for field
  # undef return value means field is skipped
  #--------------------------------------------------------------------------#
  
  sub _keep { $_[0] }
  
  sub _keep_or_one { defined($_[0]) ? $_[0] : 1 }
  
  sub _keep_or_zero { defined($_[0]) ? $_[0] : 0 }
  
  sub _keep_or_unknown { defined($_[0]) && length($_[0]) ? $_[0] : "unknown" }
  
  sub _generated_by {
    my $gen = shift;
    my $sig = __PACKAGE__ . " version " . (__PACKAGE__->VERSION || "<dev>");
  
    return $sig unless defined $gen and length $gen;
    return $gen if $gen =~ /\Q$sig/;
    return "$gen, $sig";
  }
  
  sub _listify { ! defined $_[0] ? undef : ref $_[0] eq 'ARRAY' ? $_[0] : [$_[0]] }
  
  sub _prefix_custom {
    my $key = shift;
    $key =~ s/^(?!x_)   # Unless it already starts with x_
               (?:x-?)? # Remove leading x- or x (if present)
             /x_/ix;    # and prepend x_
    return $key;
  }
  
  sub _ucfirst_custom {
    my $key = shift;
    $key = ucfirst $key unless $key =~ /[A-Z]/;
    return $key;
  }
  
  sub _no_prefix_ucfirst_custom {
    my $key = shift;
    $key =~ s/^x_//;
    return _ucfirst_custom($key);
  }
  
  sub _change_meta_spec {
    my ($element, undef, undef, $version) = @_;
    return {
      version => $version,
      url => $known_specs{$version},
    };
  }
  
  my @open_source = (
    'perl',
    'gpl',
    'apache',
    'artistic',
    'artistic_2',
    'lgpl',
    'bsd',
    'gpl',
    'mit',
    'mozilla',
    'open_source',
  );
  
  my %is_open_source = map {; $_ => 1 } @open_source;
  
  my @valid_licenses_1 = (
    @open_source,
    'unrestricted',
    'restrictive',
    'unknown',
  );
  
  my %license_map_1 = (
    ( map { $_ => $_ } @valid_licenses_1 ),
    artistic2 => 'artistic_2',
  );
  
  sub _license_1 {
    my ($element) = @_;
    return 'unknown' unless defined $element;
    if ( $license_map_1{lc $element} ) {
      return $license_map_1{lc $element};
    }
    else {
      return 'unknown';
    }
  }
  
  my @valid_licenses_2 = qw(
    agpl_3
    apache_1_1
    apache_2_0
    artistic_1
    artistic_2
    bsd
    freebsd
    gfdl_1_2
    gfdl_1_3
    gpl_1
    gpl_2
    gpl_3
    lgpl_2_1
    lgpl_3_0
    mit
    mozilla_1_0
    mozilla_1_1
    openssl
    perl_5
    qpl_1_0
    ssleay
    sun
    zlib
    open_source
    restricted
    unrestricted
    unknown
  );
  
  # The "old" values were defined by Module::Build, and were often vague.  I have
  # made the decisions below based on reading Module::Build::API and how clearly
  # it specifies the version of the license.
  my %license_map_2 = (
    (map { $_ => $_ } @valid_licenses_2),
    apache      => 'apache_2_0',  # clearly stated as 2.0
    artistic    => 'artistic_1',  # clearly stated as 1
    artistic2   => 'artistic_2',  # clearly stated as 2
    gpl         => 'open_source', # we don't know which GPL; punt
    lgpl        => 'open_source', # we don't know which LGPL; punt
    mozilla     => 'open_source', # we don't know which MPL; punt
    perl        => 'perl_5',      # clearly Perl 5
    restrictive => 'restricted',
  );
  
  sub _license_2 {
    my ($element) = @_;
    return [ 'unknown' ] unless defined $element;
    $element = [ $element ] unless ref $element eq 'ARRAY';
    my @new_list;
    for my $lic ( @$element ) {
      next unless defined $lic;
      if ( my $new = $license_map_2{lc $lic} ) {
        push @new_list, $new;
      }
    }
    return @new_list ? \@new_list : [ 'unknown' ];
  }
  
  my %license_downgrade_map = qw(
    agpl_3            open_source
    apache_1_1        apache
    apache_2_0        apache
    artistic_1        artistic
    artistic_2        artistic_2
    bsd               bsd
    freebsd           open_source
    gfdl_1_2          open_source
    gfdl_1_3          open_source
    gpl_1             gpl
    gpl_2             gpl
    gpl_3             gpl
    lgpl_2_1          lgpl
    lgpl_3_0          lgpl
    mit               mit
    mozilla_1_0       mozilla
    mozilla_1_1       mozilla
    openssl           open_source
    perl_5            perl
    qpl_1_0           open_source
    ssleay            open_source
    sun               open_source
    zlib              open_source
    open_source       open_source
    restricted        restrictive
    unrestricted      unrestricted
    unknown           unknown
  );
  
  sub _downgrade_license {
    my ($element) = @_;
    if ( ! defined $element ) {
      return "unknown";
    }
    elsif( ref $element eq 'ARRAY' ) {
      if ( @$element > 1) {
        if (grep { !$is_open_source{ $license_downgrade_map{lc $_} || 'unknown' } } @$element) {
          return 'unknown';
        }
        else {
          return 'open_source';
        }
      }
      elsif ( @$element == 1 ) {
        return $license_downgrade_map{lc $element->[0]} || "unknown";
      }
    }
    elsif ( ! ref $element ) {
      return $license_downgrade_map{lc $element} || "unknown";
    }
    return "unknown";
  }
  
  my $no_index_spec_1_2 = {
    'file' => \&_listify,
    'dir' => \&_listify,
    'package' => \&_listify,
    'namespace' => \&_listify,
  };
  
  my $no_index_spec_1_3 = {
    'file' => \&_listify,
    'directory' => \&_listify,
    'package' => \&_listify,
    'namespace' => \&_listify,
  };
  
  my $no_index_spec_2 = {
    'file' => \&_listify,
    'directory' => \&_listify,
    'package' => \&_listify,
    'namespace' => \&_listify,
    ':custom'  => \&_prefix_custom,
  };
  
  sub _no_index_1_2 {
    my (undef, undef, $meta) = @_;
    my $no_index = $meta->{no_index} || $meta->{private};
    return unless $no_index;
  
    # cleanup wrong format
    if ( ! ref $no_index ) {
      my $item = $no_index;
      $no_index = { dir => [ $item ], file => [ $item ] };
    }
    elsif ( ref $no_index eq 'ARRAY' ) {
      my $list = $no_index;
      $no_index = { dir => [ @$list ], file => [ @$list ] };
    }
  
    # common mistake: files -> file
    if ( exists $no_index->{files} ) {
      $no_index->{file} = delete $no_index->{files};
    }
    # common mistake: modules -> module
    if ( exists $no_index->{modules} ) {
      $no_index->{module} = delete $no_index->{modules};
    }
    return _convert($no_index, $no_index_spec_1_2);
  }
  
  sub _no_index_directory {
    my ($element, $key, $meta, $version) = @_;
    return unless $element;
  
    # clean up wrong format
    if ( ! ref $element ) {
      my $item = $element;
      $element = { directory => [ $item ], file => [ $item ] };
    }
    elsif ( ref $element eq 'ARRAY' ) {
      my $list = $element;
      $element = { directory => [ @$list ], file => [ @$list ] };
    }
  
    if ( exists $element->{dir} ) {
      $element->{directory} = delete $element->{dir};
    }
    # common mistake: files -> file
    if ( exists $element->{files} ) {
      $element->{file} = delete $element->{files};
    }
    # common mistake: modules -> module
    if ( exists $element->{modules} ) {
      $element->{module} = delete $element->{modules};
    }
    my $spec = $version == 2 ? $no_index_spec_2 : $no_index_spec_1_3;
    return _convert($element, $spec);
  }
  
  sub _is_module_name {
    my $mod = shift;
    return unless defined $mod && length $mod;
    return $mod =~ m{^[A-Za-z][A-Za-z0-9_]*(?:::[A-Za-z0-9_]+)*$};
  }
  
  sub _clean_version {
    my ($element) = @_;
    return 0 if ! defined $element;
  
    $element =~ s{^\s*}{};
    $element =~ s{\s*$}{};
    $element =~ s{^\.}{0.};
  
    return 0 if ! length $element;
    return 0 if ( $element eq 'undef' || $element eq '<undef>' );
  
    my $v = eval { version->new($element) };
    # XXX check defined $v and not just $v because version objects leak memory
    # in boolean context -- dagolden, 2012-02-03
    if ( defined $v ) {
      return _is_qv($v) ? $v->normal : $element;
    }
    else {
      return 0;
    }
  }
  
  sub _bad_version_hook {
    my ($v) = @_;
    $v =~ s{^\s*}{};
    $v =~ s{\s*$}{};
    $v =~ s{[a-z]+$}{}; # strip trailing alphabetics
    my $vobj = eval { version->new($v) };
    return defined($vobj) ? $vobj : version->new(0); # or give up
  }
  
  sub _version_map {
    my ($element) = @_;
    return unless defined $element;
    if ( ref $element eq 'HASH' ) {
      # XXX turn this into CPAN::Meta::Requirements with bad version hook
      # and then turn it back into a hash
      my $new_map = CPAN::Meta::Requirements->new(
        { bad_version_hook => \&_bad_version_hook } # punt
      );
      while ( my ($k,$v) = each %$element ) {
        next unless _is_module_name($k);
        if ( !defined($v) || !length($v) || $v eq 'undef' || $v eq '<undef>'  ) {
          $v = 0;
        }
        # some weird, old META have bad yml with module => module
        # so check if value is like a module name and not like a version
        if ( _is_module_name($v) && ! version::is_lax($v) ) {
          $new_map->add_minimum($k => 0);
          $new_map->add_minimum($v => 0);
        }
        $new_map->add_string_requirement($k => $v);
      }
      return $new_map->as_string_hash;
    }
    elsif ( ref $element eq 'ARRAY' ) {
      my $hashref = { map { $_ => 0 } @$element };
      return _version_map($hashref); # clean up any weird stuff
    }
    elsif ( ref $element eq '' && length $element ) {
      return { $element => 0 }
    }
    return;
  }
  
  sub _prereqs_from_1 {
    my (undef, undef, $meta) = @_;
    my $prereqs = {};
    for my $phase ( qw/build configure/ ) {
      my $key = "${phase}_requires";
      $prereqs->{$phase}{requires} = _version_map($meta->{$key})
        if $meta->{$key};
    }
    for my $rel ( qw/requires recommends conflicts/ ) {
      $prereqs->{runtime}{$rel} = _version_map($meta->{$rel})
        if $meta->{$rel};
    }
    return $prereqs;
  }
  
  my $prereqs_spec = {
    configure => \&_prereqs_rel,
    build     => \&_prereqs_rel,
    test      => \&_prereqs_rel,
    runtime   => \&_prereqs_rel,
    develop   => \&_prereqs_rel,
    ':custom'  => \&_prefix_custom,
  };
  
  my $relation_spec = {
    requires   => \&_version_map,
    recommends => \&_version_map,
    suggests   => \&_version_map,
    conflicts  => \&_version_map,
    ':custom'  => \&_prefix_custom,
  };
  
  sub _cleanup_prereqs {
    my ($prereqs, $key, $meta, $to_version) = @_;
    return unless $prereqs && ref $prereqs eq 'HASH';
    return _convert( $prereqs, $prereqs_spec, $to_version );
  }
  
  sub _prereqs_rel {
    my ($relation, $key, $meta, $to_version) = @_;
    return unless $relation && ref $relation eq 'HASH';
    return _convert( $relation, $relation_spec, $to_version );
  }
  
  
  BEGIN {
    my @old_prereqs = qw(
      requires
      configure_requires
      recommends
      conflicts
    );
  
    for ( @old_prereqs ) {
      my $sub = "_get_$_";
      my ($phase,$type) = split qr/_/, $_;
      if ( ! defined $type ) {
        $type = $phase;
        $phase = 'runtime';
      }
      no strict 'refs';
      *{$sub} = sub { _extract_prereqs($_[2]->{prereqs},$phase,$type) };
    }
  }
  
  sub _get_build_requires {
    my ($data, $key, $meta) = @_;
  
    my $test_h  = _extract_prereqs($_[2]->{prereqs}, qw(test  requires)) || {};
    my $build_h = _extract_prereqs($_[2]->{prereqs}, qw(build requires)) || {};
  
    my $test_req  = CPAN::Meta::Requirements->from_string_hash($test_h);
    my $build_req = CPAN::Meta::Requirements->from_string_hash($build_h);
  
    $test_req->add_requirements($build_req)->as_string_hash;
  }
  
  sub _extract_prereqs {
    my ($prereqs, $phase, $type) = @_;
    return unless ref $prereqs eq 'HASH';
    return scalar _version_map($prereqs->{$phase}{$type});
  }
  
  sub _downgrade_optional_features {
    my (undef, undef, $meta) = @_;
    return unless exists $meta->{optional_features};
    my $origin = $meta->{optional_features};
    my $features = {};
    for my $name ( keys %$origin ) {
      $features->{$name} = {
        description => $origin->{$name}{description},
        requires => _extract_prereqs($origin->{$name}{prereqs},'runtime','requires'),
        configure_requires => _extract_prereqs($origin->{$name}{prereqs},'runtime','configure_requires'),
        build_requires => _extract_prereqs($origin->{$name}{prereqs},'runtime','build_requires'),
        recommends => _extract_prereqs($origin->{$name}{prereqs},'runtime','recommends'),
        conflicts => _extract_prereqs($origin->{$name}{prereqs},'runtime','conflicts'),
      };
      for my $k (keys %{$features->{$name}} ) {
        delete $features->{$name}{$k} unless defined $features->{$name}{$k};
      }
    }
    return $features;
  }
  
  sub _upgrade_optional_features {
    my (undef, undef, $meta) = @_;
    return unless exists $meta->{optional_features};
    my $origin = $meta->{optional_features};
    my $features = {};
    for my $name ( keys %$origin ) {
      $features->{$name} = {
        description => $origin->{$name}{description},
        prereqs => _prereqs_from_1(undef, undef, $origin->{$name}),
      };
      delete $features->{$name}{prereqs}{configure};
    }
    return $features;
  }
  
  my $optional_features_2_spec = {
    description => \&_keep,
    prereqs => \&_cleanup_prereqs,
    ':custom'  => \&_prefix_custom,
  };
  
  sub _feature_2 {
    my ($element, $key, $meta, $to_version) = @_;
    return unless $element && ref $element eq 'HASH';
    _convert( $element, $optional_features_2_spec, $to_version );
  }
  
  sub _cleanup_optional_features_2 {
    my ($element, $key, $meta, $to_version) = @_;
    return unless $element && ref $element eq 'HASH';
    my $new_data = {};
    for my $k ( keys %$element ) {
      $new_data->{$k} = _feature_2( $element->{$k}, $k, $meta, $to_version );
    }
    return unless keys %$new_data;
    return $new_data;
  }
  
  sub _optional_features_1_4 {
    my ($element) = @_;
    return unless $element;
    $element = _optional_features_as_map($element);
    for my $name ( keys %$element ) {
      for my $drop ( qw/requires_packages requires_os excluded_os/ ) {
        delete $element->{$name}{$drop};
      }
    }
    return $element;
  }
  
  sub _optional_features_as_map {
    my ($element) = @_;
    return unless $element;
    if ( ref $element eq 'ARRAY' ) {
      my %map;
      for my $feature ( @$element ) {
        my (@parts) = %$feature;
        $map{$parts[0]} = $parts[1];
      }
      $element = \%map;
    }
    return $element;
  }
  
  sub _is_urlish { defined $_[0] && $_[0] =~ m{\A[-+.a-z0-9]+:.+}i }
  
  sub _url_or_drop {
    my ($element) = @_;
    return $element if _is_urlish($element);
    return;
  }
  
  sub _url_list {
    my ($element) = @_;
    return unless $element;
    $element = _listify( $element );
    $element = [ grep { _is_urlish($_) } @$element ];
    return unless @$element;
    return $element;
  }
  
  sub _author_list {
    my ($element) = @_;
    return [ 'unknown' ] unless $element;
    $element = _listify( $element );
    $element = [ map { defined $_ && length $_ ? $_ : 'unknown' } @$element ];
    return [ 'unknown' ] unless @$element;
    return $element;
  }
  
  my $resource2_upgrade = {
    license    => sub { return _is_urlish($_[0]) ? _listify( $_[0] ) : undef },
    homepage   => \&_url_or_drop,
    bugtracker => sub {
      my ($item) = @_;
      return unless $item;
      if ( $item =~ m{^mailto:(.*)$} ) { return { mailto => $1 } }
      elsif( _is_urlish($item) ) { return { web => $item } }
      else { return }
    },
    repository => sub { return _is_urlish($_[0]) ? { url => $_[0] } : undef },
    ':custom'  => \&_prefix_custom,
  };
  
  sub _upgrade_resources_2 {
    my (undef, undef, $meta, $version) = @_;
    return unless exists $meta->{resources};
    return _convert($meta->{resources}, $resource2_upgrade);
  }
  
  my $bugtracker2_spec = {
    web => \&_url_or_drop,
    mailto => \&_keep,
    ':custom'  => \&_prefix_custom,
  };
  
  sub _repo_type {
    my ($element, $key, $meta, $to_version) = @_;
    return $element if defined $element;
    return unless exists $meta->{url};
    my $repo_url = $meta->{url};
    for my $type ( qw/git svn/ ) {
      return $type if $repo_url =~ m{\A$type};
    }
    return;
  }
  
  my $repository2_spec = {
    web => \&_url_or_drop,
    url => \&_url_or_drop,
    type => \&_repo_type,
    ':custom'  => \&_prefix_custom,
  };
  
  my $resources2_cleanup = {
    license    => \&_url_list,
    homepage   => \&_url_or_drop,
    bugtracker => sub { ref $_[0] ? _convert( $_[0], $bugtracker2_spec ) : undef },
    repository => sub { my $data = shift; ref $data ? _convert( $data, $repository2_spec ) : undef },
    ':custom'  => \&_prefix_custom,
  };
  
  sub _cleanup_resources_2 {
    my ($resources, $key, $meta, $to_version) = @_;
    return unless $resources && ref $resources eq 'HASH';
    return _convert($resources, $resources2_cleanup, $to_version);
  }
  
  my $resource1_spec = {
    license    => \&_url_or_drop,
    homepage   => \&_url_or_drop,
    bugtracker => \&_url_or_drop,
    repository => \&_url_or_drop,
    ':custom'  => \&_keep,
  };
  
  sub _resources_1_3 {
    my (undef, undef, $meta, $version) = @_;
    return unless exists $meta->{resources};
    return _convert($meta->{resources}, $resource1_spec);
  }
  
  *_resources_1_4 = *_resources_1_3;
  
  sub _resources_1_2 {
    my (undef, undef, $meta) = @_;
    my $resources = $meta->{resources} || {};
    if ( $meta->{license_url} && ! $resources->{license} ) {
      $resources->{license} = $meta->{license_url}
        if _is_urlish($meta->{license_url});
    }
    return unless keys %$resources;
    return _convert($resources, $resource1_spec);
  }
  
  my $resource_downgrade_spec = {
    license    => sub { return ref $_[0] ? $_[0]->[0] : $_[0] },
    homepage   => \&_url_or_drop,
    bugtracker => sub { return $_[0]->{web} },
    repository => sub { return $_[0]->{url} || $_[0]->{web} },
    ':custom'  => \&_no_prefix_ucfirst_custom,
  };
  
  sub _downgrade_resources {
    my (undef, undef, $meta, $version) = @_;
    return unless exists $meta->{resources};
    return _convert($meta->{resources}, $resource_downgrade_spec);
  }
  
  sub _release_status {
    my ($element, undef, $meta) = @_;
    return $element if $element && $element =~ m{\A(?:stable|testing|unstable)\z};
    return _release_status_from_version(undef, undef, $meta);
  }
  
  sub _release_status_from_version {
    my (undef, undef, $meta) = @_;
    my $version = $meta->{version} || '';
    return ( $version =~ /_/ ) ? 'testing' : 'stable';
  }
  
  my $provides_spec = {
    file => \&_keep,
    version => \&_keep,
  };
  
  my $provides_spec_2 = {
    file => \&_keep,
    version => \&_keep,
    ':custom'  => \&_prefix_custom,
  };
  
  sub _provides {
    my ($element, $key, $meta, $to_version) = @_;
    return unless defined $element && ref $element eq 'HASH';
    my $spec = $to_version == 2 ? $provides_spec_2 : $provides_spec;
    my $new_data = {};
    for my $k ( keys %$element ) {
      $new_data->{$k} = _convert($element->{$k}, $spec, $to_version);
      $new_data->{$k}{version} = _clean_version($element->{$k}{version})
        if exists $element->{$k}{version};
    }
    return $new_data;
  }
  
  sub _convert {
    my ($data, $spec, $to_version, $is_fragment) = @_;
  
    my $new_data = {};
    for my $key ( keys %$spec ) {
      next if $key eq ':custom' || $key eq ':drop';
      next unless my $fcn = $spec->{$key};
      if ( $is_fragment && $key eq 'generated_by' ) {
        $fcn = \&_keep;
      }
      die "spec for '$key' is not a coderef"
        unless ref $fcn && ref $fcn eq 'CODE';
      my $new_value = $fcn->($data->{$key}, $key, $data, $to_version);
      $new_data->{$key} = $new_value if defined $new_value;
    }
  
    my $drop_list   = $spec->{':drop'};
    my $customizer  = $spec->{':custom'} || \&_keep;
  
    for my $key ( keys %$data ) {
      next if $drop_list && grep { $key eq $_ } @$drop_list;
      next if exists $spec->{$key}; # we handled it
      $new_data->{ $customizer->($key) } = $data->{$key};
    }
  
    return $new_data;
  }
  
  #--------------------------------------------------------------------------#
  # define converters for each conversion
  #--------------------------------------------------------------------------#
  
  # each converts from prior version
  # special ":custom" field is used for keys not recognized in spec
  my %up_convert = (
    '2-from-1.4' => {
      # PRIOR MANDATORY
      'abstract'            => \&_keep_or_unknown,
      'author'              => \&_author_list,
      'generated_by'        => \&_generated_by,
      'license'             => \&_license_2,
      'meta-spec'           => \&_change_meta_spec,
      'name'                => \&_keep,
      'version'             => \&_keep,
      # CHANGED TO MANDATORY
      'dynamic_config'      => \&_keep_or_one,
      # ADDED MANDATORY
      'release_status'      => \&_release_status,
      # PRIOR OPTIONAL
      'keywords'            => \&_keep,
      'no_index'            => \&_no_index_directory,
      'optional_features'   => \&_upgrade_optional_features,
      'provides'            => \&_provides,
      'resources'           => \&_upgrade_resources_2,
      # ADDED OPTIONAL
      'description'         => \&_keep,
      'prereqs'             => \&_prereqs_from_1,
  
      # drop these deprecated fields, but only after we convert
      ':drop' => [ qw(
          build_requires
          configure_requires
          conflicts
          distribution_type
          license_url
          private
          recommends
          requires
      ) ],
  
      # other random keys need x_ prefixing
      ':custom'              => \&_prefix_custom,
    },
    '1.4-from-1.3' => {
      # PRIOR MANDATORY
      'abstract'            => \&_keep_or_unknown,
      'author'              => \&_author_list,
      'generated_by'        => \&_generated_by,
      'license'             => \&_license_1,
      'meta-spec'           => \&_change_meta_spec,
      'name'                => \&_keep,
      'version'             => \&_keep,
      # PRIOR OPTIONAL
      'build_requires'      => \&_version_map,
      'conflicts'           => \&_version_map,
      'distribution_type'   => \&_keep,
      'dynamic_config'      => \&_keep_or_one,
      'keywords'            => \&_keep,
      'no_index'            => \&_no_index_directory,
      'optional_features'   => \&_optional_features_1_4,
      'provides'            => \&_provides,
      'recommends'          => \&_version_map,
      'requires'            => \&_version_map,
      'resources'           => \&_resources_1_4,
      # ADDED OPTIONAL
      'configure_requires'  => \&_keep,
  
      # drop these deprecated fields, but only after we convert
      ':drop' => [ qw(
        license_url
        private
      )],
  
      # other random keys are OK if already valid
      ':custom'              => \&_keep
    },
    '1.3-from-1.2' => {
      # PRIOR MANDATORY
      'abstract'            => \&_keep_or_unknown,
      'author'              => \&_author_list,
      'generated_by'        => \&_generated_by,
      'license'             => \&_license_1,
      'meta-spec'           => \&_change_meta_spec,
      'name'                => \&_keep,
      'version'             => \&_keep,
      # PRIOR OPTIONAL
      'build_requires'      => \&_version_map,
      'conflicts'           => \&_version_map,
      'distribution_type'   => \&_keep,
      'dynamic_config'      => \&_keep_or_one,
      'keywords'            => \&_keep,
      'no_index'            => \&_no_index_directory,
      'optional_features'   => \&_optional_features_as_map,
      'provides'            => \&_provides,
      'recommends'          => \&_version_map,
      'requires'            => \&_version_map,
      'resources'           => \&_resources_1_3,
  
      # drop these deprecated fields, but only after we convert
      ':drop' => [ qw(
        license_url
        private
      )],
  
      # other random keys are OK if already valid
      ':custom'              => \&_keep
    },
    '1.2-from-1.1' => {
      # PRIOR MANDATORY
      'version'             => \&_keep,
      # CHANGED TO MANDATORY
      'license'             => \&_license_1,
      'name'                => \&_keep,
      'generated_by'        => \&_generated_by,
      # ADDED MANDATORY
      'abstract'            => \&_keep_or_unknown,
      'author'              => \&_author_list,
      'meta-spec'           => \&_change_meta_spec,
      # PRIOR OPTIONAL
      'build_requires'      => \&_version_map,
      'conflicts'           => \&_version_map,
      'distribution_type'   => \&_keep,
      'dynamic_config'      => \&_keep_or_one,
      'recommends'          => \&_version_map,
      'requires'            => \&_version_map,
      # ADDED OPTIONAL
      'keywords'            => \&_keep,
      'no_index'            => \&_no_index_1_2,
      'optional_features'   => \&_optional_features_as_map,
      'provides'            => \&_provides,
      'resources'           => \&_resources_1_2,
  
      # drop these deprecated fields, but only after we convert
      ':drop' => [ qw(
        license_url
        private
      )],
  
      # other random keys are OK if already valid
      ':custom'              => \&_keep
    },
    '1.1-from-1.0' => {
      # CHANGED TO MANDATORY
      'version'             => \&_keep,
      # IMPLIED MANDATORY
      'name'                => \&_keep,
      # PRIOR OPTIONAL
      'build_requires'      => \&_version_map,
      'conflicts'           => \&_version_map,
      'distribution_type'   => \&_keep,
      'dynamic_config'      => \&_keep_or_one,
      'generated_by'        => \&_generated_by,
      'license'             => \&_license_1,
      'recommends'          => \&_version_map,
      'requires'            => \&_version_map,
      # ADDED OPTIONAL
      'license_url'         => \&_url_or_drop,
      'private'             => \&_keep,
  
      # other random keys are OK if already valid
      ':custom'              => \&_keep
    },
  );
  
  my %down_convert = (
    '1.4-from-2' => {
      # MANDATORY
      'abstract'            => \&_keep_or_unknown,
      'author'              => \&_author_list,
      'generated_by'        => \&_generated_by,
      'license'             => \&_downgrade_license,
      'meta-spec'           => \&_change_meta_spec,
      'name'                => \&_keep,
      'version'             => \&_keep,
      # OPTIONAL
      'build_requires'      => \&_get_build_requires,
      'configure_requires'  => \&_get_configure_requires,
      'conflicts'           => \&_get_conflicts,
      'distribution_type'   => \&_keep,
      'dynamic_config'      => \&_keep_or_one,
      'keywords'            => \&_keep,
      'no_index'            => \&_no_index_directory,
      'optional_features'   => \&_downgrade_optional_features,
      'provides'            => \&_provides,
      'recommends'          => \&_get_recommends,
      'requires'            => \&_get_requires,
      'resources'           => \&_downgrade_resources,
  
      # drop these unsupported fields (after conversion)
      ':drop' => [ qw(
        description
        prereqs
        release_status
      )],
  
      # custom keys will be left unchanged
      ':custom'              => \&_keep
    },
    '1.3-from-1.4' => {
      # MANDATORY
      'abstract'            => \&_keep_or_unknown,
      'author'              => \&_author_list,
      'generated_by'        => \&_generated_by,
      'license'             => \&_license_1,
      'meta-spec'           => \&_change_meta_spec,
      'name'                => \&_keep,
      'version'             => \&_keep,
      # OPTIONAL
      'build_requires'      => \&_version_map,
      'conflicts'           => \&_version_map,
      'distribution_type'   => \&_keep,
      'dynamic_config'      => \&_keep_or_one,
      'keywords'            => \&_keep,
      'no_index'            => \&_no_index_directory,
      'optional_features'   => \&_optional_features_as_map,
      'provides'            => \&_provides,
      'recommends'          => \&_version_map,
      'requires'            => \&_version_map,
      'resources'           => \&_resources_1_3,
  
      # drop these unsupported fields, but only after we convert
      ':drop' => [ qw(
        configure_requires
      )],
  
      # other random keys are OK if already valid
      ':custom'              => \&_keep,
    },
    '1.2-from-1.3' => {
      # MANDATORY
      'abstract'            => \&_keep_or_unknown,
      'author'              => \&_author_list,
      'generated_by'        => \&_generated_by,
      'license'             => \&_license_1,
      'meta-spec'           => \&_change_meta_spec,
      'name'                => \&_keep,
      'version'             => \&_keep,
      # OPTIONAL
      'build_requires'      => \&_version_map,
      'conflicts'           => \&_version_map,
      'distribution_type'   => \&_keep,
      'dynamic_config'      => \&_keep_or_one,
      'keywords'            => \&_keep,
      'no_index'            => \&_no_index_1_2,
      'optional_features'   => \&_optional_features_as_map,
      'provides'            => \&_provides,
      'recommends'          => \&_version_map,
      'requires'            => \&_version_map,
      'resources'           => \&_resources_1_3,
  
      # other random keys are OK if already valid
      ':custom'              => \&_keep,
    },
    '1.1-from-1.2' => {
      # MANDATORY
      'version'             => \&_keep,
      # IMPLIED MANDATORY
      'name'                => \&_keep,
      'meta-spec'           => \&_change_meta_spec,
      # OPTIONAL
      'build_requires'      => \&_version_map,
      'conflicts'           => \&_version_map,
      'distribution_type'   => \&_keep,
      'dynamic_config'      => \&_keep_or_one,
      'generated_by'        => \&_generated_by,
      'license'             => \&_license_1,
      'private'             => \&_keep,
      'recommends'          => \&_version_map,
      'requires'            => \&_version_map,
  
      # drop unsupported fields
      ':drop' => [ qw(
        abstract
        author
        provides
        no_index
        keywords
        resources
      )],
  
      # other random keys are OK if already valid
      ':custom'              => \&_keep,
    },
    '1.0-from-1.1' => {
      # IMPLIED MANDATORY
      'name'                => \&_keep,
      'meta-spec'           => \&_change_meta_spec,
      'version'             => \&_keep,
      # PRIOR OPTIONAL
      'build_requires'      => \&_version_map,
      'conflicts'           => \&_version_map,
      'distribution_type'   => \&_keep,
      'dynamic_config'      => \&_keep_or_one,
      'generated_by'        => \&_generated_by,
      'license'             => \&_license_1,
      'recommends'          => \&_version_map,
      'requires'            => \&_version_map,
  
      # other random keys are OK if already valid
      ':custom'              => \&_keep,
    },
  );
  
  my %cleanup = (
    '2' => {
      # PRIOR MANDATORY
      'abstract'            => \&_keep_or_unknown,
      'author'              => \&_author_list,
      'generated_by'        => \&_generated_by,
      'license'             => \&_license_2,
      'meta-spec'           => \&_change_meta_spec,
      'name'                => \&_keep,
      'version'             => \&_keep,
      # CHANGED TO MANDATORY
      'dynamic_config'      => \&_keep_or_one,
      # ADDED MANDATORY
      'release_status'      => \&_release_status,
      # PRIOR OPTIONAL
      'keywords'            => \&_keep,
      'no_index'            => \&_no_index_directory,
      'optional_features'   => \&_cleanup_optional_features_2,
      'provides'            => \&_provides,
      'resources'           => \&_cleanup_resources_2,
      # ADDED OPTIONAL
      'description'         => \&_keep,
      'prereqs'             => \&_cleanup_prereqs,
  
      # drop these deprecated fields, but only after we convert
      ':drop' => [ qw(
          build_requires
          configure_requires
          conflicts
          distribution_type
          license_url
          private
          recommends
          requires
      ) ],
  
      # other random keys need x_ prefixing
      ':custom'              => \&_prefix_custom,
    },
    '1.4' => {
      # PRIOR MANDATORY
      'abstract'            => \&_keep_or_unknown,
      'author'              => \&_author_list,
      'generated_by'        => \&_generated_by,
      'license'             => \&_license_1,
      'meta-spec'           => \&_change_meta_spec,
      'name'                => \&_keep,
      'version'             => \&_keep,
      # PRIOR OPTIONAL
      'build_requires'      => \&_version_map,
      'conflicts'           => \&_version_map,
      'distribution_type'   => \&_keep,
      'dynamic_config'      => \&_keep_or_one,
      'keywords'            => \&_keep,
      'no_index'            => \&_no_index_directory,
      'optional_features'   => \&_optional_features_1_4,
      'provides'            => \&_provides,
      'recommends'          => \&_version_map,
      'requires'            => \&_version_map,
      'resources'           => \&_resources_1_4,
      # ADDED OPTIONAL
      'configure_requires'  => \&_keep,
  
      # other random keys are OK if already valid
      ':custom'             => \&_keep
    },
    '1.3' => {
      # PRIOR MANDATORY
      'abstract'            => \&_keep_or_unknown,
      'author'              => \&_author_list,
      'generated_by'        => \&_generated_by,
      'license'             => \&_license_1,
      'meta-spec'           => \&_change_meta_spec,
      'name'                => \&_keep,
      'version'             => \&_keep,
      # PRIOR OPTIONAL
      'build_requires'      => \&_version_map,
      'conflicts'           => \&_version_map,
      'distribution_type'   => \&_keep,
      'dynamic_config'      => \&_keep_or_one,
      'keywords'            => \&_keep,
      'no_index'            => \&_no_index_directory,
      'optional_features'   => \&_optional_features_as_map,
      'provides'            => \&_provides,
      'recommends'          => \&_version_map,
      'requires'            => \&_version_map,
      'resources'           => \&_resources_1_3,
  
      # other random keys are OK if already valid
      ':custom'             => \&_keep
    },
    '1.2' => {
      # PRIOR MANDATORY
      'version'             => \&_keep,
      # CHANGED TO MANDATORY
      'license'             => \&_license_1,
      'name'                => \&_keep,
      'generated_by'        => \&_generated_by,
      # ADDED MANDATORY
      'abstract'            => \&_keep_or_unknown,
      'author'              => \&_author_list,
      'meta-spec'           => \&_change_meta_spec,
      # PRIOR OPTIONAL
      'build_requires'      => \&_version_map,
      'conflicts'           => \&_version_map,
      'distribution_type'   => \&_keep,
      'dynamic_config'      => \&_keep_or_one,
      'recommends'          => \&_version_map,
      'requires'            => \&_version_map,
      # ADDED OPTIONAL
      'keywords'            => \&_keep,
      'no_index'            => \&_no_index_1_2,
      'optional_features'   => \&_optional_features_as_map,
      'provides'            => \&_provides,
      'resources'           => \&_resources_1_2,
  
      # other random keys are OK if already valid
      ':custom'             => \&_keep
    },
    '1.1' => {
      # CHANGED TO MANDATORY
      'version'             => \&_keep,
      # IMPLIED MANDATORY
      'name'                => \&_keep,
      'meta-spec'           => \&_change_meta_spec,
      # PRIOR OPTIONAL
      'build_requires'      => \&_version_map,
      'conflicts'           => \&_version_map,
      'distribution_type'   => \&_keep,
      'dynamic_config'      => \&_keep_or_one,
      'generated_by'        => \&_generated_by,
      'license'             => \&_license_1,
      'recommends'          => \&_version_map,
      'requires'            => \&_version_map,
      # ADDED OPTIONAL
      'license_url'         => \&_url_or_drop,
      'private'             => \&_keep,
  
      # other random keys are OK if already valid
      ':custom'             => \&_keep
    },
    '1.0' => {
      # IMPLIED MANDATORY
      'name'                => \&_keep,
      'meta-spec'           => \&_change_meta_spec,
      'version'             => \&_keep,
      # IMPLIED OPTIONAL
      'build_requires'      => \&_version_map,
      'conflicts'           => \&_version_map,
      'distribution_type'   => \&_keep,
      'dynamic_config'      => \&_keep_or_one,
      'generated_by'        => \&_generated_by,
      'license'             => \&_license_1,
      'recommends'          => \&_version_map,
      'requires'            => \&_version_map,
  
      # other random keys are OK if already valid
      ':custom'             => \&_keep,
    },
  );
  
  # for a given field in a spec version, what fields will it feed
  # into in the *latest* spec (i.e. v2); meta-spec omitted because
  # we always expect a meta-spec to be generated
  my %fragments_generate = (
    '2' => {
      'abstract'            =>   'abstract',
      'author'              =>   'author',
      'generated_by'        =>   'generated_by',
      'license'             =>   'license',
      'name'                =>   'name',
      'version'             =>   'version',
      'dynamic_config'      =>   'dynamic_config',
      'release_status'      =>   'release_status',
      'keywords'            =>   'keywords',
      'no_index'            =>   'no_index',
      'optional_features'   =>   'optional_features',
      'provides'            =>   'provides',
      'resources'           =>   'resources',
      'description'         =>   'description',
      'prereqs'             =>   'prereqs',
    },
    '1.4' => {
      'abstract'            => 'abstract',
      'author'              => 'author',
      'generated_by'        => 'generated_by',
      'license'             => 'license',
      'name'                => 'name',
      'version'             => 'version',
      'build_requires'      => 'prereqs',
      'conflicts'           => 'prereqs',
      'distribution_type'   => 'distribution_type',
      'dynamic_config'      => 'dynamic_config',
      'keywords'            => 'keywords',
      'no_index'            => 'no_index',
      'optional_features'   => 'optional_features',
      'provides'            => 'provides',
      'recommends'          => 'prereqs',
      'requires'            => 'prereqs',
      'resources'           => 'resources',
      'configure_requires'  => 'prereqs',
    },
  );
  # this is not quite true but will work well enough
  # as 1.4 is a superset of earlier ones
  $fragments_generate{$_} = $fragments_generate{'1.4'} for qw/1.3 1.2 1.1 1.0/;
  
  #--------------------------------------------------------------------------#
  # Code
  #--------------------------------------------------------------------------#
  
  #pod =method new
  #pod
  #pod   my $cmc = CPAN::Meta::Converter->new( $struct );
  #pod
  #pod The constructor should be passed a valid metadata structure but invalid
  #pod structures are accepted.  If no meta-spec version is provided, version 1.0 will
  #pod be assumed.
  #pod
  #pod Optionally, you can provide a C<default_version> argument after C<$struct>:
  #pod
  #pod   my $cmc = CPAN::Meta::Converter->new( $struct, default_version => "1.4" );
  #pod
  #pod This is only needed when converting a metadata fragment that does not include a
  #pod C<meta-spec> field.
  #pod
  #pod =cut
  
  sub new {
    my ($class,$data,%args) = @_;
  
    # create an attributes hash
    my $self = {
      'data'    => $data,
      'spec'    => _extract_spec_version($data, $args{default_version}),
    };
  
    # create the object
    return bless $self, $class;
  }
  
  sub _extract_spec_version {
      my ($data, $default) = @_;
      my $spec = $data->{'meta-spec'};
  
      # is meta-spec there and valid?
      return( $default || "1.0" ) unless defined $spec && ref $spec eq 'HASH'; # before meta-spec?
  
      # does the version key look like a valid version?
      my $v = $spec->{version};
      if ( defined $v && $v =~ /^\d+(?:\.\d+)?$/ ) {
          return $v if defined $v && grep { $v eq $_ } keys %known_specs; # known spec
          return $v+0 if defined $v && grep { $v == $_ } keys %known_specs; # 2.0 => 2
      }
  
      # otherwise, use heuristics: look for 1.x vs 2.0 fields
      return "2" if exists $data->{prereqs};
      return "1.4" if exists $data->{configure_requires};
      return( $default || "1.2" ); # when meta-spec was first defined
  }
  
  #pod =method convert
  #pod
  #pod   my $new_struct = $cmc->convert( version => "2" );
  #pod
  #pod Returns a new hash reference with the metadata converted to a different form.
  #pod C<convert> will die if any conversion/standardization still results in an
  #pod invalid structure.
  #pod
  #pod Valid parameters include:
  #pod
  #pod =over
  #pod
  #pod =item *
  #pod
  #pod C<version> -- Indicates the desired specification version (e.g. "1.0", "1.1" ... "1.4", "2").
  #pod Defaults to the latest version of the CPAN Meta Spec.
  #pod
  #pod =back
  #pod
  #pod Conversion proceeds through each version in turn.  For example, a version 1.2
  #pod structure might be converted to 1.3 then 1.4 then finally to version 2. The
  #pod conversion process attempts to clean-up simple errors and standardize data.
  #pod For example, if C<author> is given as a scalar, it will converted to an array
  #pod reference containing the item. (Converting a structure to its own version will
  #pod also clean-up and standardize.)
  #pod
  #pod When data are cleaned and standardized, missing or invalid fields will be
  #pod replaced with sensible defaults when possible.  This may be lossy or imprecise.
  #pod For example, some badly structured META.yml files on CPAN have prerequisite
  #pod modules listed as both keys and values:
  #pod
  #pod   requires => { 'Foo::Bar' => 'Bam::Baz' }
  #pod
  #pod These would be split and each converted to a prerequisite with a minimum
  #pod version of zero.
  #pod
  #pod When some mandatory fields are missing or invalid, the conversion will attempt
  #pod to provide a sensible default or will fill them with a value of 'unknown'.  For
  #pod example a missing or unrecognized C<license> field will result in a C<license>
  #pod field of 'unknown'.  Fields that may get an 'unknown' include:
  #pod
  #pod =for :list
  #pod * abstract
  #pod * author
  #pod * license
  #pod
  #pod =cut
  
  sub convert {
    my ($self, %args) = @_;
    my $args = { %args };
  
    my $new_version = $args->{version} || $HIGHEST;
    my $is_fragment = $args->{is_fragment};
  
    my ($old_version) = $self->{spec};
    my $converted = _dclone($self->{data});
  
    if ( $old_version == $new_version ) {
      $converted = _convert( $converted, $cleanup{$old_version}, $old_version, $is_fragment );
      unless ( $args->{is_fragment} ) {
        my $cmv = CPAN::Meta::Validator->new( $converted );
        unless ( $cmv->is_valid ) {
          my $errs = join("\n", $cmv->errors);
          die "Failed to clean-up $old_version metadata. Errors:\n$errs\n";
        }
      }
      return $converted;
    }
    elsif ( $old_version > $new_version )  {
      my @vers = sort { $b <=> $a } keys %known_specs;
      for my $i ( 0 .. $#vers-1 ) {
        next if $vers[$i] > $old_version;
        last if $vers[$i+1] < $new_version;
        my $spec_string = "$vers[$i+1]-from-$vers[$i]";
        $converted = _convert( $converted, $down_convert{$spec_string}, $vers[$i+1], $is_fragment );
        unless ( $args->{is_fragment} ) {
          my $cmv = CPAN::Meta::Validator->new( $converted );
          unless ( $cmv->is_valid ) {
            my $errs = join("\n", $cmv->errors);
            die "Failed to downconvert metadata to $vers[$i+1]. Errors:\n$errs\n";
          }
        }
      }
      return $converted;
    }
    else {
      my @vers = sort { $a <=> $b } keys %known_specs;
      for my $i ( 0 .. $#vers-1 ) {
        next if $vers[$i] < $old_version;
        last if $vers[$i+1] > $new_version;
        my $spec_string = "$vers[$i+1]-from-$vers[$i]";
        $converted = _convert( $converted, $up_convert{$spec_string}, $vers[$i+1], $is_fragment );
        unless ( $args->{is_fragment} ) {
          my $cmv = CPAN::Meta::Validator->new( $converted );
          unless ( $cmv->is_valid ) {
            my $errs = join("\n", $cmv->errors);
            die "Failed to upconvert metadata to $vers[$i+1]. Errors:\n$errs\n";
          }
        }
      }
      return $converted;
    }
  }
  
  #pod =method upgrade_fragment
  #pod
  #pod   my $new_struct = $cmc->upgrade_fragment;
  #pod
  #pod Returns a new hash reference with the metadata converted to the latest version
  #pod of the CPAN Meta Spec.  No validation is done on the result -- you must
  #pod validate after merging fragments into a complete metadata document.
  #pod
  #pod Available since version 2.141170.
  #pod
  #pod =cut
  
  sub upgrade_fragment {
    my ($self) = @_;
    my ($old_version) = $self->{spec};
    my %expected =
      map {; $_ => 1 }
      grep { defined }
      map { $fragments_generate{$old_version}{$_} }
      keys %{ $self->{data} };
    my $converted = $self->convert( version => $HIGHEST, is_fragment => 1 );
    for my $key ( keys %$converted ) {
      next if $key =~ /^x_/i || $key eq 'meta-spec';
      delete $converted->{$key} unless $expected{$key};
    }
    return $converted;
  }
  
  1;
  
  # ABSTRACT: Convert CPAN distribution metadata structures
  
  =pod
  
  =encoding UTF-8
  
  =head1 NAME
  
  CPAN::Meta::Converter - Convert CPAN distribution metadata structures
  
  =head1 VERSION
  
  version 2.150010
  
  =head1 SYNOPSIS
  
    my $struct = decode_json_file('META.json');
  
    my $cmc = CPAN::Meta::Converter->new( $struct );
  
    my $new_struct = $cmc->convert( version => "2" );
  
  =head1 DESCRIPTION
  
  This module converts CPAN Meta structures from one form to another.  The
  primary use is to convert older structures to the most modern version of
  the specification, but other transformations may be implemented in the
  future as needed.  (E.g. stripping all custom fields or stripping all
  optional fields.)
  
  =head1 METHODS
  
  =head2 new
  
    my $cmc = CPAN::Meta::Converter->new( $struct );
  
  The constructor should be passed a valid metadata structure but invalid
  structures are accepted.  If no meta-spec version is provided, version 1.0 will
  be assumed.
  
  Optionally, you can provide a C<default_version> argument after C<$struct>:
  
    my $cmc = CPAN::Meta::Converter->new( $struct, default_version => "1.4" );
  
  This is only needed when converting a metadata fragment that does not include a
  C<meta-spec> field.
  
  =head2 convert
  
    my $new_struct = $cmc->convert( version => "2" );
  
  Returns a new hash reference with the metadata converted to a different form.
  C<convert> will die if any conversion/standardization still results in an
  invalid structure.
  
  Valid parameters include:
  
  =over
  
  =item *
  
  C<version> -- Indicates the desired specification version (e.g. "1.0", "1.1" ... "1.4", "2").
  Defaults to the latest version of the CPAN Meta Spec.
  
  =back
  
  Conversion proceeds through each version in turn.  For example, a version 1.2
  structure might be converted to 1.3 then 1.4 then finally to version 2. The
  conversion process attempts to clean-up simple errors and standardize data.
  For example, if C<author> is given as a scalar, it will converted to an array
  reference containing the item. (Converting a structure to its own version will
  also clean-up and standardize.)
  
  When data are cleaned and standardized, missing or invalid fields will be
  replaced with sensible defaults when possible.  This may be lossy or imprecise.
  For example, some badly structured META.yml files on CPAN have prerequisite
  modules listed as both keys and values:
  
    requires => { 'Foo::Bar' => 'Bam::Baz' }
  
  These would be split and each converted to a prerequisite with a minimum
  version of zero.
  
  When some mandatory fields are missing or invalid, the conversion will attempt
  to provide a sensible default or will fill them with a value of 'unknown'.  For
  example a missing or unrecognized C<license> field will result in a C<license>
  field of 'unknown'.  Fields that may get an 'unknown' include:
  
  =over 4
  
  =item *
  
  abstract
  
  =item *
  
  author
  
  =item *
  
  license
  
  =back
  
  =head2 upgrade_fragment
  
    my $new_struct = $cmc->upgrade_fragment;
  
  Returns a new hash reference with the metadata converted to the latest version
  of the CPAN Meta Spec.  No validation is done on the result -- you must
  validate after merging fragments into a complete metadata document.
  
  Available since version 2.141170.
  
  =head1 BUGS
  
  Please report any bugs or feature using the CPAN Request Tracker.
  Bugs can be submitted through the web interface at
  L<http://rt.cpan.org/Dist/Display.html?Queue=CPAN-Meta>
  
  When submitting a bug or request, please include a test-file or a patch to an
  existing test-file that illustrates the bug or desired feature.
  
  =head1 AUTHORS
  
  =over 4
  
  =item *
  
  David Golden <dagolden@cpan.org>
  
  =item *
  
  Ricardo Signes <rjbs@cpan.org>
  
  =item *
  
  Adam Kennedy <adamk@cpan.org>
  
  =back
  
  =head1 COPYRIGHT AND LICENSE
  
  This software is copyright (c) 2010 by David Golden, Ricardo Signes, Adam Kennedy and Contributors.
  
  This is free software; you can redistribute it and/or modify it under
  the same terms as the Perl 5 programming language system itself.
  
  =cut
  
  __END__
  
  
  # vim: ts=2 sts=2 sw=2 et :
CPAN_META_CONVERTER

$fatpacked{"CPAN/Meta/Feature.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'CPAN_META_FEATURE';
  use 5.006;
  use strict;
  use warnings;
  package CPAN::Meta::Feature;
  
  our $VERSION = '2.150010';
  
  use CPAN::Meta::Prereqs;
  
  #pod =head1 DESCRIPTION
  #pod
  #pod A CPAN::Meta::Feature object describes an optional feature offered by a CPAN
  #pod distribution and specified in the distribution's F<META.json> (or F<META.yml>)
  #pod file.
  #pod
  #pod For the most part, this class will only be used when operating on the result of
  #pod the C<feature> or C<features> methods on a L<CPAN::Meta> object.
  #pod
  #pod =method new
  #pod
  #pod   my $feature = CPAN::Meta::Feature->new( $identifier => \%spec );
  #pod
  #pod This returns a new Feature object.  The C<%spec> argument to the constructor
  #pod should be the same as the value of the C<optional_feature> entry in the
  #pod distmeta.  It must contain entries for C<description> and C<prereqs>.
  #pod
  #pod =cut
  
  sub new {
    my ($class, $identifier, $spec) = @_;
  
    my %guts = (
      identifier  => $identifier,
      description => $spec->{description},
      prereqs     => CPAN::Meta::Prereqs->new($spec->{prereqs}),
    );
  
    bless \%guts => $class;
  }
  
  #pod =method identifier
  #pod
  #pod This method returns the feature's identifier.
  #pod
  #pod =cut
  
  sub identifier  { $_[0]{identifier}  }
  
  #pod =method description
  #pod
  #pod This method returns the feature's long description.
  #pod
  #pod =cut
  
  sub description { $_[0]{description} }
  
  #pod =method prereqs
  #pod
  #pod This method returns the feature's prerequisites as a L<CPAN::Meta::Prereqs>
  #pod object.
  #pod
  #pod =cut
  
  sub prereqs     { $_[0]{prereqs} }
  
  1;
  
  # ABSTRACT: an optional feature provided by a CPAN distribution
  
  =pod
  
  =encoding UTF-8
  
  =head1 NAME
  
  CPAN::Meta::Feature - an optional feature provided by a CPAN distribution
  
  =head1 VERSION
  
  version 2.150010
  
  =head1 DESCRIPTION
  
  A CPAN::Meta::Feature object describes an optional feature offered by a CPAN
  distribution and specified in the distribution's F<META.json> (or F<META.yml>)
  file.
  
  For the most part, this class will only be used when operating on the result of
  the C<feature> or C<features> methods on a L<CPAN::Meta> object.
  
  =head1 METHODS
  
  =head2 new
  
    my $feature = CPAN::Meta::Feature->new( $identifier => \%spec );
  
  This returns a new Feature object.  The C<%spec> argument to the constructor
  should be the same as the value of the C<optional_feature> entry in the
  distmeta.  It must contain entries for C<description> and C<prereqs>.
  
  =head2 identifier
  
  This method returns the feature's identifier.
  
  =head2 description
  
  This method returns the feature's long description.
  
  =head2 prereqs
  
  This method returns the feature's prerequisites as a L<CPAN::Meta::Prereqs>
  object.
  
  =head1 BUGS
  
  Please report any bugs or feature using the CPAN Request Tracker.
  Bugs can be submitted through the web interface at
  L<http://rt.cpan.org/Dist/Display.html?Queue=CPAN-Meta>
  
  When submitting a bug or request, please include a test-file or a patch to an
  existing test-file that illustrates the bug or desired feature.
  
  =head1 AUTHORS
  
  =over 4
  
  =item *
  
  David Golden <dagolden@cpan.org>
  
  =item *
  
  Ricardo Signes <rjbs@cpan.org>
  
  =item *
  
  Adam Kennedy <adamk@cpan.org>
  
  =back
  
  =head1 COPYRIGHT AND LICENSE
  
  This software is copyright (c) 2010 by David Golden, Ricardo Signes, Adam Kennedy and Contributors.
  
  This is free software; you can redistribute it and/or modify it under
  the same terms as the Perl 5 programming language system itself.
  
  =cut
  
  __END__
  
  
  # vim: ts=2 sts=2 sw=2 et :
CPAN_META_FEATURE

$fatpacked{"CPAN/Meta/History.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'CPAN_META_HISTORY';
  # vi:tw=72
  use 5.006;
  use strict;
  use warnings;
  package CPAN::Meta::History;
  
  our $VERSION = '2.150010';
  
  1;
  
  # ABSTRACT: history of CPAN Meta Spec changes
  
  __END__
  
  =pod
  
  =encoding UTF-8
  
  =head1 NAME
  
  CPAN::Meta::History - history of CPAN Meta Spec changes
  
  =head1 VERSION
  
  version 2.150010
  
  =head1 DESCRIPTION
  
  The CPAN Meta Spec has gone through several iterations.  It was
  originally written in HTML and later revised into POD (though published
  in HTML generated from the POD).  Fields were added, removed or changed,
  sometimes by design and sometimes to reflect real-world usage after the
  fact.
  
  This document reconstructs the history of the CPAN Meta Spec based on
  change logs, repository commit messages and the published HTML files.
  In some cases, particularly prior to version 1.2, the exact version
  when certain fields were introduced or changed is inconsistent between
  sources.  When in doubt, the published HTML files for versions 1.0 to
  1.4 as they existed when version 2 was developed are used as the
  definitive source.
  
  Starting with version 2, the specification document is part of the
  CPAN-Meta distribution and will be published on CPAN as
  L<CPAN::Meta::Spec>.
  
  Going forward, specification version numbers will be integers and
  decimal portions will correspond to a release date for the CPAN::Meta
  library.
  
  =head1 HISTORY
  
  =head2 Version 2
  
  April 2010
  
  =over
  
  =item *
  
  Revised spec examples as perl data structures rather than YAML
  
  =item *
  
  Switched to JSON serialization from YAML
  
  =item *
  
  Specified allowed version number formats
  
  =item *
  
  Replaced 'requires', 'build_requires', 'configure_requires',
  'recommends' and 'conflicts' with new 'prereqs' data structure divided
  by I<phase> (configure, build, test, runtime, etc.) and I<relationship>
  (requires, recommends, suggests, conflicts)
  
  =item *
  
  Added support for 'develop' phase for requirements for maintaining
  a list of authoring tools
  
  =item *
  
  Changed 'license' to a list and revised the set of valid licenses
  
  =item *
  
  Made 'dynamic_config' mandatory to reduce confusion
  
  =item *
  
  Changed 'resources' subkey 'repository' to a hash that clarifies
  repository type, url for browsing and url for checkout
  
  =item *
  
  Changed 'resources' subkey 'bugtracker' to a hash for either web
  or mailto resource
  
  =item *
  
  Changed specification of 'optional_features':
  
  =over
  
  =item *
  
  Added formal specification and usage guide instead of just example
  
  =item *
  
  Changed to use new prereqs data structure instead of individual keys
  
  =back
  
  =item *
  
  Clarified intended use of 'author' as generalized contact list
  
  =item *
  
  Added 'release_status' field to indicate stable, testing or unstable
  status to provide hints to indexers
  
  =item *
  
  Added 'description' field for a longer description of the distribution
  
  =item *
  
  Formalized use of "x_" or "X_" for all custom keys not listed in the
  official spec
  
  =back
  
  =head2 Version 1.4
  
  June 2008
  
  =over
  
  =item *
  
  Noted explicit support for 'perl' in prerequisites
  
  =item *
  
  Added 'configure_requires' prerequisite type
  
  =item *
  
  Changed 'optional_features'
  
  =over
  
  =item *
  
  Example corrected to show map of maps instead of list of maps
  (though descriptive text said 'map' even in v1.3)
  
  =item *
  
  Removed 'requires_packages', 'requires_os' and 'excluded_os'
  as valid subkeys
  
  =back
  
  =back
  
  =head2 Version 1.3
  
  November 2006
  
  =over
  
  =item *
  
  Added 'no_index' subkey 'directory' and removed 'dir' to match actual
  usage in the wild
  
  =item *
  
  Added a 'repository' subkey to 'resources'
  
  =back
  
  =head2 Version 1.2
  
  August 2005
  
  =over
  
  =item *
  
  Re-wrote and restructured spec in POD syntax
  
  =item *
  
  Changed 'name' to be mandatory
  
  =item *
  
  Changed 'generated_by' to be mandatory
  
  =item *
  
  Changed 'license' to be mandatory
  
  =item *
  
  Added version range specifications for prerequisites
  
  =item *
  
  Added required 'abstract' field
  
  =item *
  
  Added required 'author' field
  
  =item *
  
  Added required 'meta-spec' field to define 'version' (and 'url') of the
  CPAN Meta Spec used for metadata
  
  =item *
  
  Added 'provides' field
  
  =item *
  
  Added 'no_index' field and deprecated 'private' field.  'no_index'
  subkeys include 'file', 'dir', 'package' and 'namespace'
  
  =item *
  
  Added 'keywords' field
  
  =item *
  
  Added 'resources' field with subkeys 'homepage', 'license', and
  'bugtracker'
  
  =item *
  
  Added 'optional_features' field as an alternate under 'recommends'.
  Includes 'description', 'requires', 'build_requires', 'conflicts',
  'requires_packages', 'requires_os' and 'excluded_os' as valid subkeys
  
  =item *
  
  Removed 'license_uri' field
  
  =back
  
  =head2 Version 1.1
  
  May 2003
  
  =over
  
  =item *
  
  Changed 'version' to be mandatory
  
  =item *
  
  Added 'private' field
  
  =item *
  
  Added 'license_uri' field
  
  =back
  
  =head2 Version 1.0
  
  March 2003
  
  =over
  
  =item *
  
  Original release (in HTML format only)
  
  =item *
  
  Included 'name', 'version', 'license', 'distribution_type', 'requires',
  'recommends', 'build_requires', 'conflicts', 'dynamic_config',
  'generated_by'
  
  =back
  
  =head1 AUTHORS
  
  =over 4
  
  =item *
  
  David Golden <dagolden@cpan.org>
  
  =item *
  
  Ricardo Signes <rjbs@cpan.org>
  
  =item *
  
  Adam Kennedy <adamk@cpan.org>
  
  =back
  
  =head1 COPYRIGHT AND LICENSE
  
  This software is copyright (c) 2010 by David Golden, Ricardo Signes, Adam Kennedy and Contributors.
  
  This is free software; you can redistribute it and/or modify it under
  the same terms as the Perl 5 programming language system itself.
  
  =cut
CPAN_META_HISTORY

$fatpacked{"CPAN/Meta/Merge.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'CPAN_META_MERGE';
  use strict;
  use warnings;
  
  package CPAN::Meta::Merge;
  
  our $VERSION = '2.150010';
  
  use Carp qw/croak/;
  use Scalar::Util qw/blessed/;
  use CPAN::Meta::Converter 2.141170;
  
  sub _is_identical {
    my ($left, $right) = @_;
    return
      (not defined $left and not defined $right)
      # if either of these are references, we compare the serialized value
      || (defined $left and defined $right and $left eq $right);
  }
  
  sub _identical {
    my ($left, $right, $path) = @_;
    croak sprintf "Can't merge attribute %s: '%s' does not equal '%s'", join('.', @{$path}), $left, $right
      unless _is_identical($left, $right);
    return $left;
  }
  
  sub _merge {
    my ($current, $next, $mergers, $path) = @_;
    for my $key (keys %{$next}) {
      if (not exists $current->{$key}) {
        $current->{$key} = $next->{$key};
      }
      elsif (my $merger = $mergers->{$key}) {
        $current->{$key} = $merger->($current->{$key}, $next->{$key}, [ @{$path}, $key ]);
      }
      elsif ($merger = $mergers->{':default'}) {
        $current->{$key} = $merger->($current->{$key}, $next->{$key}, [ @{$path}, $key ]);
      }
      else {
        croak sprintf "Can't merge unknown attribute '%s'", join '.', @{$path}, $key;
      }
    }
    return $current;
  }
  
  sub _uniq {
    my %seen = ();
    return grep { not $seen{$_}++ } @_;
  }
  
  sub _set_addition {
    my ($left, $right) = @_;
    return [ +_uniq(@{$left}, @{$right}) ];
  }
  
  sub _uniq_map {
    my ($left, $right, $path) = @_;
    for my $key (keys %{$right}) {
      if (not exists $left->{$key}) {
        $left->{$key} = $right->{$key};
      }
      # identical strings or references are merged identically
      elsif (_is_identical($left->{$key}, $right->{$key})) {
        1; # do nothing - keep left
      }
      elsif (ref $left->{$key} eq 'HASH' and ref $right->{$key} eq 'HASH') {
        $left->{$key} = _uniq_map($left->{$key}, $right->{$key}, [ @{$path}, $key ]);
      }
      else {
        croak 'Duplication of element ' . join '.', @{$path}, $key;
      }
    }
    return $left;
  }
  
  sub _improvise {
    my ($left, $right, $path) = @_;
    my ($name) = reverse @{$path};
    if ($name =~ /^x_/) {
      if (ref($left) eq 'ARRAY') {
        return _set_addition($left, $right, $path);
      }
      elsif (ref($left) eq 'HASH') {
        return _uniq_map($left, $right, $path);
      }
      else {
        return _identical($left, $right, $path);
      }
    }
    croak sprintf "Can't merge '%s'", join '.', @{$path};
  }
  
  sub _optional_features {
    my ($left, $right, $path) = @_;
  
    for my $key (keys %{$right}) {
      if (not exists $left->{$key}) {
        $left->{$key} = $right->{$key};
      }
      else {
        for my $subkey (keys %{ $right->{$key} }) {
          next if $subkey eq 'prereqs';
          if (not exists $left->{$key}{$subkey}) {
            $left->{$key}{$subkey} = $right->{$key}{$subkey};
          }
          else {
            Carp::croak "Cannot merge two optional_features named '$key' with different '$subkey' values"
              if do { no warnings 'uninitialized'; $left->{$key}{$subkey} ne $right->{$key}{$subkey} };
          }
        }
  
        require CPAN::Meta::Prereqs;
        $left->{$key}{prereqs} =
          CPAN::Meta::Prereqs->new($left->{$key}{prereqs})
            ->with_merged_prereqs(CPAN::Meta::Prereqs->new($right->{$key}{prereqs}))
            ->as_string_hash;
      }
    }
    return $left;
  }
  
  
  my %default = (
    abstract       => \&_identical,
    author         => \&_set_addition,
    dynamic_config => sub {
      my ($left, $right) = @_;
      return $left || $right;
    },
    generated_by => sub {
      my ($left, $right) = @_;
      return join ', ', _uniq(split(/, /, $left), split(/, /, $right));
    },
    license     => \&_set_addition,
    'meta-spec' => {
      version => \&_identical,
      url     => \&_identical
    },
    name              => \&_identical,
    release_status    => \&_identical,
    version           => \&_identical,
    description       => \&_identical,
    keywords          => \&_set_addition,
    no_index          => { map { ($_ => \&_set_addition) } qw/file directory package namespace/ },
    optional_features => \&_optional_features,
    prereqs           => sub {
      require CPAN::Meta::Prereqs;
      my ($left, $right) = map { CPAN::Meta::Prereqs->new($_) } @_[0,1];
      return $left->with_merged_prereqs($right)->as_string_hash;
    },
    provides  => \&_uniq_map,
    resources => {
      license    => \&_set_addition,
      homepage   => \&_identical,
      bugtracker => \&_uniq_map,
      repository => \&_uniq_map,
      ':default' => \&_improvise,
    },
    ':default' => \&_improvise,
  );
  
  sub new {
    my ($class, %arguments) = @_;
    croak 'default version required' if not exists $arguments{default_version};
    my %mapping = %default;
    my %extra = %{ $arguments{extra_mappings} || {} };
    for my $key (keys %extra) {
      if (ref($mapping{$key}) eq 'HASH') {
        $mapping{$key} = { %{ $mapping{$key} }, %{ $extra{$key} } };
      }
      else {
        $mapping{$key} = $extra{$key};
      }
    }
    return bless {
      default_version => $arguments{default_version},
      mapping => _coerce_mapping(\%mapping, []),
    }, $class;
  }
  
  my %coderef_for = (
    set_addition => \&_set_addition,
    uniq_map     => \&_uniq_map,
    identical    => \&_identical,
    improvise    => \&_improvise,
    improvize    => \&_improvise, # [sic] for backwards compatibility
  );
  
  sub _coerce_mapping {
    my ($orig, $map_path) = @_;
    my %ret;
    for my $key (keys %{$orig}) {
      my $value = $orig->{$key};
      if (ref($orig->{$key}) eq 'CODE') {
        $ret{$key} = $value;
      }
      elsif (ref($value) eq 'HASH') {
        my $mapping = _coerce_mapping($value, [ @{$map_path}, $key ]);
        $ret{$key} = sub {
          my ($left, $right, $path) = @_;
          return _merge($left, $right, $mapping, [ @{$path} ]);
        };
      }
      elsif ($coderef_for{$value}) {
        $ret{$key} = $coderef_for{$value};
      }
      else {
        croak "Don't know what to do with " . join '.', @{$map_path}, $key;
      }
    }
    return \%ret;
  }
  
  sub merge {
    my ($self, @items) = @_;
    my $current = {};
    for my $next (@items) {
      if ( blessed($next) && $next->isa('CPAN::Meta') ) {
        $next = $next->as_struct;
      }
      elsif ( ref($next) eq 'HASH' ) {
        my $cmc = CPAN::Meta::Converter->new(
          $next, default_version => $self->{default_version}
        );
        $next = $cmc->upgrade_fragment;
      }
      else {
        croak "Don't know how to merge '$next'";
      }
      $current = _merge($current, $next, $self->{mapping}, []);
    }
    return $current;
  }
  
  1;
  
  # ABSTRACT: Merging CPAN Meta fragments
  
  
  # vim: ts=2 sts=2 sw=2 et :
  
  __END__
  
  =pod
  
  =encoding UTF-8
  
  =head1 NAME
  
  CPAN::Meta::Merge - Merging CPAN Meta fragments
  
  =head1 VERSION
  
  version 2.150010
  
  =head1 SYNOPSIS
  
   my $merger = CPAN::Meta::Merge->new(default_version => "2");
   my $meta = $merger->merge($base, @additional);
  
  =head1 DESCRIPTION
  
  =head1 METHODS
  
  =head2 new
  
  This creates a CPAN::Meta::Merge object. It takes one mandatory named
  argument, C<version>, declaring the version of the meta-spec that must be
  used for the merge. It can optionally take an C<extra_mappings> argument
  that allows one to add additional merging functions for specific elements.
  
  The C<extra_mappings> arguments takes a hash ref with the same type of
  structure as described in L<CPAN::Meta::Spec>, except with its values as
  one of the L<defined merge strategies|/"MERGE STRATEGIES"> or a code ref
  to a merging function.
  
    my $merger = CPAN::Meta::Merge->new(
        default_version => '2',
        extra_mappings => {
            'optional_features' => \&custom_merge_function,
            'x_custom' => 'set_addition',
            'x_meta_meta' => {
                name => 'identical',
                tags => 'set_addition',
            }
        }
    );
  
  =head2 merge(@fragments)
  
  Merge all C<@fragments> together. It will accept both CPAN::Meta objects and
  (possibly incomplete) hashrefs of metadata.
  
  =head1 MERGE STRATEGIES
  
  C<merge> uses various strategies to combine different elements of the CPAN::Meta objects.  The following strategies can be used with the extra_mappings argument of C<new>:
  
  =over
  
  =item identical
  
  The elements must be identical
  
  =item set_addition
  
  The union of two array refs
  
    [ a, b ] U [ a, c]  = [ a, b, c ]
  
  =item uniq_map
  
  Key value pairs from the right hash are merged to the left hash.  Key
  collisions are only allowed if their values are the same.  This merge
  function will recurse into nested hash refs following the same merge
  rules.
  
  =item improvise
  
  This merge strategy will try to pick the appropriate predefined strategy
  based on what element type.  Array refs will try to use the
  C<set_addition> strategy,  Hash refs will try to use the C<uniq_map>
  strategy, and everything else will try the C<identical> strategy.
  
  =back
  
  =head1 AUTHORS
  
  =over 4
  
  =item *
  
  David Golden <dagolden@cpan.org>
  
  =item *
  
  Ricardo Signes <rjbs@cpan.org>
  
  =item *
  
  Adam Kennedy <adamk@cpan.org>
  
  =back
  
  =head1 COPYRIGHT AND LICENSE
  
  This software is copyright (c) 2010 by David Golden, Ricardo Signes, Adam Kennedy and Contributors.
  
  This is free software; you can redistribute it and/or modify it under
  the same terms as the Perl 5 programming language system itself.
  
  =cut
CPAN_META_MERGE

$fatpacked{"CPAN/Meta/Prereqs.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'CPAN_META_PREREQS';
  use 5.006;
  use strict;
  use warnings;
  package CPAN::Meta::Prereqs;
  
  our $VERSION = '2.150010';
  
  #pod =head1 DESCRIPTION
  #pod
  #pod A CPAN::Meta::Prereqs object represents the prerequisites for a CPAN
  #pod distribution or one of its optional features.  Each set of prereqs is
  #pod organized by phase and type, as described in L<CPAN::Meta::Prereqs>.
  #pod
  #pod =cut
  
  use Carp qw(confess);
  use Scalar::Util qw(blessed);
  use CPAN::Meta::Requirements 2.121;
  
  #pod =method new
  #pod
  #pod   my $prereq = CPAN::Meta::Prereqs->new( \%prereq_spec );
  #pod
  #pod This method returns a new set of Prereqs.  The input should look like the
  #pod contents of the C<prereqs> field described in L<CPAN::Meta::Spec>, meaning
  #pod something more or less like this:
  #pod
  #pod   my $prereq = CPAN::Meta::Prereqs->new({
  #pod     runtime => {
  #pod       requires => {
  #pod         'Some::Module' => '1.234',
  #pod         ...,
  #pod       },
  #pod       ...,
  #pod     },
  #pod     ...,
  #pod   });
  #pod
  #pod You can also construct an empty set of prereqs with:
  #pod
  #pod   my $prereqs = CPAN::Meta::Prereqs->new;
  #pod
  #pod This empty set of prereqs is useful for accumulating new prereqs before finally
  #pod dumping the whole set into a structure or string.
  #pod
  #pod =cut
  
  # note we also accept anything matching /\Ax_/i
  sub __legal_phases { qw(configure build test runtime develop)   }
  sub __legal_types  { qw(requires recommends suggests conflicts) }
  
  # expect a prereq spec from META.json -- rjbs, 2010-04-11
  sub new {
    my ($class, $prereq_spec) = @_;
    $prereq_spec ||= {};
  
    my %is_legal_phase = map {; $_ => 1 } $class->__legal_phases;
    my %is_legal_type  = map {; $_ => 1 } $class->__legal_types;
  
    my %guts;
    PHASE: for my $phase (keys %$prereq_spec) {
      next PHASE unless $phase =~ /\Ax_/i or $is_legal_phase{$phase};
  
      my $phase_spec = $prereq_spec->{ $phase };
      next PHASE unless keys %$phase_spec;
  
      TYPE: for my $type (keys %$phase_spec) {
        next TYPE unless $type =~ /\Ax_/i or $is_legal_type{$type};
  
        my $spec = $phase_spec->{ $type };
  
        next TYPE unless keys %$spec;
  
        $guts{prereqs}{$phase}{$type} = CPAN::Meta::Requirements->from_string_hash(
          $spec
        );
      }
    }
  
    return bless \%guts => $class;
  }
  
  #pod =method requirements_for
  #pod
  #pod   my $requirements = $prereqs->requirements_for( $phase, $type );
  #pod
  #pod This method returns a L<CPAN::Meta::Requirements> object for the given
  #pod phase/type combination.  If no prerequisites are registered for that
  #pod combination, a new CPAN::Meta::Requirements object will be returned, and it may
  #pod be added to as needed.
  #pod
  #pod If C<$phase> or C<$type> are undefined or otherwise invalid, an exception will
  #pod be raised.
  #pod
  #pod =cut
  
  sub requirements_for {
    my ($self, $phase, $type) = @_;
  
    confess "requirements_for called without phase" unless defined $phase;
    confess "requirements_for called without type"  unless defined $type;
  
    unless ($phase =~ /\Ax_/i or grep { $phase eq $_ } $self->__legal_phases) {
      confess "requested requirements for unknown phase: $phase";
    }
  
    unless ($type =~ /\Ax_/i or grep { $type eq $_ } $self->__legal_types) {
      confess "requested requirements for unknown type: $type";
    }
  
    my $req = ($self->{prereqs}{$phase}{$type} ||= CPAN::Meta::Requirements->new);
  
    $req->finalize if $self->is_finalized;
  
    return $req;
  }
  
  #pod =method phases
  #pod
  #pod   my @phases = $prereqs->phases;
  #pod
  #pod This method returns the list of all phases currently populated in the prereqs
  #pod object, suitable for iterating.
  #pod
  #pod =cut
  
  sub phases {
    my ($self) = @_;
  
    my %is_legal_phase = map {; $_ => 1 } $self->__legal_phases;
    grep { /\Ax_/i or $is_legal_phase{$_} } keys %{ $self->{prereqs} };
  }
  
  #pod =method types_in
  #pod
  #pod   my @runtime_types = $prereqs->types_in('runtime');
  #pod
  #pod This method returns the list of all types currently populated in the prereqs
  #pod object for the provided phase, suitable for iterating.
  #pod
  #pod =cut
  
  sub types_in {
    my ($self, $phase) = @_;
  
    return unless $phase =~ /\Ax_/i or grep { $phase eq $_ } $self->__legal_phases;
  
    my %is_legal_type  = map {; $_ => 1 } $self->__legal_types;
    grep { /\Ax_/i or $is_legal_type{$_} } keys %{ $self->{prereqs}{$phase} };
  }
  
  #pod =method with_merged_prereqs
  #pod
  #pod   my $new_prereqs = $prereqs->with_merged_prereqs( $other_prereqs );
  #pod
  #pod   my $new_prereqs = $prereqs->with_merged_prereqs( \@other_prereqs );
  #pod
  #pod This method returns a new CPAN::Meta::Prereqs objects in which all the
  #pod other prerequisites given are merged into the current set.  This is primarily
  #pod provided for combining a distribution's core prereqs with the prereqs of one of
  #pod its optional features.
  #pod
  #pod The new prereqs object has no ties to the originals, and altering it further
  #pod will not alter them.
  #pod
  #pod =cut
  
  sub with_merged_prereqs {
    my ($self, $other) = @_;
  
    my @other = blessed($other) ? $other : @$other;
  
    my @prereq_objs = ($self, @other);
  
    my %new_arg;
  
    for my $phase (__uniq(map { $_->phases } @prereq_objs)) {
      for my $type (__uniq(map { $_->types_in($phase) } @prereq_objs)) {
  
        my $req = CPAN::Meta::Requirements->new;
  
        for my $prereq (@prereq_objs) {
          my $this_req = $prereq->requirements_for($phase, $type);
          next unless $this_req->required_modules;
  
          $req->add_requirements($this_req);
        }
  
        next unless $req->required_modules;
  
        $new_arg{ $phase }{ $type } = $req->as_string_hash;
      }
    }
  
    return (ref $self)->new(\%new_arg);
  }
  
  #pod =method merged_requirements
  #pod
  #pod     my $new_reqs = $prereqs->merged_requirements( \@phases, \@types );
  #pod     my $new_reqs = $prereqs->merged_requirements( \@phases );
  #pod     my $new_reqs = $prereqs->merged_requirements();
  #pod
  #pod This method joins together all requirements across a number of phases
  #pod and types into a new L<CPAN::Meta::Requirements> object.  If arguments
  #pod are omitted, it defaults to "runtime", "build" and "test" for phases
  #pod and "requires" and "recommends" for types.
  #pod
  #pod =cut
  
  sub merged_requirements {
    my ($self, $phases, $types) = @_;
    $phases = [qw/runtime build test/] unless defined $phases;
    $types = [qw/requires recommends/] unless defined $types;
  
    confess "merged_requirements phases argument must be an arrayref"
      unless ref $phases eq 'ARRAY';
    confess "merged_requirements types argument must be an arrayref"
      unless ref $types eq 'ARRAY';
  
    my $req = CPAN::Meta::Requirements->new;
  
    for my $phase ( @$phases ) {
      unless ($phase =~ /\Ax_/i or grep { $phase eq $_ } $self->__legal_phases) {
          confess "requested requirements for unknown phase: $phase";
      }
      for my $type ( @$types ) {
        unless ($type =~ /\Ax_/i or grep { $type eq $_ } $self->__legal_types) {
            confess "requested requirements for unknown type: $type";
        }
        $req->add_requirements( $self->requirements_for($phase, $type) );
      }
    }
  
    $req->finalize if $self->is_finalized;
  
    return $req;
  }
  
  
  #pod =method as_string_hash
  #pod
  #pod This method returns a hashref containing structures suitable for dumping into a
  #pod distmeta data structure.  It is made up of hashes and strings, only; there will
  #pod be no Prereqs, CPAN::Meta::Requirements, or C<version> objects inside it.
  #pod
  #pod =cut
  
  sub as_string_hash {
    my ($self) = @_;
  
    my %hash;
  
    for my $phase ($self->phases) {
      for my $type ($self->types_in($phase)) {
        my $req = $self->requirements_for($phase, $type);
        next unless $req->required_modules;
  
        $hash{ $phase }{ $type } = $req->as_string_hash;
      }
    }
  
    return \%hash;
  }
  
  #pod =method is_finalized
  #pod
  #pod This method returns true if the set of prereqs has been marked "finalized," and
  #pod cannot be altered.
  #pod
  #pod =cut
  
  sub is_finalized { $_[0]{finalized} }
  
  #pod =method finalize
  #pod
  #pod Calling C<finalize> on a Prereqs object will close it for further modification.
  #pod Attempting to make any changes that would actually alter the prereqs will
  #pod result in an exception being thrown.
  #pod
  #pod =cut
  
  sub finalize {
    my ($self) = @_;
  
    $self->{finalized} = 1;
  
    for my $phase (keys %{ $self->{prereqs} }) {
      $_->finalize for values %{ $self->{prereqs}{$phase} };
    }
  }
  
  #pod =method clone
  #pod
  #pod   my $cloned_prereqs = $prereqs->clone;
  #pod
  #pod This method returns a Prereqs object that is identical to the original object,
  #pod but can be altered without affecting the original object.  Finalization does
  #pod not survive cloning, meaning that you may clone a finalized set of prereqs and
  #pod then modify the clone.
  #pod
  #pod =cut
  
  sub clone {
    my ($self) = @_;
  
    my $clone = (ref $self)->new( $self->as_string_hash );
  }
  
  sub __uniq {
    my (%s, $u);
    grep { defined($_) ? !$s{$_}++ : !$u++ } @_;
  }
  
  1;
  
  # ABSTRACT: a set of distribution prerequisites by phase and type
  
  =pod
  
  =encoding UTF-8
  
  =head1 NAME
  
  CPAN::Meta::Prereqs - a set of distribution prerequisites by phase and type
  
  =head1 VERSION
  
  version 2.150010
  
  =head1 DESCRIPTION
  
  A CPAN::Meta::Prereqs object represents the prerequisites for a CPAN
  distribution or one of its optional features.  Each set of prereqs is
  organized by phase and type, as described in L<CPAN::Meta::Prereqs>.
  
  =head1 METHODS
  
  =head2 new
  
    my $prereq = CPAN::Meta::Prereqs->new( \%prereq_spec );
  
  This method returns a new set of Prereqs.  The input should look like the
  contents of the C<prereqs> field described in L<CPAN::Meta::Spec>, meaning
  something more or less like this:
  
    my $prereq = CPAN::Meta::Prereqs->new({
      runtime => {
        requires => {
          'Some::Module' => '1.234',
          ...,
        },
        ...,
      },
      ...,
    });
  
  You can also construct an empty set of prereqs with:
  
    my $prereqs = CPAN::Meta::Prereqs->new;
  
  This empty set of prereqs is useful for accumulating new prereqs before finally
  dumping the whole set into a structure or string.
  
  =head2 requirements_for
  
    my $requirements = $prereqs->requirements_for( $phase, $type );
  
  This method returns a L<CPAN::Meta::Requirements> object for the given
  phase/type combination.  If no prerequisites are registered for that
  combination, a new CPAN::Meta::Requirements object will be returned, and it may
  be added to as needed.
  
  If C<$phase> or C<$type> are undefined or otherwise invalid, an exception will
  be raised.
  
  =head2 phases
  
    my @phases = $prereqs->phases;
  
  This method returns the list of all phases currently populated in the prereqs
  object, suitable for iterating.
  
  =head2 types_in
  
    my @runtime_types = $prereqs->types_in('runtime');
  
  This method returns the list of all types currently populated in the prereqs
  object for the provided phase, suitable for iterating.
  
  =head2 with_merged_prereqs
  
    my $new_prereqs = $prereqs->with_merged_prereqs( $other_prereqs );
  
    my $new_prereqs = $prereqs->with_merged_prereqs( \@other_prereqs );
  
  This method returns a new CPAN::Meta::Prereqs objects in which all the
  other prerequisites given are merged into the current set.  This is primarily
  provided for combining a distribution's core prereqs with the prereqs of one of
  its optional features.
  
  The new prereqs object has no ties to the originals, and altering it further
  will not alter them.
  
  =head2 merged_requirements
  
      my $new_reqs = $prereqs->merged_requirements( \@phases, \@types );
      my $new_reqs = $prereqs->merged_requirements( \@phases );
      my $new_reqs = $prereqs->merged_requirements();
  
  This method joins together all requirements across a number of phases
  and types into a new L<CPAN::Meta::Requirements> object.  If arguments
  are omitted, it defaults to "runtime", "build" and "test" for phases
  and "requires" and "recommends" for types.
  
  =head2 as_string_hash
  
  This method returns a hashref containing structures suitable for dumping into a
  distmeta data structure.  It is made up of hashes and strings, only; there will
  be no Prereqs, CPAN::Meta::Requirements, or C<version> objects inside it.
  
  =head2 is_finalized
  
  This method returns true if the set of prereqs has been marked "finalized," and
  cannot be altered.
  
  =head2 finalize
  
  Calling C<finalize> on a Prereqs object will close it for further modification.
  Attempting to make any changes that would actually alter the prereqs will
  result in an exception being thrown.
  
  =head2 clone
  
    my $cloned_prereqs = $prereqs->clone;
  
  This method returns a Prereqs object that is identical to the original object,
  but can be altered without affecting the original object.  Finalization does
  not survive cloning, meaning that you may clone a finalized set of prereqs and
  then modify the clone.
  
  =head1 BUGS
  
  Please report any bugs or feature using the CPAN Request Tracker.
  Bugs can be submitted through the web interface at
  L<http://rt.cpan.org/Dist/Display.html?Queue=CPAN-Meta>
  
  When submitting a bug or request, please include a test-file or a patch to an
  existing test-file that illustrates the bug or desired feature.
  
  =head1 AUTHORS
  
  =over 4
  
  =item *
  
  David Golden <dagolden@cpan.org>
  
  =item *
  
  Ricardo Signes <rjbs@cpan.org>
  
  =item *
  
  Adam Kennedy <adamk@cpan.org>
  
  =back
  
  =head1 COPYRIGHT AND LICENSE
  
  This software is copyright (c) 2010 by David Golden, Ricardo Signes, Adam Kennedy and Contributors.
  
  This is free software; you can redistribute it and/or modify it under
  the same terms as the Perl 5 programming language system itself.
  
  =cut
  
  __END__
  
  
  # vim: ts=2 sts=2 sw=2 et :
CPAN_META_PREREQS

$fatpacked{"CPAN/Meta/Requirements.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'CPAN_META_REQUIREMENTS';
  use 5.006; # keep at v5.6 for CPAN.pm
  use strict;
  use warnings;
  package CPAN::Meta::Requirements;
  # ABSTRACT: a set of version requirements for a CPAN dist
  
  our $VERSION = '2.140';
  
  #pod =head1 SYNOPSIS
  #pod
  #pod   use CPAN::Meta::Requirements;
  #pod
  #pod   my $build_requires = CPAN::Meta::Requirements->new;
  #pod
  #pod   $build_requires->add_minimum('Library::Foo' => 1.208);
  #pod
  #pod   $build_requires->add_minimum('Library::Foo' => 2.602);
  #pod
  #pod   $build_requires->add_minimum('Module::Bar'  => 'v1.2.3');
  #pod
  #pod   $METAyml->{build_requires} = $build_requires->as_string_hash;
  #pod
  #pod =head1 DESCRIPTION
  #pod
  #pod A CPAN::Meta::Requirements object models a set of version constraints like
  #pod those specified in the F<META.yml> or F<META.json> files in CPAN distributions,
  #pod and as defined by L<CPAN::Meta::Spec>;
  #pod It can be built up by adding more and more constraints, and it will reduce them
  #pod to the simplest representation.
  #pod
  #pod Logically impossible constraints will be identified immediately by thrown
  #pod exceptions.
  #pod
  #pod =cut
  
  use Carp ();
  
  # To help ExtUtils::MakeMaker bootstrap CPAN::Meta::Requirements on perls
  # before 5.10, we fall back to the EUMM bundled compatibility version module if
  # that's the only thing available.  This shouldn't ever happen in a normal CPAN
  # install of CPAN::Meta::Requirements, as version.pm will be picked up from
  # prereqs and be available at runtime.
  
  BEGIN {
    eval "use version ()"; ## no critic
    if ( my $err = $@ ) {
      eval "use ExtUtils::MakeMaker::version" or die $err; ## no critic
    }
  }
  
  # Perl 5.10.0 didn't have "is_qv" in version.pm
  *_is_qv = version->can('is_qv') ? sub { $_[0]->is_qv } : sub { exists $_[0]->{qv} };
  
  # construct once, reuse many times
  my $V0 = version->new(0);
  
  #pod =method new
  #pod
  #pod   my $req = CPAN::Meta::Requirements->new;
  #pod
  #pod This returns a new CPAN::Meta::Requirements object.  It takes an optional
  #pod hash reference argument.  Currently, only one key is supported:
  #pod
  #pod =for :list
  #pod * C<bad_version_hook> -- if provided, when a version cannot be parsed into
  #pod   a version object, this code reference will be called with the invalid
  #pod   version string as first argument, and the module name as second
  #pod   argument.  It must return a valid version object.
  #pod
  #pod All other keys are ignored.
  #pod
  #pod =cut
  
  my @valid_options = qw( bad_version_hook );
  
  sub new {
    my ($class, $options) = @_;
    $options ||= {};
    Carp::croak "Argument to $class\->new() must be a hash reference"
      unless ref $options eq 'HASH';
    my %self = map {; $_ => $options->{$_}} @valid_options;
  
    return bless \%self => $class;
  }
  
  # from version::vpp
  sub _find_magic_vstring {
    my $value = shift;
    my $tvalue = '';
    require B;
    my $sv = B::svref_2object(\$value);
    my $magic = ref($sv) eq 'B::PVMG' ? $sv->MAGIC : undef;
    while ( $magic ) {
      if ( $magic->TYPE eq 'V' ) {
        $tvalue = $magic->PTR;
        $tvalue =~ s/^v?(.+)$/v$1/;
        last;
      }
      else {
        $magic = $magic->MOREMAGIC;
      }
    }
    return $tvalue;
  }
  
  # safe if given an unblessed reference
  sub _isa_version {
    UNIVERSAL::isa( $_[0], 'UNIVERSAL' ) && $_[0]->isa('version')
  }
  
  sub _version_object {
    my ($self, $module, $version) = @_;
  
    my ($vobj, $err);
  
    if (not defined $version or (!ref($version) && $version eq '0')) {
      return $V0;
    }
    elsif ( ref($version) eq 'version' || ( ref($version) && _isa_version($version) ) ) {
      $vobj = $version;
    }
    else {
      # hack around version::vpp not handling <3 character vstring literals
      if ( $INC{'version/vpp.pm'} || $INC{'ExtUtils/MakeMaker/version/vpp.pm'} ) {
        my $magic = _find_magic_vstring( $version );
        $version = $magic if length $magic;
      }
      # pad to 3 characters if before 5.8.1 and appears to be a v-string
      if ( $] < 5.008001 && $version !~ /\A[0-9]/ && substr($version,0,1) ne 'v' && length($version) < 3 ) {
        $version .= "\0" x (3 - length($version));
      }
      eval {
        local $SIG{__WARN__} = sub { die "Invalid version: $_[0]" };
        # avoid specific segfault on some older version.pm versions
        die "Invalid version: $version" if $version eq 'version';
        $vobj = version->new($version);
      };
      if ( my $err = $@ ) {
        my $hook = $self->{bad_version_hook};
        $vobj = eval { $hook->($version, $module) }
          if ref $hook eq 'CODE';
        unless (eval { $vobj->isa("version") }) {
          $err =~ s{ at .* line \d+.*$}{};
          die "Can't convert '$version': $err";
        }
      }
    }
  
    # ensure no leading '.'
    if ( $vobj =~ m{\A\.} ) {
      $vobj = version->new("0$vobj");
    }
  
    # ensure normal v-string form
    if ( _is_qv($vobj) ) {
      $vobj = version->new($vobj->normal);
    }
  
    return $vobj;
  }
  
  #pod =method add_minimum
  #pod
  #pod   $req->add_minimum( $module => $version );
  #pod
  #pod This adds a new minimum version requirement.  If the new requirement is
  #pod redundant to the existing specification, this has no effect.
  #pod
  #pod Minimum requirements are inclusive.  C<$version> is required, along with any
  #pod greater version number.
  #pod
  #pod This method returns the requirements object.
  #pod
  #pod =method add_maximum
  #pod
  #pod   $req->add_maximum( $module => $version );
  #pod
  #pod This adds a new maximum version requirement.  If the new requirement is
  #pod redundant to the existing specification, this has no effect.
  #pod
  #pod Maximum requirements are inclusive.  No version strictly greater than the given
  #pod version is allowed.
  #pod
  #pod This method returns the requirements object.
  #pod
  #pod =method add_exclusion
  #pod
  #pod   $req->add_exclusion( $module => $version );
  #pod
  #pod This adds a new excluded version.  For example, you might use these three
  #pod method calls:
  #pod
  #pod   $req->add_minimum( $module => '1.00' );
  #pod   $req->add_maximum( $module => '1.82' );
  #pod
  #pod   $req->add_exclusion( $module => '1.75' );
  #pod
  #pod Any version between 1.00 and 1.82 inclusive would be acceptable, except for
  #pod 1.75.
  #pod
  #pod This method returns the requirements object.
  #pod
  #pod =method exact_version
  #pod
  #pod   $req->exact_version( $module => $version );
  #pod
  #pod This sets the version required for the given module to I<exactly> the given
  #pod version.  No other version would be considered acceptable.
  #pod
  #pod This method returns the requirements object.
  #pod
  #pod =cut
  
  BEGIN {
    for my $type (qw(maximum exclusion exact_version)) {
      my $method = "with_$type";
      my $to_add = $type eq 'exact_version' ? $type : "add_$type";
  
      my $code = sub {
        my ($self, $name, $version) = @_;
  
        $version = $self->_version_object( $name, $version );
  
        $self->__modify_entry_for($name, $method, $version);
  
        return $self;
      };
  
      no strict 'refs';
      *$to_add = $code;
    }
  }
  
  # add_minimum is optimized compared to generated subs above because
  # it is called frequently and with "0" or equivalent input
  sub add_minimum {
    my ($self, $name, $version) = @_;
  
    # stringify $version so that version->new("0.00")->stringify ne "0"
    # which preserves the user's choice of "0.00" as the requirement
    if (not defined $version or "$version" eq '0') {
      return $self if $self->__entry_for($name);
      Carp::confess("can't add new requirements to finalized requirements")
        if $self->is_finalized;
  
      $self->{requirements}{ $name } =
        CPAN::Meta::Requirements::_Range::Range->with_minimum($V0, $name);
    }
    else {
      $version = $self->_version_object( $name, $version );
  
      $self->__modify_entry_for($name, 'with_minimum', $version);
    }
    return $self;
  }
  
  #pod =method add_requirements
  #pod
  #pod   $req->add_requirements( $another_req_object );
  #pod
  #pod This method adds all the requirements in the given CPAN::Meta::Requirements
  #pod object to the requirements object on which it was called.  If there are any
  #pod conflicts, an exception is thrown.
  #pod
  #pod This method returns the requirements object.
  #pod
  #pod =cut
  
  sub add_requirements {
    my ($self, $req) = @_;
  
    for my $module ($req->required_modules) {
      my $modifiers = $req->__entry_for($module)->as_modifiers;
      for my $modifier (@$modifiers) {
        my ($method, @args) = @$modifier;
        $self->$method($module => @args);
      };
    }
  
    return $self;
  }
  
  #pod =method accepts_module
  #pod
  #pod   my $bool = $req->accepts_module($module => $version);
  #pod
  #pod Given an module and version, this method returns true if the version
  #pod specification for the module accepts the provided version.  In other words,
  #pod given:
  #pod
  #pod   Module => '>= 1.00, < 2.00'
  #pod
  #pod We will accept 1.00 and 1.75 but not 0.50 or 2.00.
  #pod
  #pod For modules that do not appear in the requirements, this method will return
  #pod true.
  #pod
  #pod =cut
  
  sub accepts_module {
    my ($self, $module, $version) = @_;
  
    $version = $self->_version_object( $module, $version );
  
    return 1 unless my $range = $self->__entry_for($module);
    return $range->_accepts($version);
  }
  
  #pod =method clear_requirement
  #pod
  #pod   $req->clear_requirement( $module );
  #pod
  #pod This removes the requirement for a given module from the object.
  #pod
  #pod This method returns the requirements object.
  #pod
  #pod =cut
  
  sub clear_requirement {
    my ($self, $module) = @_;
  
    return $self unless $self->__entry_for($module);
  
    Carp::confess("can't clear requirements on finalized requirements")
      if $self->is_finalized;
  
    delete $self->{requirements}{ $module };
  
    return $self;
  }
  
  #pod =method requirements_for_module
  #pod
  #pod   $req->requirements_for_module( $module );
  #pod
  #pod This returns a string containing the version requirements for a given module in
  #pod the format described in L<CPAN::Meta::Spec> or undef if the given module has no
  #pod requirements. This should only be used for informational purposes such as error
  #pod messages and should not be interpreted or used for comparison (see
  #pod L</accepts_module> instead).
  #pod
  #pod =cut
  
  sub requirements_for_module {
    my ($self, $module) = @_;
    my $entry = $self->__entry_for($module);
    return unless $entry;
    return $entry->as_string;
  }
  
  #pod =method structured_requirements_for_module
  #pod
  #pod   $req->structured_requirements_for_module( $module );
  #pod
  #pod This returns a data structure containing the version requirements for a given
  #pod module or undef if the given module has no requirements.  This should
  #pod not be used for version checks (see L</accepts_module> instead).
  #pod
  #pod Added in version 2.134.
  #pod
  #pod =cut
  
  sub structured_requirements_for_module {
    my ($self, $module) = @_;
    my $entry = $self->__entry_for($module);
    return unless $entry;
    return $entry->as_struct;
  }
  
  #pod =method required_modules
  #pod
  #pod This method returns a list of all the modules for which requirements have been
  #pod specified.
  #pod
  #pod =cut
  
  sub required_modules { keys %{ $_[0]{requirements} } }
  
  #pod =method clone
  #pod
  #pod   $req->clone;
  #pod
  #pod This method returns a clone of the invocant.  The clone and the original object
  #pod can then be changed independent of one another.
  #pod
  #pod =cut
  
  sub clone {
    my ($self) = @_;
    my $new = (ref $self)->new;
  
    return $new->add_requirements($self);
  }
  
  sub __entry_for     { $_[0]{requirements}{ $_[1] } }
  
  sub __modify_entry_for {
    my ($self, $name, $method, $version) = @_;
  
    my $fin = $self->is_finalized;
    my $old = $self->__entry_for($name);
  
    Carp::confess("can't add new requirements to finalized requirements")
      if $fin and not $old;
  
    my $new = ($old || 'CPAN::Meta::Requirements::_Range::Range')
            ->$method($version, $name);
  
    Carp::confess("can't modify finalized requirements")
      if $fin and $old->as_string ne $new->as_string;
  
    $self->{requirements}{ $name } = $new;
  }
  
  #pod =method is_simple
  #pod
  #pod This method returns true if and only if all requirements are inclusive minimums
  #pod -- that is, if their string expression is just the version number.
  #pod
  #pod =cut
  
  sub is_simple {
    my ($self) = @_;
    for my $module ($self->required_modules) {
      # XXX: This is a complete hack, but also entirely correct.
      return if $self->__entry_for($module)->as_string =~ /\s/;
    }
  
    return 1;
  }
  
  #pod =method is_finalized
  #pod
  #pod This method returns true if the requirements have been finalized by having the
  #pod C<finalize> method called on them.
  #pod
  #pod =cut
  
  sub is_finalized { $_[0]{finalized} }
  
  #pod =method finalize
  #pod
  #pod This method marks the requirements finalized.  Subsequent attempts to change
  #pod the requirements will be fatal, I<if> they would result in a change.  If they
  #pod would not alter the requirements, they have no effect.
  #pod
  #pod If a finalized set of requirements is cloned, the cloned requirements are not
  #pod also finalized.
  #pod
  #pod =cut
  
  sub finalize { $_[0]{finalized} = 1 }
  
  #pod =method as_string_hash
  #pod
  #pod This returns a reference to a hash describing the requirements using the
  #pod strings in the L<CPAN::Meta::Spec> specification.
  #pod
  #pod For example after the following program:
  #pod
  #pod   my $req = CPAN::Meta::Requirements->new;
  #pod
  #pod   $req->add_minimum('CPAN::Meta::Requirements' => 0.102);
  #pod
  #pod   $req->add_minimum('Library::Foo' => 1.208);
  #pod
  #pod   $req->add_maximum('Library::Foo' => 2.602);
  #pod
  #pod   $req->add_minimum('Module::Bar'  => 'v1.2.3');
  #pod
  #pod   $req->add_exclusion('Module::Bar'  => 'v1.2.8');
  #pod
  #pod   $req->exact_version('Xyzzy'  => '6.01');
  #pod
  #pod   my $hashref = $req->as_string_hash;
  #pod
  #pod C<$hashref> would contain:
  #pod
  #pod   {
  #pod     'CPAN::Meta::Requirements' => '0.102',
  #pod     'Library::Foo' => '>= 1.208, <= 2.206',
  #pod     'Module::Bar'  => '>= v1.2.3, != v1.2.8',
  #pod     'Xyzzy'        => '== 6.01',
  #pod   }
  #pod
  #pod =cut
  
  sub as_string_hash {
    my ($self) = @_;
  
    my %hash = map {; $_ => $self->{requirements}{$_}->as_string }
               $self->required_modules;
  
    return \%hash;
  }
  
  #pod =method add_string_requirement
  #pod
  #pod   $req->add_string_requirement('Library::Foo' => '>= 1.208, <= 2.206');
  #pod   $req->add_string_requirement('Library::Foo' => v1.208);
  #pod
  #pod This method parses the passed in string and adds the appropriate requirement
  #pod for the given module.  A version can be a Perl "v-string".  It understands
  #pod version ranges as described in the L<CPAN::Meta::Spec/Version Ranges>. For
  #pod example:
  #pod
  #pod =over 4
  #pod
  #pod =item 1.3
  #pod
  #pod =item >= 1.3
  #pod
  #pod =item <= 1.3
  #pod
  #pod =item == 1.3
  #pod
  #pod =item != 1.3
  #pod
  #pod =item > 1.3
  #pod
  #pod =item < 1.3
  #pod
  #pod =item >= 1.3, != 1.5, <= 2.0
  #pod
  #pod A version number without an operator is equivalent to specifying a minimum
  #pod (C<E<gt>=>).  Extra whitespace is allowed.
  #pod
  #pod =back
  #pod
  #pod =cut
  
  my %methods_for_op = (
    '==' => [ qw(exact_version) ],
    '!=' => [ qw(add_exclusion) ],
    '>=' => [ qw(add_minimum)   ],
    '<=' => [ qw(add_maximum)   ],
    '>'  => [ qw(add_minimum add_exclusion) ],
    '<'  => [ qw(add_maximum add_exclusion) ],
  );
  
  sub add_string_requirement {
    my ($self, $module, $req) = @_;
  
    unless ( defined $req && length $req ) {
      $req = 0;
      $self->_blank_carp($module);
    }
  
    my $magic = _find_magic_vstring( $req );
    if (length $magic) {
      $self->add_minimum($module => $magic);
      return;
    }
  
    my @parts = split qr{\s*,\s*}, $req;
  
    for my $part (@parts) {
      my ($op, $ver) = $part =~ m{\A\s*(==|>=|>|<=|<|!=)\s*(.*)\z};
  
      if (! defined $op) {
        $self->add_minimum($module => $part);
      } else {
        Carp::confess("illegal requirement string: $req")
          unless my $methods = $methods_for_op{ $op };
  
        $self->$_($module => $ver) for @$methods;
      }
    }
  }
  
  #pod =method from_string_hash
  #pod
  #pod   my $req = CPAN::Meta::Requirements->from_string_hash( \%hash );
  #pod   my $req = CPAN::Meta::Requirements->from_string_hash( \%hash, \%opts );
  #pod
  #pod This is an alternate constructor for a CPAN::Meta::Requirements
  #pod object. It takes a hash of module names and version requirement
  #pod strings and returns a new CPAN::Meta::Requirements object. As with
  #pod add_string_requirement, a version can be a Perl "v-string". Optionally,
  #pod you can supply a hash-reference of options, exactly as with the L</new>
  #pod method.
  #pod
  #pod =cut
  
  sub _blank_carp {
    my ($self, $module) = @_;
    Carp::carp("Undefined requirement for $module treated as '0'");
  }
  
  sub from_string_hash {
    my ($class, $hash, $options) = @_;
  
    my $self = $class->new($options);
  
    for my $module (keys %$hash) {
      my $req = $hash->{$module};
      unless ( defined $req && length $req ) {
        $req = 0;
        $class->_blank_carp($module);
      }
      $self->add_string_requirement($module, $req);
    }
  
    return $self;
  }
  
  ##############################################################
  
  {
    package
      CPAN::Meta::Requirements::_Range::Exact;
    sub _new     { bless { version => $_[1] } => $_[0] }
  
    sub _accepts { return $_[0]{version} == $_[1] }
  
    sub as_string { return "== $_[0]{version}" }
  
    sub as_struct { return [ [ '==', "$_[0]{version}" ] ] }
  
    sub as_modifiers { return [ [ exact_version => $_[0]{version} ] ] }
  
    sub _reject_requirements {
      my ($self, $module, $error) = @_;
      Carp::confess("illegal requirements for $module: $error")
    }
  
    sub _clone {
      (ref $_[0])->_new( version->new( $_[0]{version} ) )
    }
  
    sub with_exact_version {
      my ($self, $version, $module) = @_;
      $module = 'module' unless defined $module;
  
      return $self->_clone if $self->_accepts($version);
  
      $self->_reject_requirements(
        $module,
        "can't be exactly $version when exact requirement is already $self->{version}",
      );
    }
  
    sub with_minimum {
      my ($self, $minimum, $module) = @_;
      $module = 'module' unless defined $module;
  
      return $self->_clone if $self->{version} >= $minimum;
      $self->_reject_requirements(
        $module,
        "minimum $minimum exceeds exact specification $self->{version}",
      );
    }
  
    sub with_maximum {
      my ($self, $maximum, $module) = @_;
      $module = 'module' unless defined $module;
  
      return $self->_clone if $self->{version} <= $maximum;
      $self->_reject_requirements(
        $module,
        "maximum $maximum below exact specification $self->{version}",
      );
    }
  
    sub with_exclusion {
      my ($self, $exclusion, $module) = @_;
      $module = 'module' unless defined $module;
  
      return $self->_clone unless $exclusion == $self->{version};
      $self->_reject_requirements(
        $module,
        "tried to exclude $exclusion, which is already exactly specified",
      );
    }
  }
  
  ##############################################################
  
  {
    package
      CPAN::Meta::Requirements::_Range::Range;
  
    sub _self { ref($_[0]) ? $_[0] : (bless { } => $_[0]) }
  
    sub _clone {
      return (bless { } => $_[0]) unless ref $_[0];
  
      my ($s) = @_;
      my %guts = (
        (exists $s->{minimum} ? (minimum => version->new($s->{minimum})) : ()),
        (exists $s->{maximum} ? (maximum => version->new($s->{maximum})) : ()),
  
        (exists $s->{exclusions}
          ? (exclusions => [ map { version->new($_) } @{ $s->{exclusions} } ])
          : ()),
      );
  
      bless \%guts => ref($s);
    }
  
    sub as_modifiers {
      my ($self) = @_;
      my @mods;
      push @mods, [ add_minimum => $self->{minimum} ] if exists $self->{minimum};
      push @mods, [ add_maximum => $self->{maximum} ] if exists $self->{maximum};
      push @mods, map {; [ add_exclusion => $_ ] } @{$self->{exclusions} || []};
      return \@mods;
    }
  
    sub as_struct {
      my ($self) = @_;
  
      return 0 if ! keys %$self;
  
      my @exclusions = @{ $self->{exclusions} || [] };
  
      my @parts;
  
      for my $tuple (
        [ qw( >= > minimum ) ],
        [ qw( <= < maximum ) ],
      ) {
        my ($op, $e_op, $k) = @$tuple;
        if (exists $self->{$k}) {
          my @new_exclusions = grep { $_ != $self->{ $k } } @exclusions;
          if (@new_exclusions == @exclusions) {
            push @parts, [ $op, "$self->{ $k }" ];
          } else {
            push @parts, [ $e_op, "$self->{ $k }" ];
            @exclusions = @new_exclusions;
          }
        }
      }
  
      push @parts, map {; [ "!=", "$_" ] } @exclusions;
  
      return \@parts;
    }
  
    sub as_string {
      my ($self) = @_;
  
      my @parts = @{ $self->as_struct };
  
      return $parts[0][1] if @parts == 1 and $parts[0][0] eq '>=';
  
      return join q{, }, map {; join q{ }, @$_ } @parts;
    }
  
    sub _reject_requirements {
      my ($self, $module, $error) = @_;
      Carp::confess("illegal requirements for $module: $error")
    }
  
    sub with_exact_version {
      my ($self, $version, $module) = @_;
      $module = 'module' unless defined $module;
      $self = $self->_clone;
  
      unless ($self->_accepts($version)) {
        $self->_reject_requirements(
          $module,
          "exact specification $version outside of range " . $self->as_string
        );
      }
  
      return CPAN::Meta::Requirements::_Range::Exact->_new($version);
    }
  
    sub _simplify {
      my ($self, $module) = @_;
  
      if (defined $self->{minimum} and defined $self->{maximum}) {
        if ($self->{minimum} == $self->{maximum}) {
          if (grep { $_ == $self->{minimum} } @{ $self->{exclusions} || [] }) {
            $self->_reject_requirements(
              $module,
              "minimum and maximum are both $self->{minimum}, which is excluded",
            );
          }
  
          return CPAN::Meta::Requirements::_Range::Exact->_new($self->{minimum})
        }
  
        if ($self->{minimum} > $self->{maximum}) {
          $self->_reject_requirements(
            $module,
            "minimum $self->{minimum} exceeds maximum $self->{maximum}",
          );
        }
      }
  
      # eliminate irrelevant exclusions
      if ($self->{exclusions}) {
        my %seen;
        @{ $self->{exclusions} } = grep {
          (! defined $self->{minimum} or $_ >= $self->{minimum})
          and
          (! defined $self->{maximum} or $_ <= $self->{maximum})
          and
          ! $seen{$_}++
        } @{ $self->{exclusions} };
      }
  
      return $self;
    }
  
    sub with_minimum {
      my ($self, $minimum, $module) = @_;
      $module = 'module' unless defined $module;
      $self = $self->_clone;
  
      if (defined (my $old_min = $self->{minimum})) {
        $self->{minimum} = (sort { $b cmp $a } ($minimum, $old_min))[0];
      } else {
        $self->{minimum} = $minimum;
      }
  
      return $self->_simplify($module);
    }
  
    sub with_maximum {
      my ($self, $maximum, $module) = @_;
      $module = 'module' unless defined $module;
      $self = $self->_clone;
  
      if (defined (my $old_max = $self->{maximum})) {
        $self->{maximum} = (sort { $a cmp $b } ($maximum, $old_max))[0];
      } else {
        $self->{maximum} = $maximum;
      }
  
      return $self->_simplify($module);
    }
  
    sub with_exclusion {
      my ($self, $exclusion, $module) = @_;
      $module = 'module' unless defined $module;
      $self = $self->_clone;
  
      push @{ $self->{exclusions} ||= [] }, $exclusion;
  
      return $self->_simplify($module);
    }
  
    sub _accepts {
      my ($self, $version) = @_;
  
      return if defined $self->{minimum} and $version < $self->{minimum};
      return if defined $self->{maximum} and $version > $self->{maximum};
      return if defined $self->{exclusions}
            and grep { $version == $_ } @{ $self->{exclusions} };
  
      return 1;
    }
  }
  
  1;
  # vim: ts=2 sts=2 sw=2 et:
  
  __END__
  
  =pod
  
  =encoding UTF-8
  
  =head1 NAME
  
  CPAN::Meta::Requirements - a set of version requirements for a CPAN dist
  
  =head1 VERSION
  
  version 2.140
  
  =head1 SYNOPSIS
  
    use CPAN::Meta::Requirements;
  
    my $build_requires = CPAN::Meta::Requirements->new;
  
    $build_requires->add_minimum('Library::Foo' => 1.208);
  
    $build_requires->add_minimum('Library::Foo' => 2.602);
  
    $build_requires->add_minimum('Module::Bar'  => 'v1.2.3');
  
    $METAyml->{build_requires} = $build_requires->as_string_hash;
  
  =head1 DESCRIPTION
  
  A CPAN::Meta::Requirements object models a set of version constraints like
  those specified in the F<META.yml> or F<META.json> files in CPAN distributions,
  and as defined by L<CPAN::Meta::Spec>;
  It can be built up by adding more and more constraints, and it will reduce them
  to the simplest representation.
  
  Logically impossible constraints will be identified immediately by thrown
  exceptions.
  
  =head1 METHODS
  
  =head2 new
  
    my $req = CPAN::Meta::Requirements->new;
  
  This returns a new CPAN::Meta::Requirements object.  It takes an optional
  hash reference argument.  Currently, only one key is supported:
  
  =over 4
  
  =item *
  
  C<bad_version_hook> -- if provided, when a version cannot be parsed into a version object, this code reference will be called with the invalid version string as first argument, and the module name as second argument.  It must return a valid version object.
  
  =back
  
  All other keys are ignored.
  
  =head2 add_minimum
  
    $req->add_minimum( $module => $version );
  
  This adds a new minimum version requirement.  If the new requirement is
  redundant to the existing specification, this has no effect.
  
  Minimum requirements are inclusive.  C<$version> is required, along with any
  greater version number.
  
  This method returns the requirements object.
  
  =head2 add_maximum
  
    $req->add_maximum( $module => $version );
  
  This adds a new maximum version requirement.  If the new requirement is
  redundant to the existing specification, this has no effect.
  
  Maximum requirements are inclusive.  No version strictly greater than the given
  version is allowed.
  
  This method returns the requirements object.
  
  =head2 add_exclusion
  
    $req->add_exclusion( $module => $version );
  
  This adds a new excluded version.  For example, you might use these three
  method calls:
  
    $req->add_minimum( $module => '1.00' );
    $req->add_maximum( $module => '1.82' );
  
    $req->add_exclusion( $module => '1.75' );
  
  Any version between 1.00 and 1.82 inclusive would be acceptable, except for
  1.75.
  
  This method returns the requirements object.
  
  =head2 exact_version
  
    $req->exact_version( $module => $version );
  
  This sets the version required for the given module to I<exactly> the given
  version.  No other version would be considered acceptable.
  
  This method returns the requirements object.
  
  =head2 add_requirements
  
    $req->add_requirements( $another_req_object );
  
  This method adds all the requirements in the given CPAN::Meta::Requirements
  object to the requirements object on which it was called.  If there are any
  conflicts, an exception is thrown.
  
  This method returns the requirements object.
  
  =head2 accepts_module
  
    my $bool = $req->accepts_module($module => $version);
  
  Given an module and version, this method returns true if the version
  specification for the module accepts the provided version.  In other words,
  given:
  
    Module => '>= 1.00, < 2.00'
  
  We will accept 1.00 and 1.75 but not 0.50 or 2.00.
  
  For modules that do not appear in the requirements, this method will return
  true.
  
  =head2 clear_requirement
  
    $req->clear_requirement( $module );
  
  This removes the requirement for a given module from the object.
  
  This method returns the requirements object.
  
  =head2 requirements_for_module
  
    $req->requirements_for_module( $module );
  
  This returns a string containing the version requirements for a given module in
  the format described in L<CPAN::Meta::Spec> or undef if the given module has no
  requirements. This should only be used for informational purposes such as error
  messages and should not be interpreted or used for comparison (see
  L</accepts_module> instead).
  
  =head2 structured_requirements_for_module
  
    $req->structured_requirements_for_module( $module );
  
  This returns a data structure containing the version requirements for a given
  module or undef if the given module has no requirements.  This should
  not be used for version checks (see L</accepts_module> instead).
  
  Added in version 2.134.
  
  =head2 required_modules
  
  This method returns a list of all the modules for which requirements have been
  specified.
  
  =head2 clone
  
    $req->clone;
  
  This method returns a clone of the invocant.  The clone and the original object
  can then be changed independent of one another.
  
  =head2 is_simple
  
  This method returns true if and only if all requirements are inclusive minimums
  -- that is, if their string expression is just the version number.
  
  =head2 is_finalized
  
  This method returns true if the requirements have been finalized by having the
  C<finalize> method called on them.
  
  =head2 finalize
  
  This method marks the requirements finalized.  Subsequent attempts to change
  the requirements will be fatal, I<if> they would result in a change.  If they
  would not alter the requirements, they have no effect.
  
  If a finalized set of requirements is cloned, the cloned requirements are not
  also finalized.
  
  =head2 as_string_hash
  
  This returns a reference to a hash describing the requirements using the
  strings in the L<CPAN::Meta::Spec> specification.
  
  For example after the following program:
  
    my $req = CPAN::Meta::Requirements->new;
  
    $req->add_minimum('CPAN::Meta::Requirements' => 0.102);
  
    $req->add_minimum('Library::Foo' => 1.208);
  
    $req->add_maximum('Library::Foo' => 2.602);
  
    $req->add_minimum('Module::Bar'  => 'v1.2.3');
  
    $req->add_exclusion('Module::Bar'  => 'v1.2.8');
  
    $req->exact_version('Xyzzy'  => '6.01');
  
    my $hashref = $req->as_string_hash;
  
  C<$hashref> would contain:
  
    {
      'CPAN::Meta::Requirements' => '0.102',
      'Library::Foo' => '>= 1.208, <= 2.206',
      'Module::Bar'  => '>= v1.2.3, != v1.2.8',
      'Xyzzy'        => '== 6.01',
    }
  
  =head2 add_string_requirement
  
    $req->add_string_requirement('Library::Foo' => '>= 1.208, <= 2.206');
    $req->add_string_requirement('Library::Foo' => v1.208);
  
  This method parses the passed in string and adds the appropriate requirement
  for the given module.  A version can be a Perl "v-string".  It understands
  version ranges as described in the L<CPAN::Meta::Spec/Version Ranges>. For
  example:
  
  =over 4
  
  =item 1.3
  
  =item >= 1.3
  
  =item <= 1.3
  
  =item == 1.3
  
  =item != 1.3
  
  =item > 1.3
  
  =item < 1.3
  
  =item >= 1.3, != 1.5, <= 2.0
  
  A version number without an operator is equivalent to specifying a minimum
  (C<E<gt>=>).  Extra whitespace is allowed.
  
  =back
  
  =head2 from_string_hash
  
    my $req = CPAN::Meta::Requirements->from_string_hash( \%hash );
    my $req = CPAN::Meta::Requirements->from_string_hash( \%hash, \%opts );
  
  This is an alternate constructor for a CPAN::Meta::Requirements
  object. It takes a hash of module names and version requirement
  strings and returns a new CPAN::Meta::Requirements object. As with
  add_string_requirement, a version can be a Perl "v-string". Optionally,
  you can supply a hash-reference of options, exactly as with the L</new>
  method.
  
  =for :stopwords cpan testmatrix url annocpan anno bugtracker rt cpants kwalitee diff irc mailto metadata placeholders metacpan
  
  =head1 SUPPORT
  
  =head2 Bugs / Feature Requests
  
  Please report any bugs or feature requests through the issue tracker
  at L<https://github.com/Perl-Toolchain-Gang/CPAN-Meta-Requirements/issues>.
  You will be notified automatically of any progress on your issue.
  
  =head2 Source Code
  
  This is open source software.  The code repository is available for
  public review and contribution under the terms of the license.
  
  L<https://github.com/Perl-Toolchain-Gang/CPAN-Meta-Requirements>
  
    git clone https://github.com/Perl-Toolchain-Gang/CPAN-Meta-Requirements.git
  
  =head1 AUTHORS
  
  =over 4
  
  =item *
  
  David Golden <dagolden@cpan.org>
  
  =item *
  
  Ricardo Signes <rjbs@cpan.org>
  
  =back
  
  =head1 CONTRIBUTORS
  
  =for stopwords Ed J Karen Etheridge Leon Timmermans robario
  
  =over 4
  
  =item *
  
  Ed J <mohawk2@users.noreply.github.com>
  
  =item *
  
  Karen Etheridge <ether@cpan.org>
  
  =item *
  
  Leon Timmermans <fawaka@gmail.com>
  
  =item *
  
  robario <webmaster@robario.com>
  
  =back
  
  =head1 COPYRIGHT AND LICENSE
  
  This software is copyright (c) 2010 by David Golden and Ricardo Signes.
  
  This is free software; you can redistribute it and/or modify it under
  the same terms as the Perl 5 programming language system itself.
  
  =cut
CPAN_META_REQUIREMENTS

$fatpacked{"CPAN/Meta/Spec.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'CPAN_META_SPEC';
  # XXX RULES FOR PATCHING THIS FILE XXX
  # Patches that fix typos or formatting are acceptable.  Patches
  # that change semantics are not acceptable without prior approval
  # by David Golden or Ricardo Signes.
  
  use 5.006;
  use strict;
  use warnings;
  package CPAN::Meta::Spec;
  
  our $VERSION = '2.150010';
  
  1;
  
  # ABSTRACT: specification for CPAN distribution metadata
  
  
  # vi:tw=72
  
  __END__
  
  =pod
  
  =encoding UTF-8
  
  =head1 NAME
  
  CPAN::Meta::Spec - specification for CPAN distribution metadata
  
  =head1 VERSION
  
  version 2.150010
  
  =head1 SYNOPSIS
  
    my $distmeta = {
      name => 'Module-Build',
      abstract => 'Build and install Perl modules',
      description =>  "Module::Build is a system for "
        . "building, testing, and installing Perl modules. "
        . "It is meant to ... blah blah blah ...",
      version  => '0.36',
      release_status => 'stable',
      author   => [
        'Ken Williams <kwilliams@cpan.org>',
        'Module-Build List <module-build@perl.org>', # additional contact
      ],
      license  => [ 'perl_5' ],
      prereqs => {
        runtime => {
          requires => {
            'perl'   => '5.006',
            'ExtUtils::Install' => '0',
            'File::Basename' => '0',
            'File::Compare'  => '0',
            'IO::File'   => '0',
          },
          recommends => {
            'Archive::Tar' => '1.00',
            'ExtUtils::Install' => '0.3',
            'ExtUtils::ParseXS' => '2.02',
          },
        },
        build => {
          requires => {
            'Test::More' => '0',
          },
        }
      },
      resources => {
        license => ['http://dev.perl.org/licenses/'],
      },
      optional_features => {
        domination => {
          description => 'Take over the world',
          prereqs     => {
            develop => { requires => { 'Genius::Evil'     => '1.234' } },
            runtime => { requires => { 'Machine::Weather' => '2.0'   } },
          },
        },
      },
      dynamic_config => 1,
      keywords => [ qw/ toolchain cpan dual-life / ],
      'meta-spec' => {
        version => '2',
        url     => 'https://metacpan.org/pod/CPAN::Meta::Spec',
      },
      generated_by => 'Module::Build version 0.36',
    };
  
  =head1 DESCRIPTION
  
  This document describes version 2 of the CPAN distribution metadata
  specification, also known as the "CPAN Meta Spec".
  
  Revisions of this specification for typo corrections and prose
  clarifications may be issued as CPAN::Meta::Spec 2.I<x>.  These
  revisions will never change semantics or add or remove specified
  behavior.
  
  Distribution metadata describe important properties of Perl
  distributions. Distribution building tools like Module::Build,
  Module::Install, ExtUtils::MakeMaker or Dist::Zilla should create a
  metadata file in accordance with this specification and include it with
  the distribution for use by automated tools that index, examine, package
  or install Perl distributions.
  
  =head1 TERMINOLOGY
  
  =over 4
  
  =item distribution
  
  This is the primary object described by the metadata. In the context of
  this document it usually refers to a collection of modules, scripts,
  and/or documents that are distributed together for other developers to
  use.  Examples of distributions are C<Class-Container>, C<libwww-perl>,
  or C<DBI>.
  
  =item module
  
  This refers to a reusable library of code contained in a single file.
  Modules usually contain one or more packages and are often referred
  to by the name of a primary package that can be mapped to the file
  name. For example, one might refer to C<File::Spec> instead of
  F<File/Spec.pm>
  
  =item package
  
  This refers to a namespace declared with the Perl C<package> statement.
  In Perl, packages often have a version number property given by the
  C<$VERSION> variable in the namespace.
  
  =item consumer
  
  This refers to code that reads a metadata file, deserializes it into a
  data structure in memory, or interprets a data structure of metadata
  elements.
  
  =item producer
  
  This refers to code that constructs a metadata data structure,
  serializes into a bytestream and/or writes it to disk.
  
  =item must, should, may, etc.
  
  These terms are interpreted as described in IETF RFC 2119.
  
  =back
  
  =head1 DATA TYPES
  
  Fields in the L</STRUCTURE> section describe data elements, each of
  which has an associated data type as described herein.  There are four
  primitive types: Boolean, String, List and Map.  Other types are
  subtypes of primitives and define compound data structures or define
  constraints on the values of a data element.
  
  =head2 Boolean
  
  A I<Boolean> is used to provide a true or false value.  It B<must> be
  represented as a defined value that is either "1" or "0" or stringifies
  to those values.
  
  =head2 String
  
  A I<String> is data element containing a non-zero length sequence of
  Unicode characters, such as an ordinary Perl scalar that is not a
  reference.
  
  =head2 List
  
  A I<List> is an ordered collection of zero or more data elements.
  Elements of a List may be of mixed types.
  
  Producers B<must> represent List elements using a data structure which
  unambiguously indicates that multiple values are possible, such as a
  reference to a Perl array (an "arrayref").
  
  Consumers expecting a List B<must> consider a String as equivalent to a
  List of length 1.
  
  =head2 Map
  
  A I<Map> is an unordered collection of zero or more data elements
  ("values"), indexed by associated String elements ("keys").  The Map's
  value elements may be of mixed types.
  
  =head2 License String
  
  A I<License String> is a subtype of String with a restricted set of
  values.  Valid values are described in detail in the description of
  the L</license> field.
  
  =head2 URL
  
  I<URL> is a subtype of String containing a Uniform Resource Locator or
  Identifier.  [ This type is called URL and not URI for historical reasons. ]
  
  =head2 Version
  
  A I<Version> is a subtype of String containing a value that describes
  the version number of packages or distributions.  Restrictions on format
  are described in detail in the L</Version Formats> section.
  
  =head2 Version Range
  
  The I<Version Range> type is a subtype of String.  It describes a range
  of Versions that may be present or installed to fulfill prerequisites.
  It is specified in detail in the L</Version Ranges> section.
  
  =head1 STRUCTURE
  
  The metadata structure is a data element of type Map.  This section
  describes valid keys within the Map.
  
  Any keys not described in this specification document (whether top-level
  or within compound data structures described herein) are considered
  I<custom keys> and B<must> begin with an "x" or "X" and be followed by an
  underscore; i.e. they must match the pattern: C<< qr{\Ax_}i >>.  If a
  custom key refers to a compound data structure, subkeys within it do not
  need an "x_" or "X_" prefix.
  
  Consumers of metadata may ignore any or all custom keys.  All other keys
  not described herein are invalid and should be ignored by consumers.
  Producers must not generate or output invalid keys.
  
  For each key, an example is provided followed by a description.  The
  description begins with the version of spec in which the key was added
  or in which the definition was modified, whether the key is I<required>
  or I<optional> and the data type of the corresponding data element.
  These items are in parentheses, brackets and braces, respectively.
  
  If a data type is a Map or Map subtype, valid subkeys will be described
  as well.
  
  Some fields are marked I<Deprecated>.  These are shown for historical
  context and must not be produced in or consumed from any metadata structure
  of version 2 or higher.
  
  =head2 REQUIRED FIELDS
  
  =head3 abstract
  
  Example:
  
    abstract => 'Build and install Perl modules'
  
  (Spec 1.2) [required] {String}
  
  This is a short description of the purpose of the distribution.
  
  =head3 author
  
  Example:
  
    author => [ 'Ken Williams <kwilliams@cpan.org>' ]
  
  (Spec 1.2) [required] {List of one or more Strings}
  
  This List indicates the person(s) to contact concerning the
  distribution. The preferred form of the contact string is:
  
    contact-name <email-address>
  
  This field provides a general contact list independent of other
  structured fields provided within the L</resources> field, such as
  C<bugtracker>.  The addressee(s) can be contacted for any purpose
  including but not limited to (security) problems with the distribution,
  questions about the distribution or bugs in the distribution.
  
  A distribution's original author is usually the contact listed within
  this field.  Co-maintainers, successor maintainers or mailing lists
  devoted to the distribution may also be listed in addition to or instead
  of the original author.
  
  =head3 dynamic_config
  
  Example:
  
    dynamic_config => 1
  
  (Spec 2) [required] {Boolean}
  
  A boolean flag indicating whether a F<Build.PL> or F<Makefile.PL> (or
  similar) must be executed to determine prerequisites.
  
  This field should be set to a true value if the distribution performs
  some dynamic configuration (asking questions, sensing the environment,
  etc.) as part of its configuration.  This field should be set to a false
  value to indicate that prerequisites included in metadata may be
  considered final and valid for static analysis.
  
  Note: when this field is true, post-configuration prerequisites are not
  guaranteed to bear any relation whatsoever to those stated in the metadata,
  and relying on them doing so is an error. See also
  L</Prerequisites for dynamically configured distributions> in the implementors'
  notes.
  
  This field explicitly B<does not> indicate whether installation may be
  safely performed without using a Makefile or Build file, as there may be
  special files to install or custom installation targets (e.g. for
  dual-life modules that exist on CPAN as well as in the Perl core).  This
  field only defines whether or not prerequisites are exactly as given in the
  metadata.
  
  =head3 generated_by
  
  Example:
  
    generated_by => 'Module::Build version 0.36'
  
  (Spec 1.0) [required] {String}
  
  This field indicates the tool that was used to create this metadata.
  There are no defined semantics for this field, but it is traditional to
  use a string in the form "Generating::Package version 1.23" or the
  author's name, if the file was generated by hand.
  
  =head3 license
  
  Example:
  
    license => [ 'perl_5' ]
  
    license => [ 'apache_2_0', 'mozilla_1_0' ]
  
  (Spec 2) [required] {List of one or more License Strings}
  
  One or more licenses that apply to some or all of the files in the
  distribution.  If multiple licenses are listed, the distribution
  documentation should be consulted to clarify the interpretation of
  multiple licenses.
  
  The following list of license strings are valid:
  
   string          description
   -------------   -----------------------------------------------
   agpl_3          GNU Affero General Public License, Version 3
   apache_1_1      Apache Software License, Version 1.1
   apache_2_0      Apache License, Version 2.0
   artistic_1      Artistic License, (Version 1)
   artistic_2      Artistic License, Version 2.0
   bsd             BSD License (three-clause)
   freebsd         FreeBSD License (two-clause)
   gfdl_1_2        GNU Free Documentation License, Version 1.2
   gfdl_1_3        GNU Free Documentation License, Version 1.3
   gpl_1           GNU General Public License, Version 1
   gpl_2           GNU General Public License, Version 2
   gpl_3           GNU General Public License, Version 3
   lgpl_2_1        GNU Lesser General Public License, Version 2.1
   lgpl_3_0        GNU Lesser General Public License, Version 3.0
   mit             MIT (aka X11) License
   mozilla_1_0     Mozilla Public License, Version 1.0
   mozilla_1_1     Mozilla Public License, Version 1.1
   openssl         OpenSSL License
   perl_5          The Perl 5 License (Artistic 1 & GPL 1 or later)
   qpl_1_0         Q Public License, Version 1.0
   ssleay          Original SSLeay License
   sun             Sun Internet Standards Source License (SISSL)
   zlib            zlib License
  
  The following license strings are also valid and indicate other
  licensing not described above:
  
   string          description
   -------------   -----------------------------------------------
   open_source     Other Open Source Initiative (OSI) approved license
   restricted      Requires special permission from copyright holder
   unrestricted    Not an OSI approved license, but not restricted
   unknown         License not provided in metadata
  
  All other strings are invalid in the license field.
  
  =head3 meta-spec
  
  Example:
  
    'meta-spec' => {
      version => '2',
      url     => 'http://search.cpan.org/perldoc?CPAN::Meta::Spec',
    }
  
  (Spec 1.2) [required] {Map}
  
  This field indicates the version of the CPAN Meta Spec that should be
  used to interpret the metadata.  Consumers must check this key as soon
  as possible and abort further metadata processing if the meta-spec
  version is not supported by the consumer.
  
  The following keys are valid, but only C<version> is required.
  
  =over
  
  =item version
  
  This subkey gives the integer I<Version> of the CPAN Meta Spec against
  which the document was generated.
  
  =item url
  
  This is a I<URL> of the metadata specification document corresponding to
  the given version.  This is strictly for human-consumption and should
  not impact the interpretation of the document.
  
  For the version 2 spec, either of these are recommended:
  
  =over 4
  
  =item *
  
  C<https://metacpan.org/pod/CPAN::Meta::Spec>
  
  =item *
  
  C<http://search.cpan.org/perldoc?CPAN::Meta::Spec>
  
  =back
  
  =back
  
  =head3 name
  
  Example:
  
    name => 'Module-Build'
  
  (Spec 1.0) [required] {String}
  
  This field is the name of the distribution.  This is often created by
  taking the "main package" in the distribution and changing C<::> to
  C<->, but the name may be completely unrelated to the packages within
  the distribution.  For example, L<LWP::UserAgent> is distributed as part
  of the distribution name "libwww-perl".
  
  =head3 release_status
  
  Example:
  
    release_status => 'stable'
  
  (Spec 2) [required] {String}
  
  This field provides the  release status of this distribution.  If the
  C<version> field contains an underscore character, then
  C<release_status> B<must not> be "stable."
  
  The C<release_status> field B<must> have one of the following values:
  
  =over
  
  =item stable
  
  This indicates an ordinary, "final" release that should be indexed by PAUSE
  or other indexers.
  
  =item testing
  
  This indicates a "beta" release that is substantially complete, but has an
  elevated risk of bugs and requires additional testing.  The distribution
  should not be installed over a stable release without an explicit request
  or other confirmation from a user.  This release status may also be used
  for "release candidate" versions of a distribution.
  
  =item unstable
  
  This indicates an "alpha" release that is under active development, but has
  been released for early feedback or testing and may be missing features or
  may have serious bugs.  The distribution should not be installed over a
  stable release without an explicit request or other confirmation from a
  user.
  
  =back
  
  Consumers B<may> use this field to determine how to index the
  distribution for CPAN or other repositories in addition to or in
  replacement of heuristics based on version number or file name.
  
  =head3 version
  
  Example:
  
    version => '0.36'
  
  (Spec 1.0) [required] {Version}
  
  This field gives the version of the distribution to which the metadata
  structure refers.
  
  =head2 OPTIONAL FIELDS
  
  =head3 description
  
  Example:
  
      description =>  "Module::Build is a system for "
        . "building, testing, and installing Perl modules. "
        . "It is meant to ... blah blah blah ...",
  
  (Spec 2) [optional] {String}
  
  A longer, more complete description of the purpose or intended use of
  the distribution than the one provided by the C<abstract> key.
  
  =head3 keywords
  
  Example:
  
    keywords => [ qw/ toolchain cpan dual-life / ]
  
  (Spec 1.1) [optional] {List of zero or more Strings}
  
  A List of keywords that describe this distribution.  Keywords
  B<must not> include whitespace.
  
  =head3 no_index
  
  Example:
  
    no_index => {
      file      => [ 'My/Module.pm' ],
      directory => [ 'My/Private' ],
      package   => [ 'My::Module::Secret' ],
      namespace => [ 'My::Module::Sample' ],
    }
  
  (Spec 1.2) [optional] {Map}
  
  This Map describes any files, directories, packages, and namespaces that
  are private to the packaging or implementation of the distribution and
  should be ignored by indexing or search tools. Note that this is a list of
  exclusions, and the spec does not define what to I<include> - see
  L</Indexing distributions a la PAUSE> in the implementors notes for more
  information.
  
  Valid subkeys are as follows:
  
  =over
  
  =item file
  
  A I<List> of relative paths to files.  Paths B<must be> specified with
  unix conventions.
  
  =item directory
  
  A I<List> of relative paths to directories.  Paths B<must be> specified
  with unix conventions.
  
  [ Note: previous editions of the spec had C<dir> instead of C<directory> ]
  
  =item package
  
  A I<List> of package names.
  
  =item namespace
  
  A I<List> of package namespaces, where anything below the namespace
  must be ignored, but I<not> the namespace itself.
  
  In the example above for C<no_index>, C<My::Module::Sample::Foo> would
  be ignored, but C<My::Module::Sample> would not.
  
  =back
  
  =head3 optional_features
  
  Example:
  
    optional_features => {
      sqlite => {
        description => 'Provides SQLite support',
        prereqs => {
          runtime => {
            requires => {
              'DBD::SQLite' => '1.25'
            }
          }
        }
      }
    }
  
  (Spec 2) [optional] {Map}
  
  This Map describes optional features with incremental prerequisites.
  Each key of the C<optional_features> Map is a String used to identify
  the feature and each value is a Map with additional information about
  the feature.  Valid subkeys include:
  
  =over
  
  =item description
  
  This is a String describing the feature.  Every optional feature
  should provide a description
  
  =item prereqs
  
  This entry is required and has the same structure as that of the
  C<L</prereqs>> key.  It provides a list of package requirements
  that must be satisfied for the feature to be supported or enabled.
  
  There is one crucial restriction:  the prereqs of an optional feature
  B<must not> include C<configure> phase prereqs.
  
  =back
  
  Consumers B<must not> include optional features as prerequisites without
  explicit instruction from users (whether via interactive prompting,
  a function parameter or a configuration value, etc. ).
  
  If an optional feature is used by a consumer to add additional
  prerequisites, the consumer should merge the optional feature
  prerequisites into those given by the C<prereqs> key using the same
  semantics.  See L</Merging and Resolving Prerequisites> for details on
  merging prerequisites.
  
  I<Suggestion for disuse:> Because there is currently no way for a
  distribution to specify a dependency on an optional feature of another
  dependency, the use of C<optional_feature> is discouraged.  Instead,
  create a separate, installable distribution that ensures the desired
  feature is available.  For example, if C<Foo::Bar> has a C<Baz> feature,
  release a separate C<Foo-Bar-Baz> distribution that satisfies
  requirements for the feature.
  
  =head3 prereqs
  
  Example:
  
    prereqs => {
      runtime => {
        requires => {
          'perl'          => '5.006',
          'File::Spec'    => '0.86',
          'JSON'          => '2.16',
        },
        recommends => {
          'JSON::XS'      => '2.26',
        },
        suggests => {
          'Archive::Tar'  => '0',
        },
      },
      build => {
        requires => {
          'Alien::SDL'    => '1.00',
        },
      },
      test => {
        recommends => {
          'Test::Deep'    => '0.10',
        },
      }
    }
  
  (Spec 2) [optional] {Map}
  
  This is a Map that describes all the prerequisites of the distribution.
  The keys are phases of activity, such as C<configure>, C<build>, C<test>
  or C<runtime>.  Values are Maps in which the keys name the type of
  prerequisite relationship such as C<requires>, C<recommends>, or
  C<suggests> and the value provides a set of prerequisite relations.  The
  set of relations B<must> be specified as a Map of package names to
  version ranges.
  
  The full definition for this field is given in the L</Prereq Spec>
  section.
  
  =head3 provides
  
  Example:
  
    provides => {
      'Foo::Bar' => {
        file    => 'lib/Foo/Bar.pm',
        version => '0.27_02',
      },
      'Foo::Bar::Blah' => {
        file    => 'lib/Foo/Bar/Blah.pm',
      },
      'Foo::Bar::Baz' => {
        file    => 'lib/Foo/Bar/Baz.pm',
        version => '0.3',
      },
    }
  
  (Spec 1.2) [optional] {Map}
  
  This describes all packages provided by this distribution.  This
  information is used by distribution and automation mechanisms like
  PAUSE, CPAN, metacpan.org and search.cpan.org to build indexes saying in
  which distribution various packages can be found.
  
  The keys of C<provides> are package names that can be found within
  the distribution.  If a package name key is provided, it must
  have a Map with the following valid subkeys:
  
  =over
  
  =item file
  
  This field is required.  It must contain a Unix-style relative file path
  from the root of the distribution directory to a file that contains or
  generates the package.  It may be given as C<META.yml> or C<META.json>
  to claim a package for indexing without needing a C<*.pm>.
  
  =item version
  
  If it exists, this field must contains a I<Version> String for the
  package.  If the package does not have a C<$VERSION>, this field must
  be omitted.
  
  =back
  
  =head3 resources
  
  Example:
  
    resources => {
      license     => [ 'http://dev.perl.org/licenses/' ],
      homepage    => 'http://sourceforge.net/projects/module-build',
      bugtracker  => {
        web    => 'http://rt.cpan.org/Public/Dist/Display.html?Name=CPAN-Meta',
        mailto => 'meta-bugs@example.com',
      },
      repository  => {
        url  => 'git://github.com/dagolden/cpan-meta.git',
        web  => 'http://github.com/dagolden/cpan-meta',
        type => 'git',
      },
      x_twitter   => 'http://twitter.com/cpan_linked/',
    }
  
  (Spec 2) [optional] {Map}
  
  This field describes resources related to this distribution.
  
  Valid subkeys include:
  
  =over
  
  =item homepage
  
  The official home of this project on the web.
  
  =item license
  
  A List of I<URL>'s that relate to this distribution's license.  As with the
  top-level C<license> field, distribution documentation should be consulted
  to clarify the interpretation of multiple licenses provided here.
  
  =item bugtracker
  
  This entry describes the bug tracking system for this distribution.  It
  is a Map with the following valid keys:
  
    web    - a URL pointing to a web front-end for the bug tracker
    mailto - an email address to which bugs can be sent
  
  =item repository
  
  This entry describes the source control repository for this distribution.  It
  is a Map with the following valid keys:
  
    url  - a URL pointing to the repository itself
    web  - a URL pointing to a web front-end for the repository
    type - a lowercase string indicating the VCS used
  
  Because a url like C<http://myrepo.example.com/> is ambiguous as to
  type, producers should provide a C<type> whenever a C<url> key is given.
  The C<type> field should be the name of the most common program used
  to work with the repository, e.g. C<git>, C<svn>, C<cvs>, C<darcs>,
  C<bzr> or C<hg>.
  
  =back
  
  =head2 DEPRECATED FIELDS
  
  =head3 build_requires
  
  I<(Deprecated in Spec 2)> [optional] {String}
  
  Replaced by C<prereqs>
  
  =head3 configure_requires
  
  I<(Deprecated in Spec 2)> [optional] {String}
  
  Replaced by C<prereqs>
  
  =head3 conflicts
  
  I<(Deprecated in Spec 2)> [optional] {String}
  
  Replaced by C<prereqs>
  
  =head3 distribution_type
  
  I<(Deprecated in Spec 2)> [optional] {String}
  
  This field indicated 'module' or 'script' but was considered
  meaningless, since many distributions are hybrids of several kinds of
  things.
  
  =head3 license_uri
  
  I<(Deprecated in Spec 1.2)> [optional] {URL}
  
  Replaced by C<license> in C<resources>
  
  =head3 private
  
  I<(Deprecated in Spec 1.2)> [optional] {Map}
  
  This field has been renamed to L</"no_index">.
  
  =head3 recommends
  
  I<(Deprecated in Spec 2)> [optional] {String}
  
  Replaced by C<prereqs>
  
  =head3 requires
  
  I<(Deprecated in Spec 2)> [optional] {String}
  
  Replaced by C<prereqs>
  
  =head1 VERSION NUMBERS
  
  =head2 Version Formats
  
  This section defines the Version type, used by several fields in the
  CPAN Meta Spec.
  
  Version numbers must be treated as strings, not numbers.  For
  example, C<1.200> B<must not> be serialized as C<1.2>.  Version
  comparison should be delegated to the Perl L<version> module, version
  0.80 or newer.
  
  Unless otherwise specified, version numbers B<must> appear in one of two
  formats:
  
  =over
  
  =item Decimal versions
  
  Decimal versions are regular "decimal numbers", with some limitations.
  They B<must> be non-negative and B<must> begin and end with a digit.  A
  single underscore B<may> be included, but B<must> be between two digits.
  They B<must not> use exponential notation ("1.23e-2").
  
     version => '1.234'       # OK
     version => '1.23_04'     # OK
  
     version => '1.23_04_05'  # Illegal
     version => '1.'          # Illegal
     version => '.1'          # Illegal
  
  =item Dotted-integer versions
  
  Dotted-integer (also known as dotted-decimal) versions consist of
  positive integers separated by full stop characters (i.e. "dots",
  "periods" or "decimal points").  This are equivalent in format to Perl
  "v-strings", with some additional restrictions on form.  They must be
  given in "normal" form, which has a leading "v" character and at least
  three integer components.  To retain a one-to-one mapping with decimal
  versions, all components after the first B<should> be restricted to the
  range 0 to 999.  The final component B<may> be separated by an
  underscore character instead of a period.
  
     version => 'v1.2.3'      # OK
     version => 'v1.2_3'      # OK
     version => 'v1.2.3.4'    # OK
     version => 'v1.2.3_4'    # OK
     version => 'v2009.10.31' # OK
  
     version => 'v1.2'          # Illegal
     version => '1.2.3'         # Illegal
     version => 'v1.2_3_4'      # Illegal
     version => 'v1.2009.10.31' # Not recommended
  
  =back
  
  =head2 Version Ranges
  
  Some fields (prereq, optional_features) indicate the particular
  version(s) of some other module that may be required as a prerequisite.
  This section details the Version Range type used to provide this
  information.
  
  The simplest format for a Version Range is just the version
  number itself, e.g. C<2.4>.  This means that B<at least> version 2.4
  must be present.  To indicate that B<any> version of a prerequisite is
  okay, even if the prerequisite doesn't define a version at all, use
  the version C<0>.
  
  Alternatively, a version range B<may> use the operators E<lt> (less than),
  E<lt>= (less than or equal), E<gt> (greater than), E<gt>= (greater than
  or equal), == (equal), and != (not equal).  For example, the
  specification C<E<lt> 2.0> means that any version of the prerequisite
  less than 2.0 is suitable.
  
  For more complicated situations, version specifications B<may> be AND-ed
  together using commas.  The specification C<E<gt>= 1.2, != 1.5, E<lt>
  2.0> indicates a version that must be B<at least> 1.2, B<less than> 2.0,
  and B<not equal to> 1.5.
  
  =head1 PREREQUISITES
  
  =head2 Prereq Spec
  
  The C<prereqs> key in the top-level metadata and within
  C<optional_features> define the relationship between a distribution and
  other packages.  The prereq spec structure is a hierarchical data
  structure which divides prerequisites into I<Phases> of activity in the
  installation process and I<Relationships> that indicate how
  prerequisites should be resolved.
  
  For example, to specify that C<Data::Dumper> is C<required> during the
  C<test> phase, this entry would appear in the distribution metadata:
  
    prereqs => {
      test => {
        requires => {
          'Data::Dumper' => '2.00'
        }
      }
    }
  
  =head3 Phases
  
  Requirements for regular use must be listed in the C<runtime> phase.
  Other requirements should be listed in the earliest stage in which they
  are required and consumers must accumulate and satisfy requirements
  across phases before executing the activity. For example, C<build>
  requirements must also be available during the C<test> phase.
  
    before action       requirements that must be met
    ----------------    --------------------------------
    perl Build.PL       configure
    perl Makefile.PL
  
    make                configure, runtime, build
    Build
  
    make test           configure, runtime, build, test
    Build test
  
  Consumers that install the distribution must ensure that
  I<runtime> requirements are also installed and may install
  dependencies from other phases.
  
    after action        requirements that must be met
    ----------------    --------------------------------
    make install        runtime
    Build install
  
  =over
  
  =item configure
  
  The configure phase occurs before any dynamic configuration has been
  attempted.  Libraries required by the configure phase B<must> be
  available for use before the distribution building tool has been
  executed.
  
  =item build
  
  The build phase is when the distribution's source code is compiled (if
  necessary) and otherwise made ready for installation.
  
  =item test
  
  The test phase is when the distribution's automated test suite is run.
  Any library that is needed only for testing and not for subsequent use
  should be listed here.
  
  =item runtime
  
  The runtime phase refers not only to when the distribution's contents
  are installed, but also to its continued use.  Any library that is a
  prerequisite for regular use of this distribution should be indicated
  here.
  
  =item develop
  
  The develop phase's prereqs are libraries needed to work on the
  distribution's source code as its author does.  These tools might be
  needed to build a release tarball, to run author-only tests, or to
  perform other tasks related to developing new versions of the
  distribution.
  
  =back
  
  =head3 Relationships
  
  =over
  
  =item requires
  
  These dependencies B<must> be installed for proper completion of the
  phase.
  
  =item recommends
  
  Recommended dependencies are I<strongly> encouraged and should be
  satisfied except in resource constrained environments.
  
  =item suggests
  
  These dependencies are optional, but are suggested for enhanced operation
  of the described distribution.
  
  =item conflicts
  
  These libraries cannot be installed when the phase is in operation.
  This is a very rare situation, and the C<conflicts> relationship should
  be used with great caution, or not at all.
  
  =back
  
  =head2 Merging and Resolving Prerequisites
  
  Whenever metadata consumers merge prerequisites, either from different
  phases or from C<optional_features>, they should merged in a way which
  preserves the intended semantics of the prerequisite structure.  Generally,
  this means concatenating the version specifications using commas, as
  described in the L<Version Ranges> section.
  
  Another subtle error that can occur in resolving prerequisites comes from
  the way that modules in prerequisites are indexed to distribution files on
  CPAN.  When a module is deleted from a distribution, prerequisites calling
  for that module could indicate an older distribution should be installed,
  potentially overwriting files from a newer distribution.
  
  For example, as of Oct 31, 2009, the CPAN index file contained these
  module-distribution mappings:
  
    Class::MOP                   0.94  D/DR/DROLSKY/Class-MOP-0.94.tar.gz
    Class::MOP::Class            0.94  D/DR/DROLSKY/Class-MOP-0.94.tar.gz
    Class::MOP::Class::Immutable 0.04  S/ST/STEVAN/Class-MOP-0.36.tar.gz
  
  Consider the case where "Class::MOP" 0.94 is installed.  If a
  distribution specified "Class::MOP::Class::Immutable" as a prerequisite,
  it could result in Class-MOP-0.36.tar.gz being installed, overwriting
  any files from Class-MOP-0.94.tar.gz.
  
  Consumers of metadata B<should> test whether prerequisites would result
  in installed module files being "downgraded" to an older version and
  B<may> warn users or ignore the prerequisite that would cause such a
  result.
  
  =head1 SERIALIZATION
  
  Distribution metadata should be serialized (as a hashref) as
  JSON-encoded data and packaged with distributions as the file
  F<META.json>.
  
  In the past, the distribution metadata structure had been packed with
  distributions as F<META.yml>, a file in the YAML Tiny format (for which,
  see L<YAML::Tiny>).  Tools that consume distribution metadata from disk
  should be capable of loading F<META.yml>, but should prefer F<META.json>
  if both are found.
  
  =head1 NOTES FOR IMPLEMENTORS
  
  =head2 Extracting Version Numbers from Perl Modules
  
  To get the version number from a Perl module, consumers should use the
  C<< MM->parse_version($file) >> method provided by
  L<ExtUtils::MakeMaker> or L<Module::Metadata>.  For example, for the
  module given by C<$mod>, the version may be retrieved in one of the
  following ways:
  
    # via ExtUtils::MakeMaker
    my $file = MM->_installed_file_for_module($mod);
    my $version = MM->parse_version($file)
  
  The private C<_installed_file_for_module> method may be replaced with
  other methods for locating a module in C<@INC>.
  
    # via Module::Metadata
    my $info = Module::Metadata->new_from_module($mod);
    my $version = $info->version;
  
  If only a filename is available, the following approach may be used:
  
    # via Module::Build
    my $info = Module::Metadata->new_from_file($file);
    my $version = $info->version;
  
  =head2 Comparing Version Numbers
  
  The L<version> module provides the most reliable way to compare version
  numbers in all the various ways they might be provided or might exist
  within modules.  Given two strings containing version numbers, C<$v1> and
  C<$v2>, they should be converted to C<version> objects before using
  ordinary comparison operators.  For example:
  
    use version;
    if ( version->new($v1) <=> version->new($v2) ) {
      print "Versions are not equal\n";
    }
  
  If the only comparison needed is whether an installed module is of a
  sufficiently high version, a direct test may be done using the string
  form of C<eval> and the C<use> function.  For example, for module C<$mod>
  and version prerequisite C<$prereq>:
  
    if ( eval "use $mod $prereq (); 1" ) {
      print "Module $mod version is OK.\n";
    }
  
  If the values of C<$mod> and C<$prereq> have not been scrubbed, however,
  this presents security implications.
  
  =head2 Prerequisites for dynamically configured distributions
  
  When C<dynamic_config> is true, it is an error to presume that the
  prerequisites given in distribution metadata will have any relationship
  whatsoever to the actual prerequisites of the distribution.
  
  In practice, however, one can generally expect such prerequisites to be
  one of two things:
  
  =over 4
  
  =item *
  
  The minimum prerequisites for the distribution, to which dynamic configuration will only add items
  
  =item *
  
  Whatever the distribution configured with on the releaser's machine at release time
  
  =back
  
  The second case often turns out to have identical results to the first case,
  albeit only by accident.
  
  As such, consumers may use this data for informational analysis, but
  presenting it to the user as canonical or relying on it as such is
  invariably the height of folly.
  
  =head2 Indexing distributions a la PAUSE
  
  While no_index tells you what must be ignored when indexing, this spec holds
  no opinion on how you should get your initial candidate list of things to
  possibly index. For "normal" distributions you might consider simply indexing
  the contents of lib/, but there are many fascinating oddities on CPAN and
  many dists from the days when it was normal to put the main .pm file in the
  root of the distribution archive - so PAUSE currently indexes all .pm and .PL
  files that are not either (a) specifically excluded by no_index (b) in
  C<inc>, C<xt>, or C<t> directories, or common 'mistake' directories such as
  C<perl5>.
  
  Or: If you're trying to be PAUSE-like, make sure you skip C<inc>, C<xt> and
  C<t> as well as anything marked as no_index.
  
  Also remember: If the META file contains a provides field, you shouldn't be
  indexing anything in the first place - just use that.
  
  =head1 SEE ALSO
  
  =over 4
  
  =item *
  
  CPAN, L<http://www.cpan.org/>
  
  =item *
  
  JSON, L<http://json.org/>
  
  =item *
  
  YAML, L<http://www.yaml.org/>
  
  =item *
  
  L<CPAN>
  
  =item *
  
  L<CPANPLUS>
  
  =item *
  
  L<ExtUtils::MakeMaker>
  
  =item *
  
  L<Module::Build>
  
  =item *
  
  L<Module::Install>
  
  =item *
  
  L<CPAN::Meta::History::Meta_1_4>
  
  =back
  
  =head1 HISTORY
  
  Ken Williams wrote the original CPAN Meta Spec (also known as the
  "META.yml spec") in 2003 and maintained it through several revisions
  with input from various members of the community.  In 2005, Randy
  Sims redrafted it from HTML to POD for the version 1.2 release.  Ken
  continued to maintain the spec through version 1.4.
  
  In late 2009, David Golden organized the version 2 proposal review
  process.  David and Ricardo Signes drafted the final version 2 spec
  in April 2010 based on the version 1.4 spec and patches contributed
  during the proposal process.
  
  =head1 AUTHORS
  
  =over 4
  
  =item *
  
  David Golden <dagolden@cpan.org>
  
  =item *
  
  Ricardo Signes <rjbs@cpan.org>
  
  =item *
  
  Adam Kennedy <adamk@cpan.org>
  
  =back
  
  =head1 COPYRIGHT AND LICENSE
  
  This software is copyright (c) 2010 by David Golden, Ricardo Signes, Adam Kennedy and Contributors.
  
  This is free software; you can redistribute it and/or modify it under
  the same terms as the Perl 5 programming language system itself.
  
  =cut
CPAN_META_SPEC

$fatpacked{"CPAN/Meta/Validator.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'CPAN_META_VALIDATOR';
  use 5.006;
  use strict;
  use warnings;
  package CPAN::Meta::Validator;
  
  our $VERSION = '2.150010';
  
  #pod =head1 SYNOPSIS
  #pod
  #pod   my $struct = decode_json_file('META.json');
  #pod
  #pod   my $cmv = CPAN::Meta::Validator->new( $struct );
  #pod
  #pod   unless ( $cmv->is_valid ) {
  #pod     my $msg = "Invalid META structure.  Errors found:\n";
  #pod     $msg .= join( "\n", $cmv->errors );
  #pod     die $msg;
  #pod   }
  #pod
  #pod =head1 DESCRIPTION
  #pod
  #pod This module validates a CPAN Meta structure against the version of the
  #pod the specification claimed in the C<meta-spec> field of the structure.
  #pod
  #pod =cut
  
  #--------------------------------------------------------------------------#
  # This code copied and adapted from Test::CPAN::Meta
  # by Barbie, <barbie@cpan.org> for Miss Barbell Productions,
  # L<http://www.missbarbell.co.uk>
  #--------------------------------------------------------------------------#
  
  #--------------------------------------------------------------------------#
  # Specification Definitions
  #--------------------------------------------------------------------------#
  
  my %known_specs = (
      '1.4' => 'http://module-build.sourceforge.net/META-spec-v1.4.html',
      '1.3' => 'http://module-build.sourceforge.net/META-spec-v1.3.html',
      '1.2' => 'http://module-build.sourceforge.net/META-spec-v1.2.html',
      '1.1' => 'http://module-build.sourceforge.net/META-spec-v1.1.html',
      '1.0' => 'http://module-build.sourceforge.net/META-spec-v1.0.html'
  );
  my %known_urls = map {$known_specs{$_} => $_} keys %known_specs;
  
  my $module_map1 = { 'map' => { ':key' => { name => \&module, value => \&exversion } } };
  
  my $module_map2 = { 'map' => { ':key' => { name => \&module, value => \&version   } } };
  
  my $no_index_2 = {
      'map'       => { file       => { list => { value => \&string } },
                       directory  => { list => { value => \&string } },
                       'package'  => { list => { value => \&string } },
                       namespace  => { list => { value => \&string } },
                      ':key'      => { name => \&custom_2, value => \&anything },
      }
  };
  
  my $no_index_1_3 = {
      'map'       => { file       => { list => { value => \&string } },
                       directory  => { list => { value => \&string } },
                       'package'  => { list => { value => \&string } },
                       namespace  => { list => { value => \&string } },
                       ':key'     => { name => \&string, value => \&anything },
      }
  };
  
  my $no_index_1_2 = {
      'map'       => { file       => { list => { value => \&string } },
                       dir        => { list => { value => \&string } },
                       'package'  => { list => { value => \&string } },
                       namespace  => { list => { value => \&string } },
                       ':key'     => { name => \&string, value => \&anything },
      }
  };
  
  my $no_index_1_1 = {
      'map'       => { ':key'     => { name => \&string, list => { value => \&string } },
      }
  };
  
  my $prereq_map = {
    map => {
      ':key' => {
        name => \&phase,
        'map' => {
          ':key'  => {
            name => \&relation,
            %$module_map1,
          },
        },
      }
    },
  };
  
  my %definitions = (
    '2' => {
      # REQUIRED
      'abstract'            => { mandatory => 1, value => \&string  },
      'author'              => { mandatory => 1, list => { value => \&string } },
      'dynamic_config'      => { mandatory => 1, value => \&boolean },
      'generated_by'        => { mandatory => 1, value => \&string  },
      'license'             => { mandatory => 1, list => { value => \&license } },
      'meta-spec' => {
        mandatory => 1,
        'map' => {
          version => { mandatory => 1, value => \&version},
          url     => { value => \&url },
          ':key' => { name => \&custom_2, value => \&anything },
        }
      },
      'name'                => { mandatory => 1, value => \&string  },
      'release_status'      => { mandatory => 1, value => \&release_status },
      'version'             => { mandatory => 1, value => \&version },
  
      # OPTIONAL
      'description' => { value => \&string },
      'keywords'    => { list => { value => \&string } },
      'no_index'    => $no_index_2,
      'optional_features'   => {
        'map'       => {
          ':key'  => {
            name => \&string,
            'map'   => {
              description        => { value => \&string },
              prereqs => $prereq_map,
              ':key' => { name => \&custom_2, value => \&anything },
            }
          }
        }
      },
      'prereqs' => $prereq_map,
      'provides'    => {
        'map'       => {
          ':key' => {
            name  => \&module,
            'map' => {
              file    => { mandatory => 1, value => \&file },
              version => { value => \&version },
              ':key' => { name => \&custom_2, value => \&anything },
            }
          }
        }
      },
      'resources'   => {
        'map'       => {
          license    => { list => { value => \&url } },
          homepage   => { value => \&url },
          bugtracker => {
            'map' => {
              web => { value => \&url },
              mailto => { value => \&string},
              ':key' => { name => \&custom_2, value => \&anything },
            }
          },
          repository => {
            'map' => {
              web => { value => \&url },
              url => { value => \&url },
              type => { value => \&string },
              ':key' => { name => \&custom_2, value => \&anything },
            }
          },
          ':key'     => { value => \&string, name => \&custom_2 },
        }
      },
  
      # CUSTOM -- additional user defined key/value pairs
      # note we can only validate the key name, as the structure is user defined
      ':key'        => { name => \&custom_2, value => \&anything },
    },
  
  '1.4' => {
    'meta-spec'           => {
      mandatory => 1,
      'map' => {
        version => { mandatory => 1, value => \&version},
        url     => { mandatory => 1, value => \&urlspec },
        ':key'  => { name => \&string, value => \&anything },
      },
    },
  
    'name'                => { mandatory => 1, value => \&string  },
    'version'             => { mandatory => 1, value => \&version },
    'abstract'            => { mandatory => 1, value => \&string  },
    'author'              => { mandatory => 1, list  => { value => \&string } },
    'license'             => { mandatory => 1, value => \&license },
    'generated_by'        => { mandatory => 1, value => \&string  },
  
    'distribution_type'   => { value => \&string  },
    'dynamic_config'      => { value => \&boolean },
  
    'requires'            => $module_map1,
    'recommends'          => $module_map1,
    'build_requires'      => $module_map1,
    'configure_requires'  => $module_map1,
    'conflicts'           => $module_map2,
  
    'optional_features'   => {
      'map'       => {
          ':key'  => { name => \&string,
              'map'   => { description        => { value => \&string },
                           requires           => $module_map1,
                           recommends         => $module_map1,
                           build_requires     => $module_map1,
                           conflicts          => $module_map2,
                           ':key'  => { name => \&string, value => \&anything },
              }
          }
       }
    },
  
    'provides'    => {
      'map'       => {
        ':key' => { name  => \&module,
          'map' => {
            file    => { mandatory => 1, value => \&file },
            version => { value => \&version },
            ':key'  => { name => \&string, value => \&anything },
          }
        }
      }
    },
  
    'no_index'    => $no_index_1_3,
    'private'     => $no_index_1_3,
  
    'keywords'    => { list => { value => \&string } },
  
    'resources'   => {
      'map'       => { license    => { value => \&url },
                       homepage   => { value => \&url },
                       bugtracker => { value => \&url },
                       repository => { value => \&url },
                       ':key'     => { value => \&string, name => \&custom_1 },
      }
    },
  
    # additional user defined key/value pairs
    # note we can only validate the key name, as the structure is user defined
    ':key'        => { name => \&string, value => \&anything },
  },
  
  '1.3' => {
    'meta-spec'           => {
      mandatory => 1,
      'map' => {
        version => { mandatory => 1, value => \&version},
        url     => { mandatory => 1, value => \&urlspec },
        ':key'  => { name => \&string, value => \&anything },
      },
    },
  
    'name'                => { mandatory => 1, value => \&string  },
    'version'             => { mandatory => 1, value => \&version },
    'abstract'            => { mandatory => 1, value => \&string  },
    'author'              => { mandatory => 1, list  => { value => \&string } },
    'license'             => { mandatory => 1, value => \&license },
    'generated_by'        => { mandatory => 1, value => \&string  },
  
    'distribution_type'   => { value => \&string  },
    'dynamic_config'      => { value => \&boolean },
  
    'requires'            => $module_map1,
    'recommends'          => $module_map1,
    'build_requires'      => $module_map1,
    'conflicts'           => $module_map2,
  
    'optional_features'   => {
      'map'       => {
          ':key'  => { name => \&string,
              'map'   => { description        => { value => \&string },
                           requires           => $module_map1,
                           recommends         => $module_map1,
                           build_requires     => $module_map1,
                           conflicts          => $module_map2,
                           ':key'  => { name => \&string, value => \&anything },
              }
          }
       }
    },
  
    'provides'    => {
      'map'       => {
        ':key' => { name  => \&module,
          'map' => {
            file    => { mandatory => 1, value => \&file },
            version => { value => \&version },
            ':key'  => { name => \&string, value => \&anything },
          }
        }
      }
    },
  
  
    'no_index'    => $no_index_1_3,
    'private'     => $no_index_1_3,
  
    'keywords'    => { list => { value => \&string } },
  
    'resources'   => {
      'map'       => { license    => { value => \&url },
                       homepage   => { value => \&url },
                       bugtracker => { value => \&url },
                       repository => { value => \&url },
                       ':key'     => { value => \&string, name => \&custom_1 },
      }
    },
  
    # additional user defined key/value pairs
    # note we can only validate the key name, as the structure is user defined
    ':key'        => { name => \&string, value => \&anything },
  },
  
  # v1.2 is misleading, it seems to assume that a number of fields where created
  # within v1.1, when they were created within v1.2. This may have been an
  # original mistake, and that a v1.1 was retro fitted into the timeline, when
  # v1.2 was originally slated as v1.1. But I could be wrong ;)
  '1.2' => {
    'meta-spec'           => {
      mandatory => 1,
      'map' => {
        version => { mandatory => 1, value => \&version},
        url     => { mandatory => 1, value => \&urlspec },
        ':key'  => { name => \&string, value => \&anything },
      },
    },
  
  
    'name'                => { mandatory => 1, value => \&string  },
    'version'             => { mandatory => 1, value => \&version },
    'license'             => { mandatory => 1, value => \&license },
    'generated_by'        => { mandatory => 1, value => \&string  },
    'author'              => { mandatory => 1, list => { value => \&string } },
    'abstract'            => { mandatory => 1, value => \&string  },
  
    'distribution_type'   => { value => \&string  },
    'dynamic_config'      => { value => \&boolean },
  
    'keywords'            => { list => { value => \&string } },
  
    'private'             => $no_index_1_2,
    '$no_index'           => $no_index_1_2,
  
    'requires'            => $module_map1,
    'recommends'          => $module_map1,
    'build_requires'      => $module_map1,
    'conflicts'           => $module_map2,
  
    'optional_features'   => {
      'map'       => {
          ':key'  => { name => \&string,
              'map'   => { description        => { value => \&string },
                           requires           => $module_map1,
                           recommends         => $module_map1,
                           build_requires     => $module_map1,
                           conflicts          => $module_map2,
                           ':key'  => { name => \&string, value => \&anything },
              }
          }
       }
    },
  
    'provides'    => {
      'map'       => {
        ':key' => { name  => \&module,
          'map' => {
            file    => { mandatory => 1, value => \&file },
            version => { value => \&version },
            ':key'  => { name => \&string, value => \&anything },
          }
        }
      }
    },
  
    'resources'   => {
      'map'       => { license    => { value => \&url },
                       homepage   => { value => \&url },
                       bugtracker => { value => \&url },
                       repository => { value => \&url },
                       ':key'     => { value => \&string, name => \&custom_1 },
      }
    },
  
    # additional user defined key/value pairs
    # note we can only validate the key name, as the structure is user defined
    ':key'        => { name => \&string, value => \&anything },
  },
  
  # note that the 1.1 spec only specifies 'version' as mandatory
  '1.1' => {
    'name'                => { value => \&string  },
    'version'             => { mandatory => 1, value => \&version },
    'license'             => { value => \&license },
    'generated_by'        => { value => \&string  },
  
    'license_uri'         => { value => \&url },
    'distribution_type'   => { value => \&string  },
    'dynamic_config'      => { value => \&boolean },
  
    'private'             => $no_index_1_1,
  
    'requires'            => $module_map1,
    'recommends'          => $module_map1,
    'build_requires'      => $module_map1,
    'conflicts'           => $module_map2,
  
    # additional user defined key/value pairs
    # note we can only validate the key name, as the structure is user defined
    ':key'        => { name => \&string, value => \&anything },
  },
  
  # note that the 1.0 spec doesn't specify optional or mandatory fields
  # but we will treat version as mandatory since otherwise META 1.0 is
  # completely arbitrary and pointless
  '1.0' => {
    'name'                => { value => \&string  },
    'version'             => { mandatory => 1, value => \&version },
    'license'             => { value => \&license },
    'generated_by'        => { value => \&string  },
  
    'license_uri'         => { value => \&url },
    'distribution_type'   => { value => \&string  },
    'dynamic_config'      => { value => \&boolean },
  
    'requires'            => $module_map1,
    'recommends'          => $module_map1,
    'build_requires'      => $module_map1,
    'conflicts'           => $module_map2,
  
    # additional user defined key/value pairs
    # note we can only validate the key name, as the structure is user defined
    ':key'        => { name => \&string, value => \&anything },
  },
  );
  
  #--------------------------------------------------------------------------#
  # Code
  #--------------------------------------------------------------------------#
  
  #pod =method new
  #pod
  #pod   my $cmv = CPAN::Meta::Validator->new( $struct )
  #pod
  #pod The constructor must be passed a metadata structure.
  #pod
  #pod =cut
  
  sub new {
    my ($class,$data) = @_;
  
    # create an attributes hash
    my $self = {
      'data'    => $data,
      'spec'    => eval { $data->{'meta-spec'}{'version'} } || "1.0",
      'errors'  => undef,
    };
  
    # create the object
    return bless $self, $class;
  }
  
  #pod =method is_valid
  #pod
  #pod   if ( $cmv->is_valid ) {
  #pod     ...
  #pod   }
  #pod
  #pod Returns a boolean value indicating whether the metadata provided
  #pod is valid.
  #pod
  #pod =cut
  
  sub is_valid {
      my $self = shift;
      my $data = $self->{data};
      my $spec_version = $self->{spec};
      $self->check_map($definitions{$spec_version},$data);
      return ! $self->errors;
  }
  
  #pod =method errors
  #pod
  #pod   warn( join "\n", $cmv->errors );
  #pod
  #pod Returns a list of errors seen during validation.
  #pod
  #pod =cut
  
  sub errors {
      my $self = shift;
      return ()   unless(defined $self->{errors});
      return @{$self->{errors}};
  }
  
  #pod =begin :internals
  #pod
  #pod =head2 Check Methods
  #pod
  #pod =over
  #pod
  #pod =item *
  #pod
  #pod check_map($spec,$data)
  #pod
  #pod Checks whether a map (or hash) part of the data structure conforms to the
  #pod appropriate specification definition.
  #pod
  #pod =item *
  #pod
  #pod check_list($spec,$data)
  #pod
  #pod Checks whether a list (or array) part of the data structure conforms to
  #pod the appropriate specification definition.
  #pod
  #pod =item *
  #pod
  #pod =back
  #pod
  #pod =cut
  
  my $spec_error = "Missing validation action in specification. "
    . "Must be one of 'map', 'list', or 'value'";
  
  sub check_map {
      my ($self,$spec,$data) = @_;
  
      if(ref($spec) ne 'HASH') {
          $self->_error( "Unknown META specification, cannot validate." );
          return;
      }
  
      if(ref($data) ne 'HASH') {
          $self->_error( "Expected a map structure from string or file." );
          return;
      }
  
      for my $key (keys %$spec) {
          next    unless($spec->{$key}->{mandatory});
          next    if(defined $data->{$key});
          push @{$self->{stack}}, $key;
          $self->_error( "Missing mandatory field, '$key'" );
          pop @{$self->{stack}};
      }
  
      for my $key (keys %$data) {
          push @{$self->{stack}}, $key;
          if($spec->{$key}) {
              if($spec->{$key}{value}) {
                  $spec->{$key}{value}->($self,$key,$data->{$key});
              } elsif($spec->{$key}{'map'}) {
                  $self->check_map($spec->{$key}{'map'},$data->{$key});
              } elsif($spec->{$key}{'list'}) {
                  $self->check_list($spec->{$key}{'list'},$data->{$key});
              } else {
                  $self->_error( "$spec_error for '$key'" );
              }
  
          } elsif ($spec->{':key'}) {
              $spec->{':key'}{name}->($self,$key,$key);
              if($spec->{':key'}{value}) {
                  $spec->{':key'}{value}->($self,$key,$data->{$key});
              } elsif($spec->{':key'}{'map'}) {
                  $self->check_map($spec->{':key'}{'map'},$data->{$key});
              } elsif($spec->{':key'}{'list'}) {
                  $self->check_list($spec->{':key'}{'list'},$data->{$key});
              } else {
                  $self->_error( "$spec_error for ':key'" );
              }
  
  
          } else {
              $self->_error( "Unknown key, '$key', found in map structure" );
          }
          pop @{$self->{stack}};
      }
  }
  
  sub check_list {
      my ($self,$spec,$data) = @_;
  
      if(ref($data) ne 'ARRAY') {
          $self->_error( "Expected a list structure" );
          return;
      }
  
      if(defined $spec->{mandatory}) {
          if(!defined $data->[0]) {
              $self->_error( "Missing entries from mandatory list" );
          }
      }
  
      for my $value (@$data) {
          push @{$self->{stack}}, $value || "<undef>";
          if(defined $spec->{value}) {
              $spec->{value}->($self,'list',$value);
          } elsif(defined $spec->{'map'}) {
              $self->check_map($spec->{'map'},$value);
          } elsif(defined $spec->{'list'}) {
              $self->check_list($spec->{'list'},$value);
          } elsif ($spec->{':key'}) {
              $self->check_map($spec,$value);
          } else {
            $self->_error( "$spec_error associated with '$self->{stack}[-2]'" );
          }
          pop @{$self->{stack}};
      }
  }
  
  #pod =head2 Validator Methods
  #pod
  #pod =over
  #pod
  #pod =item *
  #pod
  #pod header($self,$key,$value)
  #pod
  #pod Validates that the header is valid.
  #pod
  #pod Note: No longer used as we now read the data structure, not the file.
  #pod
  #pod =item *
  #pod
  #pod url($self,$key,$value)
  #pod
  #pod Validates that a given value is in an acceptable URL format
  #pod
  #pod =item *
  #pod
  #pod urlspec($self,$key,$value)
  #pod
  #pod Validates that the URL to a META specification is a known one.
  #pod
  #pod =item *
  #pod
  #pod string_or_undef($self,$key,$value)
  #pod
  #pod Validates that the value is either a string or an undef value. Bit of a
  #pod catchall function for parts of the data structure that are completely user
  #pod defined.
  #pod
  #pod =item *
  #pod
  #pod string($self,$key,$value)
  #pod
  #pod Validates that a string exists for the given key.
  #pod
  #pod =item *
  #pod
  #pod file($self,$key,$value)
  #pod
  #pod Validate that a file is passed for the given key. This may be made more
  #pod thorough in the future. For now it acts like \&string.
  #pod
  #pod =item *
  #pod
  #pod exversion($self,$key,$value)
  #pod
  #pod Validates a list of versions, e.g. '<= 5, >=2, ==3, !=4, >1, <6, 0'.
  #pod
  #pod =item *
  #pod
  #pod version($self,$key,$value)
  #pod
  #pod Validates a single version string. Versions of the type '5.8.8' and '0.00_00'
  #pod are both valid. A leading 'v' like 'v1.2.3' is also valid.
  #pod
  #pod =item *
  #pod
  #pod boolean($self,$key,$value)
  #pod
  #pod Validates for a boolean value: a defined value that is either "1" or "0" or
  #pod stringifies to those values.
  #pod
  #pod =item *
  #pod
  #pod license($self,$key,$value)
  #pod
  #pod Validates that a value is given for the license. Returns 1 if an known license
  #pod type, or 2 if a value is given but the license type is not a recommended one.
  #pod
  #pod =item *
  #pod
  #pod custom_1($self,$key,$value)
  #pod
  #pod Validates that the given key is in CamelCase, to indicate a user defined
  #pod keyword and only has characters in the class [-_a-zA-Z].  In version 1.X
  #pod of the spec, this was only explicitly stated for 'resources'.
  #pod
  #pod =item *
  #pod
  #pod custom_2($self,$key,$value)
  #pod
  #pod Validates that the given key begins with 'x_' or 'X_', to indicate a user
  #pod defined keyword and only has characters in the class [-_a-zA-Z]
  #pod
  #pod =item *
  #pod
  #pod identifier($self,$key,$value)
  #pod
  #pod Validates that key is in an acceptable format for the META specification,
  #pod for an identifier, i.e. any that matches the regular expression
  #pod qr/[a-z][a-z_]/i.
  #pod
  #pod =item *
  #pod
  #pod module($self,$key,$value)
  #pod
  #pod Validates that a given key is in an acceptable module name format, e.g.
  #pod 'Test::CPAN::Meta::Version'.
  #pod
  #pod =back
  #pod
  #pod =end :internals
  #pod
  #pod =cut
  
  sub header {
      my ($self,$key,$value) = @_;
      if(defined $value) {
          return 1    if($value && $value =~ /^--- #YAML:1.0/);
      }
      $self->_error( "file does not have a valid YAML header." );
      return 0;
  }
  
  sub release_status {
    my ($self,$key,$value) = @_;
    if(defined $value) {
      my $version = $self->{data}{version} || '';
      if ( $version =~ /_/ ) {
        return 1 if ( $value =~ /\A(?:testing|unstable)\z/ );
        $self->_error( "'$value' for '$key' is invalid for version '$version'" );
      }
      else {
        return 1 if ( $value =~ /\A(?:stable|testing|unstable)\z/ );
        $self->_error( "'$value' for '$key' is invalid" );
      }
    }
    else {
      $self->_error( "'$key' is not defined" );
    }
    return 0;
  }
  
  # _uri_split taken from URI::Split by Gisle Aas, Copyright 2003
  sub _uri_split {
       return $_[0] =~ m,(?:([^:/?#]+):)?(?://([^/?#]*))?([^?#]*)(?:\?([^#]*))?(?:#(.*))?,;
  }
  
  sub url {
      my ($self,$key,$value) = @_;
      if(defined $value) {
        my ($scheme, $auth, $path, $query, $frag) = _uri_split($value);
        unless ( defined $scheme && length $scheme ) {
          $self->_error( "'$value' for '$key' does not have a URL scheme" );
          return 0;
        }
        unless ( defined $auth && length $auth ) {
          $self->_error( "'$value' for '$key' does not have a URL authority" );
          return 0;
        }
        return 1;
      }
      $value ||= '';
      $self->_error( "'$value' for '$key' is not a valid URL." );
      return 0;
  }
  
  sub urlspec {
      my ($self,$key,$value) = @_;
      if(defined $value) {
          return 1    if($value && $known_specs{$self->{spec}} eq $value);
          if($value && $known_urls{$value}) {
              $self->_error( 'META specification URL does not match version' );
              return 0;
          }
      }
      $self->_error( 'Unknown META specification' );
      return 0;
  }
  
  sub anything { return 1 }
  
  sub string {
      my ($self,$key,$value) = @_;
      if(defined $value) {
          return 1    if($value || $value =~ /^0$/);
      }
      $self->_error( "value is an undefined string" );
      return 0;
  }
  
  sub string_or_undef {
      my ($self,$key,$value) = @_;
      return 1    unless(defined $value);
      return 1    if($value || $value =~ /^0$/);
      $self->_error( "No string defined for '$key'" );
      return 0;
  }
  
  sub file {
      my ($self,$key,$value) = @_;
      return 1    if(defined $value);
      $self->_error( "No file defined for '$key'" );
      return 0;
  }
  
  sub exversion {
      my ($self,$key,$value) = @_;
      if(defined $value && ($value || $value =~ /0/)) {
          my $pass = 1;
          for(split(",",$value)) { $self->version($key,$_) or ($pass = 0); }
          return $pass;
      }
      $value = '<undef>'  unless(defined $value);
      $self->_error( "'$value' for '$key' is not a valid version." );
      return 0;
  }
  
  sub version {
      my ($self,$key,$value) = @_;
      if(defined $value) {
          return 0    unless($value || $value =~ /0/);
          return 1    if($value =~ /^\s*((<|<=|>=|>|!=|==)\s*)?v?\d+((\.\d+((_|\.)\d+)?)?)/);
      } else {
          $value = '<undef>';
      }
      $self->_error( "'$value' for '$key' is not a valid version." );
      return 0;
  }
  
  sub boolean {
      my ($self,$key,$value) = @_;
      if(defined $value) {
          return 1    if($value =~ /^(0|1)$/);
      } else {
          $value = '<undef>';
      }
      $self->_error( "'$value' for '$key' is not a boolean value." );
      return 0;
  }
  
  my %v1_licenses = (
      'perl'         => 'http://dev.perl.org/licenses/',
      'gpl'          => 'http://www.opensource.org/licenses/gpl-license.php',
      'apache'       => 'http://apache.org/licenses/LICENSE-2.0',
      'artistic'     => 'http://opensource.org/licenses/artistic-license.php',
      'artistic_2'   => 'http://opensource.org/licenses/artistic-license-2.0.php',
      'lgpl'         => 'http://www.opensource.org/licenses/lgpl-license.php',
      'bsd'          => 'http://www.opensource.org/licenses/bsd-license.php',
      'gpl'          => 'http://www.opensource.org/licenses/gpl-license.php',
      'mit'          => 'http://opensource.org/licenses/mit-license.php',
      'mozilla'      => 'http://opensource.org/licenses/mozilla1.1.php',
      'open_source'  => undef,
      'unrestricted' => undef,
      'restrictive'  => undef,
      'unknown'      => undef,
  );
  
  my %v2_licenses = map { $_ => 1 } qw(
    agpl_3
    apache_1_1
    apache_2_0
    artistic_1
    artistic_2
    bsd
    freebsd
    gfdl_1_2
    gfdl_1_3
    gpl_1
    gpl_2
    gpl_3
    lgpl_2_1
    lgpl_3_0
    mit
    mozilla_1_0
    mozilla_1_1
    openssl
    perl_5
    qpl_1_0
    ssleay
    sun
    zlib
    open_source
    restricted
    unrestricted
    unknown
  );
  
  sub license {
      my ($self,$key,$value) = @_;
      my $licenses = $self->{spec} < 2 ? \%v1_licenses : \%v2_licenses;
      if(defined $value) {
          return 1    if($value && exists $licenses->{$value});
      } else {
          $value = '<undef>';
      }
      $self->_error( "License '$value' is invalid" );
      return 0;
  }
  
  sub custom_1 {
      my ($self,$key) = @_;
      if(defined $key) {
          # a valid user defined key should be alphabetic
          # and contain at least one capital case letter.
          return 1    if($key && $key =~ /^[_a-z]+$/i && $key =~ /[A-Z]/);
      } else {
          $key = '<undef>';
      }
      $self->_error( "Custom resource '$key' must be in CamelCase." );
      return 0;
  }
  
  sub custom_2 {
      my ($self,$key) = @_;
      if(defined $key) {
          return 1    if($key && $key =~ /^x_/i);  # user defined
      } else {
          $key = '<undef>';
      }
      $self->_error( "Custom key '$key' must begin with 'x_' or 'X_'." );
      return 0;
  }
  
  sub identifier {
      my ($self,$key) = @_;
      if(defined $key) {
          return 1    if($key && $key =~ /^([a-z][_a-z]+)$/i);    # spec 2.0 defined
      } else {
          $key = '<undef>';
      }
      $self->_error( "Key '$key' is not a legal identifier." );
      return 0;
  }
  
  sub module {
      my ($self,$key) = @_;
      if(defined $key) {
          return 1    if($key && $key =~ /^[A-Za-z0-9_]+(::[A-Za-z0-9_]+)*$/);
      } else {
          $key = '<undef>';
      }
      $self->_error( "Key '$key' is not a legal module name." );
      return 0;
  }
  
  my @valid_phases = qw/ configure build test runtime develop /;
  sub phase {
      my ($self,$key) = @_;
      if(defined $key) {
          return 1 if( length $key && grep { $key eq $_ } @valid_phases );
          return 1 if $key =~ /x_/i;
      } else {
          $key = '<undef>';
      }
      $self->_error( "Key '$key' is not a legal phase." );
      return 0;
  }
  
  my @valid_relations = qw/ requires recommends suggests conflicts /;
  sub relation {
      my ($self,$key) = @_;
      if(defined $key) {
          return 1 if( length $key && grep { $key eq $_ } @valid_relations );
          return 1 if $key =~ /x_/i;
      } else {
          $key = '<undef>';
      }
      $self->_error( "Key '$key' is not a legal prereq relationship." );
      return 0;
  }
  
  sub _error {
      my $self = shift;
      my $mess = shift;
  
      $mess .= ' ('.join(' -> ',@{$self->{stack}}).')'  if($self->{stack});
      $mess .= " [Validation: $self->{spec}]";
  
      push @{$self->{errors}}, $mess;
  }
  
  1;
  
  # ABSTRACT: validate CPAN distribution metadata structures
  
  =pod
  
  =encoding UTF-8
  
  =head1 NAME
  
  CPAN::Meta::Validator - validate CPAN distribution metadata structures
  
  =head1 VERSION
  
  version 2.150010
  
  =head1 SYNOPSIS
  
    my $struct = decode_json_file('META.json');
  
    my $cmv = CPAN::Meta::Validator->new( $struct );
  
    unless ( $cmv->is_valid ) {
      my $msg = "Invalid META structure.  Errors found:\n";
      $msg .= join( "\n", $cmv->errors );
      die $msg;
    }
  
  =head1 DESCRIPTION
  
  This module validates a CPAN Meta structure against the version of the
  the specification claimed in the C<meta-spec> field of the structure.
  
  =head1 METHODS
  
  =head2 new
  
    my $cmv = CPAN::Meta::Validator->new( $struct )
  
  The constructor must be passed a metadata structure.
  
  =head2 is_valid
  
    if ( $cmv->is_valid ) {
      ...
    }
  
  Returns a boolean value indicating whether the metadata provided
  is valid.
  
  =head2 errors
  
    warn( join "\n", $cmv->errors );
  
  Returns a list of errors seen during validation.
  
  =begin :internals
  
  =head2 Check Methods
  
  =over
  
  =item *
  
  check_map($spec,$data)
  
  Checks whether a map (or hash) part of the data structure conforms to the
  appropriate specification definition.
  
  =item *
  
  check_list($spec,$data)
  
  Checks whether a list (or array) part of the data structure conforms to
  the appropriate specification definition.
  
  =item *
  
  =back
  
  =head2 Validator Methods
  
  =over
  
  =item *
  
  header($self,$key,$value)
  
  Validates that the header is valid.
  
  Note: No longer used as we now read the data structure, not the file.
  
  =item *
  
  url($self,$key,$value)
  
  Validates that a given value is in an acceptable URL format
  
  =item *
  
  urlspec($self,$key,$value)
  
  Validates that the URL to a META specification is a known one.
  
  =item *
  
  string_or_undef($self,$key,$value)
  
  Validates that the value is either a string or an undef value. Bit of a
  catchall function for parts of the data structure that are completely user
  defined.
  
  =item *
  
  string($self,$key,$value)
  
  Validates that a string exists for the given key.
  
  =item *
  
  file($self,$key,$value)
  
  Validate that a file is passed for the given key. This may be made more
  thorough in the future. For now it acts like \&string.
  
  =item *
  
  exversion($self,$key,$value)
  
  Validates a list of versions, e.g. '<= 5, >=2, ==3, !=4, >1, <6, 0'.
  
  =item *
  
  version($self,$key,$value)
  
  Validates a single version string. Versions of the type '5.8.8' and '0.00_00'
  are both valid. A leading 'v' like 'v1.2.3' is also valid.
  
  =item *
  
  boolean($self,$key,$value)
  
  Validates for a boolean value: a defined value that is either "1" or "0" or
  stringifies to those values.
  
  =item *
  
  license($self,$key,$value)
  
  Validates that a value is given for the license. Returns 1 if an known license
  type, or 2 if a value is given but the license type is not a recommended one.
  
  =item *
  
  custom_1($self,$key,$value)
  
  Validates that the given key is in CamelCase, to indicate a user defined
  keyword and only has characters in the class [-_a-zA-Z].  In version 1.X
  of the spec, this was only explicitly stated for 'resources'.
  
  =item *
  
  custom_2($self,$key,$value)
  
  Validates that the given key begins with 'x_' or 'X_', to indicate a user
  defined keyword and only has characters in the class [-_a-zA-Z]
  
  =item *
  
  identifier($self,$key,$value)
  
  Validates that key is in an acceptable format for the META specification,
  for an identifier, i.e. any that matches the regular expression
  qr/[a-z][a-z_]/i.
  
  =item *
  
  module($self,$key,$value)
  
  Validates that a given key is in an acceptable module name format, e.g.
  'Test::CPAN::Meta::Version'.
  
  =back
  
  =end :internals
  
  =for Pod::Coverage anything boolean check_list custom_1 custom_2 exversion file
  identifier license module phase relation release_status string string_or_undef
  url urlspec version header check_map
  
  =head1 BUGS
  
  Please report any bugs or feature using the CPAN Request Tracker.
  Bugs can be submitted through the web interface at
  L<http://rt.cpan.org/Dist/Display.html?Queue=CPAN-Meta>
  
  When submitting a bug or request, please include a test-file or a patch to an
  existing test-file that illustrates the bug or desired feature.
  
  =head1 AUTHORS
  
  =over 4
  
  =item *
  
  David Golden <dagolden@cpan.org>
  
  =item *
  
  Ricardo Signes <rjbs@cpan.org>
  
  =item *
  
  Adam Kennedy <adamk@cpan.org>
  
  =back
  
  =head1 COPYRIGHT AND LICENSE
  
  This software is copyright (c) 2010 by David Golden, Ricardo Signes, Adam Kennedy and Contributors.
  
  This is free software; you can redistribute it and/or modify it under
  the same terms as the Perl 5 programming language system itself.
  
  =cut
  
  __END__
  
  
  # vim: ts=2 sts=2 sw=2 et :
CPAN_META_VALIDATOR

$fatpacked{"Getopt/Long.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'GETOPT_LONG';
  #! perl
  
  # Getopt::Long.pm -- Universal options parsing
  # Author          : Johan Vromans
  # Created On      : Tue Sep 11 15:00:12 1990
  # Last Modified By: Johan Vromans
  # Last Modified On: Sat May 27 12:11:39 2017
  # Update Count    : 1715
  # Status          : Released
  
  ################ Module Preamble ################
  
  use 5.004;
  
  use strict;
  use warnings;
  
  package Getopt::Long;
  
  use vars qw($VERSION);
  $VERSION        =  2.50;
  # For testing versions only.
  use vars qw($VERSION_STRING);
  $VERSION_STRING = "2.50";
  
  use Exporter;
  use vars qw(@ISA @EXPORT @EXPORT_OK);
  @ISA = qw(Exporter);
  
  # Exported subroutines.
  sub GetOptions(@);		# always
  sub GetOptionsFromArray(@);	# on demand
  sub GetOptionsFromString(@);	# on demand
  sub Configure(@);		# on demand
  sub HelpMessage(@);		# on demand
  sub VersionMessage(@);		# in demand
  
  BEGIN {
      # Init immediately so their contents can be used in the 'use vars' below.
      @EXPORT    = qw(&GetOptions $REQUIRE_ORDER $PERMUTE $RETURN_IN_ORDER);
      @EXPORT_OK = qw(&HelpMessage &VersionMessage &Configure
  		    &GetOptionsFromArray &GetOptionsFromString);
  }
  
  # User visible variables.
  use vars @EXPORT, @EXPORT_OK;
  use vars qw($error $debug $major_version $minor_version);
  # Deprecated visible variables.
  use vars qw($autoabbrev $getopt_compat $ignorecase $bundling $order
  	    $passthrough);
  # Official invisible variables.
  use vars qw($genprefix $caller $gnu_compat $auto_help $auto_version $longprefix);
  
  # Really invisible variables.
  my $bundling_values;
  
  # Public subroutines.
  sub config(@);			# deprecated name
  
  # Private subroutines.
  sub ConfigDefaults();
  sub ParseOptionSpec($$);
  sub OptCtl($);
  sub FindOption($$$$$);
  sub ValidValue ($$$$$);
  
  ################ Local Variables ################
  
  # $requested_version holds the version that was mentioned in the 'use'
  # or 'require', if any. It can be used to enable or disable specific
  # features.
  my $requested_version = 0;
  
  ################ Resident subroutines ################
  
  sub ConfigDefaults() {
      # Handle POSIX compliancy.
      if ( defined $ENV{"POSIXLY_CORRECT"} ) {
  	$genprefix = "(--|-)";
  	$autoabbrev = 0;		# no automatic abbrev of options
  	$bundling = 0;			# no bundling of single letter switches
  	$getopt_compat = 0;		# disallow '+' to start options
  	$order = $REQUIRE_ORDER;
      }
      else {
  	$genprefix = "(--|-|\\+)";
  	$autoabbrev = 1;		# automatic abbrev of options
  	$bundling = 0;			# bundling off by default
  	$getopt_compat = 1;		# allow '+' to start options
  	$order = $PERMUTE;
      }
      # Other configurable settings.
      $debug = 0;			# for debugging
      $error = 0;			# error tally
      $ignorecase = 1;		# ignore case when matching options
      $passthrough = 0;		# leave unrecognized options alone
      $gnu_compat = 0;		# require --opt=val if value is optional
      $longprefix = "(--)";       # what does a long prefix look like
      $bundling_values = 0;	# no bundling of values
  }
  
  # Override import.
  sub import {
      my $pkg = shift;		# package
      my @syms = ();		# symbols to import
      my @config = ();		# configuration
      my $dest = \@syms;		# symbols first
      for ( @_ ) {
  	if ( $_ eq ':config' ) {
  	    $dest = \@config;	# config next
  	    next;
  	}
  	push(@$dest, $_);	# push
      }
      # Hide one level and call super.
      local $Exporter::ExportLevel = 1;
      push(@syms, qw(&GetOptions)) if @syms; # always export GetOptions
      $requested_version = 0;
      $pkg->SUPER::import(@syms);
      # And configure.
      Configure(@config) if @config;
  }
  
  ################ Initialization ################
  
  # Values for $order. See GNU getopt.c for details.
  ($REQUIRE_ORDER, $PERMUTE, $RETURN_IN_ORDER) = (0..2);
  # Version major/minor numbers.
  ($major_version, $minor_version) = $VERSION =~ /^(\d+)\.(\d+)/;
  
  ConfigDefaults();
  
  ################ OO Interface ################
  
  package Getopt::Long::Parser;
  
  # Store a copy of the default configuration. Since ConfigDefaults has
  # just been called, what we get from Configure is the default.
  my $default_config = do {
      Getopt::Long::Configure ()
  };
  
  sub new {
      my $that = shift;
      my $class = ref($that) || $that;
      my %atts = @_;
  
      # Register the callers package.
      my $self = { caller_pkg => (caller)[0] };
  
      bless ($self, $class);
  
      # Process config attributes.
      if ( defined $atts{config} ) {
  	my $save = Getopt::Long::Configure ($default_config, @{$atts{config}});
  	$self->{settings} = Getopt::Long::Configure ($save);
  	delete ($atts{config});
      }
      # Else use default config.
      else {
  	$self->{settings} = $default_config;
      }
  
      if ( %atts ) {		# Oops
  	die(__PACKAGE__.": unhandled attributes: ".
  	    join(" ", sort(keys(%atts)))."\n");
      }
  
      $self;
  }
  
  sub configure {
      my ($self) = shift;
  
      # Restore settings, merge new settings in.
      my $save = Getopt::Long::Configure ($self->{settings}, @_);
  
      # Restore orig config and save the new config.
      $self->{settings} = Getopt::Long::Configure ($save);
  }
  
  sub getoptions {
      my ($self) = shift;
  
      return $self->getoptionsfromarray(\@ARGV, @_);
  }
  
  sub getoptionsfromarray {
      my ($self) = shift;
  
      # Restore config settings.
      my $save = Getopt::Long::Configure ($self->{settings});
  
      # Call main routine.
      my $ret = 0;
      $Getopt::Long::caller = $self->{caller_pkg};
  
      eval {
  	# Locally set exception handler to default, otherwise it will
  	# be called implicitly here, and again explicitly when we try
  	# to deliver the messages.
  	local ($SIG{__DIE__}) = 'DEFAULT';
  	$ret = Getopt::Long::GetOptionsFromArray (@_);
      };
  
      # Restore saved settings.
      Getopt::Long::Configure ($save);
  
      # Handle errors and return value.
      die ($@) if $@;
      return $ret;
  }
  
  package Getopt::Long;
  
  ################ Back to Normal ################
  
  # Indices in option control info.
  # Note that ParseOptions uses the fields directly. Search for 'hard-wired'.
  use constant CTL_TYPE    => 0;
  #use constant   CTL_TYPE_FLAG   => '';
  #use constant   CTL_TYPE_NEG    => '!';
  #use constant   CTL_TYPE_INCR   => '+';
  #use constant   CTL_TYPE_INT    => 'i';
  #use constant   CTL_TYPE_INTINC => 'I';
  #use constant   CTL_TYPE_XINT   => 'o';
  #use constant   CTL_TYPE_FLOAT  => 'f';
  #use constant   CTL_TYPE_STRING => 's';
  
  use constant CTL_CNAME   => 1;
  
  use constant CTL_DEFAULT => 2;
  
  use constant CTL_DEST    => 3;
   use constant   CTL_DEST_SCALAR => 0;
   use constant   CTL_DEST_ARRAY  => 1;
   use constant   CTL_DEST_HASH   => 2;
   use constant   CTL_DEST_CODE   => 3;
  
  use constant CTL_AMIN    => 4;
  use constant CTL_AMAX    => 5;
  
  # FFU.
  #use constant CTL_RANGE   => ;
  #use constant CTL_REPEAT  => ;
  
  # Rather liberal patterns to match numbers.
  use constant PAT_INT   => "[-+]?_*[0-9][0-9_]*";
  use constant PAT_XINT  =>
    "(?:".
  	  "[-+]?_*[1-9][0-9_]*".
    "|".
  	  "0x_*[0-9a-f][0-9a-f_]*".
    "|".
  	  "0b_*[01][01_]*".
    "|".
  	  "0[0-7_]*".
    ")";
  use constant PAT_FLOAT =>
    "[-+]?".			# optional sign
    "(?=[0-9.])".			# must start with digit or dec.point
    "[0-9_]*".			# digits before the dec.point
    "(\.[0-9_]+)?".		# optional fraction
    "([eE][-+]?[0-9_]+)?";	# optional exponent
  
  sub GetOptions(@) {
      # Shift in default array.
      unshift(@_, \@ARGV);
      # Try to keep caller() and Carp consistent.
      goto &GetOptionsFromArray;
  }
  
  sub GetOptionsFromString(@) {
      my ($string) = shift;
      require Text::ParseWords;
      my $args = [ Text::ParseWords::shellwords($string) ];
      $caller ||= (caller)[0];	# current context
      my $ret = GetOptionsFromArray($args, @_);
      return ( $ret, $args ) if wantarray;
      if ( @$args ) {
  	$ret = 0;
  	warn("GetOptionsFromString: Excess data \"@$args\" in string \"$string\"\n");
      }
      $ret;
  }
  
  sub GetOptionsFromArray(@) {
  
      my ($argv, @optionlist) = @_;	# local copy of the option descriptions
      my $argend = '--';		# option list terminator
      my %opctl = ();		# table of option specs
      my $pkg = $caller || (caller)[0];	# current context
  				# Needed if linkage is omitted.
      my @ret = ();		# accum for non-options
      my %linkage;		# linkage
      my $userlinkage;		# user supplied HASH
      my $opt;			# current option
      my $prefix = $genprefix;	# current prefix
  
      $error = '';
  
      if ( $debug ) {
  	# Avoid some warnings if debugging.
  	local ($^W) = 0;
  	print STDERR
  	  ("Getopt::Long $Getopt::Long::VERSION ",
  	   "called from package \"$pkg\".",
  	   "\n  ",
  	   "argv: ",
  	   defined($argv)
  	   ? UNIVERSAL::isa( $argv, 'ARRAY' ) ? "(@$argv)" : $argv
  	   : "<undef>",
  	   "\n  ",
  	   "autoabbrev=$autoabbrev,".
  	   "bundling=$bundling,",
  	   "bundling_values=$bundling_values,",
  	   "getopt_compat=$getopt_compat,",
  	   "gnu_compat=$gnu_compat,",
  	   "order=$order,",
  	   "\n  ",
  	   "ignorecase=$ignorecase,",
  	   "requested_version=$requested_version,",
  	   "passthrough=$passthrough,",
  	   "genprefix=\"$genprefix\",",
  	   "longprefix=\"$longprefix\".",
  	   "\n");
      }
  
      # Check for ref HASH as first argument.
      # First argument may be an object. It's OK to use this as long
      # as it is really a hash underneath.
      $userlinkage = undef;
      if ( @optionlist && ref($optionlist[0]) and
  	 UNIVERSAL::isa($optionlist[0],'HASH') ) {
  	$userlinkage = shift (@optionlist);
  	print STDERR ("=> user linkage: $userlinkage\n") if $debug;
      }
  
      # See if the first element of the optionlist contains option
      # starter characters.
      # Be careful not to interpret '<>' as option starters.
      if ( @optionlist && $optionlist[0] =~ /^\W+$/
  	 && !($optionlist[0] eq '<>'
  	      && @optionlist > 0
  	      && ref($optionlist[1])) ) {
  	$prefix = shift (@optionlist);
  	# Turn into regexp. Needs to be parenthesized!
  	$prefix =~ s/(\W)/\\$1/g;
  	$prefix = "([" . $prefix . "])";
  	print STDERR ("=> prefix=\"$prefix\"\n") if $debug;
      }
  
      # Verify correctness of optionlist.
      %opctl = ();
      while ( @optionlist ) {
  	my $opt = shift (@optionlist);
  
  	unless ( defined($opt) ) {
  	    $error .= "Undefined argument in option spec\n";
  	    next;
  	}
  
  	# Strip leading prefix so people can specify "--foo=i" if they like.
  	$opt = $+ if $opt =~ /^$prefix+(.*)$/s;
  
  	if ( $opt eq '<>' ) {
  	    if ( (defined $userlinkage)
  		&& !(@optionlist > 0 && ref($optionlist[0]))
  		&& (exists $userlinkage->{$opt})
  		&& ref($userlinkage->{$opt}) ) {
  		unshift (@optionlist, $userlinkage->{$opt});
  	    }
  	    unless ( @optionlist > 0
  		    && ref($optionlist[0]) && ref($optionlist[0]) eq 'CODE' ) {
  		$error .= "Option spec <> requires a reference to a subroutine\n";
  		# Kill the linkage (to avoid another error).
  		shift (@optionlist)
  		  if @optionlist && ref($optionlist[0]);
  		next;
  	    }
  	    $linkage{'<>'} = shift (@optionlist);
  	    next;
  	}
  
  	# Parse option spec.
  	my ($name, $orig) = ParseOptionSpec ($opt, \%opctl);
  	unless ( defined $name ) {
  	    # Failed. $orig contains the error message. Sorry for the abuse.
  	    $error .= $orig;
  	    # Kill the linkage (to avoid another error).
  	    shift (@optionlist)
  	      if @optionlist && ref($optionlist[0]);
  	    next;
  	}
  
  	# If no linkage is supplied in the @optionlist, copy it from
  	# the userlinkage if available.
  	if ( defined $userlinkage ) {
  	    unless ( @optionlist > 0 && ref($optionlist[0]) ) {
  		if ( exists $userlinkage->{$orig} &&
  		     ref($userlinkage->{$orig}) ) {
  		    print STDERR ("=> found userlinkage for \"$orig\": ",
  				  "$userlinkage->{$orig}\n")
  			if $debug;
  		    unshift (@optionlist, $userlinkage->{$orig});
  		}
  		else {
  		    # Do nothing. Being undefined will be handled later.
  		    next;
  		}
  	    }
  	}
  
  	# Copy the linkage. If omitted, link to global variable.
  	if ( @optionlist > 0 && ref($optionlist[0]) ) {
  	    print STDERR ("=> link \"$orig\" to $optionlist[0]\n")
  		if $debug;
  	    my $rl = ref($linkage{$orig} = shift (@optionlist));
  
  	    if ( $rl eq "ARRAY" ) {
  		$opctl{$name}[CTL_DEST] = CTL_DEST_ARRAY;
  	    }
  	    elsif ( $rl eq "HASH" ) {
  		$opctl{$name}[CTL_DEST] = CTL_DEST_HASH;
  	    }
  	    elsif ( $rl eq "SCALAR" || $rl eq "REF" ) {
  #		if ( $opctl{$name}[CTL_DEST] == CTL_DEST_ARRAY ) {
  #		    my $t = $linkage{$orig};
  #		    $$t = $linkage{$orig} = [];
  #		}
  #		elsif ( $opctl{$name}[CTL_DEST] == CTL_DEST_HASH ) {
  #		}
  #		else {
  		    # Ok.
  #		}
  	    }
  	    elsif ( $rl eq "CODE" ) {
  		# Ok.
  	    }
  	    else {
  		$error .= "Invalid option linkage for \"$opt\"\n";
  	    }
  	}
  	else {
  	    # Link to global $opt_XXX variable.
  	    # Make sure a valid perl identifier results.
  	    my $ov = $orig;
  	    $ov =~ s/\W/_/g;
  	    if ( $opctl{$name}[CTL_DEST] == CTL_DEST_ARRAY ) {
  		print STDERR ("=> link \"$orig\" to \@$pkg","::opt_$ov\n")
  		    if $debug;
  		eval ("\$linkage{\$orig} = \\\@".$pkg."::opt_$ov;");
  	    }
  	    elsif ( $opctl{$name}[CTL_DEST] == CTL_DEST_HASH ) {
  		print STDERR ("=> link \"$orig\" to \%$pkg","::opt_$ov\n")
  		    if $debug;
  		eval ("\$linkage{\$orig} = \\\%".$pkg."::opt_$ov;");
  	    }
  	    else {
  		print STDERR ("=> link \"$orig\" to \$$pkg","::opt_$ov\n")
  		    if $debug;
  		eval ("\$linkage{\$orig} = \\\$".$pkg."::opt_$ov;");
  	    }
  	}
  
  	if ( $opctl{$name}[CTL_TYPE] eq 'I'
  	     && ( $opctl{$name}[CTL_DEST] == CTL_DEST_ARRAY
  		  || $opctl{$name}[CTL_DEST] == CTL_DEST_HASH )
  	   ) {
  	    $error .= "Invalid option linkage for \"$opt\"\n";
  	}
  
      }
  
      $error .= "GetOptionsFromArray: 1st parameter is not an array reference\n"
        unless $argv && UNIVERSAL::isa( $argv, 'ARRAY' );
  
      # Bail out if errors found.
      die ($error) if $error;
      $error = 0;
  
      # Supply --version and --help support, if needed and allowed.
      if ( defined($auto_version) ? $auto_version : ($requested_version >= 2.3203) ) {
  	if ( !defined($opctl{version}) ) {
  	    $opctl{version} = ['','version',0,CTL_DEST_CODE,undef];
  	    $linkage{version} = \&VersionMessage;
  	}
  	$auto_version = 1;
      }
      if ( defined($auto_help) ? $auto_help : ($requested_version >= 2.3203) ) {
  	if ( !defined($opctl{help}) && !defined($opctl{'?'}) ) {
  	    $opctl{help} = $opctl{'?'} = ['','help',0,CTL_DEST_CODE,undef];
  	    $linkage{help} = \&HelpMessage;
  	}
  	$auto_help = 1;
      }
  
      # Show the options tables if debugging.
      if ( $debug ) {
  	my ($arrow, $k, $v);
  	$arrow = "=> ";
  	while ( ($k,$v) = each(%opctl) ) {
  	    print STDERR ($arrow, "\$opctl{$k} = $v ", OptCtl($v), "\n");
  	    $arrow = "   ";
  	}
      }
  
      # Process argument list
      my $goon = 1;
      while ( $goon && @$argv > 0 ) {
  
  	# Get next argument.
  	$opt = shift (@$argv);
  	print STDERR ("=> arg \"", $opt, "\"\n") if $debug;
  
  	# Double dash is option list terminator.
  	if ( defined($opt) && $opt eq $argend ) {
  	  push (@ret, $argend) if $passthrough;
  	  last;
  	}
  
  	# Look it up.
  	my $tryopt = $opt;
  	my $found;		# success status
  	my $key;		# key (if hash type)
  	my $arg;		# option argument
  	my $ctl;		# the opctl entry
  
  	($found, $opt, $ctl, $arg, $key) =
  	  FindOption ($argv, $prefix, $argend, $opt, \%opctl);
  
  	if ( $found ) {
  
  	    # FindOption undefines $opt in case of errors.
  	    next unless defined $opt;
  
  	    my $argcnt = 0;
  	    while ( defined $arg ) {
  
  		# Get the canonical name.
  		print STDERR ("=> cname for \"$opt\" is ") if $debug;
  		$opt = $ctl->[CTL_CNAME];
  		print STDERR ("\"$ctl->[CTL_CNAME]\"\n") if $debug;
  
  		if ( defined $linkage{$opt} ) {
  		    print STDERR ("=> ref(\$L{$opt}) -> ",
  				  ref($linkage{$opt}), "\n") if $debug;
  
  		    if ( ref($linkage{$opt}) eq 'SCALAR'
  			 || ref($linkage{$opt}) eq 'REF' ) {
  			if ( $ctl->[CTL_TYPE] eq '+' ) {
  			    print STDERR ("=> \$\$L{$opt} += \"$arg\"\n")
  			      if $debug;
  			    if ( defined ${$linkage{$opt}} ) {
  			        ${$linkage{$opt}} += $arg;
  			    }
  		            else {
  			        ${$linkage{$opt}} = $arg;
  			    }
  			}
  			elsif ( $ctl->[CTL_DEST] == CTL_DEST_ARRAY ) {
  			    print STDERR ("=> ref(\$L{$opt}) auto-vivified",
  					  " to ARRAY\n")
  			      if $debug;
  			    my $t = $linkage{$opt};
  			    $$t = $linkage{$opt} = [];
  			    print STDERR ("=> push(\@{\$L{$opt}, \"$arg\")\n")
  			      if $debug;
  			    push (@{$linkage{$opt}}, $arg);
  			}
  			elsif ( $ctl->[CTL_DEST] == CTL_DEST_HASH ) {
  			    print STDERR ("=> ref(\$L{$opt}) auto-vivified",
  					  " to HASH\n")
  			      if $debug;
  			    my $t = $linkage{$opt};
  			    $$t = $linkage{$opt} = {};
  			    print STDERR ("=> \$\$L{$opt}->{$key} = \"$arg\"\n")
  			      if $debug;
  			    $linkage{$opt}->{$key} = $arg;
  			}
  			else {
  			    print STDERR ("=> \$\$L{$opt} = \"$arg\"\n")
  			      if $debug;
  			    ${$linkage{$opt}} = $arg;
  		        }
  		    }
  		    elsif ( ref($linkage{$opt}) eq 'ARRAY' ) {
  			print STDERR ("=> push(\@{\$L{$opt}, \"$arg\")\n")
  			    if $debug;
  			push (@{$linkage{$opt}}, $arg);
  		    }
  		    elsif ( ref($linkage{$opt}) eq 'HASH' ) {
  			print STDERR ("=> \$\$L{$opt}->{$key} = \"$arg\"\n")
  			    if $debug;
  			$linkage{$opt}->{$key} = $arg;
  		    }
  		    elsif ( ref($linkage{$opt}) eq 'CODE' ) {
  			print STDERR ("=> &L{$opt}(\"$opt\"",
  				      $ctl->[CTL_DEST] == CTL_DEST_HASH ? ", \"$key\"" : "",
  				      ", \"$arg\")\n")
  			    if $debug;
  			my $eval_error = do {
  			    local $@;
  			    local $SIG{__DIE__}  = 'DEFAULT';
  			    eval {
  				&{$linkage{$opt}}
  				  (Getopt::Long::CallBack->new
  				   (name    => $opt,
  				    ctl     => $ctl,
  				    opctl   => \%opctl,
  				    linkage => \%linkage,
  				    prefix  => $prefix,
  				   ),
  				   $ctl->[CTL_DEST] == CTL_DEST_HASH ? ($key) : (),
  				   $arg);
  			    };
  			    $@;
  			};
  			print STDERR ("=> die($eval_error)\n")
  			  if $debug && $eval_error ne '';
  			if ( $eval_error =~ /^!/ ) {
  			    if ( $eval_error =~ /^!FINISH\b/ ) {
  				$goon = 0;
  			    }
  			}
  			elsif ( $eval_error ne '' ) {
  			    warn ($eval_error);
  			    $error++;
  			}
  		    }
  		    else {
  			print STDERR ("Invalid REF type \"", ref($linkage{$opt}),
  				      "\" in linkage\n");
  			die("Getopt::Long -- internal error!\n");
  		    }
  		}
  		# No entry in linkage means entry in userlinkage.
  		elsif ( $ctl->[CTL_DEST] == CTL_DEST_ARRAY ) {
  		    if ( defined $userlinkage->{$opt} ) {
  			print STDERR ("=> push(\@{\$L{$opt}}, \"$arg\")\n")
  			    if $debug;
  			push (@{$userlinkage->{$opt}}, $arg);
  		    }
  		    else {
  			print STDERR ("=>\$L{$opt} = [\"$arg\"]\n")
  			    if $debug;
  			$userlinkage->{$opt} = [$arg];
  		    }
  		}
  		elsif ( $ctl->[CTL_DEST] == CTL_DEST_HASH ) {
  		    if ( defined $userlinkage->{$opt} ) {
  			print STDERR ("=> \$L{$opt}->{$key} = \"$arg\"\n")
  			    if $debug;
  			$userlinkage->{$opt}->{$key} = $arg;
  		    }
  		    else {
  			print STDERR ("=>\$L{$opt} = {$key => \"$arg\"}\n")
  			    if $debug;
  			$userlinkage->{$opt} = {$key => $arg};
  		    }
  		}
  		else {
  		    if ( $ctl->[CTL_TYPE] eq '+' ) {
  			print STDERR ("=> \$L{$opt} += \"$arg\"\n")
  			  if $debug;
  			if ( defined $userlinkage->{$opt} ) {
  			    $userlinkage->{$opt} += $arg;
  			}
  			else {
  			    $userlinkage->{$opt} = $arg;
  			}
  		    }
  		    else {
  			print STDERR ("=>\$L{$opt} = \"$arg\"\n") if $debug;
  			$userlinkage->{$opt} = $arg;
  		    }
  		}
  
  		$argcnt++;
  		last if $argcnt >= $ctl->[CTL_AMAX] && $ctl->[CTL_AMAX] != -1;
  		undef($arg);
  
  		# Need more args?
  		if ( $argcnt < $ctl->[CTL_AMIN] ) {
  		    if ( @$argv ) {
  			if ( ValidValue($ctl, $argv->[0], 1, $argend, $prefix) ) {
  			    $arg = shift(@$argv);
  			    if ( $ctl->[CTL_TYPE] =~ /^[iIo]$/ ) {
  				$arg =~ tr/_//d;
  				$arg = $ctl->[CTL_TYPE] eq 'o' && $arg =~ /^0/
  				  ? oct($arg)
  				  : 0+$arg
  			    }
  			    ($key,$arg) = $arg =~ /^([^=]+)=(.*)/
  			      if $ctl->[CTL_DEST] == CTL_DEST_HASH;
  			    next;
  			}
  			warn("Value \"$$argv[0]\" invalid for option $opt\n");
  			$error++;
  		    }
  		    else {
  			warn("Insufficient arguments for option $opt\n");
  			$error++;
  		    }
  		}
  
  		# Any more args?
  		if ( @$argv && ValidValue($ctl, $argv->[0], 0, $argend, $prefix) ) {
  		    $arg = shift(@$argv);
  		    if ( $ctl->[CTL_TYPE] =~ /^[iIo]$/ ) {
  			$arg =~ tr/_//d;
  			$arg = $ctl->[CTL_TYPE] eq 'o' && $arg =~ /^0/
  			  ? oct($arg)
  			  : 0+$arg
  		    }
  		    ($key,$arg) = $arg =~ /^([^=]+)=(.*)/
  		      if $ctl->[CTL_DEST] == CTL_DEST_HASH;
  		    next;
  		}
  	    }
  	}
  
  	# Not an option. Save it if we $PERMUTE and don't have a <>.
  	elsif ( $order == $PERMUTE ) {
  	    # Try non-options call-back.
  	    my $cb;
  	    if ( defined ($cb = $linkage{'<>'}) ) {
  		print STDERR ("=> &L{$tryopt}(\"$tryopt\")\n")
  		  if $debug;
  		my $eval_error = do {
  		    local $@;
  		    local $SIG{__DIE__}  = 'DEFAULT';
  		    eval {
  			# The arg to <> cannot be the CallBack object
  			# since it may be passed to other modules that
  			# get confused (e.g., Archive::Tar). Well,
  			# it's not relevant for this callback anyway.
  			&$cb($tryopt);
  		    };
  		    $@;
  		};
  		print STDERR ("=> die($eval_error)\n")
  		  if $debug && $eval_error ne '';
  		if ( $eval_error =~ /^!/ ) {
  		    if ( $eval_error =~ /^!FINISH\b/ ) {
  			$goon = 0;
  		    }
  		}
  		elsif ( $eval_error ne '' ) {
  		    warn ($eval_error);
  		    $error++;
  		}
  	    }
  	    else {
  		print STDERR ("=> saving \"$tryopt\" ",
  			      "(not an option, may permute)\n") if $debug;
  		push (@ret, $tryopt);
  	    }
  	    next;
  	}
  
  	# ...otherwise, terminate.
  	else {
  	    # Push this one back and exit.
  	    unshift (@$argv, $tryopt);
  	    return ($error == 0);
  	}
  
      }
  
      # Finish.
      if ( @ret && $order == $PERMUTE ) {
  	#  Push back accumulated arguments
  	print STDERR ("=> restoring \"", join('" "', @ret), "\"\n")
  	    if $debug;
  	unshift (@$argv, @ret);
      }
  
      return ($error == 0);
  }
  
  # A readable representation of what's in an optbl.
  sub OptCtl ($) {
      my ($v) = @_;
      my @v = map { defined($_) ? ($_) : ("<undef>") } @$v;
      "[".
        join(",",
  	   "\"$v[CTL_TYPE]\"",
  	   "\"$v[CTL_CNAME]\"",
  	   "\"$v[CTL_DEFAULT]\"",
  	   ("\$","\@","\%","\&")[$v[CTL_DEST] || 0],
  	   $v[CTL_AMIN] || '',
  	   $v[CTL_AMAX] || '',
  #	   $v[CTL_RANGE] || '',
  #	   $v[CTL_REPEAT] || '',
  	  ). "]";
  }
  
  # Parse an option specification and fill the tables.
  sub ParseOptionSpec ($$) {
      my ($opt, $opctl) = @_;
  
      # Match option spec.
      if ( $opt !~ m;^
  		   (
  		     # Option name
  		     (?: \w+[-\w]* )
  		     # Alias names, or "?"
  		     (?: \| (?: \? | \w[-\w]* ) )*
  		     # Aliases
  		     (?: \| (?: [^-|!+=:][^|!+=:]* )? )*
  		   )?
  		   (
  		     # Either modifiers ...
  		     [!+]
  		     |
  		     # ... or a value/dest/repeat specification
  		     [=:] [ionfs] [@%]? (?: \{\d*,?\d*\} )?
  		     |
  		     # ... or an optional-with-default spec
  		     : (?: -?\d+ | \+ ) [@%]?
  		   )?
  		   $;x ) {
  	return (undef, "Error in option spec: \"$opt\"\n");
      }
  
      my ($names, $spec) = ($1, $2);
      $spec = '' unless defined $spec;
  
      # $orig keeps track of the primary name the user specified.
      # This name will be used for the internal or external linkage.
      # In other words, if the user specifies "FoO|BaR", it will
      # match any case combinations of 'foo' and 'bar', but if a global
      # variable needs to be set, it will be $opt_FoO in the exact case
      # as specified.
      my $orig;
  
      my @names;
      if ( defined $names ) {
  	@names =  split (/\|/, $names);
  	$orig = $names[0];
      }
      else {
  	@names = ('');
  	$orig = '';
      }
  
      # Construct the opctl entries.
      my $entry;
      if ( $spec eq '' || $spec eq '+' || $spec eq '!' ) {
  	# Fields are hard-wired here.
  	$entry = [$spec,$orig,undef,CTL_DEST_SCALAR,0,0];
      }
      elsif ( $spec =~ /^:(-?\d+|\+)([@%])?$/ ) {
  	my $def = $1;
  	my $dest = $2;
  	my $type = $def eq '+' ? 'I' : 'i';
  	$dest ||= '$';
  	$dest = $dest eq '@' ? CTL_DEST_ARRAY
  	  : $dest eq '%' ? CTL_DEST_HASH : CTL_DEST_SCALAR;
  	# Fields are hard-wired here.
  	$entry = [$type,$orig,$def eq '+' ? undef : $def,
  		  $dest,0,1];
      }
      else {
  	my ($mand, $type, $dest) =
  	  $spec =~ /^([=:])([ionfs])([@%])?(\{(\d+)?(,)?(\d+)?\})?$/;
  	return (undef, "Cannot repeat while bundling: \"$opt\"\n")
  	  if $bundling && defined($4);
  	my ($mi, $cm, $ma) = ($5, $6, $7);
  	return (undef, "{0} is useless in option spec: \"$opt\"\n")
  	  if defined($mi) && !$mi && !defined($ma) && !defined($cm);
  
  	$type = 'i' if $type eq 'n';
  	$dest ||= '$';
  	$dest = $dest eq '@' ? CTL_DEST_ARRAY
  	  : $dest eq '%' ? CTL_DEST_HASH : CTL_DEST_SCALAR;
  	# Default minargs to 1/0 depending on mand status.
  	$mi = $mand eq '=' ? 1 : 0 unless defined $mi;
  	# Adjust mand status according to minargs.
  	$mand = $mi ? '=' : ':';
  	# Adjust maxargs.
  	$ma = $mi ? $mi : 1 unless defined $ma || defined $cm;
  	return (undef, "Max must be greater than zero in option spec: \"$opt\"\n")
  	  if defined($ma) && !$ma;
  	return (undef, "Max less than min in option spec: \"$opt\"\n")
  	  if defined($ma) && $ma < $mi;
  
  	# Fields are hard-wired here.
  	$entry = [$type,$orig,undef,$dest,$mi,$ma||-1];
      }
  
      # Process all names. First is canonical, the rest are aliases.
      my $dups = '';
      foreach ( @names ) {
  
  	$_ = lc ($_)
  	  if $ignorecase > (($bundling && length($_) == 1) ? 1 : 0);
  
  	if ( exists $opctl->{$_} ) {
  	    $dups .= "Duplicate specification \"$opt\" for option \"$_\"\n";
  	}
  
  	if ( $spec eq '!' ) {
  	    $opctl->{"no$_"} = $entry;
  	    $opctl->{"no-$_"} = $entry;
  	    $opctl->{$_} = [@$entry];
  	    $opctl->{$_}->[CTL_TYPE] = '';
  	}
  	else {
  	    $opctl->{$_} = $entry;
  	}
      }
  
      if ( $dups && $^W ) {
  	foreach ( split(/\n+/, $dups) ) {
  	    warn($_."\n");
  	}
      }
      ($names[0], $orig);
  }
  
  # Option lookup.
  sub FindOption ($$$$$) {
  
      # returns (1, $opt, $ctl, $arg, $key) if okay,
      # returns (1, undef) if option in error,
      # returns (0) otherwise.
  
      my ($argv, $prefix, $argend, $opt, $opctl) = @_;
  
      print STDERR ("=> find \"$opt\"\n") if $debug;
  
      return (0) unless defined($opt);
      return (0) unless $opt =~ /^($prefix)(.*)$/s;
      return (0) if $opt eq "-" && !defined $opctl->{''};
  
      $opt = substr( $opt, length($1) ); # retain taintedness
      my $starter = $1;
  
      print STDERR ("=> split \"$starter\"+\"$opt\"\n") if $debug;
  
      my $optarg;			# value supplied with --opt=value
      my $rest;			# remainder from unbundling
  
      # If it is a long option, it may include the value.
      # With getopt_compat, only if not bundling.
      if ( ($starter=~/^$longprefix$/
  	  || ($getopt_compat && ($bundling == 0 || $bundling == 2)))
  	 && (my $oppos = index($opt, '=', 1)) > 0) {
  	my $optorg = $opt;
  	$opt = substr($optorg, 0, $oppos);
  	$optarg = substr($optorg, $oppos + 1); # retain tainedness
  	print STDERR ("=> option \"", $opt,
  		      "\", optarg = \"$optarg\"\n") if $debug;
      }
  
      #### Look it up ###
  
      my $tryopt = $opt;		# option to try
  
      if ( ( $bundling || $bundling_values ) && $starter eq '-' ) {
  
  	# To try overrides, obey case ignore.
  	$tryopt = $ignorecase ? lc($opt) : $opt;
  
  	# If bundling == 2, long options can override bundles.
  	if ( $bundling == 2 && length($tryopt) > 1
  	     && defined ($opctl->{$tryopt}) ) {
  	    print STDERR ("=> $starter$tryopt overrides unbundling\n")
  	      if $debug;
  	}
  
  	# If bundling_values, option may be followed by the value.
  	elsif ( $bundling_values ) {
  	    $tryopt = $opt;
  	    # Unbundle single letter option.
  	    $rest = length ($tryopt) > 0 ? substr ($tryopt, 1) : '';
  	    $tryopt = substr ($tryopt, 0, 1);
  	    $tryopt = lc ($tryopt) if $ignorecase > 1;
  	    print STDERR ("=> $starter$tryopt unbundled from ",
  			  "$starter$tryopt$rest\n") if $debug;
  	    # Whatever remains may not be considered an option.
  	    $optarg = $rest eq '' ? undef : $rest;
  	    $rest = undef;
  	}
  
  	# Split off a single letter and leave the rest for
  	# further processing.
  	else {
  	    $tryopt = $opt;
  	    # Unbundle single letter option.
  	    $rest = length ($tryopt) > 0 ? substr ($tryopt, 1) : '';
  	    $tryopt = substr ($tryopt, 0, 1);
  	    $tryopt = lc ($tryopt) if $ignorecase > 1;
  	    print STDERR ("=> $starter$tryopt unbundled from ",
  			  "$starter$tryopt$rest\n") if $debug;
  	    $rest = undef unless $rest ne '';
  	}
      }
  
      # Try auto-abbreviation.
      elsif ( $autoabbrev && $opt ne "" ) {
  	# Sort the possible long option names.
  	my @names = sort(keys (%$opctl));
  	# Downcase if allowed.
  	$opt = lc ($opt) if $ignorecase;
  	$tryopt = $opt;
  	# Turn option name into pattern.
  	my $pat = quotemeta ($opt);
  	# Look up in option names.
  	my @hits = grep (/^$pat/, @names);
  	print STDERR ("=> ", scalar(@hits), " hits (@hits) with \"$pat\" ",
  		      "out of ", scalar(@names), "\n") if $debug;
  
  	# Check for ambiguous results.
  	unless ( (@hits <= 1) || (grep ($_ eq $opt, @hits) == 1) ) {
  	    # See if all matches are for the same option.
  	    my %hit;
  	    foreach ( @hits ) {
  		my $hit = $opctl->{$_}->[CTL_CNAME]
  		  if defined $opctl->{$_}->[CTL_CNAME];
  		$hit = "no" . $hit if $opctl->{$_}->[CTL_TYPE] eq '!';
  		$hit{$hit} = 1;
  	    }
  	    # Remove auto-supplied options (version, help).
  	    if ( keys(%hit) == 2 ) {
  		if ( $auto_version && exists($hit{version}) ) {
  		    delete $hit{version};
  		}
  		elsif ( $auto_help && exists($hit{help}) ) {
  		    delete $hit{help};
  		}
  	    }
  	    # Now see if it really is ambiguous.
  	    unless ( keys(%hit) == 1 ) {
  		return (0) if $passthrough;
  		warn ("Option ", $opt, " is ambiguous (",
  		      join(", ", @hits), ")\n");
  		$error++;
  		return (1, undef);
  	    }
  	    @hits = keys(%hit);
  	}
  
  	# Complete the option name, if appropriate.
  	if ( @hits == 1 && $hits[0] ne $opt ) {
  	    $tryopt = $hits[0];
  	    $tryopt = lc ($tryopt)
  	      if $ignorecase > (($bundling && length($tryopt) == 1) ? 1 : 0);
  	    print STDERR ("=> option \"$opt\" -> \"$tryopt\"\n")
  		if $debug;
  	}
      }
  
      # Map to all lowercase if ignoring case.
      elsif ( $ignorecase ) {
  	$tryopt = lc ($opt);
      }
  
      # Check validity by fetching the info.
      my $ctl = $opctl->{$tryopt};
      unless  ( defined $ctl ) {
  	return (0) if $passthrough;
  	# Pretend one char when bundling.
  	if ( $bundling == 1 && length($starter) == 1 ) {
  	    $opt = substr($opt,0,1);
              unshift (@$argv, $starter.$rest) if defined $rest;
  	}
  	if ( $opt eq "" ) {
  	    warn ("Missing option after ", $starter, "\n");
  	}
  	else {
  	    warn ("Unknown option: ", $opt, "\n");
  	}
  	$error++;
  	return (1, undef);
      }
      # Apparently valid.
      $opt = $tryopt;
      print STDERR ("=> found ", OptCtl($ctl),
  		  " for \"", $opt, "\"\n") if $debug;
  
      #### Determine argument status ####
  
      # If it is an option w/o argument, we're almost finished with it.
      my $type = $ctl->[CTL_TYPE];
      my $arg;
  
      if ( $type eq '' || $type eq '!' || $type eq '+' ) {
  	if ( defined $optarg ) {
  	    return (0) if $passthrough;
  	    warn ("Option ", $opt, " does not take an argument\n");
  	    $error++;
  	    undef $opt;
  	    undef $optarg if $bundling_values;
  	}
  	elsif ( $type eq '' || $type eq '+' ) {
  	    # Supply explicit value.
  	    $arg = 1;
  	}
  	else {
  	    $opt =~ s/^no-?//i;	# strip NO prefix
  	    $arg = 0;		# supply explicit value
  	}
  	unshift (@$argv, $starter.$rest) if defined $rest;
  	return (1, $opt, $ctl, $arg);
      }
  
      # Get mandatory status and type info.
      my $mand = $ctl->[CTL_AMIN];
  
      # Check if there is an option argument available.
      if ( $gnu_compat ) {
  	my $optargtype = 0; # none, 1 = empty, 2 = nonempty, 3 = aux
  	if ( defined($optarg) ) {
  	    $optargtype = (length($optarg) == 0) ? 1 : 2;
  	}
  	elsif ( defined $rest || @$argv > 0 ) {
  	    # GNU getopt_long() does not accept the (optional)
  	    # argument to be passed to the option without = sign.
  	    # We do, since not doing so breaks existing scripts.
  	    $optargtype = 3;
  	}
  	if(($optargtype == 0) && !$mand) {
  	    my $val
  	      = defined($ctl->[CTL_DEFAULT]) ? $ctl->[CTL_DEFAULT]
  	      : $type eq 's'                 ? ''
  	      :                                0;
  	    return (1, $opt, $ctl, $val);
  	}
  	return (1, $opt, $ctl, $type eq 's' ? '' : 0)
  	  if $optargtype == 1;  # --foo=  -> return nothing
      }
  
      # Check if there is an option argument available.
      if ( defined $optarg
  	 ? ($optarg eq '')
  	 : !(defined $rest || @$argv > 0) ) {
  	# Complain if this option needs an argument.
  #	if ( $mand && !($type eq 's' ? defined($optarg) : 0) ) {
  	if ( $mand ) {
  	    return (0) if $passthrough;
  	    warn ("Option ", $opt, " requires an argument\n");
  	    $error++;
  	    return (1, undef);
  	}
  	if ( $type eq 'I' ) {
  	    # Fake incremental type.
  	    my @c = @$ctl;
  	    $c[CTL_TYPE] = '+';
  	    return (1, $opt, \@c, 1);
  	}
  	return (1, $opt, $ctl,
  		defined($ctl->[CTL_DEFAULT]) ? $ctl->[CTL_DEFAULT] :
  		$type eq 's' ? '' : 0);
      }
  
      # Get (possibly optional) argument.
      $arg = (defined $rest ? $rest
  	    : (defined $optarg ? $optarg : shift (@$argv)));
  
      # Get key if this is a "name=value" pair for a hash option.
      my $key;
      if ($ctl->[CTL_DEST] == CTL_DEST_HASH && defined $arg) {
  	($key, $arg) = ($arg =~ /^([^=]*)=(.*)$/s) ? ($1, $2)
  	  : ($arg, defined($ctl->[CTL_DEFAULT]) ? $ctl->[CTL_DEFAULT] :
  	     ($mand ? undef : ($type eq 's' ? "" : 1)));
  	if (! defined $arg) {
  	    warn ("Option $opt, key \"$key\", requires a value\n");
  	    $error++;
  	    # Push back.
  	    unshift (@$argv, $starter.$rest) if defined $rest;
  	    return (1, undef);
  	}
      }
  
      #### Check if the argument is valid for this option ####
  
      my $key_valid = $ctl->[CTL_DEST] == CTL_DEST_HASH ? "[^=]+=" : "";
  
      if ( $type eq 's' ) {	# string
  	# A mandatory string takes anything.
  	return (1, $opt, $ctl, $arg, $key) if $mand;
  
  	# Same for optional string as a hash value
  	return (1, $opt, $ctl, $arg, $key)
  	  if $ctl->[CTL_DEST] == CTL_DEST_HASH;
  
  	# An optional string takes almost anything.
  	return (1, $opt, $ctl, $arg, $key)
  	  if defined $optarg || defined $rest;
  	return (1, $opt, $ctl, $arg, $key) if $arg eq "-"; # ??
  
  	# Check for option or option list terminator.
  	if ($arg eq $argend ||
  	    $arg =~ /^$prefix.+/) {
  	    # Push back.
  	    unshift (@$argv, $arg);
  	    # Supply empty value.
  	    $arg = '';
  	}
      }
  
      elsif ( $type eq 'i'	# numeric/integer
              || $type eq 'I'	# numeric/integer w/ incr default
  	    || $type eq 'o' ) { # dec/oct/hex/bin value
  
  	my $o_valid = $type eq 'o' ? PAT_XINT : PAT_INT;
  
  	if ( $bundling && defined $rest
  	     && $rest =~ /^($key_valid)($o_valid)(.*)$/si ) {
  	    ($key, $arg, $rest) = ($1, $2, $+);
  	    chop($key) if $key;
  	    $arg = ($type eq 'o' && $arg =~ /^0/) ? oct($arg) : 0+$arg;
  	    unshift (@$argv, $starter.$rest) if defined $rest && $rest ne '';
  	}
  	elsif ( $arg =~ /^$o_valid$/si ) {
  	    $arg =~ tr/_//d;
  	    $arg = ($type eq 'o' && $arg =~ /^0/) ? oct($arg) : 0+$arg;
  	}
  	else {
  	    if ( defined $optarg || $mand ) {
  		if ( $passthrough ) {
  		    unshift (@$argv, defined $rest ? $starter.$rest : $arg)
  		      unless defined $optarg;
  		    return (0);
  		}
  		warn ("Value \"", $arg, "\" invalid for option ",
  		      $opt, " (",
  		      $type eq 'o' ? "extended " : '',
  		      "number expected)\n");
  		$error++;
  		# Push back.
  		unshift (@$argv, $starter.$rest) if defined $rest;
  		return (1, undef);
  	    }
  	    else {
  		# Push back.
  		unshift (@$argv, defined $rest ? $starter.$rest : $arg);
  		if ( $type eq 'I' ) {
  		    # Fake incremental type.
  		    my @c = @$ctl;
  		    $c[CTL_TYPE] = '+';
  		    return (1, $opt, \@c, 1);
  		}
  		# Supply default value.
  		$arg = defined($ctl->[CTL_DEFAULT]) ? $ctl->[CTL_DEFAULT] : 0;
  	    }
  	}
      }
  
      elsif ( $type eq 'f' ) { # real number, int is also ok
  	my $o_valid = PAT_FLOAT;
  	if ( $bundling && defined $rest &&
  	     $rest =~ /^($key_valid)($o_valid)(.*)$/s ) {
  	    $arg =~ tr/_//d;
  	    ($key, $arg, $rest) = ($1, $2, $+);
  	    chop($key) if $key;
  	    unshift (@$argv, $starter.$rest) if defined $rest && $rest ne '';
  	}
  	elsif ( $arg =~ /^$o_valid$/ ) {
  	    $arg =~ tr/_//d;
  	}
  	else {
  	    if ( defined $optarg || $mand ) {
  		if ( $passthrough ) {
  		    unshift (@$argv, defined $rest ? $starter.$rest : $arg)
  		      unless defined $optarg;
  		    return (0);
  		}
  		warn ("Value \"", $arg, "\" invalid for option ",
  		      $opt, " (real number expected)\n");
  		$error++;
  		# Push back.
  		unshift (@$argv, $starter.$rest) if defined $rest;
  		return (1, undef);
  	    }
  	    else {
  		# Push back.
  		unshift (@$argv, defined $rest ? $starter.$rest : $arg);
  		# Supply default value.
  		$arg = 0.0;
  	    }
  	}
      }
      else {
  	die("Getopt::Long internal error (Can't happen)\n");
      }
      return (1, $opt, $ctl, $arg, $key);
  }
  
  sub ValidValue ($$$$$) {
      my ($ctl, $arg, $mand, $argend, $prefix) = @_;
  
      if ( $ctl->[CTL_DEST] == CTL_DEST_HASH ) {
  	return 0 unless $arg =~ /[^=]+=(.*)/;
  	$arg = $1;
      }
  
      my $type = $ctl->[CTL_TYPE];
  
      if ( $type eq 's' ) {	# string
  	# A mandatory string takes anything.
  	return (1) if $mand;
  
  	return (1) if $arg eq "-";
  
  	# Check for option or option list terminator.
  	return 0 if $arg eq $argend || $arg =~ /^$prefix.+/;
  	return 1;
      }
  
      elsif ( $type eq 'i'	# numeric/integer
              || $type eq 'I'	# numeric/integer w/ incr default
  	    || $type eq 'o' ) { # dec/oct/hex/bin value
  
  	my $o_valid = $type eq 'o' ? PAT_XINT : PAT_INT;
  	return $arg =~ /^$o_valid$/si;
      }
  
      elsif ( $type eq 'f' ) { # real number, int is also ok
  	my $o_valid = PAT_FLOAT;
  	return $arg =~ /^$o_valid$/;
      }
      die("ValidValue: Cannot happen\n");
  }
  
  # Getopt::Long Configuration.
  sub Configure (@) {
      my (@options) = @_;
  
      my $prevconfig =
        [ $error, $debug, $major_version, $minor_version, $caller,
  	$autoabbrev, $getopt_compat, $ignorecase, $bundling, $order,
  	$gnu_compat, $passthrough, $genprefix, $auto_version, $auto_help,
  	$longprefix, $bundling_values ];
  
      if ( ref($options[0]) eq 'ARRAY' ) {
  	( $error, $debug, $major_version, $minor_version, $caller,
  	  $autoabbrev, $getopt_compat, $ignorecase, $bundling, $order,
  	  $gnu_compat, $passthrough, $genprefix, $auto_version, $auto_help,
  	  $longprefix, $bundling_values ) = @{shift(@options)};
      }
  
      my $opt;
      foreach $opt ( @options ) {
  	my $try = lc ($opt);
  	my $action = 1;
  	if ( $try =~ /^no_?(.*)$/s ) {
  	    $action = 0;
  	    $try = $+;
  	}
  	if ( ($try eq 'default' or $try eq 'defaults') && $action ) {
  	    ConfigDefaults ();
  	}
  	elsif ( ($try eq 'posix_default' or $try eq 'posix_defaults') ) {
  	    local $ENV{POSIXLY_CORRECT};
  	    $ENV{POSIXLY_CORRECT} = 1 if $action;
  	    ConfigDefaults ();
  	}
  	elsif ( $try eq 'auto_abbrev' or $try eq 'autoabbrev' ) {
  	    $autoabbrev = $action;
  	}
  	elsif ( $try eq 'getopt_compat' ) {
  	    $getopt_compat = $action;
              $genprefix = $action ? "(--|-|\\+)" : "(--|-)";
  	}
  	elsif ( $try eq 'gnu_getopt' ) {
  	    if ( $action ) {
  		$gnu_compat = 1;
  		$bundling = 1;
  		$getopt_compat = 0;
                  $genprefix = "(--|-)";
  		$order = $PERMUTE;
  		$bundling_values = 0;
  	    }
  	}
  	elsif ( $try eq 'gnu_compat' ) {
  	    $gnu_compat = $action;
  	    $bundling = 0;
  	    $bundling_values = 1;
  	}
  	elsif ( $try =~ /^(auto_?)?version$/ ) {
  	    $auto_version = $action;
  	}
  	elsif ( $try =~ /^(auto_?)?help$/ ) {
  	    $auto_help = $action;
  	}
  	elsif ( $try eq 'ignorecase' or $try eq 'ignore_case' ) {
  	    $ignorecase = $action;
  	}
  	elsif ( $try eq 'ignorecase_always' or $try eq 'ignore_case_always' ) {
  	    $ignorecase = $action ? 2 : 0;
  	}
  	elsif ( $try eq 'bundling' ) {
  	    $bundling = $action;
  	    $bundling_values = 0 if $action;
  	}
  	elsif ( $try eq 'bundling_override' ) {
  	    $bundling = $action ? 2 : 0;
  	    $bundling_values = 0 if $action;
  	}
  	elsif ( $try eq 'bundling_values' ) {
  	    $bundling_values = $action;
  	    $bundling = 0 if $action;
  	}
  	elsif ( $try eq 'require_order' ) {
  	    $order = $action ? $REQUIRE_ORDER : $PERMUTE;
  	}
  	elsif ( $try eq 'permute' ) {
  	    $order = $action ? $PERMUTE : $REQUIRE_ORDER;
  	}
  	elsif ( $try eq 'pass_through' or $try eq 'passthrough' ) {
  	    $passthrough = $action;
  	}
  	elsif ( $try =~ /^prefix=(.+)$/ && $action ) {
  	    $genprefix = $1;
  	    # Turn into regexp. Needs to be parenthesized!
  	    $genprefix = "(" . quotemeta($genprefix) . ")";
  	    eval { '' =~ /$genprefix/; };
  	    die("Getopt::Long: invalid pattern \"$genprefix\"\n") if $@;
  	}
  	elsif ( $try =~ /^prefix_pattern=(.+)$/ && $action ) {
  	    $genprefix = $1;
  	    # Parenthesize if needed.
  	    $genprefix = "(" . $genprefix . ")"
  	      unless $genprefix =~ /^\(.*\)$/;
  	    eval { '' =~ m"$genprefix"; };
  	    die("Getopt::Long: invalid pattern \"$genprefix\"\n") if $@;
  	}
  	elsif ( $try =~ /^long_prefix_pattern=(.+)$/ && $action ) {
  	    $longprefix = $1;
  	    # Parenthesize if needed.
  	    $longprefix = "(" . $longprefix . ")"
  	      unless $longprefix =~ /^\(.*\)$/;
  	    eval { '' =~ m"$longprefix"; };
  	    die("Getopt::Long: invalid long prefix pattern \"$longprefix\"\n") if $@;
  	}
  	elsif ( $try eq 'debug' ) {
  	    $debug = $action;
  	}
  	else {
  	    die("Getopt::Long: unknown or erroneous config parameter \"$opt\"\n")
  	}
      }
      $prevconfig;
  }
  
  # Deprecated name.
  sub config (@) {
      Configure (@_);
  }
  
  # Issue a standard message for --version.
  #
  # The arguments are mostly the same as for Pod::Usage::pod2usage:
  #
  #  - a number (exit value)
  #  - a string (lead in message)
  #  - a hash with options. See Pod::Usage for details.
  #
  sub VersionMessage(@) {
      # Massage args.
      my $pa = setup_pa_args("version", @_);
  
      my $v = $main::VERSION;
      my $fh = $pa->{-output} ||
        ( ($pa->{-exitval} eq "NOEXIT" || $pa->{-exitval} < 2) ? \*STDOUT : \*STDERR );
  
      print $fh (defined($pa->{-message}) ? $pa->{-message} : (),
  	       $0, defined $v ? " version $v" : (),
  	       "\n",
  	       "(", __PACKAGE__, "::", "GetOptions",
  	       " version ",
  	       defined($Getopt::Long::VERSION_STRING)
  	         ? $Getopt::Long::VERSION_STRING : $VERSION, ";",
  	       " Perl version ",
  	       $] >= 5.006 ? sprintf("%vd", $^V) : $],
  	       ")\n");
      exit($pa->{-exitval}) unless $pa->{-exitval} eq "NOEXIT";
  }
  
  # Issue a standard message for --help.
  #
  # The arguments are the same as for Pod::Usage::pod2usage:
  #
  #  - a number (exit value)
  #  - a string (lead in message)
  #  - a hash with options. See Pod::Usage for details.
  #
  sub HelpMessage(@) {
      eval {
  	require Pod::Usage;
  	import Pod::Usage;
  	1;
      } || die("Cannot provide help: cannot load Pod::Usage\n");
  
      # Note that pod2usage will issue a warning if -exitval => NOEXIT.
      pod2usage(setup_pa_args("help", @_));
  
  }
  
  # Helper routine to set up a normalized hash ref to be used as
  # argument to pod2usage.
  sub setup_pa_args($@) {
      my $tag = shift;		# who's calling
  
      # If called by direct binding to an option, it will get the option
      # name and value as arguments. Remove these, if so.
      @_ = () if @_ == 2 && $_[0] eq $tag;
  
      my $pa;
      if ( @_ > 1 ) {
  	$pa = { @_ };
      }
      else {
  	$pa = shift || {};
      }
  
      # At this point, $pa can be a number (exit value), string
      # (message) or hash with options.
  
      if ( UNIVERSAL::isa($pa, 'HASH') ) {
  	# Get rid of -msg vs. -message ambiguity.
  	$pa->{-message} = $pa->{-msg};
  	delete($pa->{-msg});
      }
      elsif ( $pa =~ /^-?\d+$/ ) {
  	$pa = { -exitval => $pa };
      }
      else {
  	$pa = { -message => $pa };
      }
  
      # These are _our_ defaults.
      $pa->{-verbose} = 0 unless exists($pa->{-verbose});
      $pa->{-exitval} = 0 unless exists($pa->{-exitval});
      $pa;
  }
  
  # Sneak way to know what version the user requested.
  sub VERSION {
      $requested_version = $_[1];
      shift->SUPER::VERSION(@_);
  }
  
  package Getopt::Long::CallBack;
  
  sub new {
      my ($pkg, %atts) = @_;
      bless { %atts }, $pkg;
  }
  
  sub name {
      my $self = shift;
      ''.$self->{name};
  }
  
  use overload
    # Treat this object as an ordinary string for legacy API.
    '""'	   => \&name,
    fallback => 1;
  
  1;
  
  ################ Documentation ################
  
  =head1 NAME
  
  Getopt::Long - Extended processing of command line options
  
  =head1 SYNOPSIS
  
    use Getopt::Long;
    my $data   = "file.dat";
    my $length = 24;
    my $verbose;
    GetOptions ("length=i" => \$length,    # numeric
                "file=s"   => \$data,      # string
                "verbose"  => \$verbose)   # flag
    or die("Error in command line arguments\n");
  
  =head1 DESCRIPTION
  
  The Getopt::Long module implements an extended getopt function called
  GetOptions(). It parses the command line from C<@ARGV>, recognizing
  and removing specified options and their possible values.
  
  This function adheres to the POSIX syntax for command
  line options, with GNU extensions. In general, this means that options
  have long names instead of single letters, and are introduced with a
  double dash "--". Support for bundling of command line options, as was
  the case with the more traditional single-letter approach, is provided
  but not enabled by default.
  
  =head1 Command Line Options, an Introduction
  
  Command line operated programs traditionally take their arguments from
  the command line, for example filenames or other information that the
  program needs to know. Besides arguments, these programs often take
  command line I<options> as well. Options are not necessary for the
  program to work, hence the name 'option', but are used to modify its
  default behaviour. For example, a program could do its job quietly,
  but with a suitable option it could provide verbose information about
  what it did.
  
  Command line options come in several flavours. Historically, they are
  preceded by a single dash C<->, and consist of a single letter.
  
      -l -a -c
  
  Usually, these single-character options can be bundled:
  
      -lac
  
  Options can have values, the value is placed after the option
  character. Sometimes with whitespace in between, sometimes not:
  
      -s 24 -s24
  
  Due to the very cryptic nature of these options, another style was
  developed that used long names. So instead of a cryptic C<-l> one
  could use the more descriptive C<--long>. To distinguish between a
  bundle of single-character options and a long one, two dashes are used
  to precede the option name. Early implementations of long options used
  a plus C<+> instead. Also, option values could be specified either
  like
  
      --size=24
  
  or
  
      --size 24
  
  The C<+> form is now obsolete and strongly deprecated.
  
  =head1 Getting Started with Getopt::Long
  
  Getopt::Long is the Perl5 successor of C<newgetopt.pl>. This was the
  first Perl module that provided support for handling the new style of
  command line options, in particular long option names, hence the Perl5
  name Getopt::Long. This module also supports single-character options
  and bundling.
  
  To use Getopt::Long from a Perl program, you must include the
  following line in your Perl program:
  
      use Getopt::Long;
  
  This will load the core of the Getopt::Long module and prepare your
  program for using it. Most of the actual Getopt::Long code is not
  loaded until you really call one of its functions.
  
  In the default configuration, options names may be abbreviated to
  uniqueness, case does not matter, and a single dash is sufficient,
  even for long option names. Also, options may be placed between
  non-option arguments. See L<Configuring Getopt::Long> for more
  details on how to configure Getopt::Long.
  
  =head2 Simple options
  
  The most simple options are the ones that take no values. Their mere
  presence on the command line enables the option. Popular examples are:
  
      --all --verbose --quiet --debug
  
  Handling simple options is straightforward:
  
      my $verbose = '';	# option variable with default value (false)
      my $all = '';	# option variable with default value (false)
      GetOptions ('verbose' => \$verbose, 'all' => \$all);
  
  The call to GetOptions() parses the command line arguments that are
  present in C<@ARGV> and sets the option variable to the value C<1> if
  the option did occur on the command line. Otherwise, the option
  variable is not touched. Setting the option value to true is often
  called I<enabling> the option.
  
  The option name as specified to the GetOptions() function is called
  the option I<specification>. Later we'll see that this specification
  can contain more than just the option name. The reference to the
  variable is called the option I<destination>.
  
  GetOptions() will return a true value if the command line could be
  processed successfully. Otherwise, it will write error messages using
  die() and warn(), and return a false result.
  
  =head2 A little bit less simple options
  
  Getopt::Long supports two useful variants of simple options:
  I<negatable> options and I<incremental> options.
  
  A negatable option is specified with an exclamation mark C<!> after the
  option name:
  
      my $verbose = '';	# option variable with default value (false)
      GetOptions ('verbose!' => \$verbose);
  
  Now, using C<--verbose> on the command line will enable C<$verbose>,
  as expected. But it is also allowed to use C<--noverbose>, which will
  disable C<$verbose> by setting its value to C<0>. Using a suitable
  default value, the program can find out whether C<$verbose> is false
  by default, or disabled by using C<--noverbose>.
  
  An incremental option is specified with a plus C<+> after the
  option name:
  
      my $verbose = '';	# option variable with default value (false)
      GetOptions ('verbose+' => \$verbose);
  
  Using C<--verbose> on the command line will increment the value of
  C<$verbose>. This way the program can keep track of how many times the
  option occurred on the command line. For example, each occurrence of
  C<--verbose> could increase the verbosity level of the program.
  
  =head2 Mixing command line option with other arguments
  
  Usually programs take command line options as well as other arguments,
  for example, file names. It is good practice to always specify the
  options first, and the other arguments last. Getopt::Long will,
  however, allow the options and arguments to be mixed and 'filter out'
  all the options before passing the rest of the arguments to the
  program. To stop Getopt::Long from processing further arguments,
  insert a double dash C<--> on the command line:
  
      --size 24 -- --all
  
  In this example, C<--all> will I<not> be treated as an option, but
  passed to the program unharmed, in C<@ARGV>.
  
  =head2 Options with values
  
  For options that take values it must be specified whether the option
  value is required or not, and what kind of value the option expects.
  
  Three kinds of values are supported: integer numbers, floating point
  numbers, and strings.
  
  If the option value is required, Getopt::Long will take the
  command line argument that follows the option and assign this to the
  option variable. If, however, the option value is specified as
  optional, this will only be done if that value does not look like a
  valid command line option itself.
  
      my $tag = '';	# option variable with default value
      GetOptions ('tag=s' => \$tag);
  
  In the option specification, the option name is followed by an equals
  sign C<=> and the letter C<s>. The equals sign indicates that this
  option requires a value. The letter C<s> indicates that this value is
  an arbitrary string. Other possible value types are C<i> for integer
  values, and C<f> for floating point values. Using a colon C<:> instead
  of the equals sign indicates that the option value is optional. In
  this case, if no suitable value is supplied, string valued options get
  an empty string C<''> assigned, while numeric options are set to C<0>.
  
  =head2 Options with multiple values
  
  Options sometimes take several values. For example, a program could
  use multiple directories to search for library files:
  
      --library lib/stdlib --library lib/extlib
  
  To accomplish this behaviour, simply specify an array reference as the
  destination for the option:
  
      GetOptions ("library=s" => \@libfiles);
  
  Alternatively, you can specify that the option can have multiple
  values by adding a "@", and pass a reference to a scalar as the
  destination:
  
      GetOptions ("library=s@" => \$libfiles);
  
  Used with the example above, C<@libfiles> c.q. C<@$libfiles> would
  contain two strings upon completion: C<"lib/stdlib"> and
  C<"lib/extlib">, in that order. It is also possible to specify that
  only integer or floating point numbers are acceptable values.
  
  Often it is useful to allow comma-separated lists of values as well as
  multiple occurrences of the options. This is easy using Perl's split()
  and join() operators:
  
      GetOptions ("library=s" => \@libfiles);
      @libfiles = split(/,/,join(',',@libfiles));
  
  Of course, it is important to choose the right separator string for
  each purpose.
  
  Warning: What follows is an experimental feature.
  
  Options can take multiple values at once, for example
  
      --coordinates 52.2 16.4 --rgbcolor 255 255 149
  
  This can be accomplished by adding a repeat specifier to the option
  specification. Repeat specifiers are very similar to the C<{...}>
  repeat specifiers that can be used with regular expression patterns.
  For example, the above command line would be handled as follows:
  
      GetOptions('coordinates=f{2}' => \@coor, 'rgbcolor=i{3}' => \@color);
  
  The destination for the option must be an array or array reference.
  
  It is also possible to specify the minimal and maximal number of
  arguments an option takes. C<foo=s{2,4}> indicates an option that
  takes at least two and at most 4 arguments. C<foo=s{1,}> indicates one
  or more values; C<foo:s{,}> indicates zero or more option values.
  
  =head2 Options with hash values
  
  If the option destination is a reference to a hash, the option will
  take, as value, strings of the form I<key>C<=>I<value>. The value will
  be stored with the specified key in the hash.
  
      GetOptions ("define=s" => \%defines);
  
  Alternatively you can use:
  
      GetOptions ("define=s%" => \$defines);
  
  When used with command line options:
  
      --define os=linux --define vendor=redhat
  
  the hash C<%defines> (or C<%$defines>) will contain two keys, C<"os">
  with value C<"linux"> and C<"vendor"> with value C<"redhat">. It is
  also possible to specify that only integer or floating point numbers
  are acceptable values. The keys are always taken to be strings.
  
  =head2 User-defined subroutines to handle options
  
  Ultimate control over what should be done when (actually: each time)
  an option is encountered on the command line can be achieved by
  designating a reference to a subroutine (or an anonymous subroutine)
  as the option destination. When GetOptions() encounters the option, it
  will call the subroutine with two or three arguments. The first
  argument is the name of the option. (Actually, it is an object that
  stringifies to the name of the option.) For a scalar or array destination,
  the second argument is the value to be stored. For a hash destination,
  the second argument is the key to the hash, and the third argument
  the value to be stored. It is up to the subroutine to store the value,
  or do whatever it thinks is appropriate.
  
  A trivial application of this mechanism is to implement options that
  are related to each other. For example:
  
      my $verbose = '';	# option variable with default value (false)
      GetOptions ('verbose' => \$verbose,
  	        'quiet'   => sub { $verbose = 0 });
  
  Here C<--verbose> and C<--quiet> control the same variable
  C<$verbose>, but with opposite values.
  
  If the subroutine needs to signal an error, it should call die() with
  the desired error message as its argument. GetOptions() will catch the
  die(), issue the error message, and record that an error result must
  be returned upon completion.
  
  If the text of the error message starts with an exclamation mark C<!>
  it is interpreted specially by GetOptions(). There is currently one
  special command implemented: C<die("!FINISH")> will cause GetOptions()
  to stop processing options, as if it encountered a double dash C<-->.
  
  In version 2.37 the first argument to the callback function was
  changed from string to object. This was done to make room for
  extensions and more detailed control. The object stringifies to the
  option name so this change should not introduce compatibility
  problems.
  
  Here is an example of how to access the option name and value from within
  a subroutine:
  
      GetOptions ('opt=i' => \&handler);
      sub handler {
          my ($opt_name, $opt_value) = @_;
          print("Option name is $opt_name and value is $opt_value\n");
      }
  
  =head2 Options with multiple names
  
  Often it is user friendly to supply alternate mnemonic names for
  options. For example C<--height> could be an alternate name for
  C<--length>. Alternate names can be included in the option
  specification, separated by vertical bar C<|> characters. To implement
  the above example:
  
      GetOptions ('length|height=f' => \$length);
  
  The first name is called the I<primary> name, the other names are
  called I<aliases>. When using a hash to store options, the key will
  always be the primary name.
  
  Multiple alternate names are possible.
  
  =head2 Case and abbreviations
  
  Without additional configuration, GetOptions() will ignore the case of
  option names, and allow the options to be abbreviated to uniqueness.
  
      GetOptions ('length|height=f' => \$length, "head" => \$head);
  
  This call will allow C<--l> and C<--L> for the length option, but
  requires a least C<--hea> and C<--hei> for the head and height options.
  
  =head2 Summary of Option Specifications
  
  Each option specifier consists of two parts: the name specification
  and the argument specification.
  
  The name specification contains the name of the option, optionally
  followed by a list of alternative names separated by vertical bar
  characters.
  
      length	      option name is "length"
      length|size|l     name is "length", aliases are "size" and "l"
  
  The argument specification is optional. If omitted, the option is
  considered boolean, a value of 1 will be assigned when the option is
  used on the command line.
  
  The argument specification can be
  
  =over 4
  
  =item !
  
  The option does not take an argument and may be negated by prefixing
  it with "no" or "no-". E.g. C<"foo!"> will allow C<--foo> (a value of
  1 will be assigned) as well as C<--nofoo> and C<--no-foo> (a value of
  0 will be assigned). If the option has aliases, this applies to the
  aliases as well.
  
  Using negation on a single letter option when bundling is in effect is
  pointless and will result in a warning.
  
  =item +
  
  The option does not take an argument and will be incremented by 1
  every time it appears on the command line. E.g. C<"more+">, when used
  with C<--more --more --more>, will increment the value three times,
  resulting in a value of 3 (provided it was 0 or undefined at first).
  
  The C<+> specifier is ignored if the option destination is not a scalar.
  
  =item = I<type> [ I<desttype> ] [ I<repeat> ]
  
  The option requires an argument of the given type. Supported types
  are:
  
  =over 4
  
  =item s
  
  String. An arbitrary sequence of characters. It is valid for the
  argument to start with C<-> or C<-->.
  
  =item i
  
  Integer. An optional leading plus or minus sign, followed by a
  sequence of digits.
  
  =item o
  
  Extended integer, Perl style. This can be either an optional leading
  plus or minus sign, followed by a sequence of digits, or an octal
  string (a zero, optionally followed by '0', '1', .. '7'), or a
  hexadecimal string (C<0x> followed by '0' .. '9', 'a' .. 'f', case
  insensitive), or a binary string (C<0b> followed by a series of '0'
  and '1').
  
  =item f
  
  Real number. For example C<3.14>, C<-6.23E24> and so on.
  
  =back
  
  The I<desttype> can be C<@> or C<%> to specify that the option is
  list or a hash valued. This is only needed when the destination for
  the option value is not otherwise specified. It should be omitted when
  not needed.
  
  The I<repeat> specifies the number of values this option takes per
  occurrence on the command line. It has the format C<{> [ I<min> ] [ C<,> [ I<max> ] ] C<}>.
  
  I<min> denotes the minimal number of arguments. It defaults to 1 for
  options with C<=> and to 0 for options with C<:>, see below. Note that
  I<min> overrules the C<=> / C<:> semantics.
  
  I<max> denotes the maximum number of arguments. It must be at least
  I<min>. If I<max> is omitted, I<but the comma is not>, there is no
  upper bound to the number of argument values taken.
  
  =item : I<type> [ I<desttype> ]
  
  Like C<=>, but designates the argument as optional.
  If omitted, an empty string will be assigned to string values options,
  and the value zero to numeric options.
  
  Note that if a string argument starts with C<-> or C<-->, it will be
  considered an option on itself.
  
  =item : I<number> [ I<desttype> ]
  
  Like C<:i>, but if the value is omitted, the I<number> will be assigned.
  
  =item : + [ I<desttype> ]
  
  Like C<:i>, but if the value is omitted, the current value for the
  option will be incremented.
  
  =back
  
  =head1 Advanced Possibilities
  
  =head2 Object oriented interface
  
  Getopt::Long can be used in an object oriented way as well:
  
      use Getopt::Long;
      $p = Getopt::Long::Parser->new;
      $p->configure(...configuration options...);
      if ($p->getoptions(...options descriptions...)) ...
      if ($p->getoptionsfromarray( \@array, ...options descriptions...)) ...
  
  Configuration options can be passed to the constructor:
  
      $p = new Getopt::Long::Parser
               config => [...configuration options...];
  
  =head2 Thread Safety
  
  Getopt::Long is thread safe when using ithreads as of Perl 5.8.  It is
  I<not> thread safe when using the older (experimental and now
  obsolete) threads implementation that was added to Perl 5.005.
  
  =head2 Documentation and help texts
  
  Getopt::Long encourages the use of Pod::Usage to produce help
  messages. For example:
  
      use Getopt::Long;
      use Pod::Usage;
  
      my $man = 0;
      my $help = 0;
  
      GetOptions('help|?' => \$help, man => \$man) or pod2usage(2);
      pod2usage(1) if $help;
      pod2usage(-exitval => 0, -verbose => 2) if $man;
  
      __END__
  
      =head1 NAME
  
      sample - Using Getopt::Long and Pod::Usage
  
      =head1 SYNOPSIS
  
      sample [options] [file ...]
  
       Options:
         -help            brief help message
         -man             full documentation
  
      =head1 OPTIONS
  
      =over 8
  
      =item B<-help>
  
      Print a brief help message and exits.
  
      =item B<-man>
  
      Prints the manual page and exits.
  
      =back
  
      =head1 DESCRIPTION
  
      B<This program> will read the given input file(s) and do something
      useful with the contents thereof.
  
      =cut
  
  See L<Pod::Usage> for details.
  
  =head2 Parsing options from an arbitrary array
  
  By default, GetOptions parses the options that are present in the
  global array C<@ARGV>. A special entry C<GetOptionsFromArray> can be
  used to parse options from an arbitrary array.
  
      use Getopt::Long qw(GetOptionsFromArray);
      $ret = GetOptionsFromArray(\@myopts, ...);
  
  When used like this, options and their possible values are removed
  from C<@myopts>, the global C<@ARGV> is not touched at all.
  
  The following two calls behave identically:
  
      $ret = GetOptions( ... );
      $ret = GetOptionsFromArray(\@ARGV, ... );
  
  This also means that a first argument hash reference now becomes the
  second argument:
  
      $ret = GetOptions(\%opts, ... );
      $ret = GetOptionsFromArray(\@ARGV, \%opts, ... );
  
  =head2 Parsing options from an arbitrary string
  
  A special entry C<GetOptionsFromString> can be used to parse options
  from an arbitrary string.
  
      use Getopt::Long qw(GetOptionsFromString);
      $ret = GetOptionsFromString($string, ...);
  
  The contents of the string are split into arguments using a call to
  C<Text::ParseWords::shellwords>. As with C<GetOptionsFromArray>, the
  global C<@ARGV> is not touched.
  
  It is possible that, upon completion, not all arguments in the string
  have been processed. C<GetOptionsFromString> will, when called in list
  context, return both the return status and an array reference to any
  remaining arguments:
  
      ($ret, $args) = GetOptionsFromString($string, ... );
  
  If any arguments remain, and C<GetOptionsFromString> was not called in
  list context, a message will be given and C<GetOptionsFromString> will
  return failure.
  
  As with GetOptionsFromArray, a first argument hash reference now
  becomes the second argument.
  
  =head2 Storing options values in a hash
  
  Sometimes, for example when there are a lot of options, having a
  separate variable for each of them can be cumbersome. GetOptions()
  supports, as an alternative mechanism, storing options values in a
  hash.
  
  To obtain this, a reference to a hash must be passed I<as the first
  argument> to GetOptions(). For each option that is specified on the
  command line, the option value will be stored in the hash with the
  option name as key. Options that are not actually used on the command
  line will not be put in the hash, on other words,
  C<exists($h{option})> (or defined()) can be used to test if an option
  was used. The drawback is that warnings will be issued if the program
  runs under C<use strict> and uses C<$h{option}> without testing with
  exists() or defined() first.
  
      my %h = ();
      GetOptions (\%h, 'length=i');	# will store in $h{length}
  
  For options that take list or hash values, it is necessary to indicate
  this by appending an C<@> or C<%> sign after the type:
  
      GetOptions (\%h, 'colours=s@');	# will push to @{$h{colours}}
  
  To make things more complicated, the hash may contain references to
  the actual destinations, for example:
  
      my $len = 0;
      my %h = ('length' => \$len);
      GetOptions (\%h, 'length=i');	# will store in $len
  
  This example is fully equivalent with:
  
      my $len = 0;
      GetOptions ('length=i' => \$len);	# will store in $len
  
  Any mixture is possible. For example, the most frequently used options
  could be stored in variables while all other options get stored in the
  hash:
  
      my $verbose = 0;			# frequently referred
      my $debug = 0;			# frequently referred
      my %h = ('verbose' => \$verbose, 'debug' => \$debug);
      GetOptions (\%h, 'verbose', 'debug', 'filter', 'size=i');
      if ( $verbose ) { ... }
      if ( exists $h{filter} ) { ... option 'filter' was specified ... }
  
  =head2 Bundling
  
  With bundling it is possible to set several single-character options
  at once. For example if C<a>, C<v> and C<x> are all valid options,
  
      -vax
  
  will set all three.
  
  Getopt::Long supports three styles of bundling. To enable bundling, a
  call to Getopt::Long::Configure is required.
  
  The simplest style of bundling can be enabled with:
  
      Getopt::Long::Configure ("bundling");
  
  Configured this way, single-character options can be bundled but long
  options B<must> always start with a double dash C<--> to avoid
  ambiguity. For example, when C<vax>, C<a>, C<v> and C<x> are all valid
  options,
  
      -vax
  
  will set C<a>, C<v> and C<x>, but
  
      --vax
  
  will set C<vax>.
  
  The second style of bundling lifts this restriction. It can be enabled
  with:
  
      Getopt::Long::Configure ("bundling_override");
  
  Now, C<-vax> will set the option C<vax>.
  
  In all of the above cases, option values may be inserted in the
  bundle. For example:
  
      -h24w80
  
  is equivalent to
  
      -h 24 -w 80
  
  A third style of bundling allows only values to be bundled with
  options. It can be enabled with:
  
      Getopt::Long::Configure ("bundling_values");
  
  Now, C<-h24> will set the option C<h> to C<24>, but option bundles
  like C<-vxa> and C<-h24w80> are flagged as errors.
  
  Enabling C<bundling_values> will disable the other two styles of
  bundling.
  
  When configured for bundling, single-character options are matched
  case sensitive while long options are matched case insensitive. To
  have the single-character options matched case insensitive as well,
  use:
  
      Getopt::Long::Configure ("bundling", "ignorecase_always");
  
  It goes without saying that bundling can be quite confusing.
  
  =head2 The lonesome dash
  
  Normally, a lone dash C<-> on the command line will not be considered
  an option. Option processing will terminate (unless "permute" is
  configured) and the dash will be left in C<@ARGV>.
  
  It is possible to get special treatment for a lone dash. This can be
  achieved by adding an option specification with an empty name, for
  example:
  
      GetOptions ('' => \$stdio);
  
  A lone dash on the command line will now be a legal option, and using
  it will set variable C<$stdio>.
  
  =head2 Argument callback
  
  A special option 'name' C<< <> >> can be used to designate a subroutine
  to handle non-option arguments. When GetOptions() encounters an
  argument that does not look like an option, it will immediately call this
  subroutine and passes it one parameter: the argument name. Well, actually
  it is an object that stringifies to the argument name.
  
  For example:
  
      my $width = 80;
      sub process { ... }
      GetOptions ('width=i' => \$width, '<>' => \&process);
  
  When applied to the following command line:
  
      arg1 --width=72 arg2 --width=60 arg3
  
  This will call
  C<process("arg1")> while C<$width> is C<80>,
  C<process("arg2")> while C<$width> is C<72>, and
  C<process("arg3")> while C<$width> is C<60>.
  
  This feature requires configuration option B<permute>, see section
  L<Configuring Getopt::Long>.
  
  =head1 Configuring Getopt::Long
  
  Getopt::Long can be configured by calling subroutine
  Getopt::Long::Configure(). This subroutine takes a list of quoted
  strings, each specifying a configuration option to be enabled, e.g.
  C<ignore_case>, or disabled, e.g. C<no_ignore_case>. Case does not
  matter. Multiple calls to Configure() are possible.
  
  Alternatively, as of version 2.24, the configuration options may be
  passed together with the C<use> statement:
  
      use Getopt::Long qw(:config no_ignore_case bundling);
  
  The following options are available:
  
  =over 12
  
  =item default
  
  This option causes all configuration options to be reset to their
  default values.
  
  =item posix_default
  
  This option causes all configuration options to be reset to their
  default values as if the environment variable POSIXLY_CORRECT had
  been set.
  
  =item auto_abbrev
  
  Allow option names to be abbreviated to uniqueness.
  Default is enabled unless environment variable
  POSIXLY_CORRECT has been set, in which case C<auto_abbrev> is disabled.
  
  =item getopt_compat
  
  Allow C<+> to start options.
  Default is enabled unless environment variable
  POSIXLY_CORRECT has been set, in which case C<getopt_compat> is disabled.
  
  =item gnu_compat
  
  C<gnu_compat> controls whether C<--opt=> is allowed, and what it should
  do. Without C<gnu_compat>, C<--opt=> gives an error. With C<gnu_compat>,
  C<--opt=> will give option C<opt> and empty value.
  This is the way GNU getopt_long() does it.
  
  Note that C<--opt value> is still accepted, even though GNU
  getopt_long() doesn't.
  
  =item gnu_getopt
  
  This is a short way of setting C<gnu_compat> C<bundling> C<permute>
  C<no_getopt_compat>. With C<gnu_getopt>, command line handling should be
  reasonably compatible with GNU getopt_long().
  
  =item require_order
  
  Whether command line arguments are allowed to be mixed with options.
  Default is disabled unless environment variable
  POSIXLY_CORRECT has been set, in which case C<require_order> is enabled.
  
  See also C<permute>, which is the opposite of C<require_order>.
  
  =item permute
  
  Whether command line arguments are allowed to be mixed with options.
  Default is enabled unless environment variable
  POSIXLY_CORRECT has been set, in which case C<permute> is disabled.
  Note that C<permute> is the opposite of C<require_order>.
  
  If C<permute> is enabled, this means that
  
      --foo arg1 --bar arg2 arg3
  
  is equivalent to
  
      --foo --bar arg1 arg2 arg3
  
  If an argument callback routine is specified, C<@ARGV> will always be
  empty upon successful return of GetOptions() since all options have been
  processed. The only exception is when C<--> is used:
  
      --foo arg1 --bar arg2 -- arg3
  
  This will call the callback routine for arg1 and arg2, and then
  terminate GetOptions() leaving C<"arg3"> in C<@ARGV>.
  
  If C<require_order> is enabled, options processing
  terminates when the first non-option is encountered.
  
      --foo arg1 --bar arg2 arg3
  
  is equivalent to
  
      --foo -- arg1 --bar arg2 arg3
  
  If C<pass_through> is also enabled, options processing will terminate
  at the first unrecognized option, or non-option, whichever comes
  first.
  
  =item bundling (default: disabled)
  
  Enabling this option will allow single-character options to be
  bundled. To distinguish bundles from long option names, long options
  I<must> be introduced with C<--> and bundles with C<->.
  
  Note that, if you have options C<a>, C<l> and C<all>, and
  auto_abbrev enabled, possible arguments and option settings are:
  
      using argument               sets option(s)
      ------------------------------------------
      -a, --a                      a
      -l, --l                      l
      -al, -la, -ala, -all,...     a, l
      --al, --all                  all
  
  The surprising part is that C<--a> sets option C<a> (due to auto
  completion), not C<all>.
  
  Note: disabling C<bundling> also disables C<bundling_override>.
  
  =item bundling_override (default: disabled)
  
  If C<bundling_override> is enabled, bundling is enabled as with
  C<bundling> but now long option names override option bundles.
  
  Note: disabling C<bundling_override> also disables C<bundling>.
  
  B<Note:> Using option bundling can easily lead to unexpected results,
  especially when mixing long options and bundles. Caveat emptor.
  
  =item ignore_case  (default: enabled)
  
  If enabled, case is ignored when matching option names. If, however,
  bundling is enabled as well, single character options will be treated
  case-sensitive.
  
  With C<ignore_case>, option specifications for options that only
  differ in case, e.g., C<"foo"> and C<"Foo">, will be flagged as
  duplicates.
  
  Note: disabling C<ignore_case> also disables C<ignore_case_always>.
  
  =item ignore_case_always (default: disabled)
  
  When bundling is in effect, case is ignored on single-character
  options also.
  
  Note: disabling C<ignore_case_always> also disables C<ignore_case>.
  
  =item auto_version (default:disabled)
  
  Automatically provide support for the B<--version> option if
  the application did not specify a handler for this option itself.
  
  Getopt::Long will provide a standard version message that includes the
  program name, its version (if $main::VERSION is defined), and the
  versions of Getopt::Long and Perl. The message will be written to
  standard output and processing will terminate.
  
  C<auto_version> will be enabled if the calling program explicitly
  specified a version number higher than 2.32 in the C<use> or
  C<require> statement.
  
  =item auto_help (default:disabled)
  
  Automatically provide support for the B<--help> and B<-?> options if
  the application did not specify a handler for this option itself.
  
  Getopt::Long will provide a help message using module L<Pod::Usage>. The
  message, derived from the SYNOPSIS POD section, will be written to
  standard output and processing will terminate.
  
  C<auto_help> will be enabled if the calling program explicitly
  specified a version number higher than 2.32 in the C<use> or
  C<require> statement.
  
  =item pass_through (default: disabled)
  
  With C<pass_through> anything that is unknown, ambiguous or supplied with
  an invalid option will not be flagged as an error. Instead the unknown
  option(s) will be passed to the catchall C<< <> >> if present, otherwise
  through to C<@ARGV>. This makes it possible to write wrapper scripts that
  process only part of the user supplied command line arguments, and pass the
  remaining options to some other program.
  
  If C<require_order> is enabled, options processing will terminate at the
  first unrecognized option, or non-option, whichever comes first and all
  remaining arguments are passed to C<@ARGV> instead of the catchall
  C<< <> >> if present.  However, if C<permute> is enabled instead, results
  can become confusing.
  
  Note that the options terminator (default C<-->), if present, will
  also be passed through in C<@ARGV>.
  
  =item prefix
  
  The string that starts options. If a constant string is not
  sufficient, see C<prefix_pattern>.
  
  =item prefix_pattern
  
  A Perl pattern that identifies the strings that introduce options.
  Default is C<--|-|\+> unless environment variable
  POSIXLY_CORRECT has been set, in which case it is C<--|->.
  
  =item long_prefix_pattern
  
  A Perl pattern that allows the disambiguation of long and short
  prefixes. Default is C<-->.
  
  Typically you only need to set this if you are using nonstandard
  prefixes and want some or all of them to have the same semantics as
  '--' does under normal circumstances.
  
  For example, setting prefix_pattern to C<--|-|\+|\/> and
  long_prefix_pattern to C<--|\/> would add Win32 style argument
  handling.
  
  =item debug (default: disabled)
  
  Enable debugging output.
  
  =back
  
  =head1 Exportable Methods
  
  =over
  
  =item VersionMessage
  
  This subroutine provides a standard version message. Its argument can be:
  
  =over 4
  
  =item *
  
  A string containing the text of a message to print I<before> printing
  the standard message.
  
  =item *
  
  A numeric value corresponding to the desired exit status.
  
  =item *
  
  A reference to a hash.
  
  =back
  
  If more than one argument is given then the entire argument list is
  assumed to be a hash.  If a hash is supplied (either as a reference or
  as a list) it should contain one or more elements with the following
  keys:
  
  =over 4
  
  =item C<-message>
  
  =item C<-msg>
  
  The text of a message to print immediately prior to printing the
  program's usage message.
  
  =item C<-exitval>
  
  The desired exit status to pass to the B<exit()> function.
  This should be an integer, or else the string "NOEXIT" to
  indicate that control should simply be returned without
  terminating the invoking process.
  
  =item C<-output>
  
  A reference to a filehandle, or the pathname of a file to which the
  usage message should be written. The default is C<\*STDERR> unless the
  exit value is less than 2 (in which case the default is C<\*STDOUT>).
  
  =back
  
  You cannot tie this routine directly to an option, e.g.:
  
      GetOptions("version" => \&VersionMessage);
  
  Use this instead:
  
      GetOptions("version" => sub { VersionMessage() });
  
  =item HelpMessage
  
  This subroutine produces a standard help message, derived from the
  program's POD section SYNOPSIS using L<Pod::Usage>. It takes the same
  arguments as VersionMessage(). In particular, you cannot tie it
  directly to an option, e.g.:
  
      GetOptions("help" => \&HelpMessage);
  
  Use this instead:
  
      GetOptions("help" => sub { HelpMessage() });
  
  =back
  
  =head1 Return values and Errors
  
  Configuration errors and errors in the option definitions are
  signalled using die() and will terminate the calling program unless
  the call to Getopt::Long::GetOptions() was embedded in C<eval { ...
  }>, or die() was trapped using C<$SIG{__DIE__}>.
  
  GetOptions returns true to indicate success.
  It returns false when the function detected one or more errors during
  option parsing. These errors are signalled using warn() and can be
  trapped with C<$SIG{__WARN__}>.
  
  =head1 Legacy
  
  The earliest development of C<newgetopt.pl> started in 1990, with Perl
  version 4. As a result, its development, and the development of
  Getopt::Long, has gone through several stages. Since backward
  compatibility has always been extremely important, the current version
  of Getopt::Long still supports a lot of constructs that nowadays are
  no longer necessary or otherwise unwanted. This section describes
  briefly some of these 'features'.
  
  =head2 Default destinations
  
  When no destination is specified for an option, GetOptions will store
  the resultant value in a global variable named C<opt_>I<XXX>, where
  I<XXX> is the primary name of this option. When a program executes
  under C<use strict> (recommended), these variables must be
  pre-declared with our() or C<use vars>.
  
      our $opt_length = 0;
      GetOptions ('length=i');	# will store in $opt_length
  
  To yield a usable Perl variable, characters that are not part of the
  syntax for variables are translated to underscores. For example,
  C<--fpp-struct-return> will set the variable
  C<$opt_fpp_struct_return>. Note that this variable resides in the
  namespace of the calling program, not necessarily C<main>. For
  example:
  
      GetOptions ("size=i", "sizes=i@");
  
  with command line "-size 10 -sizes 24 -sizes 48" will perform the
  equivalent of the assignments
  
      $opt_size = 10;
      @opt_sizes = (24, 48);
  
  =head2 Alternative option starters
  
  A string of alternative option starter characters may be passed as the
  first argument (or the first argument after a leading hash reference
  argument).
  
      my $len = 0;
      GetOptions ('/', 'length=i' => $len);
  
  Now the command line may look like:
  
      /length 24 -- arg
  
  Note that to terminate options processing still requires a double dash
  C<-->.
  
  GetOptions() will not interpret a leading C<< "<>" >> as option starters
  if the next argument is a reference. To force C<< "<" >> and C<< ">" >> as
  option starters, use C<< "><" >>. Confusing? Well, B<using a starter
  argument is strongly deprecated> anyway.
  
  =head2 Configuration variables
  
  Previous versions of Getopt::Long used variables for the purpose of
  configuring. Although manipulating these variables still work, it is
  strongly encouraged to use the C<Configure> routine that was introduced
  in version 2.17. Besides, it is much easier.
  
  =head1 Tips and Techniques
  
  =head2 Pushing multiple values in a hash option
  
  Sometimes you want to combine the best of hashes and arrays. For
  example, the command line:
  
    --list add=first --list add=second --list add=third
  
  where each successive 'list add' option will push the value of add
  into array ref $list->{'add'}. The result would be like
  
    $list->{add} = [qw(first second third)];
  
  This can be accomplished with a destination routine:
  
    GetOptions('list=s%' =>
                 sub { push(@{$list{$_[1]}}, $_[2]) });
  
  =head1 Troubleshooting
  
  =head2 GetOptions does not return a false result when an option is not supplied
  
  That's why they're called 'options'.
  
  =head2 GetOptions does not split the command line correctly
  
  The command line is not split by GetOptions, but by the command line
  interpreter (CLI). On Unix, this is the shell. On Windows, it is
  COMMAND.COM or CMD.EXE. Other operating systems have other CLIs.
  
  It is important to know that these CLIs may behave different when the
  command line contains special characters, in particular quotes or
  backslashes. For example, with Unix shells you can use single quotes
  (C<'>) and double quotes (C<">) to group words together. The following
  alternatives are equivalent on Unix:
  
      "two words"
      'two words'
      two\ words
  
  In case of doubt, insert the following statement in front of your Perl
  program:
  
      print STDERR (join("|",@ARGV),"\n");
  
  to verify how your CLI passes the arguments to the program.
  
  =head2 Undefined subroutine &main::GetOptions called
  
  Are you running Windows, and did you write
  
      use GetOpt::Long;
  
  (note the capital 'O')?
  
  =head2 How do I put a "-?" option into a Getopt::Long?
  
  You can only obtain this using an alias, and Getopt::Long of at least
  version 2.13.
  
      use Getopt::Long;
      GetOptions ("help|?");    # -help and -? will both set $opt_help
  
  Other characters that can't appear in Perl identifiers are also supported
  as aliases with Getopt::Long of at least version 2.39.
  
  As of version 2.32 Getopt::Long provides auto-help, a quick and easy way
  to add the options --help and -? to your program, and handle them.
  
  See C<auto_help> in section L<Configuring Getopt::Long>.
  
  =head1 AUTHOR
  
  Johan Vromans <jvromans@squirrel.nl>
  
  =head1 COPYRIGHT AND DISCLAIMER
  
  This program is Copyright 1990,2015 by Johan Vromans.
  This program is free software; you can redistribute it and/or
  modify it under the terms of the Perl Artistic License or the
  GNU General Public License as published by the Free Software
  Foundation; either version 2 of the License, or (at your option) any
  later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  If you do not have a copy of the GNU General Public License write to
  the Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
  MA 02139, USA.
  
  =cut
  
GETOPT_LONG

$fatpacked{"Module/CPANfile.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'MODULE_CPANFILE';
  package Module::CPANfile;
  use strict;
  use warnings;
  use Cwd;
  use Carp ();
  use Module::CPANfile::Environment;
  use Module::CPANfile::Requirement;
  
  our $VERSION = '1.1004';
  
  BEGIN {
      if (${^TAINT}) {
          *untaint = sub {
              my $str = shift;
              ($str) = $str =~ /^(.+)$/s;
              $str;
          };
      } else {
          *untaint = sub { $_[0] };
      }
  }
  
  sub new {
      my($class, $file) = @_;
      bless {}, $class;
  }
  
  sub load {
      my($proto, $file) = @_;
  
      my $self = ref $proto ? $proto : $proto->new;
      $self->parse($file || _default_cpanfile());
      $self;
  }
  
  sub save {
      my($self, $path) = @_;
  
      open my $out, ">", $path or die "$path: $!";
      print {$out} $self->to_string;
  }
  
  sub parse {
      my($self, $file) = @_;
  
      my $code = do {
          open my $fh, "<", $file or die "$file: $!";
          join '', <$fh>;
      };
  
      $code = untaint $code;
  
      my $env = Module::CPANfile::Environment->new($file);
      $env->parse($code) or die $@;
  
      $self->{_mirrors} = $env->mirrors;
      $self->{_prereqs} = $env->prereqs;
  }
  
  sub from_prereqs {
      my($proto, $prereqs) = @_;
  
      my $self = $proto->new;
      $self->{_prereqs} = Module::CPANfile::Prereqs->from_cpan_meta($prereqs);
  
      $self;
  }
  
  sub mirrors {
      my $self = shift;
      $self->{_mirrors} || [];
  }
  
  sub features {
      my $self = shift;
      map $self->feature($_), $self->{_prereqs}->identifiers;
  }
  
  sub feature {
      my($self, $identifier) = @_;
      $self->{_prereqs}->feature($identifier);
  }
  
  sub prereq { shift->prereqs }
  
  sub prereqs {
      my $self = shift;
      $self->{_prereqs}->as_cpan_meta;
  }
  
  sub merged_requirements {
      my $self = shift;
      $self->{_prereqs}->merged_requirements;
  }
  
  sub effective_prereqs {
      my($self, $features) = @_;
      $self->prereqs_with(@{$features || []});
  }
  
  sub prereqs_with {
      my($self, @feature_identifiers) = @_;
  
      my @others = map { $self->feature($_)->prereqs } @feature_identifiers;
      $self->prereqs->with_merged_prereqs(\@others);
  }
  
  sub prereq_specs {
      my $self = shift;
      $self->prereqs->as_string_hash;
  }
  
  sub prereq_for_module {
      my($self, $module) = @_;
      $self->{_prereqs}->find($module);
  }
  
  sub options_for_module {
      my($self, $module) = @_;
      my $prereq = $self->prereq_for_module($module) or return;
      $prereq->requirement->options;
  }
  
  sub merge_meta {
      my($self, $file, $version) = @_;
  
      require CPAN::Meta;
  
      $version ||= $file =~ /\.yml$/ ? '1.4' : '2';
  
      my $prereq = $self->prereqs;
  
      my $meta = CPAN::Meta->load_file($file);
      my $prereqs_hash = $prereq->with_merged_prereqs($meta->effective_prereqs)->as_string_hash;
      my $struct = { %{$meta->as_struct}, prereqs => $prereqs_hash };
  
      CPAN::Meta->new($struct)->save($file, { version => $version });
  }
  
  sub _d($) {
      require Data::Dumper;
      chomp(my $value = Data::Dumper->new([$_[0]])->Terse(1)->Dump);
      $value;
  }
  
  sub _default_cpanfile {
      my $file = Cwd::abs_path('cpanfile');
      untaint $file;
  }
  
  sub to_string {
      my($self, $include_empty) = @_;
  
      my $mirrors = $self->mirrors;
      my $prereqs = $self->prereq_specs;
  
      my $code = '';
      $code .= $self->_dump_mirrors($mirrors);
      $code .= $self->_dump_prereqs($prereqs, $include_empty);
  
      for my $feature ($self->features) {
          $code .= "feature @{[ _d $feature->{identifier} ]}, @{[ _d $feature->{description} ]} => sub {\n";
          $code .= $self->_dump_prereqs($feature->{prereqs}->as_string_hash, $include_empty, 4);
          $code .= "};\n\n";
      }
  
      $code =~ s/\n+$/\n/s;
      $code;
  }
  
  sub _dump_mirrors {
      my($self, $mirrors) = @_;
  
      my $code = "";
  
      for my $url (@$mirrors) {
          $code .= "mirror @{[ _d $url ]};\n";
      }
  
      $code =~ s/\n+$/\n/s;
      $code;
  }
  
  sub _dump_prereqs {
      my($self, $prereqs, $include_empty, $base_indent) = @_;
  
      my $code = '';
      for my $phase (qw(runtime configure build test develop)) {
          my $indent = $phase eq 'runtime' ? '' : '    ';
          $indent .= (' ' x ($base_indent || 0));
  
          my($phase_code, $requirements);
          $phase_code .= "on $phase => sub {\n" unless $phase eq 'runtime';
  
          for my $type (qw(requires recommends suggests conflicts)) {
              for my $mod (sort keys %{$prereqs->{$phase}{$type}}) {
                  my $ver = $prereqs->{$phase}{$type}{$mod};
                  $phase_code .= $ver eq '0'
                               ? "${indent}$type @{[ _d $mod ]}"
                               : "${indent}$type @{[ _d $mod ]}, @{[ _d $ver ]}";
  
                  my $options = $self->options_for_module($mod) || {};
                  if (%$options) {
                      my @opts;
                      for my $key (keys %$options) {
                          my $k = $key =~ /^[a-zA-Z0-9_]+$/ ? $key : _d $key;
                          push @opts, "$k => @{[ _d $options->{$k} ]}";
                      }
  
                      $phase_code .= ",\n" . join(",\n", map "  $indent$_", @opts);
                  }
  
                  $phase_code .= ";\n";
                  $requirements++;
              }
          }
  
          $phase_code .= "\n" unless $requirements;
          $phase_code .= "};\n" unless $phase eq 'runtime';
  
          $code .= $phase_code . "\n" if $requirements or $include_empty;
      }
  
      $code =~ s/\n+$/\n/s;
      $code;
  }
  
  1;
  
  __END__
  
  =head1 NAME
  
  Module::CPANfile - Parse cpanfile
  
  =head1 SYNOPSIS
  
    use Module::CPANfile;
  
    my $file = Module::CPANfile->load("cpanfile");
    my $prereqs = $file->prereqs; # CPAN::Meta::Prereqs object
  
    my @features = $file->features; # CPAN::Meta::Feature objects
    my $merged_prereqs = $file->prereqs_with(@identifiers); # CPAN::Meta::Prereqs
  
    $file->merge_meta('MYMETA.json');
  
  =head1 DESCRIPTION
  
  Module::CPANfile is a tool to handle L<cpanfile> format to load application
  specific dependencies, not just for CPAN distributions.
  
  =head1 METHODS
  
  =over 4
  
  =item load
  
    $file = Module::CPANfile->load;
    $file = Module::CPANfile->load('cpanfile');
  
  Load and parse a cpanfile. By default it tries to load C<cpanfile> in
  the current directory, unless you pass the path to its argument.
  
  =item from_prereqs
  
    $file = Module::CPANfile->from_prereqs({
      runtime => { requires => { DBI => '1.000' } },
    });
  
  Creates a new Module::CPANfile object from prereqs hash you can get
  via L<CPAN::Meta>'s C<prereqs>, or L<CPAN::Meta::Prereqs>'
  C<as_string_hash>.
  
    # read MYMETA, then feed the prereqs to create Module::CPANfile
    my $meta = CPAN::Meta->load_file('MYMETA.json');
    my $file = Module::CPANfile->from_prereqs($meta->prereqs);
  
    # load cpanfile, then recreate it with round-trip
    my $file = Module::CPANfile->load('cpanfile');
    $file = Module::CPANfile->from_prereqs($file->prereq_specs);
                                      # or $file->prereqs->as_string_hash
  
  =item prereqs
  
  Returns L<CPAN::Meta::Prereqs> object out of the parsed cpanfile.
  
  =item prereq_specs
  
  Returns a hash reference that should be passed to C<< CPAN::Meta::Prereqs->new >>.
  
  =item features
  
  Returns a list of features available in the cpanfile as L<CPAN::Meta::Feature>.
  
  =item prereqs_with(@identifiers), effective_prereqs(\@identifiers)
  
  Returns L<CPAN::Meta::Prereqs> object, with merged prereqs for
  features identified with the C<@identifiers>.
  
  =item to_string($include_empty)
  
    $file->to_string;
    $file->to_string(1);
  
  Returns a canonical string (code) representation for cpanfile. Useful
  if you want to convert L<CPAN::Meta::Prereqs> to a new cpanfile.
  
    # read MYMETA's prereqs and print cpanfile representation of it
    my $meta = CPAN::Meta->load_file('MYMETA.json');
    my $file = Module::CPANfile->from_prereqs($meta->prereqs);
    print $file->to_string;
  
  By default, it omits the phase where there're no modules
  registered. If you pass the argument of a true value, it will print
  them as well.
  
  =item save
  
    $file->save('cpanfile');
  
  Saves the currently loaded prereqs as a new C<cpanfile> by calling
  C<to_string>. Beware B<this method will overwrite the existing
  cpanfile without any warning or backup>. Taking a backup or giving
  warnings to users is a caller's responsibility.
  
    # Read MYMETA.json and creates a new cpanfile
    my $meta = CPAN::Meta->load_file('MYMETA.json');
    my $file = Module::CPANfile->from_prereqs($meta->prereqs);
    $file->save('cpanfile');
  
  =item merge_meta
  
    $file->merge_meta('META.yml');
    $file->merge_meta('MYMETA.json', '2.0');
  
  Merge the effective prereqs with Meta specification loaded from the
  given META file, using CPAN::Meta. You can specify the META spec
  version in the second argument, which defaults to 1.4 in case the
  given file is YAML, and 2 if it is JSON.
  
  =item options_for_module
  
    my $options = $file->options_for_module($module);
  
  Returns the extra options specified for a given module as a hash
  reference. Returns C<undef> when the given module is not specified in
  the C<cpanfile>.
  
  For example,
  
    # cpanfile
    requires 'Plack', '1.000',
      dist => "MIYAGAWA/Plack-1.000.tar.gz";
  
    # ...
    my $file = Module::CPANfile->load;
    my $options = $file->options_for_module('Plack');
    # => { dist => "MIYAGAWA/Plack-1.000.tar.gz" }
  
  =back
  
  =head1 AUTHOR
  
  Tatsuhiko Miyagawa
  
  =head1 SEE ALSO
  
  L<cpanfile>, L<CPAN::Meta>, L<CPAN::Meta::Spec>
  
  =cut
MODULE_CPANFILE

$fatpacked{"Module/CPANfile/Environment.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'MODULE_CPANFILE_ENVIRONMENT';
  package Module::CPANfile::Environment;
  use strict;
  use warnings;
  use Module::CPANfile::Prereqs;
  use Carp ();
  
  my @bindings = qw(
      on requires recommends suggests conflicts
      feature
      osname
      mirror
      configure_requires build_requires test_requires author_requires
  );
  
  my $file_id = 1;
  
  sub new {
      my($class, $file) = @_;
      bless {
          file     => $file,
          phase    => 'runtime', # default phase
          feature  => undef,
          features => {},
          prereqs  => Module::CPANfile::Prereqs->new,
          mirrors  => [],
      }, $class;
  }
  
  sub bind {
      my $self = shift;
      my $pkg = caller;
  
      for my $binding (@bindings) {
          no strict 'refs';
          *{"$pkg\::$binding"} = sub { $self->$binding(@_) };
      }
  }
  
  sub parse {
      my($self, $code) = @_;
  
      my $err;
      {
          local $@;
          $file_id++;
          $self->_evaluate(<<EVAL);
  package Module::CPANfile::Sandbox$file_id;
  no warnings;
  BEGIN { \$_environment->bind }
  
  # line 1 "$self->{file}"
  $code;
  EVAL
          $err = $@;
      }
  
      if ($err) { die "Parsing $self->{file} failed: $err" };
  
      return 1;
  }
  
  sub _evaluate {
      my $_environment = $_[0];
      eval $_[1];
  }
  
  sub prereqs { $_[0]->{prereqs} }
  
  sub mirrors { $_[0]->{mirrors} }
  
  # DSL goes from here
  
  sub on {
      my($self, $phase, $code) = @_;
      local $self->{phase} = $phase;
      $code->();
  }
  
  sub feature {
      my($self, $identifier, $description, $code) = @_;
  
      # shortcut: feature identifier => sub { ... }
      if (@_ == 3 && ref($description) eq 'CODE') {
          $code = $description;
          $description = $identifier;
      }
  
      unless (ref $description eq '' && ref $code eq 'CODE') {
          Carp::croak("Usage: feature 'identifier', 'Description' => sub { ... }");
      }
  
      local $self->{feature} = $identifier;
      $self->prereqs->add_feature($identifier, $description);
  
      $code->();
  }
  
  sub osname { die "TODO" }
  
  sub mirror {
      my($self, $url) = @_;
      push @{$self->{mirrors}}, $url;
  }
  
  sub requirement_for {
      my($self, $module, @args) = @_;
  
      my $requirement = 0;
      $requirement = shift @args if @args % 2;
  
      return Module::CPANfile::Requirement->new(
          name    => $module,
          version => $requirement,
          @args,
      );
  }
  
  sub requires {
      my $self = shift;
      $self->add_prereq(requires => @_);
  }
  
  sub recommends {
      my $self = shift;
      $self->add_prereq(recommends => @_);
  }
  
  sub suggests {
      my $self = shift;
      $self->add_prereq(suggests => @_);
  }
  
  sub conflicts {
      my $self = shift;
      $self->add_prereq(conflicts => @_);
  }
  
  sub add_prereq {
      my($self, $type, $module, @args) = @_;
  
      $self->prereqs->add(
          feature => $self->{feature},
          phase   => $self->{phase},
          type    => $type,
          module  => $module,
          requirement => $self->requirement_for($module, @args),
      );
  }
  
  # Module::Install compatible shortcuts
  
  sub configure_requires {
      my($self, @args) = @_;
      $self->on(configure => sub { $self->requires(@args) });
  }
  
  sub build_requires {
      my($self, @args) = @_;
      $self->on(build => sub { $self->requires(@args) });
  }
  
  sub test_requires {
      my($self, @args) = @_;
      $self->on(test => sub { $self->requires(@args) });
  }
  
  sub author_requires {
      my($self, @args) = @_;
      $self->on(develop => sub { $self->requires(@args) });
  }
  
  1;
  
MODULE_CPANFILE_ENVIRONMENT

$fatpacked{"Module/CPANfile/Prereq.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'MODULE_CPANFILE_PREREQ';
  package Module::CPANfile::Prereq;
  use strict;
  
  sub new {
      my($class, %options) = @_;
      bless \%options, $class;
  }
  
  sub feature { $_[0]->{feature} }
  sub phase   { $_[0]->{phase} }
  sub type    { $_[0]->{type} }
  sub module  { $_[0]->{module} }
  sub requirement { $_[0]->{requirement} }
  
  1;
MODULE_CPANFILE_PREREQ

$fatpacked{"Module/CPANfile/Prereqs.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'MODULE_CPANFILE_PREREQS';
  package Module::CPANfile::Prereqs;
  use strict;
  use Carp ();
  use CPAN::Meta::Feature;
  use Module::CPANfile::Prereq;
  
  sub from_cpan_meta {
      my($class, $prereqs) = @_;
  
      my $self = $class->new;
  
      for my $phase (keys %$prereqs) {
          for my $type (keys %{ $prereqs->{$phase} }) {
              while (my($module, $requirement) = each %{ $prereqs->{$phase}{$type} }) {
                  $self->add(
                      phase => $phase,
                      type  => $type,
                      module => $module,
                      requirement => Module::CPANfile::Requirement->new(name => $module, version => $requirement),
                  );
              }
          }
      }
  
      $self;
  }
  
  sub new {
      my $class = shift;
      bless {
          prereqs => {},
          features => {},
      }, $class;
  }
  
  sub add_feature {
      my($self, $identifier, $description) = @_;
      $self->{features}{$identifier} = { description => $description };
  }
  
  sub add {
      my($self, %args) = @_;
  
      my $feature = $args{feature} || '';
      push @{$self->{prereqs}{$feature}},
        Module::CPANfile::Prereq->new(%args);
  }
  
  sub as_cpan_meta {
      my $self = shift;
      $self->{cpanmeta} ||= $self->build_cpan_meta;
  }
  
  sub build_cpan_meta {
      my($self, $feature) = @_;
      CPAN::Meta::Prereqs->new($self->specs($feature));
  }
  
  sub specs {
      my($self, $feature) = @_;
  
      $feature = ''
        unless defined $feature;
  
      my $prereqs = $self->{prereqs}{$feature} || [];
      my $specs = {};
  
      for my $prereq (@$prereqs) {
           $specs->{$prereq->phase}{$prereq->type}{$prereq->module} =
             $prereq->requirement->version;
      }
  
      return $specs;
  }
  
  sub merged_requirements {
      my $self = shift;
  
      my $reqs = CPAN::Meta::Requirements->new;
      for my $prereq (@{$self->{prereqs}}) {
          $reqs->add_string_requirement($prereq->module, $prereq->requirement->version);
      }
  
      $reqs;
  }
  
  sub find {
      my($self, $module) = @_;
  
      for my $feature ('', keys %{$self->{features}}) {
          for my $prereq (@{$self->{prereqs}{$feature}}) {
              return $prereq if $prereq->module eq $module;
          }
      }
  
      return;
  }
  
  sub identifiers {
      my $self = shift;
      keys %{$self->{features}};
  }
  
  sub feature {
      my($self, $identifier) = @_;
  
      my $data = $self->{features}{$identifier}
        or Carp::croak("Unknown feature '$identifier'");
  
      my $prereqs = $self->build_cpan_meta($identifier);
  
      CPAN::Meta::Feature->new($identifier, {
          description => $data->{description},
          prereqs => $prereqs->as_string_hash,
      });
  }
  
  1;
MODULE_CPANFILE_PREREQS

$fatpacked{"Module/CPANfile/Requirement.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'MODULE_CPANFILE_REQUIREMENT';
  package Module::CPANfile::Requirement;
  use strict;
  
  sub new {
      my ($class, %args) = @_;
  
      $args{version} ||= 0;
  
      bless +{
          name    => delete $args{name},
          version => delete $args{version},
          options => \%args,
      }, $class;
  }
  
  sub name    { $_[0]->{name} }
  sub version { $_[0]->{version} }
  
  sub options { $_[0]->{options} }
  
  sub has_options {
      keys %{$_[0]->{options}} > 0;
  }
  
  1;
MODULE_CPANFILE_REQUIREMENT

$fatpacked{"Module/CoreList.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'MODULE_CORELIST';
  package Module::CoreList;
  use strict;
  
  our ( %released, %version, %families, %upstream, %bug_tracker, %deprecated, %delta );
  
  use version;
  our $VERSION = '5.20180626';
  
  sub PKG_PATTERN () { q#\A[a-zA-Z_][0-9a-zA-Z_]*(?:(::|')[0-9a-zA-Z_]+)*\z# }
  sub _looks_like_invocant ($) { local $@; !!eval { $_[0]->isa(__PACKAGE__) } }
  
  sub _undelta {
      my ($delta) = @_;
      my (%expanded, $delta_from, $base, $changed, $removed);
      for my $v (sort keys %$delta) {
          ($delta_from, $changed, $removed) = @{$delta->{$v}}{qw( delta_from changed removed )};
          $base = $delta_from ? $expanded{$delta_from} : {};
          my %full = ( %$base, %{$changed || {}} );
          delete @full{ keys %$removed };
          $expanded{$v} = \%full;
      }
      return %expanded;
  }
  
  sub _released_order {   # Sort helper, to make '?' sort after everything else
      (substr($released{$a}, 0, 1) eq "?")
      ? ((substr($released{$b}, 0, 1) eq "?")
          ? 0
          : 1)
      : ((substr($released{$b}, 0, 1) eq "?")
          ? -1
          : $released{$a} cmp $released{$b} )
  }
  
  my $dumpinc = 0;
  sub import {
      my $self = shift;
      my $what = shift || '';
      if ($what eq 'dumpinc') {
          $dumpinc = 1;
      }
  }
  
  END {
      print "---INC---\n", join "\n" => keys %INC
        if $dumpinc;
  }
  
  
  sub first_release_raw {
      shift if defined $_[1] and $_[1] =~ PKG_PATTERN and _looks_like_invocant $_[0];
      my $module = shift;
      my $version = shift;
  
      my @perls = $version
          ? grep { defined $version{$_}{ $module } &&
                          $version{$_}{ $module } ge $version } keys %version
          : grep { exists $version{$_}{ $module }             } keys %version;
  
      return @perls;
  }
  
  sub first_release_by_date {
      my @perls = &first_release_raw;
      return unless @perls;
      return (sort _released_order @perls)[0];
  }
  
  sub first_release {
      my @perls = &first_release_raw;
      return unless @perls;
      return (sort { $a cmp $b } @perls)[0];
  }
  
  sub find_modules {
      shift if _looks_like_invocant $_[0];
      my $regex = shift;
      my @perls = @_ ? @_ : keys %version;
  
      my %mods;
      foreach (@perls) {
          while (my ($k, $v) = each %{$version{$_}}) {
              $mods{$k}++ if $k =~ $regex;
          }
      }
      return sort keys %mods
  }
  
  sub find_version {
      shift if _looks_like_invocant $_[0];
      my $v = shift;
      return $version{$v} if defined $v and defined $version{$v};
      return;
  }
  
  sub is_deprecated {
      shift if defined $_[1] and $_[1] =~ PKG_PATTERN and _looks_like_invocant $_[0];
      my $module = shift;
      my $perl_version = shift || $];
      return unless $module && exists $deprecated{$perl_version}{$module};
      return $deprecated{$perl_version}{$module};
  }
  
  sub deprecated_in {
      shift if defined $_[1] and $_[1] =~ PKG_PATTERN and _looks_like_invocant $_[0];
      my $module = shift or return;
      my @perls = grep { exists $deprecated{$_}{$module} } keys %deprecated;
      return unless @perls;
      require List::Util;
      return List::Util::minstr(@perls);
  }
  
  sub removed_from {
    my @perls = &removed_raw;
    return shift @perls;
  }
  
  sub removed_from_by_date {
    my @perls = sort _released_order &removed_raw;
    return shift @perls;
  }
  
  sub removed_raw {
    shift if defined $_[1] and $_[1] =~ PKG_PATTERN and _looks_like_invocant $_[0];
    my $mod = shift;
    return unless my @perls = sort { $a cmp $b } first_release_raw($mod);
    my $last = pop @perls;
    my @removed = grep { $_ > $last } sort { $a cmp $b } keys %version;
    return @removed;
  }
  
  sub changes_between {
    shift if _looks_like_invocant $_[0];
    my $left_ver = shift;
    my $right_ver = shift;
  
    my $left  = $version{ $left_ver };
    my $right = $version{ $right_ver };
  
    my %uniq = (%$left, %$right);
  
    my %changes;
    for my $lib (keys %uniq) {
        my $lhs = exists $left->{ $lib }
                ? (defined $left->{ $lib } ? $left->{ $lib } : '(undef)')
                : '(absent)';
        my $rhs = exists $right->{ $lib }
                ? (defined $right->{ $lib } ? $right->{ $lib } : '(undef)')
                : '(absent)';
  
        next if $lhs eq $rhs;
  
        my $change = {
          (exists $left->{$lib}  ? (left  => $left->{$lib})  : ()),
          (exists $right->{$lib} ? (right => $right->{$lib}) : ()),
        };
  
        $changes{$lib} = $change;
    }
  
    return %changes;
  }
  
  # When things escaped.
  # NB. If you put version numbers with trailing zeroes here, you
  # should also add an alias for the numerical ($]) version; see
  # just before the __END__ of this module.
  %released = (
      5.000    => '1994-10-17',
      5.001    => '1995-03-14',
      5.002    => '1996-02-29',
      5.00307  => '1996-10-10',
      5.004    => '1997-05-15',
      5.005    => '1998-07-22',
      5.00503  => '1999-03-28',
      5.00405  => '1999-04-29',
      5.006    => '2000-03-22',
      5.006001 => '2001-04-08',
      5.007003 => '2002-03-05',
      5.008    => '2002-07-19',
      5.008001 => '2003-09-25',
      5.009    => '2003-10-27',
      5.008002 => '2003-11-05',
      5.006002 => '2003-11-15',
      5.008003 => '2004-01-14',
      5.00504  => '2004-02-23',
      5.009001 => '2004-03-16',
      5.008004 => '2004-04-21',
      5.008005 => '2004-07-19',
      5.008006 => '2004-11-27',
      5.009002 => '2005-04-01',
      5.008007 => '2005-05-30',
      5.009003 => '2006-01-28',
      5.008008 => '2006-01-31',
      5.009004 => '2006-08-15',
      5.009005 => '2007-07-07',
      5.010000 => '2007-12-18',
      5.008009 => '2008-12-14',
      5.010001 => '2009-08-22',
      5.011000 => '2009-10-02',
      5.011001 => '2009-10-20',
      5.011002 => '2009-11-20',
      5.011003 => '2009-12-20',
      5.011004 => '2010-01-20',
      5.011005 => '2010-02-20',
      5.012000 => '2010-04-12',
      5.013000 => '2010-04-20',
      5.012001 => '2010-05-16',
      5.013001 => '2010-05-20',
      5.013002 => '2010-06-22',
      5.013003 => '2010-07-20',
      5.013004 => '2010-08-20',
      5.012002 => '2010-09-06',
      5.013005 => '2010-09-19',
      5.013006 => '2010-10-20',
      5.013007 => '2010-11-20',
      5.013008 => '2010-12-20',
      5.012003 => '2011-01-21',
      5.013009 => '2011-01-20',
      5.013010 => '2011-02-20',
      5.013011 => '2011-03-20',
      5.014000 => '2011-05-14',
      5.012004 => '2011-06-20',
      5.012005 => '2012-11-10',
      5.014001 => '2011-06-16',
      5.015000 => '2011-06-20',
      5.015001 => '2011-07-20',
      5.015002 => '2011-08-20',
      5.014002 => '2011-09-26',
      5.015003 => '2011-09-20',
      5.015004 => '2011-10-20',
      5.015005 => '2011-11-20',
      5.015006 => '2011-12-20',
      5.015007 => '2012-01-20',
      5.015008 => '2012-02-20',
      5.015009 => '2012-03-20',
      5.016000 => '2012-05-20',
      5.016001 => '2012-08-08',
      5.016002 => '2012-11-01',
      5.017000 => '2012-05-26',
      5.017001 => '2012-06-20',
      5.017002 => '2012-07-20',
      5.017003 => '2012-08-20',
      5.017004 => '2012-09-20',
      5.014003 => '2012-10-12',
      5.017005 => '2012-10-20',
      5.017006 => '2012-11-20',
      5.017007 => '2012-12-18',
      5.017008 => '2013-01-20',
      5.017009 => '2013-02-20',
      5.014004 => '2013-03-10',
      5.016003 => '2013-03-11',
      5.017010 => '2013-03-21',
      5.017011 => '2013-04-20',
      5.018000 => '2013-05-18',
      5.019000 => '2013-05-20',
      5.019001 => '2013-06-21',
      5.019002 => '2013-07-22',
      5.018001 => '2013-08-12',
      5.019003 => '2013-08-20',
      5.019004 => '2013-09-20',
      5.019005 => '2013-10-20',
      5.019006 => '2013-11-20',
      5.019007 => '2013-12-20',
      5.018002 => '2014-01-06',
      5.018003 => '2014-10-01',
      5.018004 => '2014-10-01',
      5.019008 => '2014-01-20',
      5.019009 => '2014-02-20',
      5.01901  => '2014-03-20',
      5.019011 => '2014-04-20',
      5.020000 => '2014-05-27',
      5.021000 => '2014-05-27',
      5.021001 => '2014-06-20',
      5.021002 => '2014-07-20',
      5.021003 => '2014-08-20',
      5.020001 => '2014-09-14',
      5.021004 => '2014-09-20',
      5.021005 => '2014-10-20',
      5.021006 => '2014-11-20',
      5.021007 => '2014-12-20',
      5.021008 => '2015-01-20',
      5.020002 => '2015-02-14',
      5.021009 => '2015-02-21',
      5.021010 => '2015-03-20',
      5.021011 => '2015-04-20',
      5.022000 => '2015-06-01',
      5.023000 => '2015-06-20',
      5.023001 => '2015-07-20',
      5.023002 => '2015-08-20',
      5.020003 => '2015-09-12',
      5.023003 => '2015-09-20',
      5.023004 => '2015-10-20',
      5.023005 => '2015-11-20',
      5.022001 => '2015-12-13',
      5.023006 => '2015-12-21',
      5.023007 => '2016-01-20',
      5.023008 => '2016-02-20',
      5.023009 => '2016-03-20',
      5.022002 => '2016-04-29',
      5.024000 => '2016-05-09',
      5.025000 => '2016-05-09',
      5.025001 => '2016-05-20',
      5.025002 => '2016-06-20',
      5.025003 => '2016-07-20',
      5.025004 => '2016-08-20',
      5.025005 => '2016-09-20',
      5.025006 => '2016-10-20',
      5.025007 => '2016-11-20',
      5.025008 => '2016-12-20',
      5.022003 => '2017-01-14',
      5.024001 => '2017-01-14',
      5.025009 => '2017-01-20',
      5.025010 => '2017-02-20',
      5.025011 => '2017-03-20',
      5.025012 => '2017-04-20',
      5.026000 => '2017-05-30',
      5.027000 => '2017-05-31',
      5.027001 => '2017-06-20',
      5.022004 => '2017-07-15',
      5.024002 => '2017-07-15',
      5.027002 => '2017-07-20',
      5.027003 => '2017-08-21',
      5.027004 => '2017-09-20',
      5.024003 => '2017-09-22',
      5.026001 => '2017-09-22',
      5.027005 => '2017-10-20',
      5.027006 => '2017-11-20',
      5.027007 => '2017-12-20',
      5.027008 => '2018-01-20',
      5.027009 => '2018-02-20',
      5.027010 => '2018-03-20',
      5.024004 => '2018-04-14',
      5.026002 => '2018-04-14',
      5.027011 => '2018-04-20',
      5.028000 => '2018-06-22',
      5.029000 => '2018-06-26',
    );
  
  for my $version ( sort { $a <=> $b } keys %released ) {
      my $family = int ($version * 1000) / 1000;
      push @{ $families{ $family }} , $version;
  }
  
  %delta = (
      5 => {
          changed => {
              'AnyDBM_File'           => undef,
              'AutoLoader'            => undef,
              'AutoSplit'             => undef,
              'Benchmark'             => undef,
              'Carp'                  => undef,
              'Cwd'                   => undef,
              'DB_File'               => undef,
              'DynaLoader'            => undef,
              'English'               => undef,
              'Env'                   => undef,
              'Exporter'              => undef,
              'ExtUtils::MakeMaker'   => undef,
              'Fcntl'                 => undef,
              'File::Basename'        => undef,
              'File::CheckTree'       => undef,
              'File::Find'            => undef,
              'FileHandle'            => undef,
              'GDBM_File'             => undef,
              'Getopt::Long'          => undef,
              'Getopt::Std'           => undef,
              'I18N::Collate'         => undef,
              'IPC::Open2'            => undef,
              'IPC::Open3'            => undef,
              'Math::BigFloat'        => undef,
              'Math::BigInt'          => undef,
              'Math::Complex'         => undef,
              'NDBM_File'             => undef,
              'Net::Ping'             => undef,
              'ODBM_File'             => undef,
              'POSIX'                 => undef,
              'SDBM_File'             => undef,
              'Search::Dict'          => undef,
              'Shell'                 => undef,
              'Socket'                => undef,
              'Sys::Hostname'         => undef,
              'Sys::Syslog'           => undef,
              'Term::Cap'             => undef,
              'Term::Complete'        => undef,
              'Test::Harness'         => undef,
              'Text::Abbrev'          => undef,
              'Text::ParseWords'      => undef,
              'Text::Soundex'         => undef,
              'Text::Tabs'            => undef,
              'TieHash'               => undef,
              'Time::Local'           => undef,
              'integer'               => undef,
              'less'                  => undef,
              'sigtrap'               => undef,
              'strict'                => undef,
              'subs'                  => undef,
          },
          removed => {
          }
      },
      5.001 => {
          delta_from => 5,
          changed => {
              'ExtUtils::Liblist'     => undef,
              'ExtUtils::Manifest'    => undef,
              'ExtUtils::Mkbootstrap' => undef,
              'File::Path'            => undef,
              'SubstrHash'            => undef,
              'lib'                   => undef,
          },
          removed => {
          }
      },
      5.002 => {
          delta_from => 5.001,
          changed => {
              'DB_File'               => '1.01',
              'Devel::SelfStubber'    => '1.01',
              'DirHandle'             => undef,
              'DynaLoader'            => '1.00',
              'ExtUtils::Install'     => undef,
              'ExtUtils::MM_OS2'      => undef,
              'ExtUtils::MM_Unix'     => undef,
              'ExtUtils::MM_VMS'      => undef,
              'ExtUtils::MakeMaker'   => '5.21',
              'ExtUtils::Manifest'    => '1.22',
              'ExtUtils::Mksymlists'  => '1.00',
              'Fcntl'                 => '1.00',
              'File::Copy'            => '1.5',
              'File::Path'            => '1.01',
              'FileCache'             => undef,
              'FileHandle'            => '1.00',
              'GDBM_File'             => '1.00',
              'Getopt::Long'          => '2.01',
              'NDBM_File'             => '1.00',
              'Net::Ping'             => '1',
              'ODBM_File'             => '1.00',
              'POSIX'                 => '1.00',
              'Pod::Functions'        => undef,
              'Pod::Text'             => undef,
              'SDBM_File'             => '1.00',
              'Safe'                  => '1.00',
              'SelectSaver'           => undef,
              'SelfLoader'            => '1.06',
              'Socket'                => '1.5',
              'Symbol'                => undef,
              'Term::ReadLine'        => undef,
              'Test::Harness'         => '1.07',
              'Text::Wrap'            => undef,
              'Tie::Hash'             => undef,
              'Tie::Scalar'           => undef,
              'Tie::SubstrHash'       => undef,
              'diagnostics'           => undef,
              'overload'              => undef,
              'vars'                  => undef,
          },
          removed => {
              'SubstrHash'            => 1,
              'TieHash'               => 1,
          }
      },
      5.00307 => {
          delta_from => 5.002,
          changed => {
              'Config'                => undef,
              'DB_File'               => '1.03',
              'ExtUtils::Embed'       => '1.18',
              'ExtUtils::Install'     => '1.15',
              'ExtUtils::Liblist'     => '1.20',
              'ExtUtils::MM_Unix'     => '1.107',
              'ExtUtils::MakeMaker'   => '5.38',
              'ExtUtils::Manifest'    => '1.27',
              'ExtUtils::Mkbootstrap' => '1.13',
              'ExtUtils::Mksymlists'  => '1.12',
              'ExtUtils::testlib'     => '1.11',
              'Fatal'                 => undef,
              'File::Basename'        => '2.4',
              'FindBin'               => '1.04',
              'Getopt::Long'          => '2.04',
              'IO'                    => undef,
              'IO::File'              => '1.05',
              'IO::Handle'            => '1.12',
              'IO::Pipe'              => '1.07',
              'IO::Seekable'          => '1.05',
              'IO::Select'            => '1.09',
              'IO::Socket'            => '1.13',
              'Net::Ping'             => '1.01',
              'OS2::ExtAttr'          => '0.01',
              'OS2::PrfDB'            => '0.02',
              'OS2::Process'          => undef,
              'OS2::REXX'             => undef,
              'Opcode'                => '1.01',
              'Safe'                  => '2.06',
              'Test::Harness'         => '1.13',
              'Text::Tabs'            => '96.051501',
              'Text::Wrap'            => '96.041801',
              'UNIVERSAL'             => undef,
              'VMS::Filespec'         => undef,
              'VMS::Stdio'            => '2.0',
              'ops'                   => undef,
              'sigtrap'               => '1.01',
          },
          removed => {
          }
      },
      5.004 => {
          delta_from => 5.00307,
          changed => {
              'Bundle::CPAN'          => '0.02',
              'CGI'                   => '2.36',
              'CGI::Apache'           => '1.01',
              'CGI::Carp'             => '1.06',
              'CGI::Fast'             => '1.00a',
              'CGI::Push'             => '1.00',
              'CGI::Switch'           => '0.05',
              'CPAN'                  => '1.2401',
              'CPAN::FirstTime'       => '1.18',
              'CPAN::Nox'             => undef,
              'Class::Struct'         => undef,
              'Cwd'                   => '2.00',
              'DB_File'               => '1.14',
              'DynaLoader'            => '1.02',
              'ExtUtils::Command'     => '1.00',
              'ExtUtils::Embed'       => '1.2501',
              'ExtUtils::Install'     => '1.16',
              'ExtUtils::Liblist'     => '1.2201',
              'ExtUtils::MM_Unix'     => '1.114',
              'ExtUtils::MM_Win32'    => undef,
              'ExtUtils::MakeMaker'   => '5.4002',
              'ExtUtils::Manifest'    => '1.33',
              'ExtUtils::Mksymlists'  => '1.13',
              'ExtUtils::XSSymSet'    => '1.0',
              'Fcntl'                 => '1.03',
              'File::Basename'        => '2.5',
              'File::Compare'         => '1.1001',
              'File::Copy'            => '2.02',
              'File::Path'            => '1.04',
              'File::stat'            => undef,
              'FileHandle'            => '2.00',
              'Getopt::Long'          => '2.10',
              'IO::File'              => '1.0602',
              'IO::Handle'            => '1.1504',
              'IO::Pipe'              => '1.0901',
              'IO::Seekable'          => '1.06',
              'IO::Select'            => '1.10',
              'IO::Socket'            => '1.1602',
              'IPC::Open2'            => '1.01',
              'IPC::Open3'            => '1.0101',
              'Math::Complex'         => '1.01',
              'Math::Trig'            => '1',
              'Net::Ping'             => '2.02',
              'Net::hostent'          => undef,
              'Net::netent'           => undef,
              'Net::protoent'         => undef,
              'Net::servent'          => undef,
              'Opcode'                => '1.04',
              'POSIX'                 => '1.02',
              'Pod::Html'             => undef,
              'Pod::Text'             => '1.0203',
              'SelfLoader'            => '1.07',
              'Socket'                => '1.6',
              'Symbol'                => '1.02',
              'Test::Harness'         => '1.1502',
              'Text::Tabs'            => '96.121201',
              'Text::Wrap'            => '97.011701',
              'Tie::RefHash'          => undef,
              'Time::gmtime'          => '1.01',
              'Time::localtime'       => '1.01',
              'Time::tm'              => undef,
              'User::grent'           => undef,
              'User::pwent'           => undef,
              'VMS::DCLsym'           => '1.01',
              'VMS::Stdio'            => '2.02',
              'autouse'               => '1.01',
              'blib'                  => undef,
              'constant'              => '1.00',
              'locale'                => undef,
              'sigtrap'               => '1.02',
              'vmsish'                => undef,
          },
          removed => {
              'Fatal'                 => 1,
          }
      },
      5.00405 => {
          delta_from => 5.004,
          changed => {
              'AutoLoader'            => '5.56',
              'AutoSplit'             => '1.0303',
              'Bundle::CPAN'          => '0.03',
              'CGI'                   => '2.42',
              'CGI::Apache'           => '1.1',
              'CGI::Carp'             => '1.10',
              'CGI::Cookie'           => '1.06',
              'CGI::Push'             => '1.01',
              'CGI::Switch'           => '0.06',
              'CPAN'                  => '1.40',
              'CPAN::FirstTime'       => '1.30',
              'Cwd'                   => '2.01',
              'DB_File'               => '1.15',
              'DynaLoader'            => '1.03',
              'ExtUtils::Command'     => '1.01',
              'ExtUtils::Embed'       => '1.2505',
              'ExtUtils::Install'     => '1.28',
              'ExtUtils::Liblist'     => '1.25',
              'ExtUtils::MM_Unix'     => '1.118',
              'ExtUtils::MakeMaker'   => '5.42',
              'ExtUtils::Mkbootstrap' => '1.14',
              'ExtUtils::Mksymlists'  => '1.16',
              'File::Basename'        => '2.6',
              'File::DosGlob'         => undef,
              'File::Path'            => '1.0402',
              'File::Spec'            => '0.6',
              'File::Spec::Mac'       => '1.0',
              'File::Spec::OS2'       => undef,
              'File::Spec::Unix'      => undef,
              'File::Spec::VMS'       => undef,
              'File::Spec::Win32'     => undef,
              'FindBin'               => '1.41',
              'Getopt::Long'          => '2.19',
              'IO::File'              => '1.06021',
              'IO::Socket'            => '1.1603',
              'IPC::Open3'            => '1.0103',
              'Math::Complex'         => '1.25',
              'NDBM_File'             => '1.01',
              'Pod::Html'             => '1.0101',
              'Pod::Text'             => '1.0204',
              'SelfLoader'            => '1.08',
              'Socket'                => '1.7',
              'Test'                  => '1.04',
              'Test::Harness'         => '1.1602',
              'Text::ParseWords'      => '3.1001',
              'Text::Wrap'            => '98.112902',
              'Tie::Handle'           => undef,
              'attrs'                 => '0.1',
              'base'                  => undef,
              'blib'                  => '1.00',
              're'                    => undef,
              'strict'                => '1.01',
          },
          removed => {
          }
      },
      5.005 => {
          delta_from => 5.00405,
          changed => {
              'AutoLoader'            => undef,
              'AutoSplit'             => '1.0302',
              'B'                     => undef,
              'B::Asmdata'            => undef,
              'B::Assembler'          => undef,
              'B::Bblock'             => undef,
              'B::Bytecode'           => undef,
              'B::C'                  => undef,
              'B::CC'                 => undef,
              'B::Debug'              => undef,
              'B::Deparse'            => '0.56',
              'B::Disassembler'       => undef,
              'B::Lint'               => undef,
              'B::Showlex'            => undef,
              'B::Stackobj'           => undef,
              'B::Terse'              => undef,
              'B::Xref'               => undef,
              'CGI::Carp'             => '1.101',
              'CPAN'                  => '1.3901',
              'CPAN::FirstTime'       => '1.29',
              'DB_File'               => '1.60',
              'Data::Dumper'          => '2.09',
              'Errno'                 => '1.09',
              'ExtUtils::Installed'   => '0.02',
              'ExtUtils::MM_Unix'     => '1.12601',
              'ExtUtils::MakeMaker'   => '5.4301',
              'ExtUtils::Mkbootstrap' => '1.13',
              'ExtUtils::Mksymlists'  => '1.17',
              'ExtUtils::Packlist'    => '0.03',
              'Fatal'                 => '1.02',
              'File::Path'            => '1.0401',
              'Getopt::Long'          => '2.17',
              'IO::Handle'            => '1.1505',
              'IPC::Msg'              => '1.00',
              'IPC::Open3'            => '1.0102',
              'IPC::Semaphore'        => '1.00',
              'IPC::SysV'             => '1.03',
              'O'                     => undef,
              'OS2::Process'          => '0.2',
              'Pod::Html'             => '1.01',
              'Pod::Text'             => '1.0203',
              'Text::ParseWords'      => '3.1',
              'Text::Wrap'            => '97.02',
              'Thread'                => '1.0',
              'Thread::Queue'         => undef,
              'Thread::Semaphore'     => undef,
              'Thread::Signal'        => undef,
              'Thread::Specific'      => undef,
              'Tie::Array'            => '1.00',
              'VMS::Stdio'            => '2.1',
              'attrs'                 => '1.0',
              'fields'                => '0.02',
              're'                    => '0.02',
          },
          removed => {
              'Bundle::CPAN'          => 1,
          }
      },
      5.00503 => {
          delta_from => 5.005,
          changed => {
              'AutoSplit'             => '1.0303',
              'CGI'                   => '2.46',
              'CGI::Carp'             => '1.13',
              'CGI::Fast'             => '1.01',
              'CPAN'                  => '1.48',
              'CPAN::FirstTime'       => '1.36',
              'CPAN::Nox'             => '1.00',
              'DB_File'               => '1.65',
              'Data::Dumper'          => '2.101',
              'Dumpvalue'             => undef,
              'Errno'                 => '1.111',
              'ExtUtils::Install'     => '1.28',
              'ExtUtils::Liblist'     => '1.25',
              'ExtUtils::MM_Unix'     => '1.12602',
              'ExtUtils::MakeMaker'   => '5.4302',
              'ExtUtils::Manifest'    => '1.33',
              'ExtUtils::Mkbootstrap' => '1.14',
              'ExtUtils::Mksymlists'  => '1.17',
              'ExtUtils::testlib'     => '1.11',
              'FindBin'               => '1.42',
              'Getopt::Long'          => '2.19',
              'Getopt::Std'           => '1.01',
              'IO::Pipe'              => '1.0902',
              'IPC::Open3'            => '1.0103',
              'Math::Complex'         => '1.26',
              'Test'                  => '1.122',
              'Text::Wrap'            => '98.112902',
          },
          removed => {
          }
      },
      5.00504 => {
          delta_from => 5.00503,
          changed => {
              'CPAN::FirstTime'       => '1.36',
              'DB_File'               => '1.807',
              'ExtUtils::Install'     => '1.28',
              'ExtUtils::Liblist'     => '1.25',
              'ExtUtils::MM_Unix'     => '1.12602',
              'ExtUtils::Manifest'    => '1.33',
              'ExtUtils::Miniperl'    => undef,
              'ExtUtils::Mkbootstrap' => '1.14',
              'ExtUtils::Mksymlists'  => '1.17',
              'ExtUtils::testlib'     => '1.11',
              'File::Compare'         => '1.1002',
              'File::Spec'            => '0.8',
              'File::Spec::Functions' => undef,
              'File::Spec::Mac'       => undef,
              'Getopt::Long'          => '2.20',
              'Pod::Html'             => '1.02',
          },
          removed => {
          }
      },
      5.006 => {
          delta_from => 5.00504,
          changed => {
              'AutoLoader'            => '5.57',
              'AutoSplit'             => '1.0305',
              'B::Deparse'            => '0.59',
              'B::Stash'              => undef,
              'Benchmark'             => '1',
              'ByteLoader'            => '0.03',
              'CGI'                   => '2.56',
              'CGI::Apache'           => undef,
              'CGI::Carp'             => '1.14',
              'CGI::Cookie'           => '1.12',
              'CGI::Fast'             => '1.02',
              'CGI::Pretty'           => '1.03',
              'CGI::Switch'           => undef,
              'CPAN'                  => '1.52',
              'CPAN::FirstTime'       => '1.38',
              'Carp::Heavy'           => undef,
              'Class::Struct'         => '0.58',
              'Cwd'                   => '2.02',
              'DB'                    => '1.0',
              'DB_File'               => '1.72',
              'Devel::DProf'          => '20000000.00_00',
              'Devel::Peek'           => '1.00_01',
              'DynaLoader'            => '1.04',
              'Exporter'              => '5.562',
              'Exporter::Heavy'       => undef,
              'ExtUtils::MM_Cygwin'   => undef,
              'ExtUtils::MM_Unix'     => '1.12603',
              'ExtUtils::MakeMaker'   => '5.45',
              'File::Copy'            => '2.03',
              'File::Glob'            => '0.991',
              'File::Path'            => '1.0403',
              'GDBM_File'             => '1.03',
              'Getopt::Long'          => '2.23',
              'Getopt::Std'           => '1.02',
              'IO'                    => '1.20',
              'IO::Dir'               => '1.03',
              'IO::File'              => '1.08',
              'IO::Handle'            => '1.21',
              'IO::Pipe'              => '1.121',
              'IO::Poll'              => '0.01',
              'IO::Seekable'          => '1.08',
              'IO::Select'            => '1.14',
              'IO::Socket'            => '1.26',
              'IO::Socket::INET'      => '1.25',
              'IO::Socket::UNIX'      => '1.20',
              'JNI'                   => '0.01',
              'JPL::AutoLoader'       => undef,
              'JPL::Class'            => undef,
              'JPL::Compile'          => undef,
              'NDBM_File'             => '1.03',
              'ODBM_File'             => '1.02',
              'OS2::DLL'              => undef,
              'POSIX'                 => '1.03',
              'Pod::Checker'          => '1.098',
              'Pod::Find'             => '0.12',
              'Pod::Html'             => '1.03',
              'Pod::InputObjects'     => '1.12',
              'Pod::Man'              => '1.02',
              'Pod::ParseUtils'       => '0.2',
              'Pod::Parser'           => '1.12',
              'Pod::Plainer'          => '0.01',
              'Pod::Select'           => '1.12',
              'Pod::Text'             => '2.03',
              'Pod::Text::Color'      => '0.05',
              'Pod::Text::Termcap'    => '0.04',
              'Pod::Usage'            => '1.12',
              'SDBM_File'             => '1.02',
              'SelfLoader'            => '1.0901',
              'Shell'                 => '0.2',
              'Socket'                => '1.72',
              'Sys::Hostname'         => '1.1',
              'Sys::Syslog'           => '0.01',
              'Term::ANSIColor'       => '1.01',
              'Test'                  => '1.13',
              'Test::Harness'         => '1.1604',
              'Text::ParseWords'      => '3.2',
              'Text::Soundex'         => '1.0',
              'Text::Tabs'            => '98.112801',
              'Tie::Array'            => '1.01',
              'Tie::Handle'           => '1.0',
              'VMS::Stdio'            => '2.2',
              'XSLoader'              => '0.01',
              'attributes'            => '0.03',
              'autouse'               => '1.02',
              'base'                  => '1.01',
              'bytes'                 => undef,
              'charnames'             => undef,
              'constant'              => '1.02',
              'diagnostics'           => '1.0',
              'fields'                => '1.01',
              'filetest'              => undef,
              'lib'                   => '0.5564',
              'open'                  => undef,
              'utf8'                  => undef,
              'warnings'              => undef,
              'warnings::register'    => undef,
          },
          removed => {
          }
      },
      5.006001 => {
          delta_from => 5.006,
          changed => {
              'AutoLoader'            => '5.58',
              'B::Assembler'          => '0.02',
              'B::Concise'            => '0.51',
              'B::Deparse'            => '0.6',
              'ByteLoader'            => '0.04',
              'CGI'                   => '2.752',
              'CGI::Carp'             => '1.20',
              'CGI::Cookie'           => '1.18',
              'CGI::Pretty'           => '1.05',
              'CGI::Push'             => '1.04',
              'CGI::Util'             => '1.1',
              'CPAN'                  => '1.59_54',
              'CPAN::FirstTime'       => '1.53',
              'Class::Struct'         => '0.59',
              'Cwd'                   => '2.04',
              'DB_File'               => '1.75',
              'Data::Dumper'          => '2.102',
              'ExtUtils::Install'     => '1.28',
              'ExtUtils::Liblist'     => '1.26',
              'ExtUtils::MM_Unix'     => '1.12603',
              'ExtUtils::Manifest'    => '1.33',
              'ExtUtils::Mkbootstrap' => '1.14',
              'ExtUtils::Mksymlists'  => '1.17',
              'ExtUtils::testlib'     => '1.11',
              'File::Path'            => '1.0404',
              'File::Spec'            => '0.82',
              'File::Spec::Epoc'      => undef,
              'File::Spec::Functions' => '1.1',
              'File::Spec::Mac'       => '1.2',
              'File::Spec::OS2'       => '1.1',
              'File::Spec::Unix'      => '1.2',
              'File::Spec::VMS'       => '1.1',
              'File::Spec::Win32'     => '1.2',
              'File::Temp'            => '0.12',
              'GDBM_File'             => '1.05',
              'Getopt::Long'          => '2.25',
              'IO::Poll'              => '0.05',
              'JNI'                   => '0.1',
              'Math::BigFloat'        => '0.02',
              'Math::BigInt'          => '0.01',
              'Math::Complex'         => '1.31',
              'NDBM_File'             => '1.04',
              'ODBM_File'             => '1.03',
              'OS2::REXX'             => '1.00',
              'Pod::Checker'          => '1.2',
              'Pod::Find'             => '0.21',
              'Pod::InputObjects'     => '1.13',
              'Pod::LaTeX'            => '0.53',
              'Pod::Man'              => '1.15',
              'Pod::ParseUtils'       => '0.22',
              'Pod::Parser'           => '1.13',
              'Pod::Select'           => '1.13',
              'Pod::Text'             => '2.08',
              'Pod::Text::Color'      => '0.06',
              'Pod::Text::Overstrike' => '1.01',
              'Pod::Text::Termcap'    => '1',
              'Pod::Usage'            => '1.14',
              'SDBM_File'             => '1.03',
              'SelfLoader'            => '1.0902',
              'Shell'                 => '0.3',
              'Term::ANSIColor'       => '1.03',
              'Test'                  => '1.15',
              'Text::Wrap'            => '2001.0131',
              'Tie::Handle'           => '4.0',
              'Tie::RefHash'          => '1.3',
          },
          removed => {
          }
      },
      5.006002 => {
          delta_from => 5.006001,
          changed => {
              'CPAN::FirstTime'       => '1.53',
              'DB_File'               => '1.806',
              'Data::Dumper'          => '2.121',
              'ExtUtils::Command'     => '1.05',
              'ExtUtils::Command::MM' => '0.03',
              'ExtUtils::Install'     => '1.32',
              'ExtUtils::Installed'   => '0.08',
              'ExtUtils::Liblist'     => '1.01',
              'ExtUtils::Liblist::Kid'=> '1.3',
              'ExtUtils::MM'          => '0.04',
              'ExtUtils::MM_Any'      => '0.07',
              'ExtUtils::MM_BeOS'     => '1.04',
              'ExtUtils::MM_Cygwin'   => '1.06',
              'ExtUtils::MM_DOS'      => '0.02',
              'ExtUtils::MM_MacOS'    => '1.07',
              'ExtUtils::MM_NW5'      => '2.06',
              'ExtUtils::MM_OS2'      => '1.04',
              'ExtUtils::MM_UWIN'     => '0.02',
              'ExtUtils::MM_Unix'     => '1.42',
              'ExtUtils::MM_VMS'      => '5.70',
              'ExtUtils::MM_Win32'    => '1.09',
              'ExtUtils::MM_Win95'    => '0.03',
              'ExtUtils::MY'          => '0.01',
              'ExtUtils::MakeMaker'   => '6.17',
              'ExtUtils::MakeMaker::bytes'=> '0.01',
              'ExtUtils::MakeMaker::vmsish'=> '0.01',
              'ExtUtils::Manifest'    => '1.42',
              'ExtUtils::Mkbootstrap' => '1.15',
              'ExtUtils::Mksymlists'  => '1.19',
              'ExtUtils::Packlist'    => '0.04',
              'ExtUtils::testlib'     => '1.15',
              'File::Spec'            => '0.86',
              'File::Spec::Cygwin'    => '1.1',
              'File::Spec::Epoc'      => '1.1',
              'File::Spec::Functions' => '1.3',
              'File::Spec::Mac'       => '1.4',
              'File::Spec::OS2'       => '1.2',
              'File::Spec::Unix'      => '1.5',
              'File::Spec::VMS'       => '1.4',
              'File::Spec::Win32'     => '1.4',
              'File::Temp'            => '0.14',
              'Safe'                  => '2.10',
              'Test'                  => '1.24',
              'Test::Builder'         => '0.17',
              'Test::Harness'         => '2.30',
              'Test::Harness::Assert' => '0.01',
              'Test::Harness::Iterator'=> '0.01',
              'Test::Harness::Straps' => '0.15',
              'Test::More'            => '0.47',
              'Test::Simple'          => '0.47',
              'Unicode'               => '3.0.1',
              'if'                    => '0.03',
              'ops'                   => '1.00',
          },
          removed => {
          }
      },
      5.007003 => {
          delta_from => 5.006001,
          changed => {
              'AnyDBM_File'           => '1.00',
              'Attribute::Handlers'   => '0.76',
              'AutoLoader'            => '5.59',
              'AutoSplit'             => '1.0307',
              'B'                     => '1.00',
              'B::Asmdata'            => '1.00',
              'B::Assembler'          => '0.04',
              'B::Bblock'             => '1.00',
              'B::Bytecode'           => '1.00',
              'B::C'                  => '1.01',
              'B::CC'                 => '1.00',
              'B::Concise'            => '0.52',
              'B::Debug'              => '1.00',
              'B::Deparse'            => '0.63',
              'B::Disassembler'       => '1.01',
              'B::Lint'               => '1.00',
              'B::Showlex'            => '1.00',
              'B::Stackobj'           => '1.00',
              'B::Stash'              => '1.00',
              'B::Terse'              => '1.00',
              'B::Xref'               => '1.00',
              'Benchmark'             => '1.04',
              'CGI'                   => '2.80',
              'CGI::Apache'           => '1.00',
              'CGI::Carp'             => '1.22',
              'CGI::Cookie'           => '1.20',
              'CGI::Fast'             => '1.04',
              'CGI::Pretty'           => '1.05_00',
              'CGI::Switch'           => '1.00',
              'CGI::Util'             => '1.3',
              'CPAN'                  => '1.59_56',
              'CPAN::FirstTime'       => '1.54',
              'CPAN::Nox'             => '1.00_01',
              'Carp'                  => '1.01',
              'Carp::Heavy'           => '1.01',
              'Class::ISA'            => '0.32',
              'Class::Struct'         => '0.61',
              'Cwd'                   => '2.06',
              'DB_File'               => '1.804',
              'Data::Dumper'          => '2.12',
              'Devel::DProf'          => '20000000.00_01',
              'Devel::PPPort'         => '2.0002',
              'Devel::Peek'           => '1.00_03',
              'Devel::SelfStubber'    => '1.03',
              'Digest'                => '1.00',
              'Digest::MD5'           => '2.16',
              'DirHandle'             => '1.00',
              'Dumpvalue'             => '1.10',
              'Encode'                => '0.40',
              'Encode::CN'            => '0.02',
              'Encode::CN::HZ'        => undef,
              'Encode::Encoding'      => '0.02',
              'Encode::Internal'      => '0.30',
              'Encode::JP'            => '0.02',
              'Encode::JP::Constants' => '1.02',
              'Encode::JP::H2Z'       => '0.77',
              'Encode::JP::ISO_2022_JP'=> undef,
              'Encode::JP::JIS'       => undef,
              'Encode::JP::Tr'        => '0.77',
              'Encode::KR'            => '0.02',
              'Encode::TW'            => '0.02',
              'Encode::Tcl'           => '1.01',
              'Encode::Tcl::Escape'   => '1.01',
              'Encode::Tcl::Extended' => '1.01',
              'Encode::Tcl::HanZi'    => '1.01',
              'Encode::Tcl::Table'    => '1.01',
              'Encode::Unicode'       => '0.30',
              'Encode::XS'            => '0.40',
              'Encode::iso10646_1'    => '0.30',
              'Encode::usc2_le'       => '0.30',
              'Encode::utf8'          => '0.30',
              'English'               => '1.00',
              'Env'                   => '1.00',
              'Exporter'              => '5.566',
              'Exporter::Heavy'       => '5.562',
              'ExtUtils::Command'     => '1.02',
              'ExtUtils::Constant'    => '0.11',
              'ExtUtils::Embed'       => '1.250601',
              'ExtUtils::Install'     => '1.29',
              'ExtUtils::Installed'   => '0.04',
              'ExtUtils::Liblist'     => '1.2701',
              'ExtUtils::MM_BeOS'     => '1.00',
              'ExtUtils::MM_Cygwin'   => '1.00',
              'ExtUtils::MM_OS2'      => '1.00',
              'ExtUtils::MM_Unix'     => '1.12607',
              'ExtUtils::MM_VMS'      => '5.56',
              'ExtUtils::MM_Win32'    => '1.00_02',
              'ExtUtils::MakeMaker'   => '5.48_03',
              'ExtUtils::Manifest'    => '1.35',
              'ExtUtils::Mkbootstrap' => '1.1401',
              'ExtUtils::Mksymlists'  => '1.18',
              'ExtUtils::Packlist'    => '0.04',
              'ExtUtils::testlib'     => '1.1201',
              'Fatal'                 => '1.03',
              'Fcntl'                 => '1.04',
              'File::Basename'        => '2.71',
              'File::CheckTree'       => '4.1',
              'File::Compare'         => '1.1003',
              'File::Copy'            => '2.05',
              'File::DosGlob'         => '1.00',
              'File::Find'            => '1.04',
              'File::Glob'            => '1.01',
              'File::Path'            => '1.05',
              'File::Spec'            => '0.83',
              'File::Spec::Cygwin'    => '1.0',
              'File::Spec::Epoc'      => '1.00',
              'File::Spec::Functions' => '1.2',
              'File::Spec::Mac'       => '1.3',
              'File::Spec::Unix'      => '1.4',
              'File::Spec::VMS'       => '1.2',
              'File::Spec::Win32'     => '1.3',
              'File::Temp'            => '0.13',
              'File::stat'            => '1.00',
              'FileCache'             => '1.00',
              'FileHandle'            => '2.01',
              'Filter::Simple'        => '0.77',
              'Filter::Util::Call'    => '1.06',
              'FindBin'               => '1.43',
              'GDBM_File'             => '1.06',
              'Getopt::Long'          => '2.28',
              'Getopt::Std'           => '1.03',
              'I18N::Collate'         => '1.00',
              'I18N::LangTags'        => '0.27',
              'I18N::LangTags::List'  => '0.25',
              'I18N::Langinfo'        => '0.01',
              'IO::Dir'               => '1.03_00',
              'IO::File'              => '1.09',
              'IO::Handle'            => '1.21_00',
              'IO::Pipe'              => '1.122',
              'IO::Poll'              => '0.06',
              'IO::Seekable'          => '1.08_00',
              'IO::Select'            => '1.15',
              'IO::Socket'            => '1.27',
              'IO::Socket::INET'      => '1.26',
              'IO::Socket::UNIX'      => '1.20_00',
              'IPC::Msg'              => '1.00_00',
              'IPC::Open3'            => '1.0104',
              'IPC::Semaphore'        => '1.00_00',
              'IPC::SysV'             => '1.03_00',
              'List::Util'            => '1.06_00',
              'Locale::Constants'     => '2.01',
              'Locale::Country'       => '2.01',
              'Locale::Currency'      => '2.01',
              'Locale::Language'      => '2.01',
              'Locale::Maketext'      => '1.03',
              'Locale::Script'        => '2.01',
              'MIME::Base64'          => '2.12',
              'MIME::QuotedPrint'     => '2.03',
              'Math::BigFloat'        => '1.30',
              'Math::BigInt'          => '1.54',
              'Math::BigInt::Calc'    => '0.25',
              'Math::Complex'         => '1.34',
              'Math::Trig'            => '1.01',
              'Memoize'               => '0.66',
              'Memoize::AnyDBM_File'  => '0.65',
              'Memoize::Expire'       => '0.66',
              'Memoize::ExpireFile'   => '0.65',
              'Memoize::ExpireTest'   => '0.65',
              'Memoize::NDBM_File'    => '0.65',
              'Memoize::SDBM_File'    => '0.65',
              'Memoize::Storable'     => '0.65',
              'NEXT'                  => '0.50',
              'Net::Cmd'              => '2.21',
              'Net::Config'           => '1.10',
              'Net::Domain'           => '2.17',
              'Net::FTP'              => '2.64',
              'Net::FTP::A'           => '1.15',
              'Net::FTP::E'           => '0.01',
              'Net::FTP::I'           => '1.12',
              'Net::FTP::L'           => '0.01',
              'Net::FTP::dataconn'    => '0.10',
              'Net::NNTP'             => '2.21',
              'Net::Netrc'            => '2.12',
              'Net::POP3'             => '2.23',
              'Net::Ping'             => '2.12',
              'Net::SMTP'             => '2.21',
              'Net::Time'             => '2.09',
              'Net::hostent'          => '1.00',
              'Net::netent'           => '1.00',
              'Net::protoent'         => '1.00',
              'Net::servent'          => '1.00',
              'O'                     => '1.00',
              'OS2::DLL'              => '1.00',
              'OS2::Process'          => '1.0',
              'OS2::REXX'             => '1.01',
              'Opcode'                => '1.05',
              'POSIX'                 => '1.05',
              'PerlIO'                => '1.00',
              'PerlIO::Scalar'        => '0.01',
              'PerlIO::Via'           => '0.01',
              'Pod::Checker'          => '1.3',
              'Pod::Find'             => '0.22',
              'Pod::Functions'        => '1.01',
              'Pod::Html'             => '1.04',
              'Pod::LaTeX'            => '0.54',
              'Pod::Man'              => '1.32',
              'Pod::ParseLink'        => '1.05',
              'Pod::Text'             => '2.18',
              'Pod::Text::Color'      => '1.03',
              'Pod::Text::Overstrike' => '1.08',
              'Pod::Text::Termcap'    => '1.09',
              'Safe'                  => '2.07',
              'Scalar::Util'          => '1.06_00',
              'Search::Dict'          => '1.02',
              'SelectSaver'           => '1.00',
              'SelfLoader'            => '1.0903',
              'Shell'                 => '0.4',
              'Socket'                => '1.75',
              'Storable'              => '1.015',
              'Switch'                => '2.06',
              'Symbol'                => '1.04',
              'Sys::Syslog'           => '0.02',
              'Term::ANSIColor'       => '1.04',
              'Term::Cap'             => '1.07',
              'Term::Complete'        => '1.4',
              'Term::ReadLine'        => '1.00',
              'Test'                  => '1.18',
              'Test::Builder'         => '0.11',
              'Test::Harness'         => '2.01',
              'Test::Harness::Assert' => '0.01',
              'Test::Harness::Iterator'=> '0.01',
              'Test::Harness::Straps' => '0.08',
              'Test::More'            => '0.41',
              'Test::Simple'          => '0.41',
              'Text::Abbrev'          => '1.00',
              'Text::Balanced'        => '1.89',
              'Text::ParseWords'      => '3.21',
              'Text::Soundex'         => '1.01',
              'Text::Wrap'            => '2001.0929',
              'Thread'                => '2.00',
              'Thread::Queue'         => '1.00',
              'Thread::Semaphore'     => '1.00',
              'Thread::Signal'        => '1.00',
              'Thread::Specific'      => '1.00',
              'Tie::Array'            => '1.02',
              'Tie::File'             => '0.17',
              'Tie::Handle'           => '4.1',
              'Tie::Hash'             => '1.00',
              'Tie::Memoize'          => '1.0',
              'Tie::RefHash'          => '1.3_00',
              'Tie::Scalar'           => '1.00',
              'Tie::SubstrHash'       => '1.00',
              'Time::HiRes'           => '1.20_00',
              'Time::Local'           => '1.04',
              'Time::gmtime'          => '1.02',
              'Time::localtime'       => '1.02',
              'Time::tm'              => '1.00',
              'UNIVERSAL'             => '1.00',
              'Unicode::Collate'      => '0.10',
              'Unicode::Normalize'    => '0.14',
              'Unicode::UCD'          => '0.2',
              'User::grent'           => '1.00',
              'User::pwent'           => '1.00',
              'VMS::DCLsym'           => '1.02',
              'VMS::Filespec'         => '1.1',
              'VMS::Stdio'            => '2.3',
              'XS::Typemap'           => '0.01',
              'attributes'            => '0.04_01',
              'attrs'                 => '1.01',
              'autouse'               => '1.03',
              'base'                  => '1.02',
              'blib'                  => '1.01',
              'bytes'                 => '1.00',
              'charnames'             => '1.01',
              'constant'              => '1.04',
              'diagnostics'           => '1.1',
              'encoding'              => '1.00',
              'fields'                => '1.02',
              'filetest'              => '1.00',
              'if'                    => '0.01',
              'integer'               => '1.00',
              'less'                  => '0.01',
              'locale'                => '1.00',
              'open'                  => '1.01',
              'ops'                   => '1.00',
              'overload'              => '1.00',
              're'                    => '0.03',
              'sort'                  => '1.00',
              'strict'                => '1.02',
              'subs'                  => '1.00',
              'threads'               => '0.05',
              'threads::shared'       => '0.90',
              'utf8'                  => '1.00',
              'vars'                  => '1.01',
              'vmsish'                => '1.00',
              'warnings'              => '1.00',
              'warnings::register'    => '1.00',
          },
          removed => {
          }
      },
      5.008 => {
          delta_from => 5.007003,
          changed => {
              'Attribute::Handlers'   => '0.77',
              'B'                     => '1.01',
              'B::Lint'               => '1.01',
              'B::Xref'               => '1.01',
              'CGI'                   => '2.81',
              'CGI::Carp'             => '1.23',
              'CPAN'                  => '1.61',
              'CPAN::FirstTime'       => '1.56',
              'CPAN::Nox'             => '1.02',
              'Digest::MD5'           => '2.20',
              'Dumpvalue'             => '1.11',
              'Encode'                => '1.75',
              'Encode::Alias'         => '1.32',
              'Encode::Byte'          => '1.22',
              'Encode::CJKConstants'  => '1.00',
              'Encode::CN'            => '1.24',
              'Encode::CN::HZ'        => '1.04',
              'Encode::Config'        => '1.06',
              'Encode::EBCDIC'        => '1.21',
              'Encode::Encoder'       => '0.05',
              'Encode::Encoding'      => '1.30',
              'Encode::Guess'         => '1.06',
              'Encode::JP'            => '1.25',
              'Encode::JP::H2Z'       => '1.02',
              'Encode::JP::JIS7'      => '1.08',
              'Encode::KR'            => '1.22',
              'Encode::KR::2022_KR'   => '1.05',
              'Encode::MIME::Header'  => '1.05',
              'Encode::Symbol'        => '1.22',
              'Encode::TW'            => '1.26',
              'Encode::Unicode'       => '1.37',
              'Exporter::Heavy'       => '5.566',
              'ExtUtils::Command'     => '1.04',
              'ExtUtils::Command::MM' => '0.01',
              'ExtUtils::Constant'    => '0.12',
              'ExtUtils::Installed'   => '0.06',
              'ExtUtils::Liblist'     => '1.00',
              'ExtUtils::Liblist::Kid'=> '1.29',
              'ExtUtils::MM'          => '0.04',
              'ExtUtils::MM_Any'      => '0.04',
              'ExtUtils::MM_BeOS'     => '1.03',
              'ExtUtils::MM_Cygwin'   => '1.04',
              'ExtUtils::MM_DOS'      => '0.01',
              'ExtUtils::MM_MacOS'    => '1.03',
              'ExtUtils::MM_NW5'      => '2.05',
              'ExtUtils::MM_OS2'      => '1.03',
              'ExtUtils::MM_UWIN'     => '0.01',
              'ExtUtils::MM_Unix'     => '1.33',
              'ExtUtils::MM_VMS'      => '5.65',
              'ExtUtils::MM_Win32'    => '1.05',
              'ExtUtils::MM_Win95'    => '0.02',
              'ExtUtils::MY'          => '0.01',
              'ExtUtils::MakeMaker'   => '6.03',
              'ExtUtils::Manifest'    => '1.38',
              'ExtUtils::Mkbootstrap' => '1.15',
              'ExtUtils::Mksymlists'  => '1.19',
              'ExtUtils::testlib'     => '1.15',
              'File::CheckTree'       => '4.2',
              'FileCache'             => '1.021',
              'Filter::Simple'        => '0.78',
              'Getopt::Long'          => '2.32',
              'Hash::Util'            => '0.04',
              'List::Util'            => '1.07_00',
              'Locale::Country'       => '2.04',
              'Math::BigFloat'        => '1.35',
              'Math::BigFloat::Trace' => '0.01',
              'Math::BigInt'          => '1.60',
              'Math::BigInt::Calc'    => '0.30',
              'Math::BigInt::Trace'   => '0.01',
              'Math::BigRat'          => '0.07',
              'Memoize'               => '1.01',
              'Memoize::Expire'       => '1.00',
              'Memoize::ExpireFile'   => '1.01',
              'Net::FTP'              => '2.65',
              'Net::FTP::dataconn'    => '0.11',
              'Net::Ping'             => '2.19',
              'Net::SMTP'             => '2.24',
              'PerlIO'                => '1.01',
              'PerlIO::encoding'      => '0.06',
              'PerlIO::scalar'        => '0.01',
              'PerlIO::via'           => '0.01',
              'PerlIO::via::QuotedPrint'=> '0.04',
              'Pod::Man'              => '1.33',
              'Pod::Text'             => '2.19',
              'Scalar::Util'          => '1.07_00',
              'Storable'              => '2.04',
              'Switch'                => '2.09',
              'Sys::Syslog'           => '0.03',
              'Test'                  => '1.20',
              'Test::Builder'         => '0.15',
              'Test::Harness'         => '2.26',
              'Test::Harness::Straps' => '0.14',
              'Test::More'            => '0.45',
              'Test::Simple'          => '0.45',
              'Thread::Queue'         => '2.00',
              'Thread::Semaphore'     => '2.00',
              'Tie::File'             => '0.93',
              'Tie::RefHash'          => '1.30',
              'Unicode'               => '3.2.0',
              'Unicode::Collate'      => '0.12',
              'Unicode::Normalize'    => '0.17',
              'XS::APItest'           => '0.01',
              'attributes'            => '0.05',
              'base'                  => '1.03',
              'bigint'                => '0.02',
              'bignum'                => '0.11',
              'bigrat'                => '0.04',
              'blib'                  => '1.02',
              'encoding'              => '1.35',
              'sort'                  => '1.01',
              'threads'               => '0.99',
          },
          removed => {
              'Encode::Internal'      => 1,
              'Encode::JP::Constants' => 1,
              'Encode::JP::ISO_2022_JP'=> 1,
              'Encode::JP::JIS'       => 1,
              'Encode::JP::Tr'        => 1,
              'Encode::Tcl'           => 1,
              'Encode::Tcl::Escape'   => 1,
              'Encode::Tcl::Extended' => 1,
              'Encode::Tcl::HanZi'    => 1,
              'Encode::Tcl::Table'    => 1,
              'Encode::XS'            => 1,
              'Encode::iso10646_1'    => 1,
              'Encode::usc2_le'       => 1,
              'Encode::utf8'          => 1,
              'PerlIO::Scalar'        => 1,
              'PerlIO::Via'           => 1,
          }
      },
      5.008001 => {
          delta_from => 5.008,
          changed => {
              'Attribute::Handlers'   => '0.78',
              'AutoLoader'            => '5.60',
              'AutoSplit'             => '1.04',
              'B'                     => '1.02',
              'B::Asmdata'            => '1.01',
              'B::Assembler'          => '0.06',
              'B::Bblock'             => '1.02',
              'B::Bytecode'           => '1.01',
              'B::C'                  => '1.02',
              'B::Concise'            => '0.56',
              'B::Debug'              => '1.01',
              'B::Deparse'            => '0.64',
              'B::Disassembler'       => '1.03',
              'B::Lint'               => '1.02',
              'B::Terse'              => '1.02',
              'Benchmark'             => '1.051',
              'ByteLoader'            => '0.05',
              'CGI'                   => '3.00',
              'CGI::Carp'             => '1.26',
              'CGI::Cookie'           => '1.24',
              'CGI::Fast'             => '1.041',
              'CGI::Pretty'           => '1.07_00',
              'CGI::Util'             => '1.31',
              'CPAN'                  => '1.76_01',
              'CPAN::FirstTime'       => '1.60',
              'CPAN::Nox'             => '1.03',
              'Class::Struct'         => '0.63',
              'Cwd'                   => '2.08',
              'DB_File'               => '1.806',
              'Data::Dumper'          => '2.121',
              'Devel::DProf'          => '20030813.00',
              'Devel::PPPort'         => '2.007',
              'Devel::Peek'           => '1.01',
              'Digest'                => '1.02',
              'Digest::MD5'           => '2.27',
              'Encode'                => '1.9801',
              'Encode::Alias'         => '1.38',
              'Encode::Byte'          => '1.23',
              'Encode::CJKConstants'  => '1.02',
              'Encode::CN::HZ'        => '1.05',
              'Encode::Config'        => '1.07',
              'Encode::Encoder'       => '0.07',
              'Encode::Encoding'      => '1.33',
              'Encode::Guess'         => '1.09',
              'Encode::JP::JIS7'      => '1.12',
              'Encode::KR'            => '1.23',
              'Encode::KR::2022_KR'   => '1.06',
              'Encode::MIME::Header'  => '1.09',
              'Encode::Unicode'       => '1.40',
              'Encode::Unicode::UTF7' => '0.02',
              'English'               => '1.01',
              'Errno'                 => '1.09_00',
              'Exporter'              => '5.567',
              'Exporter::Heavy'       => '5.567',
              'ExtUtils::Command'     => '1.05',
              'ExtUtils::Command::MM' => '0.03',
              'ExtUtils::Constant'    => '0.14',
              'ExtUtils::Install'     => '1.32',
              'ExtUtils::Installed'   => '0.08',
              'ExtUtils::Liblist'     => '1.01',
              'ExtUtils::Liblist::Kid'=> '1.3',
              'ExtUtils::MM_Any'      => '0.07',
              'ExtUtils::MM_BeOS'     => '1.04',
              'ExtUtils::MM_Cygwin'   => '1.06',
              'ExtUtils::MM_DOS'      => '0.02',
              'ExtUtils::MM_MacOS'    => '1.07',
              'ExtUtils::MM_NW5'      => '2.06',
              'ExtUtils::MM_OS2'      => '1.04',
              'ExtUtils::MM_UWIN'     => '0.02',
              'ExtUtils::MM_Unix'     => '1.42',
              'ExtUtils::MM_VMS'      => '5.70',
              'ExtUtils::MM_Win32'    => '1.09',
              'ExtUtils::MM_Win95'    => '0.03',
              'ExtUtils::MakeMaker'   => '6.17',
              'ExtUtils::MakeMaker::bytes'=> '0.01',
              'ExtUtils::MakeMaker::vmsish'=> '0.01',
              'ExtUtils::Manifest'    => '1.42',
              'Fcntl'                 => '1.05',
              'File::Basename'        => '2.72',
              'File::Copy'            => '2.06',
              'File::Find'            => '1.05',
              'File::Glob'            => '1.02',
              'File::Path'            => '1.06',
              'File::Spec'            => '0.86',
              'File::Spec::Cygwin'    => '1.1',
              'File::Spec::Epoc'      => '1.1',
              'File::Spec::Functions' => '1.3',
              'File::Spec::Mac'       => '1.4',
              'File::Spec::OS2'       => '1.2',
              'File::Spec::Unix'      => '1.5',
              'File::Spec::VMS'       => '1.4',
              'File::Spec::Win32'     => '1.4',
              'File::Temp'            => '0.14',
              'FileCache'             => '1.03',
              'Filter::Util::Call'    => '1.0601',
              'GDBM_File'             => '1.07',
              'Getopt::Long'          => '2.34',
              'Getopt::Std'           => '1.04',
              'Hash::Util'            => '0.05',
              'I18N::LangTags'        => '0.28',
              'I18N::LangTags::List'  => '0.26',
              'I18N::Langinfo'        => '0.02',
              'IO'                    => '1.21',
              'IO::Dir'               => '1.04',
              'IO::File'              => '1.10',
              'IO::Handle'            => '1.23',
              'IO::Seekable'          => '1.09',
              'IO::Select'            => '1.16',
              'IO::Socket'            => '1.28',
              'IO::Socket::INET'      => '1.27',
              'IO::Socket::UNIX'      => '1.21',
              'IPC::Msg'              => '1.02',
              'IPC::Open3'            => '1.0105',
              'IPC::Semaphore'        => '1.02',
              'IPC::SysV'             => '1.04',
              'JNI'                   => '0.2',
              'List::Util'            => '1.13',
              'Locale::Country'       => '2.61',
              'Locale::Currency'      => '2.21',
              'Locale::Language'      => '2.21',
              'Locale::Maketext'      => '1.06',
              'Locale::Maketext::Guts'=> undef,
              'Locale::Maketext::GutsLoader'=> undef,
              'Locale::Script'        => '2.21',
              'MIME::Base64'          => '2.20',
              'MIME::QuotedPrint'     => '2.20',
              'Math::BigFloat'        => '1.40',
              'Math::BigInt'          => '1.66',
              'Math::BigInt::Calc'    => '0.36',
              'Math::BigInt::Scalar'  => '0.11',
              'Math::BigRat'          => '0.10',
              'Math::Trig'            => '1.02',
              'NDBM_File'             => '1.05',
              'NEXT'                  => '0.60',
              'Net::Cmd'              => '2.24',
              'Net::Domain'           => '2.18',
              'Net::FTP'              => '2.71',
              'Net::FTP::A'           => '1.16',
              'Net::NNTP'             => '2.22',
              'Net::POP3'             => '2.24',
              'Net::Ping'             => '2.31',
              'Net::SMTP'             => '2.26',
              'Net::hostent'          => '1.01',
              'Net::servent'          => '1.01',
              'ODBM_File'             => '1.04',
              'OS2::DLL'              => '1.01',
              'OS2::ExtAttr'          => '0.02',
              'OS2::PrfDB'            => '0.03',
              'OS2::Process'          => '1.01',
              'OS2::REXX'             => '1.02',
              'POSIX'                 => '1.06',
              'PerlIO'                => '1.02',
              'PerlIO::encoding'      => '0.07',
              'PerlIO::scalar'        => '0.02',
              'PerlIO::via'           => '0.02',
              'PerlIO::via::QuotedPrint'=> '0.05',
              'Pod::Checker'          => '1.41',
              'Pod::Find'             => '0.24',
              'Pod::Functions'        => '1.02',
              'Pod::Html'             => '1.0501',
              'Pod::InputObjects'     => '1.14',
              'Pod::LaTeX'            => '0.55',
              'Pod::Man'              => '1.37',
              'Pod::ParseLink'        => '1.06',
              'Pod::ParseUtils'       => '0.3',
              'Pod::Perldoc'          => '3.10',
              'Pod::Perldoc::BaseTo'  => undef,
              'Pod::Perldoc::GetOptsOO'=> undef,
              'Pod::Perldoc::ToChecker'=> undef,
              'Pod::Perldoc::ToMan'   => undef,
              'Pod::Perldoc::ToNroff' => undef,
              'Pod::Perldoc::ToPod'   => undef,
              'Pod::Perldoc::ToRtf'   => undef,
              'Pod::Perldoc::ToText'  => undef,
              'Pod::Perldoc::ToTk'    => undef,
              'Pod::Perldoc::ToXml'   => undef,
              'Pod::PlainText'        => '2.01',
              'Pod::Text'             => '2.21',
              'Pod::Text::Color'      => '1.04',
              'Pod::Text::Overstrike' => '1.1',
              'Pod::Text::Termcap'    => '1.11',
              'Pod::Usage'            => '1.16',
              'SDBM_File'             => '1.04',
              'Safe'                  => '2.10',
              'Scalar::Util'          => '1.13',
              'SelfLoader'            => '1.0904',
              'Shell'                 => '0.5',
              'Socket'                => '1.76',
              'Storable'              => '2.08',
              'Switch'                => '2.10',
              'Symbol'                => '1.05',
              'Sys::Hostname'         => '1.11',
              'Sys::Syslog'           => '0.04',
              'Term::ANSIColor'       => '1.07',
              'Term::Cap'             => '1.08',
              'Term::Complete'        => '1.401',
              'Term::ReadLine'        => '1.01',
              'Test'                  => '1.24',
              'Test::Builder'         => '0.17',
              'Test::Harness'         => '2.30',
              'Test::Harness::Straps' => '0.15',
              'Test::More'            => '0.47',
              'Test::Simple'          => '0.47',
              'Text::Abbrev'          => '1.01',
              'Text::Balanced'        => '1.95',
              'Text::Wrap'            => '2001.09291',
              'Thread::Semaphore'     => '2.01',
              'Tie::Array'            => '1.03',
              'Tie::File'             => '0.97',
              'Tie::RefHash'          => '1.31',
              'Time::HiRes'           => '1.51',
              'Time::Local'           => '1.07',
              'UNIVERSAL'             => '1.01',
              'Unicode'               => '4.0.0',
              'Unicode::Collate'      => '0.28',
              'Unicode::Normalize'    => '0.23',
              'Unicode::UCD'          => '0.21',
              'VMS::Filespec'         => '1.11',
              'XS::APItest'           => '0.02',
              'XSLoader'              => '0.02',
              'attributes'            => '0.06',
              'base'                  => '2.03',
              'bigint'                => '0.04',
              'bignum'                => '0.14',
              'bigrat'                => '0.06',
              'bytes'                 => '1.01',
              'charnames'             => '1.02',
              'diagnostics'           => '1.11',
              'encoding'              => '1.47',
              'fields'                => '2.03',
              'filetest'              => '1.01',
              'if'                    => '0.03',
              'lib'                   => '0.5565',
              'open'                  => '1.02',
              'overload'              => '1.01',
              're'                    => '0.04',
              'sort'                  => '1.02',
              'strict'                => '1.03',
              'threads'               => '1.00',
              'threads::shared'       => '0.91',
              'utf8'                  => '1.02',
              'vmsish'                => '1.01',
              'warnings'              => '1.03',
          },
          removed => {
          }
      },
      5.008002 => {
          delta_from => 5.008001,
          changed => {
              'DB_File'               => '1.807',
              'Devel::PPPort'         => '2.009',
              'Digest::MD5'           => '2.30',
              'I18N::LangTags'        => '0.29',
              'I18N::LangTags::List'  => '0.29',
              'MIME::Base64'          => '2.21',
              'MIME::QuotedPrint'     => '2.21',
              'Net::Domain'           => '2.19',
              'Net::FTP'              => '2.72',
              'Pod::Perldoc'          => '3.11',
              'Time::HiRes'           => '1.52',
              'Unicode::Collate'      => '0.30',
              'Unicode::Normalize'    => '0.25',
          },
          removed => {
          }
      },
      5.008003 => {
          delta_from => 5.008002,
          changed => {
              'Benchmark'             => '1.052',
              'CGI'                   => '3.01',
              'CGI::Carp'             => '1.27',
              'CGI::Fast'             => '1.05',
              'CGI::Pretty'           => '1.08',
              'CGI::Util'             => '1.4',
              'Cwd'                   => '2.12',
              'DB_File'               => '1.808',
              'Devel::PPPort'         => '2.011',
              'Digest'                => '1.05',
              'Digest::MD5'           => '2.33',
              'Digest::base'          => '1.00',
              'Encode'                => '1.99',
              'Exporter'              => '5.57',
              'File::CheckTree'       => '4.3',
              'File::Copy'            => '2.07',
              'File::Find'            => '1.06',
              'File::Spec'            => '0.87',
              'FindBin'               => '1.44',
              'Getopt::Std'           => '1.05',
              'Math::BigFloat'        => '1.42',
              'Math::BigInt'          => '1.68',
              'Math::BigInt::Calc'    => '0.38',
              'Math::BigInt::CalcEmu' => '0.02',
              'OS2::DLL'              => '1.02',
              'POSIX'                 => '1.07',
              'PerlIO'                => '1.03',
              'PerlIO::via::QuotedPrint'=> '0.06',
              'Pod::Html'             => '1.0502',
              'Pod::Parser'           => '1.14',
              'Pod::Perldoc'          => '3.12',
              'Pod::PlainText'        => '2.02',
              'Storable'              => '2.09',
              'Test::Harness'         => '2.40',
              'Test::Harness::Assert' => '0.02',
              'Test::Harness::Iterator'=> '0.02',
              'Test::Harness::Straps' => '0.19',
              'Tie::Hash'             => '1.01',
              'Unicode::Collate'      => '0.33',
              'Unicode::Normalize'    => '0.28',
              'XS::APItest'           => '0.03',
              'base'                  => '2.04',
              'diagnostics'           => '1.12',
              'encoding'              => '1.48',
              'threads'               => '1.01',
              'threads::shared'       => '0.92',
          },
          removed => {
              'Math::BigInt::Scalar'  => 1,
          }
      },
      5.008004 => {
          delta_from => 5.008003,
          changed => {
              'Attribute::Handlers'   => '0.78_01',
              'B::Assembler'          => '0.07',
              'B::Concise'            => '0.60',
              'B::Deparse'            => '0.66',
              'Benchmark'             => '1.06',
              'CGI'                   => '3.04',
              'Carp'                  => '1.02',
              'Cwd'                   => '2.17',
              'DBM_Filter'            => '0.01',
              'DBM_Filter::compress'  => '0.01',
              'DBM_Filter::encode'    => '0.01',
              'DBM_Filter::int32'     => '0.01',
              'DBM_Filter::null'      => '0.01',
              'DBM_Filter::utf8'      => '0.01',
              'Digest'                => '1.06',
              'DynaLoader'            => '1.05',
              'Encode'                => '1.99_01',
              'Encode::CN::HZ'        => '1.0501',
              'Exporter'              => '5.58',
              'Exporter::Heavy'       => '5.57',
              'ExtUtils::Liblist::Kid'=> '1.3001',
              'ExtUtils::MM_NW5'      => '2.07_02',
              'ExtUtils::MM_Win95'    => '0.0301',
              'File::Find'            => '1.07',
              'IO::Handle'            => '1.24',
              'IO::Pipe'              => '1.123',
              'IPC::Open3'            => '1.0106',
              'Locale::Maketext'      => '1.08',
              'MIME::Base64'          => '3.01',
              'MIME::QuotedPrint'     => '3.01',
              'Math::BigFloat'        => '1.44',
              'Math::BigInt'          => '1.70',
              'Math::BigInt::Calc'    => '0.40',
              'Math::BigInt::CalcEmu' => '0.04',
              'Math::BigRat'          => '0.12',
              'ODBM_File'             => '1.05',
              'POSIX'                 => '1.08',
              'Shell'                 => '0.5.2',
              'Socket'                => '1.77',
              'Storable'              => '2.12',
              'Sys::Syslog'           => '0.05',
              'Term::ANSIColor'       => '1.08',
              'Time::HiRes'           => '1.59',
              'Unicode'               => '4.0.1',
              'Unicode::UCD'          => '0.22',
              'Win32'                 => '0.23',
              'base'                  => '2.05',
              'bigint'                => '0.05',
              'bignum'                => '0.15',
              'charnames'             => '1.03',
              'open'                  => '1.03',
              'threads'               => '1.03',
              'utf8'                  => '1.03',
          },
          removed => {
          }
      },
      5.008005 => {
          delta_from => 5.008004,
          changed => {
              'B::Concise'            => '0.61',
              'B::Deparse'            => '0.67',
              'CGI'                   => '3.05',
              'CGI::Carp'             => '1.28',
              'CGI::Util'             => '1.5',
              'Carp'                  => '1.03',
              'Carp::Heavy'           => '1.03',
              'Cwd'                   => '2.19',
              'DB_File'               => '1.809',
              'Digest'                => '1.08',
              'Encode'                => '2.01',
              'Encode::Alias'         => '2.00',
              'Encode::Byte'          => '2.00',
              'Encode::CJKConstants'  => '2.00',
              'Encode::CN'            => '2.00',
              'Encode::CN::HZ'        => '2.01',
              'Encode::Config'        => '2.00',
              'Encode::EBCDIC'        => '2.00',
              'Encode::Encoder'       => '2.00',
              'Encode::Encoding'      => '2.00',
              'Encode::Guess'         => '2.00',
              'Encode::JP'            => '2.00',
              'Encode::JP::H2Z'       => '2.00',
              'Encode::JP::JIS7'      => '2.00',
              'Encode::KR'            => '2.00',
              'Encode::KR::2022_KR'   => '2.00',
              'Encode::MIME::Header'  => '2.00',
              'Encode::Symbol'        => '2.00',
              'Encode::TW'            => '2.00',
              'Encode::Unicode'       => '2.00',
              'Encode::Unicode::UTF7' => '2.01',
              'File::Basename'        => '2.73',
              'File::Copy'            => '2.08',
              'File::Glob'            => '1.03',
              'FileCache'             => '1.04_01',
              'I18N::LangTags'        => '0.33',
              'I18N::LangTags::Detect'=> '1.03',
              'List::Util'            => '1.14',
              'Locale::Constants'     => '2.07',
              'Locale::Country'       => '2.07',
              'Locale::Currency'      => '2.07',
              'Locale::Language'      => '2.07',
              'Locale::Maketext'      => '1.09',
              'Locale::Script'        => '2.07',
              'Net::Cmd'              => '2.26',
              'Net::FTP'              => '2.75',
              'Net::NNTP'             => '2.23',
              'Net::POP3'             => '2.28',
              'Net::SMTP'             => '2.29',
              'Net::Time'             => '2.10',
              'Pod::Checker'          => '1.42',
              'Pod::Find'             => '0.2401',
              'Pod::LaTeX'            => '0.56',
              'Pod::ParseUtils'       => '1.2',
              'Pod::Perldoc'          => '3.13',
              'Safe'                  => '2.11',
              'Scalar::Util'          => '1.14',
              'Shell'                 => '0.6',
              'Storable'              => '2.13',
              'Term::Cap'             => '1.09',
              'Test'                  => '1.25',
              'Test::Harness'         => '2.42',
              'Text::ParseWords'      => '3.22',
              'Text::Wrap'            => '2001.09292',
              'Time::Local'           => '1.10',
              'Unicode::Collate'      => '0.40',
              'Unicode::Normalize'    => '0.30',
              'XS::APItest'           => '0.04',
              'autouse'               => '1.04',
              'base'                  => '2.06',
              'charnames'             => '1.04',
              'diagnostics'           => '1.13',
              'encoding'              => '2.00',
              'threads'               => '1.05',
              'utf8'                  => '1.04',
          },
          removed => {
          }
      },
      5.008006 => {
          delta_from => 5.008005,
          changed => {
              'B'                     => '1.07',
              'B::C'                  => '1.04',
              'B::Concise'            => '0.64',
              'B::Debug'              => '1.02',
              'B::Deparse'            => '0.69',
              'B::Lint'               => '1.03',
              'B::Showlex'            => '1.02',
              'Cwd'                   => '3.01',
              'DB_File'               => '1.810',
              'Data::Dumper'          => '2.121_02',
              'Devel::PPPort'         => '3.03',
              'Devel::Peek'           => '1.02',
              'Encode'                => '2.08',
              'Encode::Alias'         => '2.02',
              'Encode::Encoding'      => '2.02',
              'Encode::JP'            => '2.01',
              'Encode::Unicode'       => '2.02',
              'Exporter::Heavy'       => '5.58',
              'ExtUtils::Constant'    => '0.1401',
              'File::Spec'            => '3.01',
              'File::Spec::Win32'     => '1.5',
              'I18N::LangTags'        => '0.35',
              'I18N::LangTags::List'  => '0.35',
              'MIME::Base64'          => '3.05',
              'MIME::QuotedPrint'     => '3.03',
              'Math::BigFloat'        => '1.47',
              'Math::BigInt'          => '1.73',
              'Math::BigInt::Calc'    => '0.43',
              'Math::BigRat'          => '0.13',
              'Text::ParseWords'      => '3.23',
              'Time::HiRes'           => '1.65',
              'XS::APItest'           => '0.05',
              'diagnostics'           => '1.14',
              'encoding'              => '2.01',
              'open'                  => '1.04',
              'overload'              => '1.02',
          },
          removed => {
          }
      },
      5.008007 => {
          delta_from => 5.008006,
          changed => {
              'B'                     => '1.09',
              'B::Concise'            => '0.65',
              'B::Deparse'            => '0.7',
              'B::Disassembler'       => '1.04',
              'B::Terse'              => '1.03',
              'Benchmark'             => '1.07',
              'CGI'                   => '3.10',
              'CGI::Carp'             => '1.29',
              'CGI::Cookie'           => '1.25',
              'Carp'                  => '1.04',
              'Carp::Heavy'           => '1.04',
              'Class::ISA'            => '0.33',
              'Cwd'                   => '3.05',
              'DB_File'               => '1.811',
              'Data::Dumper'          => '2.121_04',
              'Devel::DProf'          => '20050310.00',
              'Devel::PPPort'         => '3.06',
              'Digest'                => '1.10',
              'Digest::file'          => '0.01',
              'Encode'                => '2.10',
              'Encode::Alias'         => '2.03',
              'Errno'                 => '1.09_01',
              'ExtUtils::Constant'    => '0.16',
              'ExtUtils::Constant::Base'=> '0.01',
              'ExtUtils::Constant::Utils'=> '0.01',
              'ExtUtils::Constant::XS'=> '0.01',
              'File::Find'            => '1.09',
              'File::Glob'            => '1.04',
              'File::Path'            => '1.07',
              'File::Spec'            => '3.05',
              'File::Temp'            => '0.16',
              'FileCache'             => '1.05',
              'IO::File'              => '1.11',
              'IO::Socket::INET'      => '1.28',
              'Math::BigFloat'        => '1.51',
              'Math::BigInt'          => '1.77',
              'Math::BigInt::Calc'    => '0.47',
              'Math::BigInt::CalcEmu' => '0.05',
              'Math::BigRat'          => '0.15',
              'Pod::Find'             => '1.3',
              'Pod::Html'             => '1.0503',
              'Pod::InputObjects'     => '1.3',
              'Pod::LaTeX'            => '0.58',
              'Pod::ParseUtils'       => '1.3',
              'Pod::Parser'           => '1.3',
              'Pod::Perldoc'          => '3.14',
              'Pod::Select'           => '1.3',
              'Pod::Usage'            => '1.3',
              'SelectSaver'           => '1.01',
              'Symbol'                => '1.06',
              'Sys::Syslog'           => '0.06',
              'Term::ANSIColor'       => '1.09',
              'Term::Complete'        => '1.402',
              'Test::Builder'         => '0.22',
              'Test::Harness'         => '2.48',
              'Test::Harness::Point'  => '0.01',
              'Test::Harness::Straps' => '0.23',
              'Test::More'            => '0.54',
              'Test::Simple'          => '0.54',
              'Text::ParseWords'      => '3.24',
              'Text::Wrap'            => '2001.09293',
              'Tie::RefHash'          => '1.32',
              'Time::HiRes'           => '1.66',
              'Time::Local'           => '1.11',
              'Unicode'               => '4.1.0',
              'Unicode::Normalize'    => '0.32',
              'Unicode::UCD'          => '0.23',
              'Win32'                 => '0.24',
              'XS::APItest'           => '0.06',
              'base'                  => '2.07',
              'bigint'                => '0.07',
              'bignum'                => '0.17',
              'bigrat'                => '0.08',
              'bytes'                 => '1.02',
              'constant'              => '1.05',
              'overload'              => '1.03',
              'threads::shared'       => '0.93',
              'utf8'                  => '1.05',
          },
          removed => {
              'JNI'                   => 1,
              'JPL::AutoLoader'       => 1,
              'JPL::Class'            => 1,
              'JPL::Compile'          => 1,
          }
      },
      5.008008 => {
          delta_from => 5.008007,
          changed => {
              'Attribute::Handlers'   => '0.78_02',
              'B'                     => '1.09_01',
              'B::Bblock'             => '1.02_01',
              'B::Bytecode'           => '1.01_01',
              'B::C'                  => '1.04_01',
              'B::CC'                 => '1.00_01',
              'B::Concise'            => '0.66',
              'B::Debug'              => '1.02_01',
              'B::Deparse'            => '0.71',
              'B::Disassembler'       => '1.05',
              'B::Terse'              => '1.03_01',
              'ByteLoader'            => '0.06',
              'CGI'                   => '3.15',
              'CGI::Cookie'           => '1.26',
              'CPAN'                  => '1.76_02',
              'Cwd'                   => '3.12',
              'DB'                    => '1.01',
              'DB_File'               => '1.814',
              'Data::Dumper'          => '2.121_08',
              'Devel::DProf'          => '20050603.00',
              'Devel::PPPort'         => '3.06_01',
              'Devel::Peek'           => '1.03',
              'Digest'                => '1.14',
              'Digest::MD5'           => '2.36',
              'Digest::file'          => '1.00',
              'Dumpvalue'             => '1.12',
              'Encode'                => '2.12',
              'Encode::Alias'         => '2.04',
              'Encode::Config'        => '2.01',
              'Encode::MIME::Header'  => '2.01',
              'Encode::MIME::Header::ISO_2022_JP'=> '1.01',
              'English'               => '1.02',
              'ExtUtils::Command'     => '1.09',
              'ExtUtils::Command::MM' => '0.05',
              'ExtUtils::Constant'    => '0.17',
              'ExtUtils::Embed'       => '1.26',
              'ExtUtils::Install'     => '1.33',
              'ExtUtils::Liblist::Kid'=> '1.3',
              'ExtUtils::MM'          => '0.05',
              'ExtUtils::MM_AIX'      => '0.03',
              'ExtUtils::MM_Any'      => '0.13',
              'ExtUtils::MM_BeOS'     => '1.05',
              'ExtUtils::MM_Cygwin'   => '1.08',
              'ExtUtils::MM_MacOS'    => '1.08',
              'ExtUtils::MM_NW5'      => '2.08',
              'ExtUtils::MM_OS2'      => '1.05',
              'ExtUtils::MM_QNX'      => '0.02',
              'ExtUtils::MM_Unix'     => '1.50',
              'ExtUtils::MM_VMS'      => '5.73',
              'ExtUtils::MM_VOS'      => '0.02',
              'ExtUtils::MM_Win32'    => '1.12',
              'ExtUtils::MM_Win95'    => '0.04',
              'ExtUtils::MakeMaker'   => '6.30',
              'ExtUtils::MakeMaker::Config'=> '0.02',
              'ExtUtils::Manifest'    => '1.46',
              'File::Basename'        => '2.74',
              'File::Copy'            => '2.09',
              'File::Find'            => '1.10',
              'File::Glob'            => '1.05',
              'File::Path'            => '1.08',
              'File::Spec'            => '3.12',
              'File::Spec::Win32'     => '1.6',
              'FileCache'             => '1.06',
              'Filter::Simple'        => '0.82',
              'FindBin'               => '1.47',
              'GDBM_File'             => '1.08',
              'Getopt::Long'          => '2.35',
              'IO'                    => '1.22',
              'IO::Dir'               => '1.05',
              'IO::File'              => '1.13',
              'IO::Handle'            => '1.25',
              'IO::Pipe'              => '1.13',
              'IO::Poll'              => '0.07',
              'IO::Seekable'          => '1.10',
              'IO::Select'            => '1.17',
              'IO::Socket'            => '1.29',
              'IO::Socket::INET'      => '1.29',
              'IO::Socket::UNIX'      => '1.22',
              'IPC::Open2'            => '1.02',
              'IPC::Open3'            => '1.02',
              'List::Util'            => '1.18',
              'MIME::Base64'          => '3.07',
              'MIME::QuotedPrint'     => '3.07',
              'Math::Complex'         => '1.35',
              'Math::Trig'            => '1.03',
              'NDBM_File'             => '1.06',
              'ODBM_File'             => '1.06',
              'OS2::PrfDB'            => '0.04',
              'OS2::Process'          => '1.02',
              'OS2::REXX'             => '1.03',
              'Opcode'                => '1.06',
              'POSIX'                 => '1.09',
              'PerlIO'                => '1.04',
              'PerlIO::encoding'      => '0.09',
              'PerlIO::scalar'        => '0.04',
              'PerlIO::via'           => '0.03',
              'Pod::Checker'          => '1.43',
              'Pod::Find'             => '1.34',
              'Pod::Functions'        => '1.03',
              'Pod::Html'             => '1.0504',
              'Pod::ParseUtils'       => '1.33',
              'Pod::Parser'           => '1.32',
              'Pod::Usage'            => '1.33',
              'SDBM_File'             => '1.05',
              'Safe'                  => '2.12',
              'Scalar::Util'          => '1.18',
              'Socket'                => '1.78',
              'Storable'              => '2.15',
              'Switch'                => '2.10_01',
              'Sys::Syslog'           => '0.13',
              'Term::ANSIColor'       => '1.10',
              'Term::ReadLine'        => '1.02',
              'Test::Builder'         => '0.32',
              'Test::Builder::Module' => '0.02',
              'Test::Builder::Tester' => '1.02',
              'Test::Builder::Tester::Color'=> undef,
              'Test::Harness'         => '2.56',
              'Test::Harness::Straps' => '0.26',
              'Test::More'            => '0.62',
              'Test::Simple'          => '0.62',
              'Text::Tabs'            => '2005.0824',
              'Text::Wrap'            => '2005.082401',
              'Tie::Hash'             => '1.02',
              'Time::HiRes'           => '1.86',
              'Unicode::Collate'      => '0.52',
              'Unicode::UCD'          => '0.24',
              'User::grent'           => '1.01',
              'Win32'                 => '0.2601',
              'XS::APItest'           => '0.08',
              'XS::Typemap'           => '0.02',
              'XSLoader'              => '0.06',
              'attrs'                 => '1.02',
              'autouse'               => '1.05',
              'blib'                  => '1.03',
              'charnames'             => '1.05',
              'diagnostics'           => '1.15',
              'encoding'              => '2.02',
              'if'                    => '0.05',
              'open'                  => '1.05',
              'ops'                   => '1.01',
              'overload'              => '1.04',
              're'                    => '0.05',
              'threads'               => '1.07',
              'threads::shared'       => '0.94',
              'utf8'                  => '1.06',
              'vmsish'                => '1.02',
              'warnings'              => '1.05',
              'warnings::register'    => '1.01',
          },
          removed => {
          }
      },
      5.008009 => {
          delta_from => 5.008008,
          changed => {
              'Attribute::Handlers'   => '0.78_03',
              'AutoLoader'            => '5.67',
              'AutoSplit'             => '1.06',
              'B'                     => '1.19',
              'B::Asmdata'            => '1.02',
              'B::Assembler'          => '0.08',
              'B::C'                  => '1.05',
              'B::Concise'            => '0.76',
              'B::Debug'              => '1.05',
              'B::Deparse'            => '0.87',
              'B::Lint'               => '1.11',
              'B::Lint::Debug'        => undef,
              'B::Terse'              => '1.05',
              'Benchmark'             => '1.1',
              'CGI'                   => '3.42',
              'CGI::Carp'             => '1.30_01',
              'CGI::Cookie'           => '1.29',
              'CGI::Fast'             => '1.07',
              'CGI::Util'             => '1.5_01',
              'CPAN'                  => '1.9301',
              'CPAN::Debug'           => '5.5',
              'CPAN::DeferedCode'     => '5.50',
              'CPAN::Distroprefs'     => '6',
              'CPAN::FirstTime'       => '5.5_01',
              'CPAN::HandleConfig'    => '5.5',
              'CPAN::Kwalify'         => '5.50',
              'CPAN::Nox'             => '5.50',
              'CPAN::Queue'           => '5.5',
              'CPAN::Tarzip'          => '5.5',
              'CPAN::Version'         => '5.5',
              'Carp'                  => '1.10',
              'Carp::Heavy'           => '1.10',
              'Cwd'                   => '3.29',
              'DBM_Filter'            => '0.02',
              'DBM_Filter::compress'  => '0.02',
              'DBM_Filter::encode'    => '0.02',
              'DBM_Filter::int32'     => '0.02',
              'DBM_Filter::null'      => '0.02',
              'DBM_Filter::utf8'      => '0.02',
              'DB_File'               => '1.817',
              'Data::Dumper'          => '2.121_17',
              'Devel::DProf'          => '20080331.00',
              'Devel::InnerPackage'   => '0.3',
              'Devel::PPPort'         => '3.14',
              'Devel::Peek'           => '1.04',
              'Digest'                => '1.15',
              'Digest::MD5'           => '2.37',
              'DirHandle'             => '1.02',
              'DynaLoader'            => '1.09',
              'Encode'                => '2.26',
              'Encode::Alias'         => '2.10',
              'Encode::Byte'          => '2.03',
              'Encode::CJKConstants'  => '2.02',
              'Encode::CN'            => '2.02',
              'Encode::CN::HZ'        => '2.05',
              'Encode::Config'        => '2.05',
              'Encode::EBCDIC'        => '2.02',
              'Encode::Encoder'       => '2.01',
              'Encode::Encoding'      => '2.05',
              'Encode::GSM0338'       => '2.01',
              'Encode::Guess'         => '2.02',
              'Encode::JP'            => '2.03',
              'Encode::JP::H2Z'       => '2.02',
              'Encode::JP::JIS7'      => '2.04',
              'Encode::KR'            => '2.02',
              'Encode::KR::2022_KR'   => '2.02',
              'Encode::MIME::Header'  => '2.05',
              'Encode::MIME::Header::ISO_2022_JP'=> '1.03',
              'Encode::MIME::Name'    => '1.01',
              'Encode::Symbol'        => '2.02',
              'Encode::TW'            => '2.02',
              'Encode::Unicode'       => '2.05',
              'Encode::Unicode::UTF7' => '2.04',
              'English'               => '1.03',
              'Errno'                 => '1.10',
              'Exporter'              => '5.63',
              'Exporter::Heavy'       => '5.63',
              'ExtUtils::Command'     => '1.15',
              'ExtUtils::Command::MM' => '6.48',
              'ExtUtils::Constant'    => '0.21',
              'ExtUtils::Constant::Base'=> '0.04',
              'ExtUtils::Constant::ProxySubs'=> '0.06',
              'ExtUtils::Constant::Utils'=> '0.02',
              'ExtUtils::Constant::XS'=> '0.02',
              'ExtUtils::Embed'       => '1.28',
              'ExtUtils::Install'     => '1.50_01',
              'ExtUtils::Installed'   => '1.43',
              'ExtUtils::Liblist'     => '6.48',
              'ExtUtils::Liblist::Kid'=> '6.48',
              'ExtUtils::MM'          => '6.48',
              'ExtUtils::MM_AIX'      => '6.48',
              'ExtUtils::MM_Any'      => '6.48',
              'ExtUtils::MM_BeOS'     => '6.48',
              'ExtUtils::MM_Cygwin'   => '6.48',
              'ExtUtils::MM_DOS'      => '6.48',
              'ExtUtils::MM_Darwin'   => '6.48',
              'ExtUtils::MM_MacOS'    => '6.48',
              'ExtUtils::MM_NW5'      => '6.48',
              'ExtUtils::MM_OS2'      => '6.48',
              'ExtUtils::MM_QNX'      => '6.48',
              'ExtUtils::MM_UWIN'     => '6.48',
              'ExtUtils::MM_Unix'     => '6.48',
              'ExtUtils::MM_VMS'      => '6.48',
              'ExtUtils::MM_VOS'      => '6.48',
              'ExtUtils::MM_Win32'    => '6.48',
              'ExtUtils::MM_Win95'    => '6.48',
              'ExtUtils::MY'          => '6.48',
              'ExtUtils::MakeMaker'   => '6.48',
              'ExtUtils::MakeMaker::Config'=> '6.48',
              'ExtUtils::MakeMaker::bytes'=> '6.48',
              'ExtUtils::MakeMaker::vmsish'=> '6.48',
              'ExtUtils::Manifest'    => '1.55',
              'ExtUtils::Mkbootstrap' => '6.48',
              'ExtUtils::Mksymlists'  => '6.48',
              'ExtUtils::Packlist'    => '1.43',
              'ExtUtils::ParseXS'     => '2.19',
              'ExtUtils::XSSymSet'    => '1.1',
              'ExtUtils::testlib'     => '6.48',
              'Fatal'                 => '1.06',
              'Fcntl'                 => '1.06',
              'File::Basename'        => '2.77',
              'File::CheckTree'       => '4.4',
              'File::Compare'         => '1.1005',
              'File::Copy'            => '2.13',
              'File::DosGlob'         => '1.01',
              'File::Find'            => '1.13',
              'File::Glob'            => '1.06',
              'File::Path'            => '2.07_02',
              'File::Spec'            => '3.29',
              'File::Spec::Cygwin'    => '3.29',
              'File::Spec::Epoc'      => '3.29',
              'File::Spec::Functions' => '3.29',
              'File::Spec::Mac'       => '3.29',
              'File::Spec::OS2'       => '3.29',
              'File::Spec::Unix'      => '3.29',
              'File::Spec::VMS'       => '3.29',
              'File::Spec::Win32'     => '3.29',
              'File::Temp'            => '0.20',
              'File::stat'            => '1.01',
              'FileCache'             => '1.07',
              'Filter::Simple'        => '0.83',
              'Filter::Util::Call'    => '1.07',
              'FindBin'               => '1.49',
              'GDBM_File'             => '1.09',
              'Getopt::Long'          => '2.37',
              'Getopt::Std'           => '1.06',
              'Hash::Util'            => '0.06',
              'IO'                    => '1.23',
              'IO::Dir'               => '1.06',
              'IO::File'              => '1.14',
              'IO::Handle'            => '1.27',
              'IO::Socket'            => '1.30',
              'IO::Socket::INET'      => '1.31',
              'IO::Socket::UNIX'      => '1.23',
              'IPC::Msg'              => '2.00',
              'IPC::Open2'            => '1.03',
              'IPC::Open3'            => '1.03',
              'IPC::Semaphore'        => '2.00',
              'IPC::SharedMem'        => '2.00',
              'IPC::SysV'             => '2.00',
              'List::Util'            => '1.19',
              'Locale::Maketext'      => '1.13',
              'Locale::Maketext::Guts'=> '1.13',
              'Locale::Maketext::GutsLoader'=> '1.13',
              'Math::BigFloat'        => '1.60',
              'Math::BigInt'          => '1.89',
              'Math::BigInt::Calc'    => '0.52',
              'Math::BigRat'          => '0.22',
              'Math::Complex'         => '1.54',
              'Math::Trig'            => '1.18',
              'Module::CoreList'      => '2.17',
              'Module::Pluggable'     => '3.8',
              'Module::Pluggable::Object'=> '3.6',
              'NDBM_File'             => '1.07',
              'NEXT'                  => '0.61',
              'Net::Cmd'              => '2.29',
              'Net::Config'           => '1.11',
              'Net::Domain'           => '2.20',
              'Net::FTP'              => '2.77',
              'Net::FTP::A'           => '1.18',
              'Net::NNTP'             => '2.24',
              'Net::POP3'             => '2.29',
              'Net::Ping'             => '2.35',
              'Net::SMTP'             => '2.31',
              'O'                     => '1.01',
              'ODBM_File'             => '1.07',
              'OS2::DLL'              => '1.03',
              'OS2::Process'          => '1.03',
              'Opcode'                => '1.0601',
              'POSIX'                 => '1.15',
              'PerlIO'                => '1.05',
              'PerlIO::encoding'      => '0.11',
              'PerlIO::scalar'        => '0.06',
              'PerlIO::via'           => '0.05',
              'Pod::Html'             => '1.09',
              'Pod::ParseUtils'       => '1.35',
              'Pod::Parser'           => '1.35',
              'Pod::Select'           => '1.35',
              'Pod::Usage'            => '1.35',
              'SDBM_File'             => '1.06',
              'Safe'                  => '2.16',
              'Scalar::Util'          => '1.19',
              'SelfLoader'            => '1.17',
              'Shell'                 => '0.72',
              'Socket'                => '1.81',
              'Storable'              => '2.19',
              'Switch'                => '2.13',
              'Sys::Syslog'           => '0.27',
              'Sys::Syslog::win32::Win32'=> undef,
              'Term::ANSIColor'       => '1.12',
              'Term::Cap'             => '1.12',
              'Term::ReadLine'        => '1.03',
              'Test::Builder'         => '0.80',
              'Test::Builder::Module' => '0.80',
              'Test::Builder::Tester' => '1.13',
              'Test::Harness'         => '2.64',
              'Test::Harness::Results'=> '0.01_01',
              'Test::Harness::Straps' => '0.26_01',
              'Test::Harness::Util'   => '0.01',
              'Test::More'            => '0.80',
              'Test::Simple'          => '0.80',
              'Text::Balanced'        => '1.98',
              'Text::ParseWords'      => '3.27',
              'Text::Soundex'         => '3.03',
              'Text::Tabs'            => '2007.1117',
              'Text::Wrap'            => '2006.1117',
              'Thread'                => '2.01',
              'Thread::Queue'         => '2.11',
              'Thread::Semaphore'     => '2.09',
              'Tie::Handle'           => '4.2',
              'Tie::Hash'             => '1.03',
              'Tie::Memoize'          => '1.1',
              'Tie::RefHash'          => '1.38',
              'Tie::Scalar'           => '1.01',
              'Tie::StdHandle'        => '4.2',
              'Time::HiRes'           => '1.9715',
              'Time::Local'           => '1.1901',
              'Time::gmtime'          => '1.03',
              'Unicode'               => '5.1.0',
              'Unicode::Normalize'    => '1.02',
              'Unicode::UCD'          => '0.25',
              'VMS::DCLsym'           => '1.03',
              'VMS::Stdio'            => '2.4',
              'Win32'                 => '0.38',
              'Win32API::File'        => '0.1001_01',
              'Win32API::File::ExtUtils::Myconst2perl'=> '1',
              'Win32CORE'             => '0.02',
              'XS::APItest'           => '0.15',
              'XS::Typemap'           => '0.03',
              'XSLoader'              => '0.10',
              'attributes'            => '0.09',
              'autouse'               => '1.06',
              'base'                  => '2.13',
              'bigint'                => '0.23',
              'bignum'                => '0.23',
              'bigrat'                => '0.23',
              'blib'                  => '1.04',
              'charnames'             => '1.06',
              'constant'              => '1.17',
              'diagnostics'           => '1.16',
              'encoding'              => '2.6_01',
              'fields'                => '2.12',
              'filetest'              => '1.02',
              'lib'                   => '0.61',
              'open'                  => '1.06',
              'ops'                   => '1.02',
              'overload'              => '1.06',
              're'                    => '0.0601',
              'sigtrap'               => '1.04',
              'threads'               => '1.71',
              'threads::shared'       => '1.27',
              'utf8'                  => '1.07',
              'warnings'              => '1.05_01',
          },
          removed => {
          }
      },
      5.009 => {
          delta_from => 5.008002,
          changed => {
              'B'                     => '1.03',
              'B::C'                  => '1.03',
              'B::Concise'            => '0.57',
              'B::Deparse'            => '0.65',
              'DB_File'               => '1.806',
              'Devel::PPPort'         => '2.008',
              'English'               => '1.02',
              'Fatal'                 => '1.04',
              'OS2::DLL'              => '1.02',
              'Opcode'                => '1.06',
              'Time::HiRes'           => '1.51',
              'Unicode::Collate'      => '0.28',
              'Unicode::Normalize'    => '0.23',
              'XSLoader'              => '0.03',
              'assertions'            => '0.01',
              'assertions::activate'  => '0.01',
              'overload'              => '1.02',
              'version'               => '0.29',
          },
          removed => {
          }
      },
      5.009001 => {
          delta_from => 5.008004,
          changed => {
              'B'                     => '1.05',
              'B::Assembler'          => '0.06',
              'B::C'                  => '1.04',
              'B::Concise'            => '0.59',
              'B::Debug'              => '1.02',
              'B::Deparse'            => '0.65',
              'DB_File'               => '1.808_01',
              'Devel::PPPort'         => '2.011_01',
              'Digest'                => '1.05',
              'DynaLoader'            => '1.04',
              'English'               => '1.02',
              'Exporter::Heavy'       => '5.567',
              'ExtUtils::Command'     => '1.07',
              'ExtUtils::Liblist::Kid'=> '1.3',
              'ExtUtils::MM_Any'      => '0.0901',
              'ExtUtils::MM_Cygwin'   => '1.07',
              'ExtUtils::MM_NW5'      => '2.07_01',
              'ExtUtils::MM_Unix'     => '1.45_01',
              'ExtUtils::MM_VMS'      => '5.71_01',
              'ExtUtils::MM_Win32'    => '1.10_01',
              'ExtUtils::MM_Win95'    => '0.03',
              'ExtUtils::MakeMaker'   => '6.21_02',
              'ExtUtils::Manifest'    => '1.43',
              'Fatal'                 => '1.04',
              'Getopt::Long'          => '2.3401',
              'IO::Handle'            => '1.23',
              'IO::Pipe'              => '1.122',
              'IPC::Open3'            => '1.0105',
              'MIME::Base64'          => '3.00_01',
              'MIME::QuotedPrint'     => '3.00',
              'Memoize'               => '1.01_01',
              'ODBM_File'             => '1.04',
              'Opcode'                => '1.06',
              'POSIX'                 => '1.07',
              'Storable'              => '2.11',
              'Time::HiRes'           => '1.56',
              'Time::Local'           => '1.07_94',
              'UNIVERSAL'             => '1.02',
              'Unicode'               => '4.0.0',
              'Unicode::UCD'          => '0.21',
              'XSLoader'              => '0.03',
              'assertions'            => '0.01',
              'assertions::activate'  => '0.01',
              'base'                  => '2.04',
              'if'                    => '0.0401',
              'open'                  => '1.02',
              'overload'              => '1.02',
              'threads'               => '1.02',
              'utf8'                  => '1.02',
              'version'               => '0.36',
          },
          removed => {
          }
      },
      5.009002 => {
          delta_from => 5.008007,
          changed => {
              'B'                     => '1.07',
              'B::Concise'            => '0.64',
              'B::Deparse'            => '0.69',
              'B::Disassembler'       => '1.03',
              'B::Terse'              => '1.02',
              'CGI'                   => '3.07',
              'Config::Extensions'    => '0.01',
              'Devel::DProf'          => '20030813.00',
              'DynaLoader'            => '1.07',
              'Encode'                => '2.09',
              'Encode::Alias'         => '2.02',
              'English'               => '1.03',
              'Exporter'              => '5.59',
              'Exporter::Heavy'       => '5.59',
              'ExtUtils::Command'     => '1.07',
              'ExtUtils::Command::MM' => '0.03_01',
              'ExtUtils::Embed'       => '1.26',
              'ExtUtils::Liblist::Kid'=> '1.3',
              'ExtUtils::MM_Any'      => '0.10',
              'ExtUtils::MM_Cygwin'   => '1.07',
              'ExtUtils::MM_MacOS'    => '1.08',
              'ExtUtils::MM_NW5'      => '2.07',
              'ExtUtils::MM_Unix'     => '1.46_01',
              'ExtUtils::MM_VMS'      => '5.71',
              'ExtUtils::MM_Win32'    => '1.10',
              'ExtUtils::MM_Win95'    => '0.03',
              'ExtUtils::MakeMaker'   => '6.25',
              'ExtUtils::Manifest'    => '1.44',
              'Fatal'                 => '1.04',
              'File::Path'            => '1.06',
              'FileCache'             => '1.04_01',
              'Getopt::Long'          => '2.3401',
              'IO::File'              => '1.10',
              'IO::Socket::INET'      => '1.27',
              'Math::BigFloat'        => '1.49',
              'Math::BigInt'          => '1.75',
              'Math::BigInt::Calc'    => '0.45',
              'Math::BigRat'          => '0.14',
              'Memoize'               => '1.01_01',
              'Module::CoreList'      => '1.99',
              'NEXT'                  => '0.60_01',
              'Opcode'                => '1.06',
              'Pod::Html'             => '1.0502',
              'Scalar::Util'          => '1.14_1',
              'Storable'              => '2.14',
              'Symbol'                => '1.05',
              'Test::Harness'         => '2.46',
              'Test::Harness::Straps' => '0.20_01',
              'Text::Balanced'        => '1.95_01',
              'Text::Wrap'            => '2001.09292',
              'UNIVERSAL'             => '1.02',
              'Unicode'               => '4.0.1',
              'Unicode::Normalize'    => '0.30',
              'Unicode::UCD'          => '0.22',
              'Win32'                 => '0.23',
              'XS::APItest'           => '0.05',
              'XSLoader'              => '0.03',
              'assertions'            => '0.01',
              'assertions::activate'  => '0.01',
              'base'                  => '2.06',
              'bigint'                => '0.06',
              'bignum'                => '0.16',
              'bigrat'                => '0.07',
              'bytes'                 => '1.01',
              'encoding::warnings'    => '0.05',
              'if'                    => '0.0401',
              're'                    => '0.05',
              'threads::shared'       => '0.92',
              'utf8'                  => '1.04',
              'version'               => '0.42',
              'warnings'              => '1.04',
          },
          removed => {
              'Test::Harness::Point'  => 1,
          }
      },
      5.009003 => {
          delta_from => 5.008008,
          changed => {
              'Archive::Tar'          => '1.26_01',
              'Archive::Tar::Constant'=> '0.02',
              'Archive::Tar::File'    => '0.02',
              'AutoSplit'             => '1.04_01',
              'B'                     => '1.10',
              'B::Bblock'             => '1.02',
              'B::Bytecode'           => '1.01',
              'B::C'                  => '1.04',
              'B::CC'                 => '1.00',
              'B::Concise'            => '0.67',
              'B::Debug'              => '1.02',
              'B::Deparse'            => '0.73',
              'B::Lint'               => '1.04',
              'B::Terse'              => '1.03',
              'CGI'                   => '3.15_01',
              'CPAN'                  => '1.83_58',
              'CPAN::Debug'           => '4.44',
              'CPAN::FirstTime'       => '4.50',
              'CPAN::HandleConfig'    => '4.31',
              'CPAN::Nox'             => '2.31',
              'CPAN::Tarzip'          => '3.36',
              'CPAN::Version'         => '2.55',
              'Carp'                  => '1.05',
              'Carp::Heavy'           => '1.05',
              'Compress::Zlib'        => '2.000_07',
              'Compress::Zlib::Common'=> '2.000_07',
              'Compress::Zlib::Compress::Gzip::Constants'=> '2.000_07',
              'Compress::Zlib::Compress::Zip::Constants'=> '1.00',
              'Compress::Zlib::CompressPlugin::Deflate'=> '2.000_05',
              'Compress::Zlib::CompressPlugin::Identity'=> '2.000_05',
              'Compress::Zlib::File::GlobMapper'=> '0.000_02',
              'Compress::Zlib::FileConstants'=> '2.000_07',
              'Compress::Zlib::IO::Compress::Base'=> '2.000_05',
              'Compress::Zlib::IO::Compress::Deflate'=> '2.000_07',
              'Compress::Zlib::IO::Compress::Gzip'=> '2.000_07',
              'Compress::Zlib::IO::Compress::RawDeflate'=> '2.000_07',
              'Compress::Zlib::IO::Compress::Zip'=> '2.000_04',
              'Compress::Zlib::IO::Uncompress::AnyInflate'=> '2.000_07',
              'Compress::Zlib::IO::Uncompress::AnyUncompress'=> '2.000_05',
              'Compress::Zlib::IO::Uncompress::Base'=> '2.000_05',
              'Compress::Zlib::IO::Uncompress::Gunzip'=> '2.000_07',
              'Compress::Zlib::IO::Uncompress::Inflate'=> '2.000_07',
              'Compress::Zlib::IO::Uncompress::RawInflate'=> '2.000_07',
              'Compress::Zlib::IO::Uncompress::Unzip'=> '2.000_05',
              'Compress::Zlib::ParseParameters'=> '2.000_07',
              'Compress::Zlib::UncompressPlugin::Identity'=> '2.000_05',
              'Compress::Zlib::UncompressPlugin::Inflate'=> '2.000_05',
              'Config::Extensions'    => '0.01',
              'Cwd'                   => '3.15',
              'Devel::PPPort'         => '3.08',
              'Digest::SHA'           => '5.32',
              'DirHandle'             => '1.01',
              'DynaLoader'            => '1.07',
              'Encode'                => '2.14',
              'Encode::CN::HZ'        => '2.02',
              'Encode::MIME::Header'  => '2.02',
              'English'               => '1.04',
              'Exporter'              => '5.59',
              'Exporter::Heavy'       => '5.59',
              'ExtUtils::CBuilder'    => '0.15',
              'ExtUtils::CBuilder::Base'=> '0.12',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.12',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.12',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.12',
              'ExtUtils::CBuilder::Platform::aix'=> '0.12',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.12',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.12',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.01',
              'ExtUtils::CBuilder::Platform::os2'=> '0.13',
              'ExtUtils::Command::MM' => '0.05_01',
              'ExtUtils::Constant'    => '0.2',
              'ExtUtils::Constant::Base'=> '0.02',
              'ExtUtils::Constant::ProxySubs'=> '0.01',
              'ExtUtils::Constant::XS'=> '0.02',
              'ExtUtils::MM_Any'      => '0.13_01',
              'ExtUtils::MM_Unix'     => '1.50_01',
              'ExtUtils::MakeMaker'   => '6.30_01',
              'ExtUtils::ParseXS'     => '2.15_02',
              'Fatal'                 => '1.04',
              'File::Compare'         => '1.1005',
              'File::Spec'            => '3.15',
              'File::Temp'            => '0.16_01',
              'IO::File'              => '1.13_01',
              'IO::Handle'            => '1.26',
              'IO::Socket'            => '1.29_01',
              'IO::Socket::INET'      => '1.29_02',
              'IO::Socket::UNIX'      => '1.22_01',
              'IO::Zlib'              => '1.04_02',
              'Locale::Maketext'      => '1.10_01',
              'Math::BigInt::FastCalc'=> '0.10',
              'Memoize'               => '1.01_01',
              'Module::CoreList'      => '2.02',
              'Moped::Msg'            => '0.01',
              'NEXT'                  => '0.60_01',
              'Net::Cmd'              => '2.26_01',
              'Net::Domain'           => '2.19_01',
              'Net::Ping'             => '2.31_04',
              'Opcode'                => '1.08',
              'POSIX'                 => '1.10',
              'Pod::Escapes'          => '1.04',
              'Pod::Man'              => '2.04',
              'Pod::Perldoc'          => '3.14_01',
              'Pod::Simple'           => '3.04',
              'Pod::Simple::BlackBox' => undef,
              'Pod::Simple::Checker'  => '2.02',
              'Pod::Simple::Debug'    => undef,
              'Pod::Simple::DumpAsText'=> '2.02',
              'Pod::Simple::DumpAsXML'=> '2.02',
              'Pod::Simple::HTML'     => '3.03',
              'Pod::Simple::HTMLBatch'=> '3.02',
              'Pod::Simple::HTMLLegacy'=> '5.01',
              'Pod::Simple::LinkSection'=> undef,
              'Pod::Simple::Methody'  => '2.02',
              'Pod::Simple::Progress' => '1.01',
              'Pod::Simple::PullParser'=> '2.02',
              'Pod::Simple::PullParserEndToken'=> undef,
              'Pod::Simple::PullParserStartToken'=> undef,
              'Pod::Simple::PullParserTextToken'=> undef,
              'Pod::Simple::PullParserToken'=> '2.02',
              'Pod::Simple::RTF'      => '2.02',
              'Pod::Simple::Search'   => '3.04',
              'Pod::Simple::SimpleTree'=> '2.02',
              'Pod::Simple::Text'     => '2.02',
              'Pod::Simple::TextContent'=> '2.02',
              'Pod::Simple::TiedOutFH'=> undef,
              'Pod::Simple::Transcode'=> undef,
              'Pod::Simple::TranscodeDumb'=> '2.02',
              'Pod::Simple::TranscodeSmart'=> undef,
              'Pod::Simple::XMLOutStream'=> '2.02',
              'Pod::Text'             => '3.01',
              'Pod::Text::Color'      => '2.01',
              'Pod::Text::Overstrike' => '2',
              'Pod::Text::Termcap'    => '2.01',
              'Pod::Usage'            => '1.33_01',
              'SelfLoader'            => '1.0905',
              'Storable'              => '2.15_02',
              'Test::Builder::Module' => '0.03',
              'Text::Balanced'        => '1.95_01',
              'Tie::File'             => '0.97_01',
              'UNIVERSAL'             => '1.03',
              'XS::APItest'           => '0.09',
              'assertions'            => '0.02',
              'assertions::activate'  => '0.02',
              'assertions::compat'    => undef,
              'constant'              => '1.07',
              'encoding::warnings'    => '0.05',
              'feature'               => '1.00',
              're'                    => '0.06',
              'sort'                  => '2.00',
              'version'               => '0.53',
          },
          removed => {
          }
      },
      5.009004 => {
          delta_from => 5.009003,
          changed => {
              'Archive::Tar'          => '1.30_01',
              'AutoLoader'            => '5.61',
              'B'                     => '1.11',
              'B::Bytecode'           => '1.02',
              'B::C'                  => '1.05',
              'B::Concise'            => '0.69',
              'B::Deparse'            => '0.76',
              'B::Lint'               => '1.08',
              'Benchmark'             => '1.08',
              'CGI'                   => '3.20',
              'CGI::Cookie'           => '1.27',
              'CGI::Fast'             => '1.07',
              'CPAN'                  => '1.87_55',
              'CPAN::Debug'           => '5.400561',
              'CPAN::FirstTime'       => '5.400742',
              'CPAN::HandleConfig'    => '5.400740',
              'CPAN::Nox'             => '5.400561',
              'CPAN::Tarzip'          => '5.400714',
              'CPAN::Version'         => '5.400561',
              'Compress::Raw::Zlib'   => '2.000_13',
              'Compress::Zlib'        => '2.000_13',
              'Cwd'                   => '3.19',
              'Devel::PPPort'         => '3.10',
              'Digest'                => '1.15',
              'Digest::SHA'           => '5.43',
              'Encode'                => '2.18_01',
              'Encode::Alias'         => '2.06',
              'Encode::Byte'          => '2.02',
              'Encode::CJKConstants'  => '2.02',
              'Encode::CN'            => '2.02',
              'Encode::CN::HZ'        => '2.04',
              'Encode::Config'        => '2.03',
              'Encode::EBCDIC'        => '2.02',
              'Encode::Encoder'       => '2.01',
              'Encode::Encoding'      => '2.04',
              'Encode::Guess'         => '2.02',
              'Encode::JP'            => '2.03',
              'Encode::JP::H2Z'       => '2.02',
              'Encode::JP::JIS7'      => '2.02',
              'Encode::KR'            => '2.02',
              'Encode::KR::2022_KR'   => '2.02',
              'Encode::MIME::Header'  => '2.04',
              'Encode::MIME::Header::ISO_2022_JP'=> '1.03',
              'Encode::Symbol'        => '2.02',
              'Encode::TW'            => '2.02',
              'Encode::Unicode'       => '2.03',
              'Encode::Unicode::UTF7' => '2.04',
              'ExtUtils::CBuilder'    => '0.18',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.12_01',
              'ExtUtils::Constant::Base'=> '0.03',
              'ExtUtils::Constant::ProxySubs'=> '0.03',
              'ExtUtils::Install'     => '1.41',
              'ExtUtils::Installed'   => '1.41',
              'ExtUtils::MM_Any'      => '0.13_02',
              'ExtUtils::MM_NW5'      => '2.08_01',
              'ExtUtils::MM_Unix'     => '1.5003',
              'ExtUtils::MM_VMS'      => '5.73_03',
              'ExtUtils::MM_Win32'    => '1.12_02',
              'ExtUtils::MM_Win95'    => '0.04_01',
              'ExtUtils::MakeMaker'   => '6.30_02',
              'ExtUtils::Manifest'    => '1.46_01',
              'ExtUtils::Mkbootstrap' => '1.15_01',
              'ExtUtils::Mksymlists'  => '1.19_01',
              'ExtUtils::Packlist'    => '1.41',
              'File::Basename'        => '2.75',
              'File::Find'            => '1.11',
              'File::GlobMapper'      => '0.000_02',
              'File::Spec'            => '3.19',
              'FileCache'             => '1.07',
              'Getopt::Long'          => '2.3501',
              'Hash::Util'            => '0.07',
              'Hash::Util::FieldHash' => '0.01',
              'IO'                    => '1.23_01',
              'IO::Compress::Adapter::Deflate'=> '2.000_13',
              'IO::Compress::Adapter::Identity'=> '2.000_13',
              'IO::Compress::Base'    => '2.000_13',
              'IO::Compress::Base::Common'=> '2.000_13',
              'IO::Compress::Deflate' => '2.000_13',
              'IO::Compress::Gzip'    => '2.000_13',
              'IO::Compress::Gzip::Constants'=> '2.000_13',
              'IO::Compress::RawDeflate'=> '2.000_13',
              'IO::Compress::Zip'     => '2.000_13',
              'IO::Compress::Zip::Constants'=> '2.000_13',
              'IO::Compress::Zlib::Constants'=> '2.000_13',
              'IO::Compress::Zlib::Extra'=> '2.000_13',
              'IO::Dir'               => '1.06',
              'IO::File'              => '1.14',
              'IO::Handle'            => '1.27',
              'IO::Socket'            => '1.30_01',
              'IO::Socket::INET'      => '1.31',
              'IO::Socket::UNIX'      => '1.23',
              'IO::Uncompress::Adapter::Identity'=> '2.000_13',
              'IO::Uncompress::Adapter::Inflate'=> '2.000_13',
              'IO::Uncompress::AnyInflate'=> '2.000_13',
              'IO::Uncompress::AnyUncompress'=> '2.000_13',
              'IO::Uncompress::Base'  => '2.000_13',
              'IO::Uncompress::Gunzip'=> '2.000_13',
              'IO::Uncompress::Inflate'=> '2.000_13',
              'IO::Uncompress::RawInflate'=> '2.000_13',
              'IO::Uncompress::Unzip' => '2.000_13',
              'MIME::Base64'          => '3.07_01',
              'Math::Complex'         => '1.36',
              'Math::Trig'            => '1.04',
              'Module::Build'         => '0.2805',
              'Module::Build::Base'   => undef,
              'Module::Build::Compat' => '0.03',
              'Module::Build::ConfigData'=> undef,
              'Module::Build::Cookbook'=> undef,
              'Module::Build::ModuleInfo'=> undef,
              'Module::Build::Notes'  => undef,
              'Module::Build::PPMMaker'=> undef,
              'Module::Build::Platform::Amiga'=> undef,
              'Module::Build::Platform::Default'=> undef,
              'Module::Build::Platform::EBCDIC'=> undef,
              'Module::Build::Platform::MPEiX'=> undef,
              'Module::Build::Platform::MacOS'=> undef,
              'Module::Build::Platform::RiscOS'=> undef,
              'Module::Build::Platform::Unix'=> undef,
              'Module::Build::Platform::VMS'=> undef,
              'Module::Build::Platform::VOS'=> undef,
              'Module::Build::Platform::Windows'=> undef,
              'Module::Build::Platform::aix'=> undef,
              'Module::Build::Platform::cygwin'=> undef,
              'Module::Build::Platform::darwin'=> undef,
              'Module::Build::Platform::os2'=> undef,
              'Module::Build::PodParser'=> undef,
              'Module::Build::Version'=> '0',
              'Module::Build::YAML'   => '0.50',
              'Module::CoreList'      => '2.08',
              'Module::Load'          => '0.10',
              'Module::Loaded'        => '0.01',
              'Package::Constants'    => '0.01',
              'Pod::Html'             => '1.07',
              'Pod::Man'              => '2.09',
              'Pod::Text'             => '3.07',
              'Pod::Text::Color'      => '2.03',
              'Pod::Text::Termcap'    => '2.03',
              'SDBM_File'             => '1.06',
              'Shell'                 => '0.7',
              'Sys::Syslog'           => '0.17',
              'Term::ANSIColor'       => '1.11',
              'Test::Builder'         => '0.33',
              'Test::Builder::Tester' => '1.04',
              'Test::Harness'         => '2.62',
              'Test::Harness::Util'   => '0.01',
              'Test::More'            => '0.64',
              'Test::Simple'          => '0.64',
              'Text::Balanced'        => '1.98_01',
              'Text::ParseWords'      => '3.25',
              'Text::Tabs'            => '2007.071101',
              'Text::Wrap'            => '2006.0711',
              'Tie::RefHash'          => '1.34_01',
              'Time::HiRes'           => '1.87',
              'Time::Local'           => '1.13',
              'Time::gmtime'          => '1.03',
              'UNIVERSAL'             => '1.04',
              'Unicode::Normalize'    => '1.01',
              'Win32API::File'        => '0.1001',
              'Win32API::File::ExtUtils::Myconst2perl'=> '1',
              'assertions'            => '0.03',
              'assertions::compat'    => '0.02',
              'autouse'               => '1.06',
              'diagnostics'           => '1.16',
              'encoding'              => '2.04',
              'encoding::warnings'    => '0.10',
              'feature'               => '1.01',
              're'                    => '0.0601',
              'threads'               => '1.38',
              'threads::shared'       => '0.94_01',
              'version'               => '0.67',
          },
          removed => {
              'Compress::Zlib::Common'=> 1,
              'Compress::Zlib::Compress::Gzip::Constants'=> 1,
              'Compress::Zlib::Compress::Zip::Constants'=> 1,
              'Compress::Zlib::CompressPlugin::Deflate'=> 1,
              'Compress::Zlib::CompressPlugin::Identity'=> 1,
              'Compress::Zlib::File::GlobMapper'=> 1,
              'Compress::Zlib::FileConstants'=> 1,
              'Compress::Zlib::IO::Compress::Base'=> 1,
              'Compress::Zlib::IO::Compress::Deflate'=> 1,
              'Compress::Zlib::IO::Compress::Gzip'=> 1,
              'Compress::Zlib::IO::Compress::RawDeflate'=> 1,
              'Compress::Zlib::IO::Compress::Zip'=> 1,
              'Compress::Zlib::IO::Uncompress::AnyInflate'=> 1,
              'Compress::Zlib::IO::Uncompress::AnyUncompress'=> 1,
              'Compress::Zlib::IO::Uncompress::Base'=> 1,
              'Compress::Zlib::IO::Uncompress::Gunzip'=> 1,
              'Compress::Zlib::IO::Uncompress::Inflate'=> 1,
              'Compress::Zlib::IO::Uncompress::RawInflate'=> 1,
              'Compress::Zlib::IO::Uncompress::Unzip'=> 1,
              'Compress::Zlib::ParseParameters'=> 1,
              'Compress::Zlib::UncompressPlugin::Identity'=> 1,
              'Compress::Zlib::UncompressPlugin::Inflate'=> 1,
          }
      },
      5.009005 => {
          delta_from => 5.009004,
          changed => {
              'Archive::Extract'      => '0.22_01',
              'Archive::Tar'          => '1.32',
              'Attribute::Handlers'   => '0.78_06',
              'AutoLoader'            => '5.63',
              'AutoSplit'             => '1.05',
              'B'                     => '1.16',
              'B::Concise'            => '0.72',
              'B::Debug'              => '1.05',
              'B::Deparse'            => '0.82',
              'B::Lint'               => '1.09',
              'B::Terse'              => '1.05',
              'Benchmark'             => '1.1',
              'CGI'                   => '3.29',
              'CGI::Cookie'           => '1.28',
              'CGI::Util'             => '1.5_01',
              'CPAN'                  => '1.9102',
              'CPAN::Debug'           => '5.400955',
              'CPAN::FirstTime'       => '5.401669',
              'CPAN::HandleConfig'    => '5.401744',
              'CPAN::Kwalify'         => '5.401418',
              'CPAN::Nox'             => '5.400844',
              'CPAN::Queue'           => '5.401704',
              'CPAN::Tarzip'          => '5.401717',
              'CPAN::Version'         => '5.401387',
              'CPANPLUS'              => '0.81_01',
              'CPANPLUS::Backend'     => undef,
              'CPANPLUS::Backend::RV' => undef,
              'CPANPLUS::Config'      => undef,
              'CPANPLUS::Configure'   => undef,
              'CPANPLUS::Configure::Setup'=> undef,
              'CPANPLUS::Dist'        => undef,
              'CPANPLUS::Dist::Base'  => '0.01',
              'CPANPLUS::Dist::Build' => '0.06_01',
              'CPANPLUS::Dist::Build::Constants'=> '0.01',
              'CPANPLUS::Dist::MM'    => undef,
              'CPANPLUS::Dist::Sample'=> undef,
              'CPANPLUS::Error'       => undef,
              'CPANPLUS::Internals'   => '0.81_01',
              'CPANPLUS::Internals::Constants'=> '0.01',
              'CPANPLUS::Internals::Constants::Report'=> '0.01',
              'CPANPLUS::Internals::Extract'=> undef,
              'CPANPLUS::Internals::Fetch'=> undef,
              'CPANPLUS::Internals::Report'=> undef,
              'CPANPLUS::Internals::Search'=> undef,
              'CPANPLUS::Internals::Source'=> undef,
              'CPANPLUS::Internals::Utils'=> undef,
              'CPANPLUS::Internals::Utils::Autoflush'=> undef,
              'CPANPLUS::Module'      => undef,
              'CPANPLUS::Module::Author'=> undef,
              'CPANPLUS::Module::Author::Fake'=> undef,
              'CPANPLUS::Module::Checksums'=> undef,
              'CPANPLUS::Module::Fake'=> undef,
              'CPANPLUS::Module::Signature'=> undef,
              'CPANPLUS::Selfupdate'  => undef,
              'CPANPLUS::Shell'       => undef,
              'CPANPLUS::Shell::Classic'=> '0.0562',
              'CPANPLUS::Shell::Default'=> '0.81_01',
              'CPANPLUS::Shell::Default::Plugins::Remote'=> undef,
              'CPANPLUS::Shell::Default::Plugins::Source'=> undef,
              'CPANPLUS::inc'         => undef,
              'Carp'                  => '1.07',
              'Carp::Heavy'           => '1.07',
              'Compress::Raw::Zlib'   => '2.005',
              'Compress::Zlib'        => '2.005',
              'Cwd'                   => '3.25',
              'DBM_Filter'            => '0.02',
              'DB_File'               => '1.815',
              'Data::Dumper'          => '2.121_13',
              'Devel::InnerPackage'   => '0.3',
              'Devel::PPPort'         => '3.11_01',
              'Digest::MD5'           => '2.36_01',
              'Digest::SHA'           => '5.44',
              'DynaLoader'            => '1.08',
              'Encode'                => '2.23',
              'Encode::Alias'         => '2.07',
              'Encode::Byte'          => '2.03',
              'Encode::Config'        => '2.04',
              'Encode::Encoding'      => '2.05',
              'Encode::GSM0338'       => '2.00',
              'Encode::JP::JIS7'      => '2.03',
              'Encode::MIME::Header'  => '2.05',
              'Encode::MIME::Name'    => '1.01',
              'Encode::Unicode'       => '2.05',
              'Errno'                 => '1.10',
              'Exporter'              => '5.60',
              'Exporter::Heavy'       => '5.60',
              'ExtUtils::CBuilder'    => '0.19',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.13',
              'ExtUtils::Command'     => '1.13',
              'ExtUtils::Command::MM' => '0.07',
              'ExtUtils::Constant::Base'=> '0.04',
              'ExtUtils::Install'     => '1.41_01',
              'ExtUtils::Liblist'     => '1.03',
              'ExtUtils::Liblist::Kid'=> '1.33',
              'ExtUtils::MM'          => '0.07',
              'ExtUtils::MM_AIX'      => '0.05',
              'ExtUtils::MM_Any'      => '0.15',
              'ExtUtils::MM_BeOS'     => '1.07',
              'ExtUtils::MM_Cygwin'   => '1.1',
              'ExtUtils::MM_DOS'      => '0.04',
              'ExtUtils::MM_MacOS'    => '1.1',
              'ExtUtils::MM_NW5'      => '2.1',
              'ExtUtils::MM_OS2'      => '1.07',
              'ExtUtils::MM_QNX'      => '0.04',
              'ExtUtils::MM_UWIN'     => '0.04',
              'ExtUtils::MM_Unix'     => '1.54_01',
              'ExtUtils::MM_VMS'      => '5.76',
              'ExtUtils::MM_VOS'      => '0.04',
              'ExtUtils::MM_Win32'    => '1.15',
              'ExtUtils::MM_Win95'    => '0.06',
              'ExtUtils::MY'          => '0.03',
              'ExtUtils::MakeMaker'   => '6.36',
              'ExtUtils::MakeMaker::Config'=> '0.04',
              'ExtUtils::MakeMaker::bytes'=> '0.03',
              'ExtUtils::MakeMaker::vmsish'=> '0.03',
              'ExtUtils::Manifest'    => '1.51_01',
              'ExtUtils::Mkbootstrap' => '1.17',
              'ExtUtils::Mksymlists'  => '1.21',
              'ExtUtils::ParseXS'     => '2.18',
              'ExtUtils::XSSymSet'    => '1.1',
              'ExtUtils::testlib'     => '1.17',
              'Fatal'                 => '1.05',
              'Fcntl'                 => '1.06',
              'File::Basename'        => '2.76',
              'File::Copy'            => '2.10',
              'File::Fetch'           => '0.10',
              'File::Glob'            => '1.06',
              'File::Path'            => '2.01',
              'File::Spec'            => '3.25',
              'File::Spec::Cygwin'    => '1.1_01',
              'File::Spec::VMS'       => '1.4_01',
              'File::Temp'            => '0.18',
              'Filter::Util::Call'    => '1.0602',
              'FindBin'               => '1.49',
              'Getopt::Long'          => '2.36',
              'Hash::Util::FieldHash' => '1.01',
              'IO::Compress::Adapter::Deflate'=> '2.005',
              'IO::Compress::Adapter::Identity'=> '2.005',
              'IO::Compress::Base'    => '2.005',
              'IO::Compress::Base::Common'=> '2.005',
              'IO::Compress::Deflate' => '2.005',
              'IO::Compress::Gzip'    => '2.005',
              'IO::Compress::Gzip::Constants'=> '2.005',
              'IO::Compress::RawDeflate'=> '2.005',
              'IO::Compress::Zip'     => '2.005',
              'IO::Compress::Zip::Constants'=> '2.005',
              'IO::Compress::Zlib::Constants'=> '2.005',
              'IO::Compress::Zlib::Extra'=> '2.005',
              'IO::Uncompress::Adapter::Identity'=> '2.005',
              'IO::Uncompress::Adapter::Inflate'=> '2.005',
              'IO::Uncompress::AnyInflate'=> '2.005',
              'IO::Uncompress::AnyUncompress'=> '2.005',
              'IO::Uncompress::Base'  => '2.005',
              'IO::Uncompress::Gunzip'=> '2.005',
              'IO::Uncompress::Inflate'=> '2.005',
              'IO::Uncompress::RawInflate'=> '2.005',
              'IO::Uncompress::Unzip' => '2.005',
              'IO::Zlib'              => '1.05_01',
              'IPC::Cmd'              => '0.36_01',
              'List::Util'            => '1.19',
              'Locale::Maketext::Simple'=> '0.18',
              'Log::Message'          => '0.01',
              'Log::Message::Config'  => '0.01',
              'Log::Message::Handlers'=> undef,
              'Log::Message::Item'    => undef,
              'Log::Message::Simple'  => '0.0201',
              'Math::BigFloat'        => '1.58',
              'Math::BigInt'          => '1.87',
              'Math::BigInt::Calc'    => '0.51',
              'Math::BigInt::FastCalc'=> '0.15_01',
              'Math::BigRat'          => '0.19',
              'Math::Complex'         => '1.37',
              'Memoize'               => '1.01_02',
              'Module::Build'         => '0.2808',
              'Module::Build::Config' => undef,
              'Module::Build::Version'=> '0.7203',
              'Module::CoreList'      => '2.12',
              'Module::Load::Conditional'=> '0.16',
              'Module::Pluggable'     => '3.6',
              'Module::Pluggable::Object'=> '3.6',
              'NDBM_File'             => '1.07',
              'Net::Cmd'              => '2.28',
              'Net::Config'           => '1.11',
              'Net::Domain'           => '2.20',
              'Net::FTP'              => '2.77',
              'Net::FTP::A'           => '1.18',
              'Net::NNTP'             => '2.24',
              'Net::POP3'             => '2.29',
              'Net::SMTP'             => '2.31',
              'ODBM_File'             => '1.07',
              'OS2::DLL'              => '1.03',
              'Object::Accessor'      => '0.32',
              'Opcode'                => '1.09',
              'POSIX'                 => '1.13',
              'Params::Check'         => '0.26',
              'PerlIO::encoding'      => '0.10',
              'PerlIO::scalar'        => '0.05',
              'PerlIO::via'           => '0.04',
              'Pod::Html'             => '1.08',
              'Pod::Man'              => '2.12',
              'Pod::ParseUtils'       => '1.35',
              'Pod::Parser'           => '1.35',
              'Pod::Select'           => '1.35',
              'Pod::Simple'           => '3.05',
              'Pod::Text'             => '3.08',
              'Pod::Usage'            => '1.35',
              'Scalar::Util'          => '1.19',
              'SelfLoader'            => '1.11',
              'Shell'                 => '0.72_01',
              'Socket'                => '1.79',
              'Storable'              => '2.16',
              'Switch'                => '2.13',
              'Sys::Syslog'           => '0.18_01',
              'Term::ANSIColor'       => '1.12',
              'Term::UI'              => '0.14_01',
              'Term::UI::History'     => undef,
              'Test::Builder'         => '0.70',
              'Test::Builder::Module' => '0.68',
              'Test::Builder::Tester' => '1.07',
              'Test::Harness'         => '2.64',
              'Test::Harness::Results'=> '0.01',
              'Test::More'            => '0.70',
              'Test::Simple'          => '0.70',
              'Text::Balanced'        => '2.0.0',
              'Text::Soundex'         => '3.02',
              'Text::Tabs'            => '2007.1117',
              'Text::Wrap'            => '2006.1117',
              'Thread'                => '3.02',
              'Tie::File'             => '0.97_02',
              'Tie::Hash::NamedCapture'=> '0.06',
              'Tie::Memoize'          => '1.1',
              'Tie::RefHash'          => '1.37',
              'Time::HiRes'           => '1.9707',
              'Time::Local'           => '1.17',
              'Time::Piece'           => '1.11_02',
              'Time::Seconds'         => undef,
              'Unicode'               => '5.0.0',
              'Unicode::Normalize'    => '1.02',
              'Unicode::UCD'          => '0.25',
              'VMS::DCLsym'           => '1.03',
              'Win32'                 => '0.30',
              'Win32API::File'        => '0.1001_01',
              'Win32CORE'             => '0.02',
              'XS::APItest'           => '0.12',
              'XSLoader'              => '0.08',
              'attributes'            => '0.08',
              'base'                  => '2.12',
              'bigint'                => '0.22',
              'bignum'                => '0.22',
              'bigrat'                => '0.22',
              'bytes'                 => '1.03',
              'charnames'             => '1.06',
              'constant'              => '1.10',
              'diagnostics'           => '1.17',
              'encoding'              => '2.06',
              'encoding::warnings'    => '0.11',
              'feature'               => '1.10',
              'fields'                => '2.12',
              'less'                  => '0.02',
              'mro'                   => '1.00',
              'overload'              => '1.06',
              're'                    => '0.08',
              'sigtrap'               => '1.04',
              'sort'                  => '2.01',
              'strict'                => '1.04',
              'threads'               => '1.63',
              'threads::shared'       => '1.12',
              'utf8'                  => '1.07',
              'version'               => '0.7203',
              'warnings'              => '1.06',
          },
          removed => {
              'B::Asmdata'            => 1,
              'B::Assembler'          => 1,
              'B::Bblock'             => 1,
              'B::Bytecode'           => 1,
              'B::C'                  => 1,
              'B::CC'                 => 1,
              'B::Disassembler'       => 1,
              'B::Stackobj'           => 1,
              'B::Stash'              => 1,
              'ByteLoader'            => 1,
              'Thread::Signal'        => 1,
              'Thread::Specific'      => 1,
              'assertions'            => 1,
              'assertions::activate'  => 1,
              'assertions::compat'    => 1,
          }
      },
      5.01 => {
          delta_from => 5.009005,
          changed => {
              'Archive::Extract'      => '0.24',
              'Archive::Tar'          => '1.38',
              'Attribute::Handlers'   => '0.79',
              'B'                     => '1.17',
              'B::Concise'            => '0.74',
              'B::Deparse'            => '0.83',
              'CPAN'                  => '1.9205',
              'CPAN::API::HOWTO'      => undef,
              'CPAN::Debug'           => '5.402212',
              'CPAN::DeferedCode'     => '5.50',
              'CPAN::FirstTime'       => '5.402229',
              'CPAN::HandleConfig'    => '5.402212',
              'CPAN::Nox'             => '5.402411',
              'CPAN::Queue'           => '5.402212',
              'CPAN::Tarzip'          => '5.402213',
              'CPAN::Version'         => '5.5',
              'CPANPLUS'              => '0.84',
              'CPANPLUS::Dist::Build' => '0.06_02',
              'CPANPLUS::Internals'   => '0.84',
              'CPANPLUS::Shell::Default'=> '0.84',
              'CPANPLUS::Shell::Default::Plugins::CustomSource'=> undef,
              'Carp'                  => '1.08',
              'Carp::Heavy'           => '1.08',
              'Compress::Raw::Zlib'   => '2.008',
              'Compress::Zlib'        => '2.008',
              'Cwd'                   => '3.2501',
              'DB_File'               => '1.816_1',
              'Data::Dumper'          => '2.121_14',
              'Devel::PPPort'         => '3.13',
              'Digest::SHA'           => '5.45',
              'Exporter'              => '5.62',
              'Exporter::Heavy'       => '5.62',
              'ExtUtils::CBuilder'    => '0.21',
              'ExtUtils::CBuilder::Base'=> '0.21',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.21',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.22',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.21',
              'ExtUtils::CBuilder::Platform::aix'=> '0.21',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.21',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.21',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.21',
              'ExtUtils::CBuilder::Platform::os2'=> '0.21',
              'ExtUtils::Command::MM' => '6.42',
              'ExtUtils::Constant::ProxySubs'=> '0.05',
              'ExtUtils::Embed'       => '1.27',
              'ExtUtils::Install'     => '1.44',
              'ExtUtils::Installed'   => '1.43',
              'ExtUtils::Liblist'     => '6.42',
              'ExtUtils::Liblist::Kid'=> '6.42',
              'ExtUtils::MM'          => '6.42',
              'ExtUtils::MM_AIX'      => '6.42',
              'ExtUtils::MM_Any'      => '6.42',
              'ExtUtils::MM_BeOS'     => '6.42',
              'ExtUtils::MM_Cygwin'   => '6.42',
              'ExtUtils::MM_DOS'      => '6.42',
              'ExtUtils::MM_MacOS'    => '6.42',
              'ExtUtils::MM_NW5'      => '6.42',
              'ExtUtils::MM_OS2'      => '6.42',
              'ExtUtils::MM_QNX'      => '6.42',
              'ExtUtils::MM_UWIN'     => '6.42',
              'ExtUtils::MM_Unix'     => '6.42',
              'ExtUtils::MM_VMS'      => '6.42',
              'ExtUtils::MM_VOS'      => '6.42',
              'ExtUtils::MM_Win32'    => '6.42',
              'ExtUtils::MM_Win95'    => '6.42',
              'ExtUtils::MY'          => '6.42',
              'ExtUtils::MakeMaker'   => '6.42',
              'ExtUtils::MakeMaker::Config'=> '6.42',
              'ExtUtils::MakeMaker::bytes'=> '6.42',
              'ExtUtils::MakeMaker::vmsish'=> '6.42',
              'ExtUtils::Mkbootstrap' => '6.42',
              'ExtUtils::Mksymlists'  => '6.42',
              'ExtUtils::Packlist'    => '1.43',
              'ExtUtils::ParseXS'     => '2.18_02',
              'ExtUtils::testlib'     => '6.42',
              'File::Copy'            => '2.11',
              'File::Fetch'           => '0.14',
              'File::Find'            => '1.12',
              'File::Path'            => '2.04',
              'File::Spec'            => '3.2501',
              'File::Spec::Cygwin'    => '3.2501',
              'File::Spec::Epoc'      => '3.2501',
              'File::Spec::Functions' => '3.2501',
              'File::Spec::Mac'       => '3.2501',
              'File::Spec::OS2'       => '3.2501',
              'File::Spec::Unix'      => '3.2501',
              'File::Spec::VMS'       => '3.2501',
              'File::Spec::Win32'     => '3.2501',
              'Filter::Util::Call'    => '1.07',
              'Getopt::Long'          => '2.37',
              'Hash::Util::FieldHash' => '1.03',
              'IO::Compress::Adapter::Deflate'=> '2.008',
              'IO::Compress::Adapter::Identity'=> '2.008',
              'IO::Compress::Base'    => '2.008',
              'IO::Compress::Base::Common'=> '2.008',
              'IO::Compress::Deflate' => '2.008',
              'IO::Compress::Gzip'    => '2.008',
              'IO::Compress::Gzip::Constants'=> '2.008',
              'IO::Compress::RawDeflate'=> '2.008',
              'IO::Compress::Zip'     => '2.008',
              'IO::Compress::Zip::Constants'=> '2.008',
              'IO::Compress::Zlib::Constants'=> '2.008',
              'IO::Compress::Zlib::Extra'=> '2.008',
              'IO::Uncompress::Adapter::Identity'=> '2.008',
              'IO::Uncompress::Adapter::Inflate'=> '2.008',
              'IO::Uncompress::AnyInflate'=> '2.008',
              'IO::Uncompress::AnyUncompress'=> '2.008',
              'IO::Uncompress::Base'  => '2.008',
              'IO::Uncompress::Gunzip'=> '2.008',
              'IO::Uncompress::Inflate'=> '2.008',
              'IO::Uncompress::RawInflate'=> '2.008',
              'IO::Uncompress::Unzip' => '2.008',
              'IO::Zlib'              => '1.07',
              'IPC::Cmd'              => '0.40_1',
              'IPC::SysV'             => '1.05',
              'Locale::Maketext'      => '1.12',
              'Log::Message::Simple'  => '0.04',
              'Math::BigFloat'        => '1.59',
              'Math::BigInt'          => '1.88',
              'Math::BigInt::Calc'    => '0.52',
              'Math::BigInt::FastCalc'=> '0.16',
              'Math::BigRat'          => '0.21',
              'Module::Build'         => '0.2808_01',
              'Module::Build::Base'   => '0.2808_01',
              'Module::Build::Compat' => '0.2808_01',
              'Module::Build::Config' => '0.2808_01',
              'Module::Build::Dumper' => undef,
              'Module::Build::ModuleInfo'=> '0.2808_01',
              'Module::Build::Notes'  => '0.2808_01',
              'Module::Build::PPMMaker'=> '0.2808_01',
              'Module::Build::Platform::Amiga'=> '0.2808_01',
              'Module::Build::Platform::Default'=> '0.2808_01',
              'Module::Build::Platform::EBCDIC'=> '0.2808_01',
              'Module::Build::Platform::MPEiX'=> '0.2808_01',
              'Module::Build::Platform::MacOS'=> '0.2808_01',
              'Module::Build::Platform::RiscOS'=> '0.2808_01',
              'Module::Build::Platform::Unix'=> '0.2808_01',
              'Module::Build::Platform::VMS'=> '0.2808_01',
              'Module::Build::Platform::VOS'=> '0.2808_01',
              'Module::Build::Platform::Windows'=> '0.2808_01',
              'Module::Build::Platform::aix'=> '0.2808_01',
              'Module::Build::Platform::cygwin'=> '0.2808_01',
              'Module::Build::Platform::darwin'=> '0.2808_01',
              'Module::Build::Platform::os2'=> '0.2808_01',
              'Module::Build::PodParser'=> '0.2808_01',
              'Module::CoreList'      => '2.13',
              'Module::Load'          => '0.12',
              'Module::Load::Conditional'=> '0.22',
              'Net::Cmd'              => '2.29',
              'Net::Ping'             => '2.33',
              'Opcode'                => '1.11',
              'Pod::Checker'          => '1.43_01',
              'Pod::Man'              => '2.16',
              'Pod::Perldoc'          => '3.14_02',
              'Socket'                => '1.80',
              'Storable'              => '2.18',
              'Sys::Syslog'           => '0.22',
              'Sys::Syslog::win32::Win32'=> undef,
              'Term::Cap'             => '1.12',
              'Term::ReadLine'        => '1.03',
              'Term::UI'              => '0.18',
              'Test::Builder'         => '0.72',
              'Test::Builder::Module' => '0.72',
              'Test::Builder::Tester' => '1.09',
              'Test::Harness::Straps' => '0.26_01',
              'Test::More'            => '0.72',
              'Test::Simple'          => '0.72',
              'Text::ParseWords'      => '3.26',
              'Text::Soundex'         => '3.03',
              'Tie::StdHandle'        => undef,
              'Time::HiRes'           => '1.9711',
              'Time::Local'           => '1.18',
              'Time::Piece'           => '1.12',
              'VMS::Filespec'         => '1.12',
              'Win32'                 => '0.34',
              'base'                  => '2.13',
              'constant'              => '1.13',
              'feature'               => '1.11',
              'fields'                => '2.13',
              'filetest'              => '1.02',
              'open'                  => '1.06',
              'threads'               => '1.67',
              'threads::shared'       => '1.14',
              'version'               => '0.74',
          },
          removed => {
          }
      },
      5.010001 => {
          delta_from => 5.01,
          changed => {
              'App::Prove'            => '3.17',
              'App::Prove::State'     => '3.17',
              'App::Prove::State::Result'=> '3.17',
              'App::Prove::State::Result::Test'=> '3.17',
              'Archive::Extract'      => '0.34',
              'Archive::Tar'          => '1.52',
              'Attribute::Handlers'   => '0.85',
              'AutoLoader'            => '5.68',
              'AutoSplit'             => '1.06',
              'B'                     => '1.22',
              'B::Concise'            => '0.76',
              'B::Debug'              => '1.11',
              'B::Deparse'            => '0.89',
              'B::Lint'               => '1.11',
              'B::Lint::Debug'        => undef,
              'B::Xref'               => '1.02',
              'Benchmark'             => '1.11',
              'CGI'                   => '3.43',
              'CGI::Carp'             => '1.30_01',
              'CGI::Cookie'           => '1.29',
              'CPAN'                  => '1.9402',
              'CPAN::Author'          => '5.5',
              'CPAN::Bundle'          => '5.5',
              'CPAN::CacheMgr'        => '5.5',
              'CPAN::Complete'        => '5.5',
              'CPAN::Debug'           => '5.5',
              'CPAN::DeferredCode'    => '5.50',
              'CPAN::Distribution'    => '1.93',
              'CPAN::Distroprefs'     => '6',
              'CPAN::Distrostatus'    => '5.5',
              'CPAN::Exception::RecursiveDependency'=> '5.5',
              'CPAN::Exception::blocked_urllist'=> '1.0',
              'CPAN::Exception::yaml_not_installed'=> '5.5',
              'CPAN::FTP'             => '5.5001',
              'CPAN::FTP::netrc'      => '1.00',
              'CPAN::FirstTime'       => '5.53',
              'CPAN::HandleConfig'    => '5.5',
              'CPAN::Index'           => '1.93',
              'CPAN::InfoObj'         => '5.5',
              'CPAN::Kwalify'         => '5.50',
              'CPAN::LWP::UserAgent'  => '1.00',
              'CPAN::Module'          => '5.5',
              'CPAN::Nox'             => '5.50',
              'CPAN::Prompt'          => '5.5',
              'CPAN::Queue'           => '5.5',
              'CPAN::Shell'           => '5.5',
              'CPAN::Tarzip'          => '5.501',
              'CPAN::URL'             => '5.5',
              'CPANPLUS'              => '0.88',
              'CPANPLUS::Dist::Autobundle'=> undef,
              'CPANPLUS::Dist::Base'  => undef,
              'CPANPLUS::Dist::Build' => '0.36',
              'CPANPLUS::Dist::Build::Constants'=> '0.36',
              'CPANPLUS::Internals'   => '0.88',
              'CPANPLUS::Internals::Constants'=> undef,
              'CPANPLUS::Internals::Constants::Report'=> undef,
              'CPANPLUS::Internals::Source::Memory'=> undef,
              'CPANPLUS::Internals::Source::SQLite'=> undef,
              'CPANPLUS::Internals::Source::SQLite::Tie'=> undef,
              'CPANPLUS::Shell::Default'=> '0.88',
              'Carp'                  => '1.11',
              'Carp::Heavy'           => '1.11',
              'Compress::Raw::Bzip2'  => '2.020',
              'Compress::Raw::Zlib'   => '2.020',
              'Compress::Zlib'        => '2.020',
              'Cwd'                   => '3.30',
              'DB'                    => '1.02',
              'DBM_Filter::compress'  => '0.02',
              'DBM_Filter::encode'    => '0.02',
              'DBM_Filter::int32'     => '0.02',
              'DBM_Filter::null'      => '0.02',
              'DBM_Filter::utf8'      => '0.02',
              'DB_File'               => '1.820',
              'Data::Dumper'          => '2.124',
              'Devel::DProf'          => '20080331.00',
              'Devel::PPPort'         => '3.19',
              'Devel::Peek'           => '1.04',
              'Digest'                => '1.16',
              'Digest::MD5'           => '2.39',
              'Digest::SHA'           => '5.47',
              'Digest::base'          => '1.16',
              'Digest::file'          => '1.16',
              'DirHandle'             => '1.03',
              'Dumpvalue'             => '1.13',
              'DynaLoader'            => '1.10',
              'Encode'                => '2.35',
              'Encode::Alias'         => '2.12',
              'Encode::CN::HZ'        => '2.05',
              'Encode::Config'        => '2.05',
              'Encode::GSM0338'       => '2.01',
              'Encode::Guess'         => '2.03',
              'Encode::JP::JIS7'      => '2.04',
              'Encode::MIME::Header'  => '2.11',
              'Encode::Unicode'       => '2.06',
              'Errno'                 => '1.11',
              'Exporter'              => '5.63',
              'Exporter::Heavy'       => '5.63',
              'ExtUtils::CBuilder'    => '0.2602',
              'ExtUtils::CBuilder::Base'=> '0.2602',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.2602',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.2602',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.2602',
              'ExtUtils::CBuilder::Platform::aix'=> '0.2602',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.2602',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.2602',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.2602',
              'ExtUtils::CBuilder::Platform::os2'=> '0.2602',
              'ExtUtils::Command'     => '1.16',
              'ExtUtils::Command::MM' => '6.55_02',
              'ExtUtils::Constant'    => '0.22',
              'ExtUtils::Constant::ProxySubs'=> '0.06',
              'ExtUtils::Constant::Utils'=> '0.02',
              'ExtUtils::Constant::XS'=> '0.03',
              'ExtUtils::Embed'       => '1.28',
              'ExtUtils::Install'     => '1.54',
              'ExtUtils::Installed'   => '1.999_001',
              'ExtUtils::Liblist'     => '6.55_02',
              'ExtUtils::Liblist::Kid'=> '6.5502',
              'ExtUtils::MM'          => '6.55_02',
              'ExtUtils::MM_AIX'      => '6.55_02',
              'ExtUtils::MM_Any'      => '6.55_02',
              'ExtUtils::MM_BeOS'     => '6.55_02',
              'ExtUtils::MM_Cygwin'   => '6.55_02',
              'ExtUtils::MM_DOS'      => '6.5502',
              'ExtUtils::MM_Darwin'   => '6.55_02',
              'ExtUtils::MM_MacOS'    => '6.5502',
              'ExtUtils::MM_NW5'      => '6.55_02',
              'ExtUtils::MM_OS2'      => '6.55_02',
              'ExtUtils::MM_QNX'      => '6.55_02',
              'ExtUtils::MM_UWIN'     => '6.5502',
              'ExtUtils::MM_Unix'     => '6.55_02',
              'ExtUtils::MM_VMS'      => '6.55_02',
              'ExtUtils::MM_VOS'      => '6.55_02',
              'ExtUtils::MM_Win32'    => '6.55_02',
              'ExtUtils::MM_Win95'    => '6.55_02',
              'ExtUtils::MY'          => '6.5502',
              'ExtUtils::MakeMaker'   => '6.55_02',
              'ExtUtils::MakeMaker::Config'=> '6.55_02',
              'ExtUtils::Manifest'    => '1.56',
              'ExtUtils::Mkbootstrap' => '6.55_02',
              'ExtUtils::Mksymlists'  => '6.55_02',
              'ExtUtils::ParseXS'     => '2.2002',
              'ExtUtils::testlib'     => '6.5502',
              'Fatal'                 => '2.06_01',
              'File::Basename'        => '2.77',
              'File::CheckTree'       => '4.4',
              'File::Compare'         => '1.1006',
              'File::Copy'            => '2.14',
              'File::DosGlob'         => '1.01',
              'File::Fetch'           => '0.20',
              'File::Find'            => '1.14',
              'File::GlobMapper'      => '1.000',
              'File::Path'            => '2.07_03',
              'File::Spec'            => '3.30',
              'File::Spec::Cygwin'    => '3.30',
              'File::Spec::Epoc'      => '3.30',
              'File::Spec::Functions' => '3.30',
              'File::Spec::Mac'       => '3.30',
              'File::Spec::OS2'       => '3.30',
              'File::Spec::Unix'      => '3.30',
              'File::Spec::VMS'       => '3.30',
              'File::Spec::Win32'     => '3.30',
              'File::Temp'            => '0.22',
              'File::stat'            => '1.01',
              'FileCache'             => '1.08',
              'FileHandle'            => '2.02',
              'Filter::Simple'        => '0.84',
              'Filter::Util::Call'    => '1.08',
              'FindBin'               => '1.50',
              'GDBM_File'             => '1.09',
              'Getopt::Long'          => '2.38',
              'Getopt::Std'           => '1.06',
              'Hash::Util::FieldHash' => '1.04',
              'I18N::Collate'         => '1.01',
              'IO'                    => '1.25',
              'IO::Compress::Adapter::Bzip2'=> '2.020',
              'IO::Compress::Adapter::Deflate'=> '2.020',
              'IO::Compress::Adapter::Identity'=> '2.020',
              'IO::Compress::Base'    => '2.020',
              'IO::Compress::Base::Common'=> '2.020',
              'IO::Compress::Bzip2'   => '2.020',
              'IO::Compress::Deflate' => '2.020',
              'IO::Compress::Gzip'    => '2.020',
              'IO::Compress::Gzip::Constants'=> '2.020',
              'IO::Compress::RawDeflate'=> '2.020',
              'IO::Compress::Zip'     => '2.020',
              'IO::Compress::Zip::Constants'=> '2.020',
              'IO::Compress::Zlib::Constants'=> '2.020',
              'IO::Compress::Zlib::Extra'=> '2.020',
              'IO::Dir'               => '1.07',
              'IO::Handle'            => '1.28',
              'IO::Socket'            => '1.31',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.020',
              'IO::Uncompress::Adapter::Identity'=> '2.020',
              'IO::Uncompress::Adapter::Inflate'=> '2.020',
              'IO::Uncompress::AnyInflate'=> '2.020',
              'IO::Uncompress::AnyUncompress'=> '2.020',
              'IO::Uncompress::Base'  => '2.020',
              'IO::Uncompress::Bunzip2'=> '2.020',
              'IO::Uncompress::Gunzip'=> '2.020',
              'IO::Uncompress::Inflate'=> '2.020',
              'IO::Uncompress::RawInflate'=> '2.020',
              'IO::Uncompress::Unzip' => '2.020',
              'IO::Zlib'              => '1.09',
              'IPC::Cmd'              => '0.46',
              'IPC::Msg'              => '2.01',
              'IPC::Open2'            => '1.03',
              'IPC::Open3'            => '1.04',
              'IPC::Semaphore'        => '2.01',
              'IPC::SharedMem'        => '2.01',
              'IPC::SysV'             => '2.01',
              'List::Util'            => '1.21',
              'List::Util::PP'        => '1.21',
              'List::Util::XS'        => '1.21',
              'Locale::Maketext'      => '1.13',
              'Locale::Maketext::Guts'=> '1.13',
              'Locale::Maketext::GutsLoader'=> '1.13',
              'Log::Message'          => '0.02',
              'MIME::Base64'          => '3.08',
              'MIME::QuotedPrint'     => '3.08',
              'Math::BigFloat'        => '1.60',
              'Math::BigInt'          => '1.89',
              'Math::BigInt::FastCalc'=> '0.19',
              'Math::BigRat'          => '0.22',
              'Math::Complex'         => '1.56',
              'Math::Trig'            => '1.2',
              'Memoize'               => '1.01_03',
              'Module::Build'         => '0.340201',
              'Module::Build::Base'   => '0.340201',
              'Module::Build::Compat' => '0.340201',
              'Module::Build::Config' => '0.340201',
              'Module::Build::Cookbook'=> '0.340201',
              'Module::Build::Dumper' => '0.340201',
              'Module::Build::ModuleInfo'=> '0.340201',
              'Module::Build::Notes'  => '0.340201',
              'Module::Build::PPMMaker'=> '0.340201',
              'Module::Build::Platform::Amiga'=> '0.340201',
              'Module::Build::Platform::Default'=> '0.340201',
              'Module::Build::Platform::EBCDIC'=> '0.340201',
              'Module::Build::Platform::MPEiX'=> '0.340201',
              'Module::Build::Platform::MacOS'=> '0.340201',
              'Module::Build::Platform::RiscOS'=> '0.340201',
              'Module::Build::Platform::Unix'=> '0.340201',
              'Module::Build::Platform::VMS'=> '0.340201',
              'Module::Build::Platform::VOS'=> '0.340201',
              'Module::Build::Platform::Windows'=> '0.340201',
              'Module::Build::Platform::aix'=> '0.340201',
              'Module::Build::Platform::cygwin'=> '0.340201',
              'Module::Build::Platform::darwin'=> '0.340201',
              'Module::Build::Platform::os2'=> '0.340201',
              'Module::Build::PodParser'=> '0.340201',
              'Module::Build::Version'=> '0.77',
              'Module::CoreList'      => '2.18',
              'Module::Load'          => '0.16',
              'Module::Load::Conditional'=> '0.30',
              'Module::Loaded'        => '0.02',
              'Module::Pluggable'     => '3.9',
              'Module::Pluggable::Object'=> '3.9',
              'NDBM_File'             => '1.08',
              'NEXT'                  => '0.64',
              'Net::Ping'             => '2.36',
              'O'                     => '1.01',
              'OS2::Process'          => '1.03',
              'OS2::REXX'             => '1.04',
              'Object::Accessor'      => '0.34',
              'POSIX'                 => '1.17',
              'Package::Constants'    => '0.02',
              'Parse::CPAN::Meta'     => '1.39',
              'PerlIO'                => '1.06',
              'PerlIO::encoding'      => '0.11',
              'PerlIO::scalar'        => '0.07',
              'PerlIO::via'           => '0.07',
              'Pod::Checker'          => '1.45',
              'Pod::Find'             => '1.35',
              'Pod::Html'             => '1.09',
              'Pod::InputObjects'     => '1.31',
              'Pod::Man'              => '2.22',
              'Pod::ParseLink'        => '1.09',
              'Pod::ParseUtils'       => '1.36',
              'Pod::Parser'           => '1.37',
              'Pod::Perldoc'          => '3.14_04',
              'Pod::PlainText'        => '2.04',
              'Pod::Select'           => '1.36',
              'Pod::Simple'           => '3.07',
              'Pod::Simple::XHTML'    => '3.04',
              'Pod::Text'             => '3.13',
              'Pod::Text::Color'      => '2.05',
              'Pod::Text::Overstrike' => '2.03',
              'Pod::Text::Termcap'    => '2.05',
              'Pod::Usage'            => '1.36',
              'Safe'                  => '2.18',
              'Scalar::Util'          => '1.21',
              'Scalar::Util::PP'      => '1.21',
              'SelectSaver'           => '1.02',
              'SelfLoader'            => '1.17',
              'Socket'                => '1.82',
              'Storable'              => '2.20',
              'Switch'                => '2.14',
              'Symbol'                => '1.07',
              'Sys::Syslog'           => '0.27',
              'TAP::Base'             => '3.17',
              'TAP::Formatter::Base'  => '3.17',
              'TAP::Formatter::Color' => '3.17',
              'TAP::Formatter::Console'=> '3.17',
              'TAP::Formatter::Console::ParallelSession'=> '3.17',
              'TAP::Formatter::Console::Session'=> '3.17',
              'TAP::Formatter::File'  => '3.17',
              'TAP::Formatter::File::Session'=> '3.17',
              'TAP::Formatter::Session'=> '3.17',
              'TAP::Harness'          => '3.17',
              'TAP::Object'           => '3.17',
              'TAP::Parser'           => '3.17',
              'TAP::Parser::Aggregator'=> '3.17',
              'TAP::Parser::Grammar'  => '3.17',
              'TAP::Parser::Iterator' => '3.17',
              'TAP::Parser::Iterator::Array'=> '3.17',
              'TAP::Parser::Iterator::Process'=> '3.17',
              'TAP::Parser::Iterator::Stream'=> '3.17',
              'TAP::Parser::IteratorFactory'=> '3.17',
              'TAP::Parser::Multiplexer'=> '3.17',
              'TAP::Parser::Result'   => '3.17',
              'TAP::Parser::Result::Bailout'=> '3.17',
              'TAP::Parser::Result::Comment'=> '3.17',
              'TAP::Parser::Result::Plan'=> '3.17',
              'TAP::Parser::Result::Pragma'=> '3.17',
              'TAP::Parser::Result::Test'=> '3.17',
              'TAP::Parser::Result::Unknown'=> '3.17',
              'TAP::Parser::Result::Version'=> '3.17',
              'TAP::Parser::Result::YAML'=> '3.17',
              'TAP::Parser::ResultFactory'=> '3.17',
              'TAP::Parser::Scheduler'=> '3.17',
              'TAP::Parser::Scheduler::Job'=> '3.17',
              'TAP::Parser::Scheduler::Spinner'=> '3.17',
              'TAP::Parser::Source'   => '3.17',
              'TAP::Parser::Source::Perl'=> '3.17',
              'TAP::Parser::Utils'    => '3.17',
              'TAP::Parser::YAMLish::Reader'=> '3.17',
              'TAP::Parser::YAMLish::Writer'=> '3.17',
              'Term::ANSIColor'       => '2.00',
              'Term::ReadLine'        => '1.04',
              'Term::UI'              => '0.20',
              'Test'                  => '1.25_02',
              'Test::Builder'         => '0.92',
              'Test::Builder::Module' => '0.92',
              'Test::Builder::Tester' => '1.18',
              'Test::Builder::Tester::Color'=> '1.18',
              'Test::Harness'         => '3.17',
              'Test::More'            => '0.92',
              'Test::Simple'          => '0.92',
              'Text::ParseWords'      => '3.27',
              'Text::Tabs'            => '2009.0305',
              'Text::Wrap'            => '2009.0305',
              'Thread::Queue'         => '2.11',
              'Thread::Semaphore'     => '2.09',
              'Tie::Handle'           => '4.2',
              'Tie::Hash'             => '1.03',
              'Tie::RefHash'          => '1.38',
              'Tie::Scalar'           => '1.01',
              'Tie::StdHandle'        => '4.2',
              'Time::HiRes'           => '1.9719',
              'Time::Local'           => '1.1901',
              'Time::Piece'           => '1.15',
              'UNIVERSAL'             => '1.05',
              'Unicode'               => '5.1.0',
              'Unicode::Normalize'    => '1.03',
              'Unicode::UCD'          => '0.27',
              'VMS::Stdio'            => '2.4',
              'Win32'                 => '0.39',
              'Win32API::File'        => '0.1101',
              'XS::APItest'           => '0.15',
              'XS::Typemap'           => '0.03',
              'XSLoader'              => '0.10',
              'attributes'            => '0.09',
              'attrs'                 => '1.03',
              'autodie'               => '2.06_01',
              'autodie::exception'    => '2.06_01',
              'autodie::exception::system'=> '2.06_01',
              'autodie::hints'        => '2.06_01',
              'base'                  => '2.14',
              'bigint'                => '0.23',
              'bignum'                => '0.23',
              'bigrat'                => '0.23',
              'blib'                  => '1.04',
              'charnames'             => '1.07',
              'constant'              => '1.17',
              'encoding'              => '2.6_01',
              'feature'               => '1.13',
              'fields'                => '2.14',
              'lib'                   => '0.62',
              'mro'                   => '1.01',
              'open'                  => '1.07',
              'ops'                   => '1.02',
              'overload'              => '1.07',
              'overload::numbers'     => undef,
              'overloading'           => '0.01',
              'parent'                => '0.221',
              're'                    => '0.09',
              'threads'               => '1.72',
              'threads::shared'       => '1.29',
              'version'               => '0.77',
          },
          removed => {
              'CPAN::API::HOWTO'      => 1,
              'CPAN::DeferedCode'     => 1,
              'CPANPLUS::inc'         => 1,
              'ExtUtils::MakeMaker::bytes'=> 1,
              'ExtUtils::MakeMaker::vmsish'=> 1,
              'Test::Harness::Assert' => 1,
              'Test::Harness::Iterator'=> 1,
              'Test::Harness::Point'  => 1,
              'Test::Harness::Results'=> 1,
              'Test::Harness::Straps' => 1,
              'Test::Harness::Util'   => 1,
          }
      },
      5.011 => {
          delta_from => 5.010001,
          changed => {
              'Archive::Tar'          => '1.54',
              'Attribute::Handlers'   => '0.87',
              'AutoLoader'            => '5.70',
              'B::Deparse'            => '0.91',
              'B::Lint'               => '1.11_01',
              'B::Lint::Debug'        => '0.01',
              'CGI'                   => '3.45',
              'CGI::Apache'           => '1.01',
              'CGI::Carp'             => '3.45',
              'CGI::Pretty'           => '3.44',
              'CGI::Switch'           => '1.01',
              'CGI::Util'             => '3.45',
              'CPAN'                  => '1.94_51',
              'CPAN::Distribution'    => '1.94',
              'CPAN::FTP'             => '5.5002',
              'CPAN::Index'           => '1.94',
              'CPAN::LWP::UserAgent'  => '1.94',
              'CPANPLUS::Dist::Build' => '0.40',
              'CPANPLUS::Dist::Build::Constants'=> '0.40',
              'Carp'                  => '1.12',
              'Carp::Heavy'           => '1.12',
              'Class::ISA'            => '0.36',
              'Compress::Raw::Bzip2'  => '2.021',
              'Compress::Raw::Zlib'   => '2.021',
              'Compress::Zlib'        => '2.021',
              'Cwd'                   => '3.3002',
              'Data::Dumper'          => '2.125',
              'Encode'                => '2.37',
              'Exporter'              => '5.64',
              'Exporter::Heavy'       => '5.64',
              'ExtUtils::ParseXS'     => '2.200403',
              'File::Basename'        => '2.78',
              'File::Copy'            => '2.16',
              'File::stat'            => '1.02',
              'IO'                    => '1.25_01',
              'IO::Compress::Adapter::Bzip2'=> '2.021',
              'IO::Compress::Adapter::Deflate'=> '2.021',
              'IO::Compress::Adapter::Identity'=> '2.021',
              'IO::Compress::Base'    => '2.021',
              'IO::Compress::Base::Common'=> '2.021',
              'IO::Compress::Bzip2'   => '2.021',
              'IO::Compress::Deflate' => '2.021',
              'IO::Compress::Gzip'    => '2.021',
              'IO::Compress::Gzip::Constants'=> '2.021',
              'IO::Compress::RawDeflate'=> '2.021',
              'IO::Compress::Zip'     => '2.021',
              'IO::Compress::Zip::Constants'=> '2.021',
              'IO::Compress::Zlib::Constants'=> '2.021',
              'IO::Compress::Zlib::Extra'=> '2.021',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.021',
              'IO::Uncompress::Adapter::Identity'=> '2.021',
              'IO::Uncompress::Adapter::Inflate'=> '2.021',
              'IO::Uncompress::AnyInflate'=> '2.021',
              'IO::Uncompress::AnyUncompress'=> '2.021',
              'IO::Uncompress::Base'  => '2.021',
              'IO::Uncompress::Bunzip2'=> '2.021',
              'IO::Uncompress::Gunzip'=> '2.021',
              'IO::Uncompress::Inflate'=> '2.021',
              'IO::Uncompress::RawInflate'=> '2.021',
              'IO::Uncompress::Unzip' => '2.021',
              'IO::Zlib'              => '1.10',
              'IPC::Cmd'              => '0.50',
              'IPC::Open3'            => '1.05',
              'Locale::Maketext::Simple'=> '0.21',
              'Log::Message::Simple'  => '0.06',
              'Math::BigInt'          => '1.89_01',
              'Math::BigRat'          => '0.24',
              'Module::Build'         => '0.35',
              'Module::Build::Base'   => '0.35',
              'Module::Build::Compat' => '0.35',
              'Module::Build::Config' => '0.35',
              'Module::Build::Cookbook'=> '0.35',
              'Module::Build::Dumper' => '0.35',
              'Module::Build::ModuleInfo'=> '0.35',
              'Module::Build::Notes'  => '0.35',
              'Module::Build::PPMMaker'=> '0.35',
              'Module::Build::Platform::Amiga'=> '0.35',
              'Module::Build::Platform::Default'=> '0.35',
              'Module::Build::Platform::EBCDIC'=> '0.35',
              'Module::Build::Platform::MPEiX'=> '0.35',
              'Module::Build::Platform::MacOS'=> '0.35',
              'Module::Build::Platform::RiscOS'=> '0.35',
              'Module::Build::Platform::Unix'=> '0.35',
              'Module::Build::Platform::VMS'=> '0.35',
              'Module::Build::Platform::VOS'=> '0.35',
              'Module::Build::Platform::Windows'=> '0.35',
              'Module::Build::Platform::aix'=> '0.35',
              'Module::Build::Platform::cygwin'=> '0.35',
              'Module::Build::Platform::darwin'=> '0.35',
              'Module::Build::Platform::os2'=> '0.35',
              'Module::Build::PodParser'=> '0.35',
              'Module::CoreList'      => '2.19',
              'Module::Loaded'        => '0.06',
              'Opcode'                => '1.13',
              'PerlIO::via'           => '0.08',
              'Pod::Perldoc'          => '3.15_01',
              'Pod::Plainer'          => '1.01',
              'Safe'                  => '2.19',
              'Socket'                => '1.84',
              'Switch'                => '2.14_01',
              'Term::ANSIColor'       => '2.02',
              'Term::ReadLine'        => '1.05',
              'Text::Balanced'        => '2.02',
              'Text::Soundex'         => '3.03_01',
              'Time::Local'           => '1.1901_01',
              'Unicode::Collate'      => '0.52_01',
              'attributes'            => '0.12',
              'constant'              => '1.19',
              'deprecate'             => '0.01',
              'overload'              => '1.08',
              'parent'                => '0.223',
              're'                    => '0.10',
              'threads'               => '1.74',
              'threads::shared'       => '1.31',
              'warnings'              => '1.07',
          },
          removed => {
              'attrs'                 => 1,
          }
      },
      5.011001 => {
          delta_from => 5.011,
          changed => {
              'B'                     => '1.23',
              'B::Concise'            => '0.77',
              'B::Deparse'            => '0.92',
              'CGI'                   => '3.48',
              'CGI::Pretty'           => '3.46',
              'CGI::Util'             => '3.48',
              'CPANPLUS'              => '0.89_03',
              'CPANPLUS::Internals'   => '0.89_03',
              'CPANPLUS::Shell::Default'=> '0.89_03',
              'Carp'                  => '1.13',
              'Carp::Heavy'           => '1.13',
              'ExtUtils::CBuilder'    => '0.260301',
              'ExtUtils::CBuilder::Base'=> '0.260301',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.260301',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.260301',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.260301',
              'ExtUtils::CBuilder::Platform::aix'=> '0.260301',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.260301',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.260301',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.260301',
              'ExtUtils::CBuilder::Platform::os2'=> '0.260301',
              'ExtUtils::Install'     => '1.55',
              'ExtUtils::Manifest'    => '1.57',
              'ExtUtils::Packlist'    => '1.44',
              'ExtUtils::ParseXS'     => '2.21',
              'File::Glob'            => '1.07',
              'File::Path'            => '2.08',
              'IO'                    => '1.25_02',
              'Module::CoreList'      => '2.21',
              'OS2::DLL'              => '1.04',
              'OS2::Process'          => '1.04',
              'Object::Accessor'      => '0.36',
              'Opcode'                => '1.15',
              'POSIX'                 => '1.18',
              'Parse::CPAN::Meta'     => '1.40',
              'PerlIO::via'           => '0.09',
              'Pod::Simple'           => '3.08',
              'Socket'                => '1.85',
              'Storable'              => '2.22',
              'Switch'                => '2.15',
              'Test::Builder'         => '0.94',
              'Test::Builder::Module' => '0.94',
              'Test::More'            => '0.94',
              'Test::Simple'          => '0.94',
              'XS::APItest'           => '0.16',
              'mro'                   => '1.02',
              'overload'              => '1.09',
              'threads::shared'       => '1.32',
          },
          removed => {
          }
      },
      5.011002 => {
          delta_from => 5.011001,
          changed => {
              'B::Concise'            => '0.78',
              'B::Deparse'            => '0.93',
              'CPANPLUS'              => '0.89_09',
              'CPANPLUS::Dist::Build' => '0.44',
              'CPANPLUS::Dist::Build::Constants'=> '0.44',
              'CPANPLUS::Internals'   => '0.89_09',
              'CPANPLUS::Shell::Default'=> '0.89_09',
              'Carp'                  => '1.14',
              'Carp::Heavy'           => '1.14',
              'Compress::Zlib'        => '2.022',
              'DBM_Filter'            => '0.03',
              'Encode'                => '2.38',
              'Encode::Byte'          => '2.04',
              'Encode::CN'            => '2.03',
              'Encode::JP'            => '2.04',
              'Encode::KR'            => '2.03',
              'Encode::TW'            => '2.03',
              'Encode::Unicode'       => '2.07',
              'Env'                   => '1.01',
              'Exporter'              => '5.64_01',
              'Exporter::Heavy'       => '5.64_01',
              'ExtUtils::CBuilder'    => '0.27',
              'ExtUtils::CBuilder::Base'=> '0.27',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.27',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.27',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.27',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.27',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.27',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.27',
              'ExtUtils::CBuilder::Platform::aix'=> '0.27',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.27',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.27',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.27',
              'ExtUtils::CBuilder::Platform::os2'=> '0.27',
              'File::Fetch'           => '0.22',
              'I18N::LangTags::Detect'=> '1.04',
              'I18N::Langinfo'        => '0.03',
              'IO::Compress::Adapter::Bzip2'=> '2.022',
              'IO::Compress::Adapter::Deflate'=> '2.022',
              'IO::Compress::Adapter::Identity'=> '2.022',
              'IO::Compress::Base'    => '2.022',
              'IO::Compress::Base::Common'=> '2.022',
              'IO::Compress::Bzip2'   => '2.022',
              'IO::Compress::Deflate' => '2.022',
              'IO::Compress::Gzip'    => '2.022',
              'IO::Compress::Gzip::Constants'=> '2.022',
              'IO::Compress::RawDeflate'=> '2.022',
              'IO::Compress::Zip'     => '2.022',
              'IO::Compress::Zip::Constants'=> '2.022',
              'IO::Compress::Zlib::Constants'=> '2.022',
              'IO::Compress::Zlib::Extra'=> '2.022',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.022',
              'IO::Uncompress::Adapter::Identity'=> '2.022',
              'IO::Uncompress::Adapter::Inflate'=> '2.022',
              'IO::Uncompress::AnyInflate'=> '2.022',
              'IO::Uncompress::AnyUncompress'=> '2.022',
              'IO::Uncompress::Base'  => '2.022',
              'IO::Uncompress::Bunzip2'=> '2.022',
              'IO::Uncompress::Gunzip'=> '2.022',
              'IO::Uncompress::Inflate'=> '2.022',
              'IO::Uncompress::RawInflate'=> '2.022',
              'IO::Uncompress::Unzip' => '2.022',
              'IPC::Cmd'              => '0.54',
              'List::Util'            => '1.22',
              'List::Util::PP'        => '1.22',
              'List::Util::XS'        => '1.22',
              'Locale::Maketext'      => '1.14',
              'Module::Build'         => '0.35_09',
              'Module::Build::Base'   => '0.35_09',
              'Module::Build::Compat' => '0.35_09',
              'Module::Build::Config' => '0.35_09',
              'Module::Build::Cookbook'=> '0.35_09',
              'Module::Build::Dumper' => '0.35_09',
              'Module::Build::ModuleInfo'=> '0.35_09',
              'Module::Build::Notes'  => '0.35_09',
              'Module::Build::PPMMaker'=> '0.35_09',
              'Module::Build::Platform::Amiga'=> '0.35_09',
              'Module::Build::Platform::Default'=> '0.35_09',
              'Module::Build::Platform::EBCDIC'=> '0.35_09',
              'Module::Build::Platform::MPEiX'=> '0.35_09',
              'Module::Build::Platform::MacOS'=> '0.35_09',
              'Module::Build::Platform::RiscOS'=> '0.35_09',
              'Module::Build::Platform::Unix'=> '0.35_09',
              'Module::Build::Platform::VMS'=> '0.35_09',
              'Module::Build::Platform::VOS'=> '0.35_09',
              'Module::Build::Platform::Windows'=> '0.35_09',
              'Module::Build::Platform::aix'=> '0.35_09',
              'Module::Build::Platform::cygwin'=> '0.35_09',
              'Module::Build::Platform::darwin'=> '0.35_09',
              'Module::Build::Platform::os2'=> '0.35_09',
              'Module::Build::PodParser'=> '0.35_09',
              'Module::Build::YAML'   => '1.40',
              'Module::CoreList'      => '2.23',
              'Module::Load::Conditional'=> '0.34',
              'Pod::Simple'           => '3.10',
              'Pod::Simple::XHTML'    => '3.10',
              'Scalar::Util'          => '1.22',
              'Scalar::Util::PP'      => '1.22',
              'Switch'                => '2.16',
              'XS::APItest'           => '0.17',
              'XS::APItest::KeywordRPN'=> '0.003',
              'base'                  => '2.15',
              'diagnostics'           => '1.18',
              'fields'                => '2.15',
              'inc::latest'           => '0.35_09',
              'legacy'                => '1.00',
              'overload'              => '1.10',
          },
          removed => {
          }
      },
      5.011003 => {
          delta_from => 5.011002,
          changed => {
              'App::Cpan'             => '1.570001',
              'Archive::Extract'      => '0.36',
              'CPAN'                  => '1.94_5301',
              'CPAN::FTP'             => '5.5004',
              'CPAN::FirstTime'       => '5.530001',
              'CPAN::Mirrors'         => '1.770001',
              'CPANPLUS'              => '0.90',
              'CPANPLUS::Internals'   => '0.90',
              'CPANPLUS::Shell::Default'=> '0.90',
              'Cwd'                   => '3.31',
              'Encode'                => '2.39',
              'ExtUtils::Command::MM' => '6.56',
              'ExtUtils::Liblist'     => '6.56',
              'ExtUtils::Liblist::Kid'=> '6.56',
              'ExtUtils::MM'          => '6.56',
              'ExtUtils::MM_AIX'      => '6.56',
              'ExtUtils::MM_Any'      => '6.56',
              'ExtUtils::MM_BeOS'     => '6.56',
              'ExtUtils::MM_Cygwin'   => '6.56',
              'ExtUtils::MM_DOS'      => '6.56',
              'ExtUtils::MM_Darwin'   => '6.56',
              'ExtUtils::MM_MacOS'    => '6.56',
              'ExtUtils::MM_NW5'      => '6.56',
              'ExtUtils::MM_OS2'      => '6.56',
              'ExtUtils::MM_QNX'      => '6.56',
              'ExtUtils::MM_UWIN'     => '6.56',
              'ExtUtils::MM_Unix'     => '6.56',
              'ExtUtils::MM_VMS'      => '6.56',
              'ExtUtils::MM_VOS'      => '6.56',
              'ExtUtils::MM_Win32'    => '6.56',
              'ExtUtils::MM_Win95'    => '6.56',
              'ExtUtils::MY'          => '6.56',
              'ExtUtils::MakeMaker'   => '6.56',
              'ExtUtils::MakeMaker::Config'=> '6.56',
              'ExtUtils::Mkbootstrap' => '6.56',
              'ExtUtils::Mksymlists'  => '6.56',
              'ExtUtils::testlib'     => '6.56',
              'File::Find'            => '1.15',
              'File::Path'            => '2.08_01',
              'File::Spec'            => '3.31',
              'Module::Build'         => '0.36',
              'Module::Build::Base'   => '0.36',
              'Module::Build::Compat' => '0.36',
              'Module::Build::Config' => '0.36',
              'Module::Build::Cookbook'=> '0.36',
              'Module::Build::Dumper' => '0.36',
              'Module::Build::ModuleInfo'=> '0.36',
              'Module::Build::Notes'  => '0.36',
              'Module::Build::PPMMaker'=> '0.36',
              'Module::Build::Platform::Amiga'=> '0.36',
              'Module::Build::Platform::Default'=> '0.36',
              'Module::Build::Platform::EBCDIC'=> '0.36',
              'Module::Build::Platform::MPEiX'=> '0.36',
              'Module::Build::Platform::MacOS'=> '0.36',
              'Module::Build::Platform::RiscOS'=> '0.36',
              'Module::Build::Platform::Unix'=> '0.36',
              'Module::Build::Platform::VMS'=> '0.36',
              'Module::Build::Platform::VOS'=> '0.36',
              'Module::Build::Platform::Windows'=> '0.36',
              'Module::Build::Platform::aix'=> '0.36',
              'Module::Build::Platform::cygwin'=> '0.36',
              'Module::Build::Platform::darwin'=> '0.36',
              'Module::Build::Platform::os2'=> '0.36',
              'Module::Build::PodParser'=> '0.36',
              'Module::CoreList'      => '2.24',
              'POSIX'                 => '1.19',
              'Pod::Simple'           => '3.13',
              'Pod::Simple::BlackBox' => '3.13',
              'Pod::Simple::Checker'  => '3.13',
              'Pod::Simple::Debug'    => '3.13',
              'Pod::Simple::DumpAsText'=> '3.13',
              'Pod::Simple::DumpAsXML'=> '3.13',
              'Pod::Simple::HTML'     => '3.13',
              'Pod::Simple::HTMLBatch'=> '3.13',
              'Pod::Simple::LinkSection'=> '3.13',
              'Pod::Simple::Methody'  => '3.13',
              'Pod::Simple::Progress' => '3.13',
              'Pod::Simple::PullParser'=> '3.13',
              'Pod::Simple::PullParserEndToken'=> '3.13',
              'Pod::Simple::PullParserStartToken'=> '3.13',
              'Pod::Simple::PullParserTextToken'=> '3.13',
              'Pod::Simple::PullParserToken'=> '3.13',
              'Pod::Simple::RTF'      => '3.13',
              'Pod::Simple::Search'   => '3.13',
              'Pod::Simple::SimpleTree'=> '3.13',
              'Pod::Simple::Text'     => '3.13',
              'Pod::Simple::TextContent'=> '3.13',
              'Pod::Simple::TiedOutFH'=> '3.13',
              'Pod::Simple::Transcode'=> '3.13',
              'Pod::Simple::TranscodeDumb'=> '3.13',
              'Pod::Simple::TranscodeSmart'=> '3.13',
              'Pod::Simple::XHTML'    => '3.13',
              'Pod::Simple::XMLOutStream'=> '3.13',
              'Safe'                  => '2.20',
              'Unicode'               => '5.2.0',
              'constant'              => '1.20',
              'diagnostics'           => '1.19',
              'feature'               => '1.14',
              'inc::latest'           => '0.36',
              'threads'               => '1.75',
              'warnings'              => '1.08',
          },
          removed => {
              'legacy'                => 1,
          }
      },
      5.011004 => {
          delta_from => 5.011003,
          changed => {
              'App::Cpan'             => '1.5701',
              'Archive::Extract'      => '0.38',
              'B::Deparse'            => '0.94',
              'CPAN'                  => '1.94_54',
              'CPAN::FirstTime'       => '5.53',
              'CPAN::Mirrors'         => '1.77',
              'Carp'                  => '1.15',
              'Carp::Heavy'           => '1.15',
              'Compress::Raw::Bzip2'  => '2.024',
              'Compress::Raw::Zlib'   => '2.024',
              'Compress::Zlib'        => '2.024',
              'File::Copy'            => '2.17',
              'File::Fetch'           => '0.24',
              'GDBM_File'             => '1.10',
              'IO::Compress::Adapter::Bzip2'=> '2.024',
              'IO::Compress::Adapter::Deflate'=> '2.024',
              'IO::Compress::Adapter::Identity'=> '2.024',
              'IO::Compress::Base'    => '2.024',
              'IO::Compress::Base::Common'=> '2.024',
              'IO::Compress::Bzip2'   => '2.024',
              'IO::Compress::Deflate' => '2.024',
              'IO::Compress::Gzip'    => '2.024',
              'IO::Compress::Gzip::Constants'=> '2.024',
              'IO::Compress::RawDeflate'=> '2.024',
              'IO::Compress::Zip'     => '2.024',
              'IO::Compress::Zip::Constants'=> '2.024',
              'IO::Compress::Zlib::Constants'=> '2.024',
              'IO::Compress::Zlib::Extra'=> '2.024',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.024',
              'IO::Uncompress::Adapter::Identity'=> '2.024',
              'IO::Uncompress::Adapter::Inflate'=> '2.024',
              'IO::Uncompress::AnyInflate'=> '2.024',
              'IO::Uncompress::AnyUncompress'=> '2.024',
              'IO::Uncompress::Base'  => '2.024',
              'IO::Uncompress::Bunzip2'=> '2.024',
              'IO::Uncompress::Gunzip'=> '2.024',
              'IO::Uncompress::Inflate'=> '2.024',
              'IO::Uncompress::RawInflate'=> '2.024',
              'IO::Uncompress::Unzip' => '2.024',
              'Module::Build'         => '0.3603',
              'Module::Build::Base'   => '0.3603',
              'Module::Build::Compat' => '0.3603',
              'Module::Build::Config' => '0.3603',
              'Module::Build::Cookbook'=> '0.3603',
              'Module::Build::Dumper' => '0.3603',
              'Module::Build::ModuleInfo'=> '0.3603',
              'Module::Build::Notes'  => '0.3603',
              'Module::Build::PPMMaker'=> '0.3603',
              'Module::Build::Platform::Amiga'=> '0.3603',
              'Module::Build::Platform::Default'=> '0.3603',
              'Module::Build::Platform::EBCDIC'=> '0.3603',
              'Module::Build::Platform::MPEiX'=> '0.3603',
              'Module::Build::Platform::MacOS'=> '0.3603',
              'Module::Build::Platform::RiscOS'=> '0.3603',
              'Module::Build::Platform::Unix'=> '0.3603',
              'Module::Build::Platform::VMS'=> '0.3603',
              'Module::Build::Platform::VOS'=> '0.3603',
              'Module::Build::Platform::Windows'=> '0.3603',
              'Module::Build::Platform::aix'=> '0.3603',
              'Module::Build::Platform::cygwin'=> '0.3603',
              'Module::Build::Platform::darwin'=> '0.3603',
              'Module::Build::Platform::os2'=> '0.3603',
              'Module::Build::PodParser'=> '0.3603',
              'Module::CoreList'      => '2.25',
              'PerlIO::encoding'      => '0.12',
              'Safe'                  => '2.21',
              'UNIVERSAL'             => '1.06',
              'feature'               => '1.15',
              'inc::latest'           => '0.3603',
              'less'                  => '0.03',
              're'                    => '0.11',
              'version'               => '0.81',
              'warnings'              => '1.09',
          },
          removed => {
          }
      },
      5.011005 => {
          delta_from => 5.011004,
          changed => {
              'B::Debug'              => '1.12',
              'CPAN'                  => '1.94_56',
              'CPAN::Debug'           => '5.5001',
              'CPAN::Distribution'    => '1.9456',
              'CPAN::FirstTime'       => '5.5301',
              'CPAN::HandleConfig'    => '5.5001',
              'CPAN::Shell'           => '5.5001',
              'CPAN::Tarzip'          => '5.5011',
              'CPANPLUS::Dist::Build' => '0.46',
              'CPANPLUS::Dist::Build::Constants'=> '0.46',
              'Module::CoreList'      => '2.26',
              'Pod::Man'              => '2.23',
              'Pod::ParseLink'        => '1.10',
              'Pod::Perldoc'          => '3.15_02',
              'Pod::Plainer'          => '1.02',
              'Pod::Text'             => '3.14',
              'Pod::Text::Color'      => '2.06',
              'Pod::Text::Overstrike' => '2.04',
              'Pod::Text::Termcap'    => '2.06',
              'Safe'                  => '2.22',
              'Socket'                => '1.86',
              'version'               => '0.82',
          },
          removed => {
          }
      },
      5.012 => {
          delta_from => 5.011005,
          changed => {
              'B::Deparse'            => '0.96',
              'CPAN::Distribution'    => '1.9456_01',
              'Module::CoreList'      => '2.29',
              'Safe'                  => '2.25',
              'Socket'                => '1.87',
              'Tie::Scalar'           => '1.02',
              'Time::Piece'           => '1.15_01',
              'bytes'                 => '1.04',
              'feature'               => '1.16',
              'utf8'                  => '1.08',
          },
          removed => {
          }
      },
      5.012001 => {
          delta_from => 5.012,
          changed => {
              'B::Deparse'            => '0.97',
              'CGI'                   => '3.49',
              'CGI::Fast'             => '1.08',
              'Carp'                  => '1.16',
              'Carp::Heavy'           => '1.16',
              'File::Copy'            => '2.18',
              'Module::CoreList'      => '2.32',
              'Pod::Functions'        => '1.04',
              'Pod::Simple'           => '3.14',
              'Pod::Simple::BlackBox' => '3.14',
              'Pod::Simple::Checker'  => '3.14',
              'Pod::Simple::Debug'    => '3.14',
              'Pod::Simple::DumpAsText'=> '3.14',
              'Pod::Simple::DumpAsXML'=> '3.14',
              'Pod::Simple::HTML'     => '3.14',
              'Pod::Simple::HTMLBatch'=> '3.14',
              'Pod::Simple::LinkSection'=> '3.14',
              'Pod::Simple::Methody'  => '3.14',
              'Pod::Simple::Progress' => '3.14',
              'Pod::Simple::PullParser'=> '3.14',
              'Pod::Simple::PullParserEndToken'=> '3.14',
              'Pod::Simple::PullParserStartToken'=> '3.14',
              'Pod::Simple::PullParserTextToken'=> '3.14',
              'Pod::Simple::PullParserToken'=> '3.14',
              'Pod::Simple::RTF'      => '3.14',
              'Pod::Simple::Search'   => '3.14',
              'Pod::Simple::SimpleTree'=> '3.14',
              'Pod::Simple::Text'     => '3.14',
              'Pod::Simple::TextContent'=> '3.14',
              'Pod::Simple::TiedOutFH'=> '3.14',
              'Pod::Simple::Transcode'=> '3.14',
              'Pod::Simple::TranscodeDumb'=> '3.14',
              'Pod::Simple::TranscodeSmart'=> '3.14',
              'Pod::Simple::XHTML'    => '3.14',
              'Pod::Simple::XMLOutStream'=> '3.14',
              'Safe'                  => '2.27',
          },
          removed => {
          }
      },
      5.012002 => {
          delta_from => 5.012001,
          changed => {
              'Carp'                  => '1.17',
              'Carp::Heavy'           => '1.17',
              'File::Spec'            => '3.31_01',
              'Module::CoreList'      => '2.38',
              'Module::Load::Conditional'=> '0.38',
              'PerlIO::scalar'        => '0.08',
          },
          removed => {
          }
      },
      5.012003 => {
          delta_from => 5.012002,
          changed => {
              'B::Deparse'            => '0.9701',
              'Module::Build::Platform::cygwin'=> '0.360301',
              'Module::CoreList'      => '2.43',
              'Socket'                => '1.87_01',
          },
          removed => {
          }
      },
      5.012004 => {
          delta_from => 5.012003,
          changed => {
              'Module::CoreList'      => '2.50',
          },
          removed => {
          }
      },
      5.012005 => {
          delta_from => 5.012004,
          changed => {
              'B::Concise'            => '0.78_01',
              'Encode'                => '2.39_01',
              'File::Glob'            => '1.07_01',
              'Module::CoreList'      => '2.50_02',
              'Unicode::UCD'          => '0.29',
              'charnames'             => '1.07_01',
          },
          removed => {
          }
      },
      5.013 => {
          delta_from => 5.012,
          changed => {
              'CGI'                   => '3.49',
              'CGI::Fast'             => '1.08',
              'Data::Dumper'          => '2.126',
              'ExtUtils::MM_Unix'     => '6.5601',
              'ExtUtils::MakeMaker'   => '6.5601',
              'File::Copy'            => '2.18',
              'IPC::Open3'            => '1.06',
              'MIME::Base64'          => '3.09',
              'MIME::QuotedPrint'     => '3.09',
              'Module::CoreList'      => '2.31',
              'Pod::Functions'        => '1.04',
              'XS::APItest'           => '0.18',
              'XS::APItest::KeywordRPN'=> '0.004',
              'feature'               => '1.17',
              'threads'               => '1.77_01',
              'threads::shared'       => '1.33',
          },
          removed => {
          }
      },
      5.013001 => {
          delta_from => 5.012001,
          changed => {
              'Data::Dumper'          => '2.126',
              'Dumpvalue'             => '1.14',
              'Errno'                 => '1.12',
              'ExtUtils::MM_Unix'     => '6.5601',
              'ExtUtils::MakeMaker'   => '6.5601',
              'ExtUtils::ParseXS'     => '2.2205',
              'File::Find'            => '1.16',
              'IPC::Cmd'              => '0.58',
              'IPC::Open3'            => '1.06',
              'List::Util'            => '1.23',
              'List::Util::PP'        => '1.23',
              'List::Util::XS'        => '1.23',
              'Locale::Codes'         => '3.12',
              'Locale::Codes::Country'=> '3.12',
              'Locale::Codes::Currency'=> '3.12',
              'Locale::Codes::Language'=> '3.12',
              'Locale::Codes::Script' => '3.12',
              'Locale::Constants'     => '3.12',
              'Locale::Country'       => '3.12',
              'Locale::Currency'      => '3.12',
              'Locale::Language'      => '3.12',
              'Locale::Script'        => '3.12',
              'MIME::Base64'          => '3.09',
              'MIME::QuotedPrint'     => '3.09',
              'Module::Build::Platform::cygwin'=> '0.360301',
              'Module::CoreList'      => '2.34',
              'Module::Load::Conditional'=> '0.38',
              'PerlIO::scalar'        => '0.08',
              'Scalar::Util'          => '1.23',
              'Scalar::Util::PP'      => '1.23',
              'Socket'                => '1.88',
              'Term::ReadLine'        => '1.06',
              'Unicode::UCD'          => '0.28',
              'XS::APItest'           => '0.19',
              'XS::APItest::KeywordRPN'=> '0.004',
              'charnames'             => '1.08',
              'feature'               => '1.17',
              'threads'               => '1.77_01',
              'threads::shared'       => '1.33',
          },
          removed => {
              'Class::ISA'            => 1,
              'Pod::Plainer'          => 1,
              'Switch'                => 1,
          }
      },
      5.013002 => {
          delta_from => 5.013001,
          changed => {
              'B::Concise'            => '0.79',
              'B::Deparse'            => '0.98',
              'CPAN'                  => '1.94_57',
              'CPAN::Distribution'    => '1.9600',
              'Exporter'              => '5.64_02',
              'Exporter::Heavy'       => '5.64_02',
              'File::Copy'            => '2.19',
              'Hash::Util'            => '0.08',
              'IO::Socket'            => '1.32',
              'Locale::Codes'         => '3.13',
              'Locale::Codes::Country'=> '3.13',
              'Locale::Codes::Currency'=> '3.13',
              'Locale::Codes::Language'=> '3.13',
              'Locale::Codes::Script' => '3.13',
              'Locale::Constants'     => '3.13',
              'Locale::Country'       => '3.13',
              'Locale::Currency'      => '3.13',
              'Locale::Language'      => '3.13',
              'Locale::Script'        => '3.13',
              'Search::Dict'          => '1.03',
              'Socket'                => '1.89',
              'Thread::Semaphore'     => '2.11',
              'UNIVERSAL'             => '1.07',
              'VMS::DCLsym'           => '1.04',
              'mro'                   => '1.03',
              'threads'               => '1.77_02',
              'threads::shared'       => '1.33_01',
          },
          removed => {
          }
      },
      5.013003 => {
          delta_from => 5.013002,
          changed => {
              'App::Prove'            => '3.21',
              'App::Prove::State'     => '3.21',
              'App::Prove::State::Result'=> '3.21',
              'App::Prove::State::Result::Test'=> '3.21',
              'Archive::Extract'      => '0.42',
              'Archive::Tar'          => '1.64',
              'Archive::Tar::Constant'=> '1.64',
              'Archive::Tar::File'    => '1.64',
              'Attribute::Handlers'   => '0.88',
              'CPANPLUS'              => '0.9007',
              'CPANPLUS::Internals'   => '0.9007',
              'CPANPLUS::Shell::Default'=> '0.9007',
              'Compress::Raw::Bzip2'  => '2.027',
              'Compress::Raw::Zlib'   => '2.027_01',
              'Compress::Zlib'        => '2.027',
              'DB'                    => '1.03',
              'Digest::MD5'           => '2.40',
              'Digest::SHA'           => '5.48',
              'Exporter'              => '5.64_03',
              'Exporter::Heavy'       => '5.64_03',
              'ExtUtils::CBuilder'    => '0.2703',
              'ExtUtils::CBuilder::Base'=> '0.2703_01',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.2703',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.2703',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.2703',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.2703',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.2703',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.2703',
              'ExtUtils::CBuilder::Platform::aix'=> '0.2703',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.2703',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.2703',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.2703',
              'ExtUtils::CBuilder::Platform::os2'=> '0.2703',
              'ExtUtils::Manifest'    => '1.58',
              'ExtUtils::ParseXS'     => '2.2206',
              'Fatal'                 => '2.10',
              'File::Basename'        => '2.79',
              'File::Copy'            => '2.20',
              'File::DosGlob'         => '1.02',
              'File::Find'            => '1.17',
              'File::Glob'            => '1.08',
              'File::stat'            => '1.03',
              'I18N::LangTags'        => '0.35_01',
              'I18N::LangTags::List'  => '0.35_01',
              'IO::Compress::Adapter::Bzip2'=> '2.027',
              'IO::Compress::Adapter::Deflate'=> '2.027',
              'IO::Compress::Adapter::Identity'=> '2.027',
              'IO::Compress::Base'    => '2.027',
              'IO::Compress::Base::Common'=> '2.027',
              'IO::Compress::Bzip2'   => '2.027',
              'IO::Compress::Deflate' => '2.027',
              'IO::Compress::Gzip'    => '2.027',
              'IO::Compress::Gzip::Constants'=> '2.027',
              'IO::Compress::RawDeflate'=> '2.027',
              'IO::Compress::Zip'     => '2.027',
              'IO::Compress::Zip::Constants'=> '2.027',
              'IO::Compress::Zlib::Constants'=> '2.027',
              'IO::Compress::Zlib::Extra'=> '2.027',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.027',
              'IO::Uncompress::Adapter::Identity'=> '2.027',
              'IO::Uncompress::Adapter::Inflate'=> '2.027',
              'IO::Uncompress::AnyInflate'=> '2.027',
              'IO::Uncompress::AnyUncompress'=> '2.027',
              'IO::Uncompress::Base'  => '2.027',
              'IO::Uncompress::Bunzip2'=> '2.027',
              'IO::Uncompress::Gunzip'=> '2.027',
              'IO::Uncompress::Inflate'=> '2.027',
              'IO::Uncompress::RawInflate'=> '2.027',
              'IO::Uncompress::Unzip' => '2.027',
              'IPC::Cmd'              => '0.60',
              'IPC::Msg'              => '2.03',
              'IPC::Semaphore'        => '2.03',
              'IPC::SharedMem'        => '2.03',
              'IPC::SysV'             => '2.03',
              'Locale::Maketext'      => '1.15',
              'Locale::Maketext::Guts'=> undef,
              'Locale::Maketext::GutsLoader'=> undef,
              'Module::Build'         => '0.3607',
              'Module::Build::Base'   => '0.3607',
              'Module::Build::Compat' => '0.3607',
              'Module::Build::Config' => '0.3607',
              'Module::Build::Cookbook'=> '0.3607',
              'Module::Build::Dumper' => '0.3607',
              'Module::Build::ModuleInfo'=> '0.3607',
              'Module::Build::Notes'  => '0.3607',
              'Module::Build::PPMMaker'=> '0.3607',
              'Module::Build::Platform::Amiga'=> '0.3607',
              'Module::Build::Platform::Default'=> '0.3607',
              'Module::Build::Platform::EBCDIC'=> '0.3607',
              'Module::Build::Platform::MPEiX'=> '0.3607',
              'Module::Build::Platform::MacOS'=> '0.3607',
              'Module::Build::Platform::RiscOS'=> '0.3607',
              'Module::Build::Platform::Unix'=> '0.3607',
              'Module::Build::Platform::VMS'=> '0.3607',
              'Module::Build::Platform::VOS'=> '0.3607',
              'Module::Build::Platform::Windows'=> '0.3607',
              'Module::Build::Platform::aix'=> '0.3607',
              'Module::Build::Platform::cygwin'=> '0.3607',
              'Module::Build::Platform::darwin'=> '0.3607',
              'Module::Build::Platform::os2'=> '0.3607',
              'Module::Build::PodParser'=> '0.3607',
              'Module::CoreList'      => '2.36',
              'Module::Load'          => '0.18',
              'TAP::Base'             => '3.21',
              'TAP::Formatter::Base'  => '3.21',
              'TAP::Formatter::Color' => '3.21',
              'TAP::Formatter::Console'=> '3.21',
              'TAP::Formatter::Console::ParallelSession'=> '3.21',
              'TAP::Formatter::Console::Session'=> '3.21',
              'TAP::Formatter::File'  => '3.21',
              'TAP::Formatter::File::Session'=> '3.21',
              'TAP::Formatter::Session'=> '3.21',
              'TAP::Harness'          => '3.21',
              'TAP::Object'           => '3.21',
              'TAP::Parser'           => '3.21',
              'TAP::Parser::Aggregator'=> '3.21',
              'TAP::Parser::Grammar'  => '3.21',
              'TAP::Parser::Iterator' => '3.21',
              'TAP::Parser::Iterator::Array'=> '3.21',
              'TAP::Parser::Iterator::Process'=> '3.21',
              'TAP::Parser::Iterator::Stream'=> '3.21',
              'TAP::Parser::IteratorFactory'=> '3.21',
              'TAP::Parser::Multiplexer'=> '3.21',
              'TAP::Parser::Result'   => '3.21',
              'TAP::Parser::Result::Bailout'=> '3.21',
              'TAP::Parser::Result::Comment'=> '3.21',
              'TAP::Parser::Result::Plan'=> '3.21',
              'TAP::Parser::Result::Pragma'=> '3.21',
              'TAP::Parser::Result::Test'=> '3.21',
              'TAP::Parser::Result::Unknown'=> '3.21',
              'TAP::Parser::Result::Version'=> '3.21',
              'TAP::Parser::Result::YAML'=> '3.21',
              'TAP::Parser::ResultFactory'=> '3.21',
              'TAP::Parser::Scheduler'=> '3.21',
              'TAP::Parser::Scheduler::Job'=> '3.21',
              'TAP::Parser::Scheduler::Spinner'=> '3.21',
              'TAP::Parser::Source'   => '3.21',
              'TAP::Parser::SourceHandler'=> '3.21',
              'TAP::Parser::SourceHandler::Executable'=> '3.21',
              'TAP::Parser::SourceHandler::File'=> '3.21',
              'TAP::Parser::SourceHandler::Handle'=> '3.21',
              'TAP::Parser::SourceHandler::Perl'=> '3.21',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.21',
              'TAP::Parser::SourceHandler::pgTAP'=> '3.21',
              'TAP::Parser::Utils'    => '3.21',
              'TAP::Parser::YAMLish::Reader'=> '3.21',
              'TAP::Parser::YAMLish::Writer'=> '3.21',
              'Term::ANSIColor'       => '3.00',
              'Term::ReadLine'        => '1.07',
              'Test::Harness'         => '3.21',
              'Tie::Array'            => '1.04',
              'Time::HiRes'           => '1.9721',
              'Time::Piece'           => '1.20_01',
              'Unicode::Collate'      => '0.53',
              'Unicode::Normalize'    => '1.06',
              'Unicode::UCD'          => '0.29',
              'autodie'               => '2.10',
              'autodie::exception'    => '2.10',
              'autodie::exception::system'=> '2.10',
              'autodie::hints'        => '2.10',
              'blib'                  => '1.05',
              'charnames'             => '1.11',
              'diagnostics'           => '1.20',
              'inc::latest'           => '0.3607',
              'lib'                   => '0.63',
              're'                    => '0.12',
              'threads'               => '1.77_03',
              'threads::shared'       => '1.33_02',
              'vars'                  => '1.02',
              'warnings'              => '1.10',
          },
          removed => {
              'TAP::Parser::Source::Perl'=> 1,
          }
      },
      5.013004 => {
          delta_from => 5.013003,
          changed => {
              'App::Prove'            => '3.22',
              'App::Prove::State'     => '3.22',
              'App::Prove::State::Result'=> '3.22',
              'App::Prove::State::Result::Test'=> '3.22',
              'Archive::Tar'          => '1.68',
              'Archive::Tar::Constant'=> '1.68',
              'Archive::Tar::File'    => '1.68',
              'B::Lint'               => '1.12',
              'B::Lint::Debug'        => '1.12',
              'Carp'                  => '1.18',
              'Carp::Heavy'           => '1.18',
              'Compress::Raw::Bzip2'  => '2.030',
              'Compress::Raw::Zlib'   => '2.030',
              'Compress::Zlib'        => '2.030',
              'ExtUtils::ParseXS'     => '2.2207',
              'File::Spec'            => '3.31_01',
              'I18N::Langinfo'        => '0.04',
              'IO::Compress::Adapter::Bzip2'=> '2.030',
              'IO::Compress::Adapter::Deflate'=> '2.030',
              'IO::Compress::Adapter::Identity'=> '2.030',
              'IO::Compress::Base'    => '2.030',
              'IO::Compress::Base::Common'=> '2.030',
              'IO::Compress::Bzip2'   => '2.030',
              'IO::Compress::Deflate' => '2.030',
              'IO::Compress::Gzip'    => '2.030',
              'IO::Compress::Gzip::Constants'=> '2.030',
              'IO::Compress::RawDeflate'=> '2.030',
              'IO::Compress::Zip'     => '2.030',
              'IO::Compress::Zip::Constants'=> '2.030',
              'IO::Compress::Zlib::Constants'=> '2.030',
              'IO::Compress::Zlib::Extra'=> '2.030',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.030',
              'IO::Uncompress::Adapter::Identity'=> '2.030',
              'IO::Uncompress::Adapter::Inflate'=> '2.030',
              'IO::Uncompress::AnyInflate'=> '2.030',
              'IO::Uncompress::AnyUncompress'=> '2.030',
              'IO::Uncompress::Base'  => '2.030',
              'IO::Uncompress::Bunzip2'=> '2.030',
              'IO::Uncompress::Gunzip'=> '2.030',
              'IO::Uncompress::Inflate'=> '2.030',
              'IO::Uncompress::RawInflate'=> '2.030',
              'IO::Uncompress::Unzip' => '2.030',
              'Module::CoreList'      => '2.37',
              'TAP::Base'             => '3.22',
              'TAP::Formatter::Base'  => '3.22',
              'TAP::Formatter::Color' => '3.22',
              'TAP::Formatter::Console'=> '3.22',
              'TAP::Formatter::Console::ParallelSession'=> '3.22',
              'TAP::Formatter::Console::Session'=> '3.22',
              'TAP::Formatter::File'  => '3.22',
              'TAP::Formatter::File::Session'=> '3.22',
              'TAP::Formatter::Session'=> '3.22',
              'TAP::Harness'          => '3.22',
              'TAP::Object'           => '3.22',
              'TAP::Parser'           => '3.22',
              'TAP::Parser::Aggregator'=> '3.22',
              'TAP::Parser::Grammar'  => '3.22',
              'TAP::Parser::Iterator' => '3.22',
              'TAP::Parser::Iterator::Array'=> '3.22',
              'TAP::Parser::Iterator::Process'=> '3.22',
              'TAP::Parser::Iterator::Stream'=> '3.22',
              'TAP::Parser::IteratorFactory'=> '3.22',
              'TAP::Parser::Multiplexer'=> '3.22',
              'TAP::Parser::Result'   => '3.22',
              'TAP::Parser::Result::Bailout'=> '3.22',
              'TAP::Parser::Result::Comment'=> '3.22',
              'TAP::Parser::Result::Plan'=> '3.22',
              'TAP::Parser::Result::Pragma'=> '3.22',
              'TAP::Parser::Result::Test'=> '3.22',
              'TAP::Parser::Result::Unknown'=> '3.22',
              'TAP::Parser::Result::Version'=> '3.22',
              'TAP::Parser::Result::YAML'=> '3.22',
              'TAP::Parser::ResultFactory'=> '3.22',
              'TAP::Parser::Scheduler'=> '3.22',
              'TAP::Parser::Scheduler::Job'=> '3.22',
              'TAP::Parser::Scheduler::Spinner'=> '3.22',
              'TAP::Parser::Source'   => '3.22',
              'TAP::Parser::SourceHandler'=> '3.22',
              'TAP::Parser::SourceHandler::Executable'=> '3.22',
              'TAP::Parser::SourceHandler::File'=> '3.22',
              'TAP::Parser::SourceHandler::Handle'=> '3.22',
              'TAP::Parser::SourceHandler::Perl'=> '3.22',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.22',
              'TAP::Parser::Utils'    => '3.22',
              'TAP::Parser::YAMLish::Reader'=> '3.22',
              'TAP::Parser::YAMLish::Writer'=> '3.22',
              'Test::Builder'         => '0.96',
              'Test::Builder::Module' => '0.96',
              'Test::Builder::Tester' => '1.20',
              'Test::Builder::Tester::Color'=> '1.20',
              'Test::Harness'         => '3.22',
              'Test::More'            => '0.96',
              'Test::Simple'          => '0.96',
              'Unicode::Collate'      => '0.56',
              'Unicode::Collate::Locale'=> '0.56',
              'XS::APItest'           => '0.20',
              'charnames'             => '1.15',
              'feature'               => '1.18',
          },
          removed => {
              'TAP::Parser::SourceHandler::pgTAP'=> 1,
          }
      },
      5.013005 => {
          delta_from => 5.013004,
          changed => {
              'B::Debug'              => '1.16',
              'CPANPLUS::Dist::Build' => '0.48',
              'CPANPLUS::Dist::Build::Constants'=> '0.48',
              'Data::Dumper'          => '2.128',
              'Encode'                => '2.40',
              'Encode::Guess'         => '2.04',
              'Encode::MIME::Header'  => '2.12',
              'Encode::Unicode::UTF7' => '2.05',
              'Errno'                 => '1.13',
              'ExtUtils::Command::MM' => '6.57_05',
              'ExtUtils::Liblist'     => '6.57_05',
              'ExtUtils::Liblist::Kid'=> '6.5705',
              'ExtUtils::MM'          => '6.57_05',
              'ExtUtils::MM_AIX'      => '6.57_05',
              'ExtUtils::MM_Any'      => '6.57_05',
              'ExtUtils::MM_BeOS'     => '6.57_05',
              'ExtUtils::MM_Cygwin'   => '6.57_05',
              'ExtUtils::MM_DOS'      => '6.5705',
              'ExtUtils::MM_Darwin'   => '6.57_05',
              'ExtUtils::MM_MacOS'    => '6.5705',
              'ExtUtils::MM_NW5'      => '6.57_05',
              'ExtUtils::MM_OS2'      => '6.57_05',
              'ExtUtils::MM_QNX'      => '6.57_05',
              'ExtUtils::MM_UWIN'     => '6.5705',
              'ExtUtils::MM_Unix'     => '6.57_05',
              'ExtUtils::MM_VMS'      => '6.57_05',
              'ExtUtils::MM_VOS'      => '6.57_05',
              'ExtUtils::MM_Win32'    => '6.57_05',
              'ExtUtils::MM_Win95'    => '6.57_05',
              'ExtUtils::MY'          => '6.5705',
              'ExtUtils::MakeMaker'   => '6.57_05',
              'ExtUtils::MakeMaker::Config'=> '6.57_05',
              'ExtUtils::MakeMaker::YAML'=> '1.44',
              'ExtUtils::Mkbootstrap' => '6.57_05',
              'ExtUtils::Mksymlists'  => '6.57_05',
              'ExtUtils::testlib'     => '6.5705',
              'Filter::Simple'        => '0.85',
              'Hash::Util'            => '0.09',
              'Math::BigFloat'        => '1.62',
              'Math::BigInt'          => '1.95',
              'Math::BigInt::Calc'    => '0.54',
              'Math::BigInt::CalcEmu' => '0.06',
              'Math::BigInt::FastCalc'=> '0.22',
              'Math::BigRat'          => '0.26',
              'Module::CoreList'      => '2.39',
              'POSIX'                 => '1.20',
              'PerlIO::scalar'        => '0.09',
              'Safe'                  => '2.28',
              'Test::Builder'         => '0.97_01',
              'Test::Builder::Module' => '0.97_01',
              'Test::Builder::Tester' => '1.21_01',
              'Test::Builder::Tester::Color'=> '1.21_01',
              'Test::More'            => '0.97_01',
              'Test::Simple'          => '0.97_01',
              'Tie::Hash'             => '1.04',
              'Unicode::Collate'      => '0.59',
              'Unicode::Collate::Locale'=> '0.59',
              'XS::APItest'           => '0.21',
              'XS::APItest::KeywordRPN'=> '0.005',
              'XSLoader'              => '0.11',
              'bigint'                => '0.25',
              'bignum'                => '0.25',
              'bigrat'                => '0.25',
              'blib'                  => '1.06',
              'open'                  => '1.08',
              'threads::shared'       => '1.33_03',
              'warnings'              => '1.11',
              'warnings::register'    => '1.02',
          },
          removed => {
          }
      },
      5.013006 => {
          delta_from => 5.013005,
          changed => {
              'Archive::Extract'      => '0.44',
              'B'                     => '1.24',
              'B::Deparse'            => '0.99',
              'CPAN'                  => '1.94_61',
              'CPAN::FTP'             => '5.5005',
              'CPAN::Queue'           => '5.5001',
              'CPAN::Version'         => '5.5001',
              'Carp'                  => '1.19',
              'Carp::Heavy'           => '1.19',
              'Compress::Raw::Bzip2'  => '2.031',
              'Cwd'                   => '3.34',
              'Data::Dumper'          => '2.129',
              'Devel::Peek'           => '1.05',
              'Digest::MD5'           => '2.51',
              'ExtUtils::Constant::Base'=> '0.05',
              'ExtUtils::Constant::ProxySubs'=> '0.07',
              'ExtUtils::Embed'       => '1.29',
              'ExtUtils::XSSymSet'    => '1.2',
              'Fcntl'                 => '1.09',
              'File::DosGlob'         => '1.03',
              'File::Find'            => '1.18',
              'File::Glob'            => '1.09',
              'File::Spec'            => '3.33',
              'File::Spec::Cygwin'    => '3.33',
              'File::Spec::Epoc'      => '3.33',
              'File::Spec::Functions' => '3.33',
              'File::Spec::Mac'       => '3.33',
              'File::Spec::OS2'       => '3.33',
              'File::Spec::Unix'      => '3.33',
              'File::Spec::VMS'       => '3.33',
              'File::Spec::Win32'     => '3.33',
              'GDBM_File'             => '1.11',
              'Hash::Util::FieldHash' => '1.05',
              'I18N::Langinfo'        => '0.06',
              'IPC::Cmd'              => '0.64',
              'IPC::Open3'            => '1.07',
              'Locale::Codes'         => '3.14',
              'Locale::Codes::Country'=> '3.14',
              'Locale::Codes::Currency'=> '3.14',
              'Locale::Codes::Language'=> '3.14',
              'Locale::Codes::Script' => '3.14',
              'Locale::Constants'     => '3.14',
              'Locale::Country'       => '3.14',
              'Locale::Currency'      => '3.14',
              'Locale::Language'      => '3.14',
              'Locale::Maketext'      => '1.16',
              'Locale::Script'        => '3.14',
              'Math::BigFloat'        => '1.63',
              'Math::BigInt'          => '1.97',
              'Math::BigInt::Calc'    => '0.55',
              'Math::BigInt::CalcEmu' => '0.07',
              'Module::CoreList'      => '2.40',
              'NDBM_File'             => '1.09',
              'NEXT'                  => '0.65',
              'ODBM_File'             => '1.08',
              'Opcode'                => '1.16',
              'POSIX'                 => '1.21',
              'PerlIO::encoding'      => '0.13',
              'PerlIO::scalar'        => '0.10',
              'PerlIO::via'           => '0.10',
              'Pod::Man'              => '2.25',
              'Pod::Text'             => '3.15',
              'SDBM_File'             => '1.07',
              'Socket'                => '1.90',
              'Sys::Hostname'         => '1.13',
              'Tie::Hash::NamedCapture'=> '0.07',
              'Unicode::Collate'      => '0.63',
              'Unicode::Collate::Locale'=> '0.63',
              'Unicode::Normalize'    => '1.07',
              'XS::APItest'           => '0.23',
              'XSLoader'              => '0.13',
              'attributes'            => '0.13',
              'charnames'             => '1.16',
              'if'                    => '0.06',
              'mro'                   => '1.04',
              'overload'              => '1.11',
              're'                    => '0.13',
              'sigtrap'               => '1.05',
              'threads'               => '1.81_01',
              'threads::shared'       => '1.34',
          },
          removed => {
              'XS::APItest::KeywordRPN'=> 1,
          }
      },
      5.013007 => {
          delta_from => 5.013006,
          changed => {
              'Archive::Extract'      => '0.46',
              'Archive::Tar'          => '1.72',
              'Archive::Tar::Constant'=> '1.72',
              'Archive::Tar::File'    => '1.72',
              'AutoLoader'            => '5.71',
              'B'                     => '1.26',
              'B::Concise'            => '0.81',
              'B::Deparse'            => '1.01',
              'CGI'                   => '3.50',
              'CPAN'                  => '1.94_62',
              'CPANPLUS'              => '0.9010',
              'CPANPLUS::Dist::Build' => '0.50',
              'CPANPLUS::Dist::Build::Constants'=> '0.50',
              'CPANPLUS::Internals'   => '0.9010',
              'CPANPLUS::Shell::Default'=> '0.9010',
              'Data::Dumper'          => '2.130_01',
              'DynaLoader'            => '1.11',
              'ExtUtils::Constant'    => '0.23',
              'ExtUtils::Constant::ProxySubs'=> '0.08',
              'Fcntl'                 => '1.10',
              'File::Fetch'           => '0.28',
              'File::Glob'            => '1.10',
              'File::stat'            => '1.04',
              'GDBM_File'             => '1.12',
              'Hash::Util'            => '0.10',
              'Hash::Util::FieldHash' => '1.06',
              'I18N::Langinfo'        => '0.07',
              'Locale::Maketext'      => '1.17',
              'Locale::Maketext::Guts'=> '1.17',
              'Locale::Maketext::GutsLoader'=> '1.17',
              'MIME::Base64'          => '3.10',
              'MIME::QuotedPrint'     => '3.10',
              'Math::BigFloat'        => '1.99_01',
              'Math::BigInt'          => '1.99_01',
              'Math::BigInt::Calc'    => '1.99_01',
              'Math::BigInt::CalcEmu' => '1.99_01',
              'Math::BigInt::FastCalc'=> '0.24_01',
              'Math::BigRat'          => '0.26_01',
              'Module::CoreList'      => '2.41',
              'NDBM_File'             => '1.10',
              'ODBM_File'             => '1.09',
              'Opcode'                => '1.17',
              'POSIX'                 => '1.22',
              'Pod::Simple'           => '3.15',
              'Pod::Simple::BlackBox' => '3.15',
              'Pod::Simple::Checker'  => '3.15',
              'Pod::Simple::Debug'    => '3.15',
              'Pod::Simple::DumpAsText'=> '3.15',
              'Pod::Simple::DumpAsXML'=> '3.15',
              'Pod::Simple::HTML'     => '3.15',
              'Pod::Simple::HTMLBatch'=> '3.15',
              'Pod::Simple::LinkSection'=> '3.15',
              'Pod::Simple::Methody'  => '3.15',
              'Pod::Simple::Progress' => '3.15',
              'Pod::Simple::PullParser'=> '3.15',
              'Pod::Simple::PullParserEndToken'=> '3.15',
              'Pod::Simple::PullParserStartToken'=> '3.15',
              'Pod::Simple::PullParserTextToken'=> '3.15',
              'Pod::Simple::PullParserToken'=> '3.15',
              'Pod::Simple::RTF'      => '3.15',
              'Pod::Simple::Search'   => '3.15',
              'Pod::Simple::SimpleTree'=> '3.15',
              'Pod::Simple::Text'     => '3.15',
              'Pod::Simple::TextContent'=> '3.15',
              'Pod::Simple::TiedOutFH'=> '3.15',
              'Pod::Simple::Transcode'=> '3.15',
              'Pod::Simple::TranscodeDumb'=> '3.15',
              'Pod::Simple::TranscodeSmart'=> '3.15',
              'Pod::Simple::XHTML'    => '3.15',
              'Pod::Simple::XMLOutStream'=> '3.15',
              'SDBM_File'             => '1.08',
              'Safe'                  => '2.29',
              'SelfLoader'            => '1.18',
              'Socket'                => '1.91',
              'Storable'              => '2.24',
              'Sys::Hostname'         => '1.14',
              'Unicode'               => '6.0.0',
              'Unicode::Collate'      => '0.67',
              'Unicode::Collate::CJK::Big5'=> '0.65',
              'Unicode::Collate::CJK::GB2312'=> '0.65',
              'Unicode::Collate::CJK::JISX0208'=> '0.64',
              'Unicode::Collate::CJK::Korean'=> '0.66',
              'Unicode::Collate::CJK::Pinyin'=> '0.65',
              'Unicode::Collate::CJK::Stroke'=> '0.65',
              'Unicode::Collate::Locale'=> '0.67',
              'XS::APItest'           => '0.26',
              'XS::Typemap'           => '0.04',
              'charnames'             => '1.17',
              'mro'                   => '1.05',
              'parent'                => '0.224',
              're'                    => '0.14',
              'threads'               => '1.81_02',
          },
          removed => {
          }
      },
      5.013008 => {
          delta_from => 5.013007,
          changed => {
              'Archive::Tar'          => '1.74',
              'Archive::Tar::Constant'=> '1.74',
              'Archive::Tar::File'    => '1.74',
              'B'                     => '1.27',
              'B::Concise'            => '0.82',
              'B::Deparse'            => '1.02',
              'Carp::Heavy'           => '1.17',
              'Cwd'                   => '3.35',
              'Data::Dumper'          => '2.130_02',
              'Devel::Peek'           => '1.06',
              'Devel::SelfStubber'    => '1.05',
              'Digest::SHA'           => '5.50',
              'Dumpvalue'             => '1.15',
              'DynaLoader'            => '1.12',
              'Env'                   => '1.02',
              'Exporter::Heavy'       => '5.64_01',
              'ExtUtils::CBuilder'    => '0.280201',
              'ExtUtils::CBuilder::Base'=> '0.280201',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280201',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280201',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280201',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280201',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280201',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280201',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280201',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280201',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280201',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280201',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280201',
              'ExtUtils::Constant::Utils'=> '0.03',
              'ExtUtils::Embed'       => '1.30',
              'ExtUtils::ParseXS'     => '2.2208',
              'Fatal'                 => '2.1001',
              'Fcntl'                 => '1.11',
              'File::CheckTree'       => '4.41',
              'File::Glob'            => '1.11',
              'GDBM_File'             => '1.13',
              'Hash::Util::FieldHash' => '1.07',
              'I18N::Collate'         => '1.02',
              'IO'                    => '1.25_03',
              'IPC::Cmd'              => '0.66',
              'IPC::Open3'            => '1.08',
              'Locale::Codes'         => '3.15',
              'Locale::Codes::Country'=> '3.15',
              'Locale::Codes::Currency'=> '3.15',
              'Locale::Codes::Language'=> '3.15',
              'Locale::Codes::Script' => '3.15',
              'Locale::Constants'     => '3.15',
              'Locale::Country'       => '3.15',
              'Locale::Currency'      => '3.15',
              'Locale::Language'      => '3.15',
              'Locale::Script'        => '3.15',
              'MIME::Base64'          => '3.13',
              'MIME::QuotedPrint'     => '3.13',
              'Math::BigFloat'        => '1.99_02',
              'Math::BigInt'          => '1.99_02',
              'Math::BigInt::Calc'    => '1.99_02',
              'Math::BigInt::CalcEmu' => '1.99_02',
              'Memoize'               => '1.02',
              'Memoize::AnyDBM_File'  => '1.02',
              'Memoize::Expire'       => '1.02',
              'Memoize::ExpireFile'   => '1.02',
              'Memoize::ExpireTest'   => '1.02',
              'Memoize::NDBM_File'    => '1.02',
              'Memoize::SDBM_File'    => '1.02',
              'Memoize::Storable'     => '1.02',
              'Module::CoreList'      => '2.43',
              'NDBM_File'             => '1.11',
              'Net::Ping'             => '2.37',
              'ODBM_File'             => '1.10',
              'Opcode'                => '1.18',
              'POSIX'                 => '1.23',
              'PerlIO::encoding'      => '0.14',
              'PerlIO::scalar'        => '0.11',
              'PerlIO::via'           => '0.11',
              'SDBM_File'             => '1.09',
              'Socket'                => '1.92',
              'Storable'              => '2.25',
              'Time::HiRes'           => '1.9721_01',
              'Unicode::Collate'      => '0.6801',
              'Unicode::Collate::Locale'=> '0.68',
              'Unicode::Normalize'    => '1.08',
              'Unicode::UCD'          => '0.30',
              'Win32'                 => '0.41',
              'XS::APItest'           => '0.27',
              'autodie'               => '2.1001',
              'autodie::exception'    => '2.1001',
              'autodie::exception::system'=> '2.1001',
              'autodie::hints'        => '2.1001',
              'feature'               => '1.19',
              'if'                    => '0.0601',
              'mro'                   => '1.06',
              'overload'              => '1.12',
              're'                    => '0.15',
              'threads'               => '1.81_03',
              'threads::shared'       => '1.35',
              'version'               => '0.86',
          },
          removed => {
          }
      },
      5.013009 => {
          delta_from => 5.013008,
          changed => {
              'Archive::Extract'      => '0.48',
              'Archive::Tar'          => '1.76',
              'Archive::Tar::Constant'=> '1.76',
              'Archive::Tar::File'    => '1.76',
              'B::Concise'            => '0.83',
              'B::Deparse'            => '1.03',
              'B::Lint'               => '1.13',
              'Benchmark'             => '1.12',
              'CGI'                   => '3.51',
              'CGI::Carp'             => '3.51',
              'CGI::Cookie'           => '1.30',
              'CGI::Push'             => '1.05',
              'CGI::Util'             => '3.51',
              'CPAN'                  => '1.94_63',
              'CPAN::HTTP::Client'    => '1.94',
              'CPAN::HTTP::Credentials'=> '1.94',
              'CPAN::Meta::YAML'      => '0.003',
              'CPANPLUS'              => '0.9011',
              'CPANPLUS::Dist::Build' => '0.52',
              'CPANPLUS::Dist::Build::Constants'=> '0.52',
              'CPANPLUS::Internals'   => '0.9011',
              'CPANPLUS::Shell::Default'=> '0.9011',
              'Carp::Heavy'           => '1.19',
              'Compress::Raw::Bzip2'  => '2.033',
              'Compress::Raw::Zlib'   => '2.033',
              'Compress::Zlib'        => '2.033',
              'Cwd'                   => '3.36',
              'DBM_Filter'            => '0.04',
              'DB_File'               => '1.821',
              'Devel::Peek'           => '1.07',
              'DirHandle'             => '1.04',
              'Dumpvalue'             => '1.16',
              'Encode'                => '2.42',
              'Encode::Alias'         => '2.13',
              'Encode::MIME::Header'  => '2.13',
              'Exporter::Heavy'       => '5.64_03',
              'ExtUtils::Install'     => '1.56',
              'ExtUtils::ParseXS'     => '2.2209',
              'File::Basename'        => '2.80',
              'File::Copy'            => '2.21',
              'File::DosGlob'         => '1.04',
              'File::Fetch'           => '0.32',
              'File::Find'            => '1.19',
              'File::Spec::Mac'       => '3.34',
              'File::Spec::VMS'       => '3.34',
              'File::stat'            => '1.05',
              'HTTP::Tiny'            => '0.009',
              'Hash::Util::FieldHash' => '1.08',
              'IO::Compress::Adapter::Bzip2'=> '2.033',
              'IO::Compress::Adapter::Deflate'=> '2.033',
              'IO::Compress::Adapter::Identity'=> '2.033',
              'IO::Compress::Base'    => '2.033',
              'IO::Compress::Base::Common'=> '2.033',
              'IO::Compress::Bzip2'   => '2.033',
              'IO::Compress::Deflate' => '2.033',
              'IO::Compress::Gzip'    => '2.033',
              'IO::Compress::Gzip::Constants'=> '2.033',
              'IO::Compress::RawDeflate'=> '2.033',
              'IO::Compress::Zip'     => '2.033',
              'IO::Compress::Zip::Constants'=> '2.033',
              'IO::Compress::Zlib::Constants'=> '2.033',
              'IO::Compress::Zlib::Extra'=> '2.033',
              'IO::Handle'            => '1.29',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.033',
              'IO::Uncompress::Adapter::Identity'=> '2.033',
              'IO::Uncompress::Adapter::Inflate'=> '2.033',
              'IO::Uncompress::AnyInflate'=> '2.033',
              'IO::Uncompress::AnyUncompress'=> '2.033',
              'IO::Uncompress::Base'  => '2.033',
              'IO::Uncompress::Bunzip2'=> '2.033',
              'IO::Uncompress::Gunzip'=> '2.033',
              'IO::Uncompress::Inflate'=> '2.033',
              'IO::Uncompress::RawInflate'=> '2.033',
              'IO::Uncompress::Unzip' => '2.033',
              'IPC::Cmd'              => '0.68',
              'IPC::Open3'            => '1.09',
              'JSON::PP'              => '2.27103',
              'JSON::PP::Boolean'     => undef,
              'Locale::Maketext'      => '1.18',
              'Log::Message'          => '0.04',
              'Log::Message::Config'  => '0.04',
              'Log::Message::Handlers'=> '0.04',
              'Log::Message::Item'    => '0.04',
              'Log::Message::Simple'  => '0.08',
              'Math::BigFloat'        => '1.99_03',
              'Math::BigInt'          => '1.99_03',
              'Math::BigInt::Calc'    => '1.99_03',
              'Math::BigInt::FastCalc'=> '0.24_02',
              'Math::BigRat'          => '0.26_02',
              'Module::CoreList'      => '2.42_01',
              'Module::Load::Conditional'=> '0.40',
              'Module::Metadata'      => '1.000003',
              'Net::Ping'             => '2.38',
              'OS2::Process'          => '1.05',
              'Object::Accessor'      => '0.38',
              'POSIX'                 => '1.24',
              'Params::Check'         => '0.28',
              'Perl::OSType'          => '1.002',
              'Pod::LaTeX'            => '0.59',
              'Pod::Perldoc'          => '3.15_03',
              'Socket'                => '1.93',
              'Storable'              => '2.26',
              'Sys::Hostname'         => '1.15',
              'Term::UI'              => '0.24',
              'Thread::Queue'         => '2.12',
              'Thread::Semaphore'     => '2.12',
              'Time::Local'           => '1.2000',
              'UNIVERSAL'             => '1.08',
              'Unicode::Normalize'    => '1.10',
              'Win32'                 => '0.44',
              'bigint'                => '0.26',
              'bignum'                => '0.26',
              'bigrat'                => '0.26',
              'charnames'             => '1.18',
              'diagnostics'           => '1.21',
              're'                    => '0.16',
              'threads'               => '1.83',
              'threads::shared'       => '1.36',
              'version'               => '0.88',
          },
          removed => {
          }
      },
      5.01301 => {
          delta_from => 5.013009,
          changed => {
              'Attribute::Handlers'   => '0.89',
              'B'                     => '1.28',
              'B::Showlex'            => '1.03',
              'CGI'                   => '3.52',
              'CPAN'                  => '1.94_65',
              'CPAN::Distribution'    => '1.9601',
              'CPAN::FTP::netrc'      => '1.01',
              'CPAN::FirstTime'       => '5.5303',
              'CPAN::HandleConfig'    => '5.5003',
              'CPAN::Meta'            => '2.110440',
              'CPAN::Meta::Converter' => '2.110440',
              'CPAN::Meta::Feature'   => '2.110440',
              'CPAN::Meta::History'   => '2.110440',
              'CPAN::Meta::Prereqs'   => '2.110440',
              'CPAN::Meta::Spec'      => '2.110440',
              'CPAN::Meta::Validator' => '2.110440',
              'CPAN::Shell'           => '5.5002',
              'CPANPLUS'              => '0.9101',
              'CPANPLUS::Internals'   => '0.9101',
              'CPANPLUS::Shell::Default'=> '0.9101',
              'Carp'                  => '1.20',
              'Carp::Heavy'           => '1.20',
              'Cwd'                   => '3.37',
              'Devel::DProf'          => '20110217.00',
              'DynaLoader'            => '1.13',
              'ExtUtils::CBuilder'    => '0.280202',
              'ExtUtils::CBuilder::Base'=> '0.280202',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280202',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280202',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280202',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280202',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280202',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280202',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280202',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280202',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280202',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280202',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280202',
              'File::Copy'            => '2.22',
              'Filter::Simple'        => '0.86',
              'HTTP::Tiny'            => '0.010',
              'I18N::LangTags::Detect'=> '1.05',
              'IO::Select'            => '1.18',
              'IPC::Cmd'              => '0.70',
              'Locale::Maketext'      => '1.19',
              'Math::BigFloat'        => '1.992',
              'Math::BigInt'          => '1.992',
              'Math::BigInt::Calc'    => '1.992',
              'Math::BigInt::CalcEmu' => '1.992',
              'Module::Build'         => '0.37_05',
              'Module::Build::Base'   => '0.37_05',
              'Module::Build::Compat' => '0.37_05',
              'Module::Build::Config' => '0.37_05',
              'Module::Build::Cookbook'=> '0.37_05',
              'Module::Build::Dumper' => '0.37_05',
              'Module::Build::ModuleInfo'=> '0.37_05',
              'Module::Build::Notes'  => '0.37_05',
              'Module::Build::PPMMaker'=> '0.37_05',
              'Module::Build::Platform::Amiga'=> '0.37_05',
              'Module::Build::Platform::Default'=> '0.37_05',
              'Module::Build::Platform::EBCDIC'=> '0.37_05',
              'Module::Build::Platform::MPEiX'=> '0.37_05',
              'Module::Build::Platform::MacOS'=> '0.37_05',
              'Module::Build::Platform::RiscOS'=> '0.37_05',
              'Module::Build::Platform::Unix'=> '0.37_05',
              'Module::Build::Platform::VMS'=> '0.37_05',
              'Module::Build::Platform::VOS'=> '0.37_05',
              'Module::Build::Platform::Windows'=> '0.37_05',
              'Module::Build::Platform::aix'=> '0.37_05',
              'Module::Build::Platform::cygwin'=> '0.37_05',
              'Module::Build::Platform::darwin'=> '0.37_05',
              'Module::Build::Platform::os2'=> '0.37_05',
              'Module::Build::PodParser'=> '0.37_05',
              'Module::Build::Version'=> '0.87',
              'Module::Build::YAML'   => '1.41',
              'Module::CoreList'      => '2.45',
              'Module::Load::Conditional'=> '0.44',
              'Module::Metadata'      => '1.000004',
              'OS2::Process'          => '1.06',
              'Parse::CPAN::Meta'     => '1.4401',
              'Pod::Html'             => '1.1',
              'Socket'                => '1.94',
              'Term::UI'              => '0.26',
              'Unicode::Collate'      => '0.72',
              'Unicode::Collate::Locale'=> '0.71',
              'Unicode::UCD'          => '0.31',
              'VMS::DCLsym'           => '1.05',
              'Version::Requirements' => '0.101020',
              'bigrat'                => '0.27',
              'deprecate'             => '0.02',
              'diagnostics'           => '1.22',
              'inc::latest'           => '0.37_05',
              'overload'              => '1.13',
              're'                    => '0.17',
              'utf8'                  => '1.09',
              'warnings'              => '1.12',
          },
          removed => {
          }
      },
      5.013011 => {
          delta_from => 5.01301,
          changed => {
              'App::Prove'            => '3.23',
              'App::Prove::State'     => '3.23',
              'App::Prove::State::Result'=> '3.23',
              'App::Prove::State::Result::Test'=> '3.23',
              'B'                     => '1.29',
              'CPAN'                  => '1.9600',
              'CPAN::Author'          => '5.5001',
              'CPAN::CacheMgr'        => '5.5001',
              'CPAN::Distribution'    => '1.9602',
              'CPAN::Exception::blocked_urllist'=> '1.001',
              'CPAN::HTTP::Client'    => '1.9600',
              'CPAN::HTTP::Credentials'=> '1.9600',
              'CPAN::Index'           => '1.9600',
              'CPAN::LWP::UserAgent'  => '1.9600',
              'CPAN::Mirrors'         => '1.9600',
              'CPAN::Module'          => '5.5001',
              'CPANPLUS'              => '0.9103',
              'CPANPLUS::Dist::Build' => '0.54',
              'CPANPLUS::Dist::Build::Constants'=> '0.54',
              'CPANPLUS::Internals'   => '0.9103',
              'CPANPLUS::Shell::Default'=> '0.9103',
              'Cwd'                   => '3.36',
              'Devel::DProf'          => '20110228.00',
              'Digest::SHA'           => '5.61',
              'ExtUtils::Command'     => '1.17',
              'File::Basename'        => '2.81',
              'File::Copy'            => '2.21',
              'File::Glob'            => '1.12',
              'GDBM_File'             => '1.14',
              'HTTP::Tiny'            => '0.011',
              'Hash::Util'            => '0.11',
              'Hash::Util::FieldHash' => '1.09',
              'I18N::Langinfo'        => '0.08',
              'IO'                    => '1.25_04',
              'IO::Dir'               => '1.08',
              'IO::File'              => '1.15',
              'IO::Handle'            => '1.30',
              'IO::Pipe'              => '1.14',
              'IO::Poll'              => '0.08',
              'IO::Select'            => '1.20',
              'JSON::PP'              => '2.27105',
              'Locale::Codes'         => '3.16',
              'Locale::Codes::Country'=> '3.16',
              'Locale::Codes::Currency'=> '3.16',
              'Locale::Codes::Language'=> '3.16',
              'Locale::Codes::Script' => '3.16',
              'Locale::Constants'     => '3.16',
              'Locale::Country'       => '3.16',
              'Locale::Currency'      => '3.16',
              'Locale::Language'      => '3.16',
              'Locale::Script'        => '3.16',
              'Math::BigFloat'        => '1.993',
              'Math::BigInt'          => '1.994',
              'Math::BigInt::Calc'    => '1.993',
              'Math::BigInt::CalcEmu' => '1.993',
              'Math::BigInt::FastCalc'=> '0.28',
              'Module::Build'         => '0.3800',
              'Module::Build::Base'   => '0.3800',
              'Module::Build::Compat' => '0.3800',
              'Module::Build::Config' => '0.3800',
              'Module::Build::Cookbook'=> '0.3800',
              'Module::Build::Dumper' => '0.3800',
              'Module::Build::ModuleInfo'=> '0.3800',
              'Module::Build::Notes'  => '0.3800',
              'Module::Build::PPMMaker'=> '0.3800',
              'Module::Build::Platform::Amiga'=> '0.3800',
              'Module::Build::Platform::Default'=> '0.3800',
              'Module::Build::Platform::EBCDIC'=> '0.3800',
              'Module::Build::Platform::MPEiX'=> '0.3800',
              'Module::Build::Platform::MacOS'=> '0.3800',
              'Module::Build::Platform::RiscOS'=> '0.3800',
              'Module::Build::Platform::Unix'=> '0.3800',
              'Module::Build::Platform::VMS'=> '0.3800',
              'Module::Build::Platform::VOS'=> '0.3800',
              'Module::Build::Platform::Windows'=> '0.3800',
              'Module::Build::Platform::aix'=> '0.3800',
              'Module::Build::Platform::cygwin'=> '0.3800',
              'Module::Build::Platform::darwin'=> '0.3800',
              'Module::Build::Platform::os2'=> '0.3800',
              'Module::Build::PodParser'=> '0.3800',
              'Module::CoreList'      => '2.46',
              'NDBM_File'             => '1.12',
              'Pod::Simple'           => '3.16',
              'Pod::Simple::BlackBox' => '3.16',
              'Pod::Simple::Checker'  => '3.16',
              'Pod::Simple::Debug'    => '3.16',
              'Pod::Simple::DumpAsText'=> '3.16',
              'Pod::Simple::DumpAsXML'=> '3.16',
              'Pod::Simple::HTML'     => '3.16',
              'Pod::Simple::HTMLBatch'=> '3.16',
              'Pod::Simple::LinkSection'=> '3.16',
              'Pod::Simple::Methody'  => '3.16',
              'Pod::Simple::Progress' => '3.16',
              'Pod::Simple::PullParser'=> '3.16',
              'Pod::Simple::PullParserEndToken'=> '3.16',
              'Pod::Simple::PullParserStartToken'=> '3.16',
              'Pod::Simple::PullParserTextToken'=> '3.16',
              'Pod::Simple::PullParserToken'=> '3.16',
              'Pod::Simple::RTF'      => '3.16',
              'Pod::Simple::Search'   => '3.16',
              'Pod::Simple::SimpleTree'=> '3.16',
              'Pod::Simple::Text'     => '3.16',
              'Pod::Simple::TextContent'=> '3.16',
              'Pod::Simple::TiedOutFH'=> '3.16',
              'Pod::Simple::Transcode'=> '3.16',
              'Pod::Simple::TranscodeDumb'=> '3.16',
              'Pod::Simple::TranscodeSmart'=> '3.16',
              'Pod::Simple::XHTML'    => '3.16',
              'Pod::Simple::XMLOutStream'=> '3.16',
              'Storable'              => '2.27',
              'Sys::Hostname'         => '1.16',
              'TAP::Base'             => '3.23',
              'TAP::Formatter::Base'  => '3.23',
              'TAP::Formatter::Color' => '3.23',
              'TAP::Formatter::Console'=> '3.23',
              'TAP::Formatter::Console::ParallelSession'=> '3.23',
              'TAP::Formatter::Console::Session'=> '3.23',
              'TAP::Formatter::File'  => '3.23',
              'TAP::Formatter::File::Session'=> '3.23',
              'TAP::Formatter::Session'=> '3.23',
              'TAP::Harness'          => '3.23',
              'TAP::Object'           => '3.23',
              'TAP::Parser'           => '3.23',
              'TAP::Parser::Aggregator'=> '3.23',
              'TAP::Parser::Grammar'  => '3.23',
              'TAP::Parser::Iterator' => '3.23',
              'TAP::Parser::Iterator::Array'=> '3.23',
              'TAP::Parser::Iterator::Process'=> '3.23',
              'TAP::Parser::Iterator::Stream'=> '3.23',
              'TAP::Parser::IteratorFactory'=> '3.23',
              'TAP::Parser::Multiplexer'=> '3.23',
              'TAP::Parser::Result'   => '3.23',
              'TAP::Parser::Result::Bailout'=> '3.23',
              'TAP::Parser::Result::Comment'=> '3.23',
              'TAP::Parser::Result::Plan'=> '3.23',
              'TAP::Parser::Result::Pragma'=> '3.23',
              'TAP::Parser::Result::Test'=> '3.23',
              'TAP::Parser::Result::Unknown'=> '3.23',
              'TAP::Parser::Result::Version'=> '3.23',
              'TAP::Parser::Result::YAML'=> '3.23',
              'TAP::Parser::ResultFactory'=> '3.23',
              'TAP::Parser::Scheduler'=> '3.23',
              'TAP::Parser::Scheduler::Job'=> '3.23',
              'TAP::Parser::Scheduler::Spinner'=> '3.23',
              'TAP::Parser::Source'   => '3.23',
              'TAP::Parser::SourceHandler'=> '3.23',
              'TAP::Parser::SourceHandler::Executable'=> '3.23',
              'TAP::Parser::SourceHandler::File'=> '3.23',
              'TAP::Parser::SourceHandler::Handle'=> '3.23',
              'TAP::Parser::SourceHandler::Perl'=> '3.23',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.23',
              'TAP::Parser::Utils'    => '3.23',
              'TAP::Parser::YAMLish::Reader'=> '3.23',
              'TAP::Parser::YAMLish::Writer'=> '3.23',
              'Test::Builder'         => '0.98',
              'Test::Builder::Module' => '0.98',
              'Test::Builder::Tester' => '1.22',
              'Test::Builder::Tester::Color'=> '1.22',
              'Test::Harness'         => '3.23',
              'Test::More'            => '0.98',
              'Test::Simple'          => '0.98',
              'Tie::Hash::NamedCapture'=> '0.08',
              'Tie::RefHash'          => '1.39',
              'Unicode::Collate'      => '0.73',
              'Unicode::Collate::Locale'=> '0.73',
              'Unicode::UCD'          => '0.32',
              'XS::Typemap'           => '0.05',
              'attributes'            => '0.14',
              'base'                  => '2.16',
              'inc::latest'           => '0.3800',
              'mro'                   => '1.07',
              'parent'                => '0.225',
          },
          removed => {
          }
      },
      5.014 => {
          delta_from => 5.013011,
          changed => {
              'ExtUtils::CBuilder'    => '0.280203',
              'ExtUtils::CBuilder::Base'=> '0.280203',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280203',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280203',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280203',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280203',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280203',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280203',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280203',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280203',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280203',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280203',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280203',
              'ExtUtils::ParseXS'     => '2.2210',
              'File::Basename'        => '2.82',
              'HTTP::Tiny'            => '0.012',
              'IO::Handle'            => '1.31',
              'Module::CoreList'      => '2.49',
              'PerlIO'                => '1.07',
              'Pod::Html'             => '1.11',
              'XS::APItest'           => '0.28',
              'bigint'                => '0.27',
              'bignum'                => '0.27',
              'bigrat'                => '0.28',
              'constant'              => '1.21',
              'feature'               => '1.20',
              're'                    => '0.18',
              'threads::shared'       => '1.37',
          },
          removed => {
          }
      },
      5.014001 => {
          delta_from => 5.014,
          changed => {
              'B::Deparse'            => '1.04',
              'Module::CoreList'      => '2.49_01',
              'Pod::Perldoc'          => '3.15_04',
          },
          removed => {
          }
      },
      5.014002 => {
          delta_from => 5.014001,
          changed => {
              'CPAN'                  => '1.9600_01',
              'CPAN::Distribution'    => '1.9602_01',
              'Devel::DProf::dprof::V'=> undef,
              'Encode'                => '2.42_01',
              'File::Glob'            => '1.13',
              'Module::CoreList'      => '2.49_02',
              'PerlIO::scalar'        => '0.11_01',
              'Time::Piece::Seconds'  => undef,
          },
          removed => {
          }
      },
      5.014003 => {
          delta_from => 5.014002,
          changed => {
              'Digest'                => '1.16_01',
              'IPC::Open3'            => '1.09_01',
              'Module::CoreList'      => '2.49_04',
          },
          removed => {
          }
      },
      5.014004 => {
          delta_from => 5.014003,
          changed => {
              'Encode'                => '2.42_02',
              'IPC::Open3'            => '1.0901',
              'Module::CoreList'      => '2.49_06',
          },
          removed => {
          }
      },
      5.015 => {
          delta_from => 5.014001,
          changed => {
              'Archive::Extract'      => '0.52',
              'Attribute::Handlers'   => '0.91',
              'B'                     => '1.30',
              'B::Concise'            => '0.84',
              'B::Deparse'            => '1.05',
              'Benchmark'             => '1.13',
              'CGI'                   => '3.54',
              'CGI::Util'             => '3.53',
              'CPAN::Meta'            => '2.110930',
              'CPAN::Meta::Converter' => '2.110930',
              'CPAN::Meta::Feature'   => '2.110930',
              'CPAN::Meta::History'   => '2.110930',
              'CPAN::Meta::Prereqs'   => '2.110930',
              'CPAN::Meta::Spec'      => '2.110930',
              'CPAN::Meta::Validator' => '2.110930',
              'CPANPLUS'              => '0.9105',
              'CPANPLUS::Dist::Build' => '0.56',
              'CPANPLUS::Dist::Build::Constants'=> '0.56',
              'CPANPLUS::Internals'   => '0.9105',
              'CPANPLUS::Shell::Default'=> '0.9105',
              'Compress::Raw::Bzip2'  => '2.035',
              'Compress::Raw::Zlib'   => '2.035',
              'Compress::Zlib'        => '2.035',
              'DB_File'               => '1.822',
              'Data::Dumper'          => '2.131',
              'Devel::Peek'           => '1.08',
              'Digest::SHA'           => '5.62',
              'Encode'                => '2.43',
              'Encode::Alias'         => '2.14',
              'ExtUtils::CBuilder'    => '0.280204',
              'ExtUtils::CBuilder::Base'=> '0.280204',
              'Fatal'                 => '2.10',
              'File::Spec::Win32'     => '3.34',
              'Filter::Simple'        => '0.87',
              'Filter::Util::Call'    => '1.39',
              'FindBin'               => '1.51',
              'Hash::Util::FieldHash' => '1.10',
              'I18N::LangTags'        => '0.36',
              'IO::Compress::Adapter::Bzip2'=> '2.035',
              'IO::Compress::Adapter::Deflate'=> '2.035',
              'IO::Compress::Adapter::Identity'=> '2.035',
              'IO::Compress::Base'    => '2.035',
              'IO::Compress::Base::Common'=> '2.035',
              'IO::Compress::Bzip2'   => '2.035',
              'IO::Compress::Deflate' => '2.035',
              'IO::Compress::Gzip'    => '2.035',
              'IO::Compress::Gzip::Constants'=> '2.035',
              'IO::Compress::RawDeflate'=> '2.035',
              'IO::Compress::Zip'     => '2.035',
              'IO::Compress::Zip::Constants'=> '2.035',
              'IO::Compress::Zlib::Constants'=> '2.035',
              'IO::Compress::Zlib::Extra'=> '2.035',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.035',
              'IO::Uncompress::Adapter::Identity'=> '2.035',
              'IO::Uncompress::Adapter::Inflate'=> '2.035',
              'IO::Uncompress::AnyInflate'=> '2.035',
              'IO::Uncompress::AnyUncompress'=> '2.035',
              'IO::Uncompress::Base'  => '2.035',
              'IO::Uncompress::Bunzip2'=> '2.035',
              'IO::Uncompress::Gunzip'=> '2.035',
              'IO::Uncompress::Inflate'=> '2.035',
              'IO::Uncompress::RawInflate'=> '2.035',
              'IO::Uncompress::Unzip' => '2.035',
              'IPC::Open2'            => '1.04',
              'IPC::Open3'            => '1.11',
              'JSON::PP'              => '2.27200',
              'Math::BigFloat'        => '1.994',
              'Math::BigInt'          => '1.995',
              'Math::Complex'         => '1.57',
              'Math::Trig'            => '1.21',
              'Module::CoreList'      => '2.51',
              'ODBM_File'             => '1.11',
              'Object::Accessor'      => '0.42',
              'Opcode'                => '1.19',
              'PerlIO::encoding'      => '0.15',
              'PerlIO::scalar'        => '0.12',
              'Pod::Perldoc'          => '3.15_05',
              'Storable'              => '2.28',
              'Sys::Syslog'           => '0.29',
              'Time::HiRes'           => '1.9722',
              'Unicode::Collate'      => '0.76',
              'Unicode::Collate::CJK::Pinyin'=> '0.76',
              'Unicode::Collate::CJK::Stroke'=> '0.76',
              'Unicode::Collate::Locale'=> '0.76',
              'Unicode::Normalize'    => '1.12',
              'XS::APItest'           => '0.29',
              'XSLoader'              => '0.15',
              'autodie'               => '2.10',
              'autodie::exception'    => '2.10',
              'autodie::exception::system'=> '2.10',
              'autodie::hints'        => '2.10',
              'base'                  => '2.17',
              'charnames'             => '1.22',
              'constant'              => '1.22',
              'feature'               => '1.21',
              'mro'                   => '1.08',
              'overload'              => '1.14',
              'threads::shared'       => '1.38',
              'vmsish'                => '1.03',
          },
          removed => {
              'Devel::DProf'          => 1,
              'Shell'                 => 1,
          }
      },
      5.015001 => {
          delta_from => 5.015,
          changed => {
              'B::Deparse'            => '1.06',
              'CGI'                   => '3.55',
              'CPAN::Meta'            => '2.110930001',
              'CPAN::Meta::Converter' => '2.110930001',
              'CPANPLUS'              => '0.9108',
              'CPANPLUS::Internals'   => '0.9108',
              'CPANPLUS::Shell::Default'=> '0.9108',
              'Carp'                  => '1.21',
              'Carp::Heavy'           => '1.21',
              'Compress::Raw::Bzip2'  => '2.037',
              'Compress::Raw::Zlib'   => '2.037',
              'Compress::Zlib'        => '2.037',
              'Cwd'                   => '3.37',
              'Env'                   => '1.03',
              'ExtUtils::Command::MM' => '6.58',
              'ExtUtils::Liblist'     => '6.58',
              'ExtUtils::Liblist::Kid'=> '6.58',
              'ExtUtils::MM'          => '6.58',
              'ExtUtils::MM_AIX'      => '6.58',
              'ExtUtils::MM_Any'      => '6.58',
              'ExtUtils::MM_BeOS'     => '6.58',
              'ExtUtils::MM_Cygwin'   => '6.58',
              'ExtUtils::MM_DOS'      => '6.58',
              'ExtUtils::MM_Darwin'   => '6.58',
              'ExtUtils::MM_MacOS'    => '6.58',
              'ExtUtils::MM_NW5'      => '6.58',
              'ExtUtils::MM_OS2'      => '6.58',
              'ExtUtils::MM_QNX'      => '6.58',
              'ExtUtils::MM_UWIN'     => '6.58',
              'ExtUtils::MM_Unix'     => '6.58',
              'ExtUtils::MM_VMS'      => '6.58',
              'ExtUtils::MM_VOS'      => '6.58',
              'ExtUtils::MM_Win32'    => '6.58',
              'ExtUtils::MM_Win95'    => '6.58',
              'ExtUtils::MY'          => '6.58',
              'ExtUtils::MakeMaker'   => '6.58',
              'ExtUtils::MakeMaker::Config'=> '6.58',
              'ExtUtils::Mkbootstrap' => '6.58',
              'ExtUtils::Mksymlists'  => '6.58',
              'ExtUtils::ParseXS'     => '3.00_01',
              'ExtUtils::ParseXS::Constants'=> undef,
              'ExtUtils::ParseXS::CountLines'=> undef,
              'ExtUtils::ParseXS::Utilities'=> undef,
              'ExtUtils::Typemaps'    => '1.00',
              'ExtUtils::Typemaps::InputMap'=> undef,
              'ExtUtils::Typemaps::OutputMap'=> undef,
              'ExtUtils::Typemaps::Type'=> '0.05',
              'ExtUtils::testlib'     => '6.58',
              'File::Basename'        => '2.83',
              'File::Find'            => '1.20',
              'HTTP::Tiny'            => '0.013',
              'I18N::Langinfo'        => '0.08_02',
              'IO::Compress::Adapter::Bzip2'=> '2.037',
              'IO::Compress::Adapter::Deflate'=> '2.037',
              'IO::Compress::Adapter::Identity'=> '2.037',
              'IO::Compress::Base'    => '2.037',
              'IO::Compress::Base::Common'=> '2.037',
              'IO::Compress::Bzip2'   => '2.037',
              'IO::Compress::Deflate' => '2.037',
              'IO::Compress::Gzip'    => '2.037',
              'IO::Compress::Gzip::Constants'=> '2.037',
              'IO::Compress::RawDeflate'=> '2.037',
              'IO::Compress::Zip'     => '2.037',
              'IO::Compress::Zip::Constants'=> '2.037',
              'IO::Compress::Zlib::Constants'=> '2.037',
              'IO::Compress::Zlib::Extra'=> '2.037',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.037',
              'IO::Uncompress::Adapter::Identity'=> '2.037',
              'IO::Uncompress::Adapter::Inflate'=> '2.037',
              'IO::Uncompress::AnyInflate'=> '2.037',
              'IO::Uncompress::AnyUncompress'=> '2.037',
              'IO::Uncompress::Base'  => '2.037',
              'IO::Uncompress::Bunzip2'=> '2.037',
              'IO::Uncompress::Gunzip'=> '2.037',
              'IO::Uncompress::Inflate'=> '2.037',
              'IO::Uncompress::RawInflate'=> '2.037',
              'IO::Uncompress::Unzip' => '2.037',
              'IPC::Cmd'              => '0.72',
              'Locale::Codes'         => '3.17',
              'Locale::Codes::Constants'=> '3.17',
              'Locale::Codes::Country'=> '3.17',
              'Locale::Codes::Country_Codes'=> '3.17',
              'Locale::Codes::Currency'=> '3.17',
              'Locale::Codes::Currency_Codes'=> '3.17',
              'Locale::Codes::LangExt'=> '3.17',
              'Locale::Codes::LangExt_Codes'=> '3.17',
              'Locale::Codes::LangVar'=> '3.17',
              'Locale::Codes::LangVar_Codes'=> '3.17',
              'Locale::Codes::Language'=> '3.17',
              'Locale::Codes::Language_Codes'=> '3.17',
              'Locale::Codes::Script' => '3.17',
              'Locale::Codes::Script_Codes'=> '3.17',
              'Locale::Country'       => '3.17',
              'Locale::Currency'      => '3.17',
              'Locale::Language'      => '3.17',
              'Locale::Script'        => '3.17',
              'Math::BigFloat::Trace' => '0.28',
              'Math::BigInt::FastCalc'=> '0.29',
              'Math::BigInt::Trace'   => '0.28',
              'Math::BigRat'          => '0.2602',
              'Math::Complex'         => '1.58',
              'Math::Trig'            => '1.22',
              'Module::CoreList'      => '2.54',
              'OS2::Process'          => '1.07',
              'Pod::Perldoc'          => '3.15_06',
              'Pod::Simple'           => '3.18',
              'Pod::Simple::BlackBox' => '3.18',
              'Pod::Simple::Checker'  => '3.18',
              'Pod::Simple::Debug'    => '3.18',
              'Pod::Simple::DumpAsText'=> '3.18',
              'Pod::Simple::DumpAsXML'=> '3.18',
              'Pod::Simple::HTML'     => '3.18',
              'Pod::Simple::HTMLBatch'=> '3.18',
              'Pod::Simple::LinkSection'=> '3.18',
              'Pod::Simple::Methody'  => '3.18',
              'Pod::Simple::Progress' => '3.18',
              'Pod::Simple::PullParser'=> '3.18',
              'Pod::Simple::PullParserEndToken'=> '3.18',
              'Pod::Simple::PullParserStartToken'=> '3.18',
              'Pod::Simple::PullParserTextToken'=> '3.18',
              'Pod::Simple::PullParserToken'=> '3.18',
              'Pod::Simple::RTF'      => '3.18',
              'Pod::Simple::Search'   => '3.18',
              'Pod::Simple::SimpleTree'=> '3.18',
              'Pod::Simple::Text'     => '3.18',
              'Pod::Simple::TextContent'=> '3.18',
              'Pod::Simple::TiedOutFH'=> '3.18',
              'Pod::Simple::Transcode'=> '3.18',
              'Pod::Simple::TranscodeDumb'=> '3.18',
              'Pod::Simple::TranscodeSmart'=> '3.18',
              'Pod::Simple::XHTML'    => '3.18',
              'Pod::Simple::XMLOutStream'=> '3.18',
              'Storable'              => '2.31',
              'Sys::Syslog::Win32'    => undef,
              'Time::HiRes'           => '1.9724',
              'Unicode::Collate'      => '0.77',
              'Unicode::UCD'          => '0.33',
              'Win32API::File'        => '0.1200',
              'XS::APItest'           => '0.30',
              'attributes'            => '0.15',
              'bigint'                => '0.28',
              'bignum'                => '0.28',
              'charnames'             => '1.23',
              'diagnostics'           => '1.23',
              'feature'               => '1.22',
              'overload'              => '1.15',
              'perlfaq'               => '5.015000',
              'threads'               => '1.84',
              'version'               => '0.93',
          },
          removed => {
              'ExtUtils::MakeMaker::YAML'=> 1,
              'Locale::Constants'     => 1,
              'Sys::Syslog::win32::Win32'=> 1,
          }
      },
      5.015002 => {
          delta_from => 5.015001,
          changed => {
              'Attribute::Handlers'   => '0.92',
              'B'                     => '1.31',
              'B::Concise'            => '0.85',
              'B::Deparse'            => '1.07',
              'B::Terse'              => '1.06',
              'B::Xref'               => '1.03',
              'CPAN'                  => '1.9800',
              'CPAN::Exception::yaml_process_error'=> '5.5',
              'CPAN::Meta'            => '2.112150',
              'CPAN::Meta::Converter' => '2.112150',
              'CPAN::Meta::Feature'   => '2.112150',
              'CPAN::Meta::History'   => '2.112150',
              'CPAN::Meta::Prereqs'   => '2.112150',
              'CPAN::Meta::Spec'      => '2.112150',
              'CPAN::Meta::Validator' => '2.112150',
              'CPANPLUS'              => '0.9109',
              'CPANPLUS::Internals'   => '0.9109',
              'CPANPLUS::Shell::Default'=> '0.9109',
              'DB_File'               => '1.824',
              'Data::Dumper'          => '2.132',
              'Encode'                => '2.44',
              'Encode::Alias'         => '2.15',
              'Encode::Encoder'       => '2.02',
              'Encode::Guess'         => '2.05',
              'ExtUtils::Command::MM' => '6.59',
              'ExtUtils::Install'     => '1.57',
              'ExtUtils::Installed'   => '1.999002',
              'ExtUtils::Liblist'     => '6.59',
              'ExtUtils::Liblist::Kid'=> '6.59',
              'ExtUtils::MM'          => '6.59',
              'ExtUtils::MM_AIX'      => '6.59',
              'ExtUtils::MM_Any'      => '6.59',
              'ExtUtils::MM_BeOS'     => '6.59',
              'ExtUtils::MM_Cygwin'   => '6.59',
              'ExtUtils::MM_DOS'      => '6.59',
              'ExtUtils::MM_Darwin'   => '6.59',
              'ExtUtils::MM_MacOS'    => '6.59',
              'ExtUtils::MM_NW5'      => '6.59',
              'ExtUtils::MM_OS2'      => '6.59',
              'ExtUtils::MM_QNX'      => '6.59',
              'ExtUtils::MM_UWIN'     => '6.59',
              'ExtUtils::MM_Unix'     => '6.59',
              'ExtUtils::MM_VMS'      => '6.59',
              'ExtUtils::MM_VOS'      => '6.59',
              'ExtUtils::MM_Win32'    => '6.59',
              'ExtUtils::MM_Win95'    => '6.59',
              'ExtUtils::MY'          => '6.59',
              'ExtUtils::MakeMaker'   => '6.59',
              'ExtUtils::MakeMaker::Config'=> '6.59',
              'ExtUtils::Manifest'    => '1.60',
              'ExtUtils::Mkbootstrap' => '6.59',
              'ExtUtils::Mksymlists'  => '6.59',
              'ExtUtils::ParseXS'     => '3.03_01',
              'ExtUtils::Typemaps'    => '1.01',
              'ExtUtils::testlib'     => '6.59',
              'File::Spec'            => '3.34',
              'File::Spec::Mac'       => '3.35',
              'File::Spec::Unix'      => '3.34',
              'File::Spec::VMS'       => '3.35',
              'File::Spec::Win32'     => '3.35',
              'I18N::LangTags'        => '0.37',
              'IO'                    => '1.25_05',
              'IO::Handle'            => '1.32',
              'IO::Socket'            => '1.33',
              'IO::Socket::INET'      => '1.32',
              'IPC::Open3'            => '1.12',
              'Math::BigFloat'        => '1.995',
              'Math::BigFloat::Trace' => '0.29',
              'Math::BigInt'          => '1.996',
              'Math::BigInt::Trace'   => '0.29',
              'Module::Build'         => '0.39_01',
              'Module::Build::Base'   => '0.39_01',
              'Module::Build::Compat' => '0.39_01',
              'Module::Build::Config' => '0.39_01',
              'Module::Build::Cookbook'=> '0.39_01',
              'Module::Build::Dumper' => '0.39_01',
              'Module::Build::ModuleInfo'=> '0.39_01',
              'Module::Build::Notes'  => '0.39_01',
              'Module::Build::PPMMaker'=> '0.39_01',
              'Module::Build::Platform::Amiga'=> '0.39_01',
              'Module::Build::Platform::Default'=> '0.39_01',
              'Module::Build::Platform::EBCDIC'=> '0.39_01',
              'Module::Build::Platform::MPEiX'=> '0.39_01',
              'Module::Build::Platform::MacOS'=> '0.39_01',
              'Module::Build::Platform::RiscOS'=> '0.39_01',
              'Module::Build::Platform::Unix'=> '0.39_01',
              'Module::Build::Platform::VMS'=> '0.39_01',
              'Module::Build::Platform::VOS'=> '0.39_01',
              'Module::Build::Platform::Windows'=> '0.39_01',
              'Module::Build::Platform::aix'=> '0.39_01',
              'Module::Build::Platform::cygwin'=> '0.39_01',
              'Module::Build::Platform::darwin'=> '0.39_01',
              'Module::Build::Platform::os2'=> '0.39_01',
              'Module::Build::PodParser'=> '0.39_01',
              'Module::CoreList'      => '2.55',
              'Module::Load'          => '0.20',
              'Module::Metadata'      => '1.000005_01',
              'Opcode'                => '1.20',
              'Params::Check'         => '0.32',
              'PerlIO::via'           => '0.12',
              'Term::ANSIColor'       => '3.01',
              'Unicode::Collate'      => '0.78',
              'Unicode::Normalize'    => '1.13',
              'Unicode::UCD'          => '0.34',
              'bigint'                => '0.29',
              'bignum'                => '0.29',
              'bigrat'                => '0.29',
              'diagnostics'           => '1.24',
              'fields'                => '2.16',
              'inc::latest'           => '0.39_01',
          },
          removed => {
          }
      },
      5.015003 => {
          delta_from => 5.015002,
          changed => {
              'AnyDBM_File'           => '1.01',
              'Archive::Extract'      => '0.56',
              'Archive::Tar'          => '1.78',
              'Archive::Tar::Constant'=> '1.78',
              'Archive::Tar::File'    => '1.78',
              'Attribute::Handlers'   => '0.93',
              'B'                     => '1.32',
              'B::Concise'            => '0.86',
              'B::Deparse'            => '1.08',
              'CPAN::Meta'            => '2.112621',
              'CPAN::Meta::Converter' => '2.112621',
              'CPAN::Meta::Feature'   => '2.112621',
              'CPAN::Meta::History'   => '2.112621',
              'CPAN::Meta::Prereqs'   => '2.112621',
              'CPAN::Meta::Spec'      => '2.112621',
              'CPAN::Meta::Validator' => '2.112621',
              'CPAN::Meta::YAML'      => '0.004',
              'CPANPLUS'              => '0.9111',
              'CPANPLUS::Dist::Build' => '0.58',
              'CPANPLUS::Dist::Build::Constants'=> '0.58',
              'CPANPLUS::Internals'   => '0.9111',
              'CPANPLUS::Shell::Default'=> '0.9111',
              'Carp'                  => '1.23',
              'Carp::Heavy'           => '1.23',
              'Data::Dumper'          => '2.134',
              'Devel::PPPort'         => '3.20',
              'Errno'                 => '1.14',
              'Exporter'              => '5.65',
              'Exporter::Heavy'       => '5.65',
              'ExtUtils::ParseXS'     => '3.04_04',
              'ExtUtils::ParseXS::Constants'=> '3.04_04',
              'ExtUtils::ParseXS::CountLines'=> '3.04_04',
              'ExtUtils::ParseXS::Utilities'=> '3.04_04',
              'ExtUtils::Typemaps'    => '1.02',
              'File::Glob'            => '1.13',
              'Filter::Simple'        => '0.88',
              'IO'                    => '1.25_06',
              'IO::Handle'            => '1.33',
              'Locale::Codes'         => '3.18',
              'Locale::Codes::Constants'=> '3.18',
              'Locale::Codes::Country'=> '3.18',
              'Locale::Codes::Country_Codes'=> '3.18',
              'Locale::Codes::Currency'=> '3.18',
              'Locale::Codes::Currency_Codes'=> '3.18',
              'Locale::Codes::LangExt'=> '3.18',
              'Locale::Codes::LangExt_Codes'=> '3.18',
              'Locale::Codes::LangVar'=> '3.18',
              'Locale::Codes::LangVar_Codes'=> '3.18',
              'Locale::Codes::Language'=> '3.18',
              'Locale::Codes::Language_Codes'=> '3.18',
              'Locale::Codes::Script' => '3.18',
              'Locale::Codes::Script_Codes'=> '3.18',
              'Locale::Country'       => '3.18',
              'Locale::Currency'      => '3.18',
              'Locale::Language'      => '3.18',
              'Locale::Script'        => '3.18',
              'Math::BigFloat'        => '1.997',
              'Math::BigInt'          => '1.997',
              'Math::BigInt::Calc'    => '1.997',
              'Math::BigInt::CalcEmu' => '1.997',
              'Math::BigInt::FastCalc'=> '0.30',
              'Math::BigRat'          => '0.2603',
              'Module::CoreList'      => '2.56',
              'Module::Load::Conditional'=> '0.46',
              'Module::Metadata'      => '1.000007',
              'ODBM_File'             => '1.12',
              'POSIX'                 => '1.26',
              'Pod::Perldoc'          => '3.15_07',
              'Pod::Simple'           => '3.19',
              'Pod::Simple::BlackBox' => '3.19',
              'Pod::Simple::Checker'  => '3.19',
              'Pod::Simple::Debug'    => '3.19',
              'Pod::Simple::DumpAsText'=> '3.19',
              'Pod::Simple::DumpAsXML'=> '3.19',
              'Pod::Simple::HTML'     => '3.19',
              'Pod::Simple::HTMLBatch'=> '3.19',
              'Pod::Simple::LinkSection'=> '3.19',
              'Pod::Simple::Methody'  => '3.19',
              'Pod::Simple::Progress' => '3.19',
              'Pod::Simple::PullParser'=> '3.19',
              'Pod::Simple::PullParserEndToken'=> '3.19',
              'Pod::Simple::PullParserStartToken'=> '3.19',
              'Pod::Simple::PullParserTextToken'=> '3.19',
              'Pod::Simple::PullParserToken'=> '3.19',
              'Pod::Simple::RTF'      => '3.19',
              'Pod::Simple::Search'   => '3.19',
              'Pod::Simple::SimpleTree'=> '3.19',
              'Pod::Simple::Text'     => '3.19',
              'Pod::Simple::TextContent'=> '3.19',
              'Pod::Simple::TiedOutFH'=> '3.19',
              'Pod::Simple::Transcode'=> '3.19',
              'Pod::Simple::TranscodeDumb'=> '3.19',
              'Pod::Simple::TranscodeSmart'=> '3.19',
              'Pod::Simple::XHTML'    => '3.19',
              'Pod::Simple::XMLOutStream'=> '3.19',
              'Search::Dict'          => '1.04',
              'Socket'                => '1.94_01',
              'Storable'              => '2.32',
              'Text::Abbrev'          => '1.02',
              'Tie::Array'            => '1.05',
              'UNIVERSAL'             => '1.09',
              'Unicode::UCD'          => '0.35',
              'XS::APItest'           => '0.31',
              'XSLoader'              => '0.16',
              'attributes'            => '0.16',
              'diagnostics'           => '1.25',
              'open'                  => '1.09',
              'perlfaq'               => '5.0150034',
              'threads'               => '1.85',
              'threads::shared'       => '1.40',
          },
          removed => {
          }
      },
      5.015004 => {
          delta_from => 5.015003,
          changed => {
              'Archive::Tar'          => '1.80',
              'Archive::Tar::Constant'=> '1.80',
              'Archive::Tar::File'    => '1.80',
              'Digest'                => '1.17',
              'DynaLoader'            => '1.14',
              'ExtUtils::Command::MM' => '6.61_01',
              'ExtUtils::Liblist'     => '6.61_01',
              'ExtUtils::Liblist::Kid'=> '6.61_01',
              'ExtUtils::MM'          => '6.61_01',
              'ExtUtils::MM_AIX'      => '6.61_01',
              'ExtUtils::MM_Any'      => '6.61_01',
              'ExtUtils::MM_BeOS'     => '6.61_01',
              'ExtUtils::MM_Cygwin'   => '6.61_01',
              'ExtUtils::MM_DOS'      => '6.61_01',
              'ExtUtils::MM_Darwin'   => '6.61_01',
              'ExtUtils::MM_MacOS'    => '6.61_01',
              'ExtUtils::MM_NW5'      => '6.61_01',
              'ExtUtils::MM_OS2'      => '6.61_01',
              'ExtUtils::MM_QNX'      => '6.61_01',
              'ExtUtils::MM_UWIN'     => '6.61_01',
              'ExtUtils::MM_Unix'     => '6.61_01',
              'ExtUtils::MM_VMS'      => '6.61_01',
              'ExtUtils::MM_VOS'      => '6.61_01',
              'ExtUtils::MM_Win32'    => '6.61_01',
              'ExtUtils::MM_Win95'    => '6.61_01',
              'ExtUtils::MY'          => '6.61_01',
              'ExtUtils::MakeMaker'   => '6.61_01',
              'ExtUtils::MakeMaker::Config'=> '6.61_01',
              'ExtUtils::Mkbootstrap' => '6.61_01',
              'ExtUtils::Mksymlists'  => '6.61_01',
              'ExtUtils::ParseXS'     => '3.05',
              'ExtUtils::ParseXS::Constants'=> '3.05',
              'ExtUtils::ParseXS::CountLines'=> '3.05',
              'ExtUtils::ParseXS::Utilities'=> '3.05',
              'ExtUtils::testlib'     => '6.61_01',
              'File::DosGlob'         => '1.05',
              'Module::CoreList'      => '2.57',
              'Module::Load'          => '0.22',
              'Unicode::Collate'      => '0.80',
              'Unicode::Collate::Locale'=> '0.80',
              'Unicode::UCD'          => '0.36',
              'XS::APItest'           => '0.32',
              'XS::Typemap'           => '0.07',
              'attributes'            => '0.17',
              'base'                  => '2.18',
              'constant'              => '1.23',
              'mro'                   => '1.09',
              'open'                  => '1.10',
              'perlfaq'               => '5.0150035',
          },
          removed => {
          }
      },
      5.015005 => {
          delta_from => 5.015004,
          changed => {
              'Archive::Extract'      => '0.58',
              'B::Concise'            => '0.87',
              'B::Deparse'            => '1.09',
              'CGI'                   => '3.58',
              'CGI::Fast'             => '1.09',
              'CPANPLUS'              => '0.9112',
              'CPANPLUS::Dist::Build' => '0.60',
              'CPANPLUS::Dist::Build::Constants'=> '0.60',
              'CPANPLUS::Internals'   => '0.9112',
              'CPANPLUS::Shell::Default'=> '0.9112',
              'Compress::Raw::Bzip2'  => '2.042',
              'Compress::Raw::Zlib'   => '2.042',
              'Compress::Zlib'        => '2.042',
              'Digest::SHA'           => '5.63',
              'Errno'                 => '1.15',
              'ExtUtils::Command::MM' => '6.63_02',
              'ExtUtils::Liblist'     => '6.63_02',
              'ExtUtils::Liblist::Kid'=> '6.63_02',
              'ExtUtils::MM'          => '6.63_02',
              'ExtUtils::MM_AIX'      => '6.63_02',
              'ExtUtils::MM_Any'      => '6.63_02',
              'ExtUtils::MM_BeOS'     => '6.63_02',
              'ExtUtils::MM_Cygwin'   => '6.63_02',
              'ExtUtils::MM_DOS'      => '6.63_02',
              'ExtUtils::MM_Darwin'   => '6.63_02',
              'ExtUtils::MM_MacOS'    => '6.63_02',
              'ExtUtils::MM_NW5'      => '6.63_02',
              'ExtUtils::MM_OS2'      => '6.63_02',
              'ExtUtils::MM_QNX'      => '6.63_02',
              'ExtUtils::MM_UWIN'     => '6.63_02',
              'ExtUtils::MM_Unix'     => '6.63_02',
              'ExtUtils::MM_VMS'      => '6.63_02',
              'ExtUtils::MM_VOS'      => '6.63_02',
              'ExtUtils::MM_Win32'    => '6.63_02',
              'ExtUtils::MM_Win95'    => '6.63_02',
              'ExtUtils::MY'          => '6.63_02',
              'ExtUtils::MakeMaker'   => '6.63_02',
              'ExtUtils::MakeMaker::Config'=> '6.63_02',
              'ExtUtils::Mkbootstrap' => '6.63_02',
              'ExtUtils::Mksymlists'  => '6.63_02',
              'ExtUtils::testlib'     => '6.63_02',
              'File::DosGlob'         => '1.06',
              'File::Glob'            => '1.14',
              'HTTP::Tiny'            => '0.016',
              'IO::Compress::Adapter::Bzip2'=> '2.042',
              'IO::Compress::Adapter::Deflate'=> '2.042',
              'IO::Compress::Adapter::Identity'=> '2.042',
              'IO::Compress::Base'    => '2.042',
              'IO::Compress::Base::Common'=> '2.042',
              'IO::Compress::Bzip2'   => '2.042',
              'IO::Compress::Deflate' => '2.042',
              'IO::Compress::Gzip'    => '2.042',
              'IO::Compress::Gzip::Constants'=> '2.042',
              'IO::Compress::RawDeflate'=> '2.042',
              'IO::Compress::Zip'     => '2.042',
              'IO::Compress::Zip::Constants'=> '2.042',
              'IO::Compress::Zlib::Constants'=> '2.042',
              'IO::Compress::Zlib::Extra'=> '2.042',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.042',
              'IO::Uncompress::Adapter::Identity'=> '2.042',
              'IO::Uncompress::Adapter::Inflate'=> '2.042',
              'IO::Uncompress::AnyInflate'=> '2.042',
              'IO::Uncompress::AnyUncompress'=> '2.042',
              'IO::Uncompress::Base'  => '2.042',
              'IO::Uncompress::Bunzip2'=> '2.042',
              'IO::Uncompress::Gunzip'=> '2.042',
              'IO::Uncompress::Inflate'=> '2.042',
              'IO::Uncompress::RawInflate'=> '2.042',
              'IO::Uncompress::Unzip' => '2.042',
              'Locale::Maketext'      => '1.20',
              'Locale::Maketext::Guts'=> '1.20',
              'Locale::Maketext::GutsLoader'=> '1.20',
              'Module::CoreList'      => '2.58',
              'Opcode'                => '1.21',
              'Socket'                => '1.94_02',
              'Storable'              => '2.33',
              'UNIVERSAL'             => '1.10',
              'Unicode::Collate'      => '0.85',
              'Unicode::Collate::CJK::Pinyin'=> '0.85',
              'Unicode::Collate::CJK::Stroke'=> '0.85',
              'Unicode::Collate::Locale'=> '0.85',
              'Unicode::UCD'          => '0.37',
              'XS::APItest'           => '0.33',
              'arybase'               => '0.01',
              'charnames'             => '1.24',
              'feature'               => '1.23',
              'perlfaq'               => '5.0150036',
              'strict'                => '1.05',
              'unicore::Name'         => undef,
          },
          removed => {
          }
      },
      5.015006 => {
          delta_from => 5.015005,
          changed => {
              'Archive::Tar'          => '1.82',
              'Archive::Tar::Constant'=> '1.82',
              'Archive::Tar::File'    => '1.82',
              'AutoLoader'            => '5.72',
              'B::Concise'            => '0.88',
              'B::Debug'              => '1.17',
              'B::Deparse'            => '1.10',
              'CPAN::Meta::YAML'      => '0.005',
              'CPANPLUS'              => '0.9113',
              'CPANPLUS::Internals'   => '0.9113',
              'CPANPLUS::Shell::Default'=> '0.9113',
              'Carp'                  => '1.24',
              'Compress::Raw::Bzip2'  => '2.045',
              'Compress::Raw::Zlib'   => '2.045',
              'Compress::Zlib'        => '2.045',
              'Cwd'                   => '3.38',
              'DB'                    => '1.04',
              'Data::Dumper'          => '2.135_01',
              'Digest::SHA'           => '5.70',
              'Dumpvalue'             => '1.17',
              'Exporter'              => '5.66',
              'Exporter::Heavy'       => '5.66',
              'ExtUtils::CBuilder'    => '0.280205',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280204',
              'ExtUtils::Packlist'    => '1.45',
              'ExtUtils::ParseXS'     => '3.08',
              'ExtUtils::ParseXS::Constants'=> '3.08',
              'ExtUtils::ParseXS::CountLines'=> '3.08',
              'ExtUtils::ParseXS::Utilities'=> '3.08',
              'File::Basename'        => '2.84',
              'File::Glob'            => '1.15',
              'File::Spec::Unix'      => '3.35',
              'Getopt::Std'           => '1.07',
              'I18N::LangTags'        => '0.38',
              'IO::Compress::Adapter::Bzip2'=> '2.045',
              'IO::Compress::Adapter::Deflate'=> '2.045',
              'IO::Compress::Adapter::Identity'=> '2.045',
              'IO::Compress::Base'    => '2.046',
              'IO::Compress::Base::Common'=> '2.045',
              'IO::Compress::Bzip2'   => '2.045',
              'IO::Compress::Deflate' => '2.045',
              'IO::Compress::Gzip'    => '2.045',
              'IO::Compress::Gzip::Constants'=> '2.045',
              'IO::Compress::RawDeflate'=> '2.045',
              'IO::Compress::Zip'     => '2.046',
              'IO::Compress::Zip::Constants'=> '2.045',
              'IO::Compress::Zlib::Constants'=> '2.045',
              'IO::Compress::Zlib::Extra'=> '2.045',
              'IO::Dir'               => '1.09',
              'IO::File'              => '1.16',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.045',
              'IO::Uncompress::Adapter::Identity'=> '2.045',
              'IO::Uncompress::Adapter::Inflate'=> '2.045',
              'IO::Uncompress::AnyInflate'=> '2.045',
              'IO::Uncompress::AnyUncompress'=> '2.045',
              'IO::Uncompress::Base'  => '2.046',
              'IO::Uncompress::Bunzip2'=> '2.045',
              'IO::Uncompress::Gunzip'=> '2.045',
              'IO::Uncompress::Inflate'=> '2.045',
              'IO::Uncompress::RawInflate'=> '2.045',
              'IO::Uncompress::Unzip' => '2.046',
              'Locale::Codes'         => '3.20',
              'Locale::Codes::Constants'=> '3.20',
              'Locale::Codes::Country'=> '3.20',
              'Locale::Codes::Country_Codes'=> '3.20',
              'Locale::Codes::Country_Retired'=> '3.20',
              'Locale::Codes::Currency'=> '3.20',
              'Locale::Codes::Currency_Codes'=> '3.20',
              'Locale::Codes::Currency_Retired'=> '3.20',
              'Locale::Codes::LangExt'=> '3.20',
              'Locale::Codes::LangExt_Codes'=> '3.20',
              'Locale::Codes::LangExt_Retired'=> '3.20',
              'Locale::Codes::LangFam'=> '3.20',
              'Locale::Codes::LangFam_Codes'=> '3.20',
              'Locale::Codes::LangFam_Retired'=> '3.20',
              'Locale::Codes::LangVar'=> '3.20',
              'Locale::Codes::LangVar_Codes'=> '3.20',
              'Locale::Codes::LangVar_Retired'=> '3.20',
              'Locale::Codes::Language'=> '3.20',
              'Locale::Codes::Language_Codes'=> '3.20',
              'Locale::Codes::Language_Retired'=> '3.20',
              'Locale::Codes::Script' => '3.20',
              'Locale::Codes::Script_Codes'=> '3.20',
              'Locale::Codes::Script_Retired'=> '3.20',
              'Locale::Country'       => '3.20',
              'Locale::Currency'      => '3.20',
              'Locale::Language'      => '3.20',
              'Locale::Maketext'      => '1.21',
              'Locale::Script'        => '3.20',
              'Module::CoreList'      => '2.59',
              'Module::Loaded'        => '0.08',
              'Opcode'                => '1.22',
              'POSIX'                 => '1.27',
              'Pod::Html'             => '1.12',
              'Pod::LaTeX'            => '0.60',
              'Pod::Perldoc'          => '3.15_08',
              'Safe'                  => '2.30',
              'SelfLoader'            => '1.20',
              'Socket'                => '1.97',
              'Storable'              => '2.34',
              'UNIVERSAL'             => '1.11',
              'Unicode::Collate'      => '0.87',
              'Unicode::Collate::Locale'=> '0.87',
              'XS::APItest'           => '0.34',
              'arybase'               => '0.02',
              'charnames'             => '1.27',
              'diagnostics'           => '1.26',
              'feature'               => '1.24',
              'if'                    => '0.0602',
              'overload'              => '1.16',
              'sigtrap'               => '1.06',
              'strict'                => '1.06',
              'threads'               => '1.86',
              'version'               => '0.96',
          },
          removed => {
          }
      },
      5.015007 => {
          delta_from => 5.015006,
          changed => {
              'B'                     => '1.33',
              'B::Deparse'            => '1.11',
              'CGI'                   => '3.59',
              'CPAN::Meta'            => '2.113640',
              'CPAN::Meta::Converter' => '2.113640',
              'CPAN::Meta::Feature'   => '2.113640',
              'CPAN::Meta::History'   => '2.113640',
              'CPAN::Meta::Prereqs'   => '2.113640',
              'CPAN::Meta::Requirements'=> '2.113640',
              'CPAN::Meta::Spec'      => '2.113640',
              'CPAN::Meta::Validator' => '2.113640',
              'CPANPLUS'              => '0.9116',
              'CPANPLUS::Internals'   => '0.9116',
              'CPANPLUS::Shell::Default'=> '0.9116',
              'Cwd'                   => '3.39_01',
              'Data::Dumper'          => '2.135_03',
              'Devel::InnerPackage'   => '0.4',
              'ExtUtils::CBuilder::Base'=> '0.280205',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280205',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280205',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280205',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280205',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280205',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280205',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280205',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280205',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280205',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280205',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280205',
              'ExtUtils::Manifest'    => '1.61',
              'ExtUtils::Packlist'    => '1.46',
              'ExtUtils::ParseXS'     => '3.12',
              'ExtUtils::ParseXS::Constants'=> '3.12',
              'ExtUtils::ParseXS::CountLines'=> '3.12',
              'ExtUtils::ParseXS::Utilities'=> '3.12',
              'ExtUtils::Typemaps'    => '1.03',
              'ExtUtils::Typemaps::Cmd'=> undef,
              'ExtUtils::Typemaps::Type'=> '0.06',
              'File::Glob'            => '1.16',
              'File::Spec'            => '3.39_01',
              'File::Spec::Cygwin'    => '3.39_01',
              'File::Spec::Epoc'      => '3.39_01',
              'File::Spec::Functions' => '3.39_01',
              'File::Spec::Mac'       => '3.39_01',
              'File::Spec::OS2'       => '3.39_01',
              'File::Spec::Unix'      => '3.39_01',
              'File::Spec::VMS'       => '3.39_01',
              'File::Spec::Win32'     => '3.39_01',
              'IO::Dir'               => '1.10',
              'IO::Pipe'              => '1.15',
              'IO::Poll'              => '0.09',
              'IO::Select'            => '1.21',
              'IO::Socket'            => '1.34',
              'IO::Socket::INET'      => '1.33',
              'IO::Socket::UNIX'      => '1.24',
              'Locale::Maketext'      => '1.22',
              'Math::BigInt'          => '1.998',
              'Module::CoreList'      => '2.60',
              'Module::Pluggable'     => '4.0',
              'POSIX'                 => '1.28',
              'PerlIO::scalar'        => '0.13',
              'Pod::Html'             => '1.13',
              'Pod::Perldoc'          => '3.15_15',
              'Pod::Perldoc::BaseTo'  => '3.15_15',
              'Pod::Perldoc::GetOptsOO'=> '3.15_15',
              'Pod::Perldoc::ToANSI'  => '3.15_15',
              'Pod::Perldoc::ToChecker'=> '3.15_15',
              'Pod::Perldoc::ToMan'   => '3.15_15',
              'Pod::Perldoc::ToNroff' => '3.15_15',
              'Pod::Perldoc::ToPod'   => '3.15_15',
              'Pod::Perldoc::ToRtf'   => '3.15_15',
              'Pod::Perldoc::ToTerm'  => '3.15_15',
              'Pod::Perldoc::ToText'  => '3.15_15',
              'Pod::Perldoc::ToTk'    => '3.15_15',
              'Pod::Perldoc::ToXml'   => '3.15_15',
              'Term::UI'              => '0.30',
              'Tie::File'             => '0.98',
              'Unicode::UCD'          => '0.39',
              'Version::Requirements' => '0.101021',
              'XS::APItest'           => '0.35',
              '_charnames'            => '1.28',
              'arybase'               => '0.03',
              'autouse'               => '1.07',
              'charnames'             => '1.28',
              'diagnostics'           => '1.27',
              'feature'               => '1.25',
              'overload'              => '1.17',
              'overloading'           => '0.02',
              'perlfaq'               => '5.0150038',
          },
          removed => {
          }
      },
      5.015008 => {
          delta_from => 5.015007,
          changed => {
              'B'                     => '1.34',
              'B::Deparse'            => '1.12',
              'CPAN::Meta'            => '2.120351',
              'CPAN::Meta::Converter' => '2.120351',
              'CPAN::Meta::Feature'   => '2.120351',
              'CPAN::Meta::History'   => '2.120351',
              'CPAN::Meta::Prereqs'   => '2.120351',
              'CPAN::Meta::Requirements'=> '2.120351',
              'CPAN::Meta::Spec'      => '2.120351',
              'CPAN::Meta::Validator' => '2.120351',
              'CPAN::Meta::YAML'      => '0.007',
              'CPANPLUS'              => '0.9118',
              'CPANPLUS::Dist::Build' => '0.62',
              'CPANPLUS::Dist::Build::Constants'=> '0.62',
              'CPANPLUS::Internals'   => '0.9118',
              'CPANPLUS::Shell::Default'=> '0.9118',
              'Carp'                  => '1.25',
              'Carp::Heavy'           => '1.25',
              'Compress::Raw::Bzip2'  => '2.048',
              'Compress::Raw::Zlib'   => '2.048',
              'Compress::Zlib'        => '2.048',
              'Cwd'                   => '3.39_02',
              'DB_File'               => '1.826',
              'Data::Dumper'          => '2.135_05',
              'English'               => '1.05',
              'ExtUtils::Install'     => '1.58',
              'ExtUtils::ParseXS'     => '3.16',
              'ExtUtils::ParseXS::Constants'=> '3.16',
              'ExtUtils::ParseXS::CountLines'=> '3.16',
              'ExtUtils::ParseXS::Utilities'=> '3.16',
              'ExtUtils::Typemaps'    => '3.16',
              'ExtUtils::Typemaps::Cmd'=> '3.16',
              'ExtUtils::Typemaps::InputMap'=> '3.16',
              'ExtUtils::Typemaps::OutputMap'=> '3.16',
              'ExtUtils::Typemaps::Type'=> '3.16',
              'File::Copy'            => '2.23',
              'File::Glob'            => '1.17',
              'File::Spec'            => '3.39_02',
              'File::Spec::Cygwin'    => '3.39_02',
              'File::Spec::Epoc'      => '3.39_02',
              'File::Spec::Functions' => '3.39_02',
              'File::Spec::Mac'       => '3.39_02',
              'File::Spec::OS2'       => '3.39_02',
              'File::Spec::Unix'      => '3.39_02',
              'File::Spec::VMS'       => '3.39_02',
              'File::Spec::Win32'     => '3.39_02',
              'Filter::Util::Call'    => '1.40',
              'IO::Compress::Adapter::Bzip2'=> '2.048',
              'IO::Compress::Adapter::Deflate'=> '2.048',
              'IO::Compress::Adapter::Identity'=> '2.048',
              'IO::Compress::Base'    => '2.048',
              'IO::Compress::Base::Common'=> '2.048',
              'IO::Compress::Bzip2'   => '2.048',
              'IO::Compress::Deflate' => '2.048',
              'IO::Compress::Gzip'    => '2.048',
              'IO::Compress::Gzip::Constants'=> '2.048',
              'IO::Compress::RawDeflate'=> '2.048',
              'IO::Compress::Zip'     => '2.048',
              'IO::Compress::Zip::Constants'=> '2.048',
              'IO::Compress::Zlib::Constants'=> '2.048',
              'IO::Compress::Zlib::Extra'=> '2.048',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.048',
              'IO::Uncompress::Adapter::Identity'=> '2.048',
              'IO::Uncompress::Adapter::Inflate'=> '2.048',
              'IO::Uncompress::AnyInflate'=> '2.048',
              'IO::Uncompress::AnyUncompress'=> '2.048',
              'IO::Uncompress::Base'  => '2.048',
              'IO::Uncompress::Bunzip2'=> '2.048',
              'IO::Uncompress::Gunzip'=> '2.048',
              'IO::Uncompress::Inflate'=> '2.048',
              'IO::Uncompress::RawInflate'=> '2.048',
              'IO::Uncompress::Unzip' => '2.048',
              'IPC::Cmd'              => '0.76',
              'Math::Complex'         => '1.59',
              'Math::Trig'            => '1.23',
              'Module::Metadata'      => '1.000009',
              'Opcode'                => '1.23',
              'POSIX'                 => '1.30',
              'Parse::CPAN::Meta'     => '1.4402',
              'PerlIO::mmap'          => '0.010',
              'Pod::Checker'          => '1.51',
              'Pod::Find'             => '1.51',
              'Pod::Functions'        => '1.05',
              'Pod::Html'             => '1.14',
              'Pod::InputObjects'     => '1.51',
              'Pod::ParseUtils'       => '1.51',
              'Pod::Parser'           => '1.51',
              'Pod::PlainText'        => '2.05',
              'Pod::Select'           => '1.51',
              'Pod::Usage'            => '1.51',
              'Safe'                  => '2.31',
              'Socket'                => '1.98',
              'Term::Cap'             => '1.13',
              'Term::ReadLine'        => '1.08',
              'Time::HiRes'           => '1.9725',
              'Unicode'               => '6.1.0',
              'Unicode::UCD'          => '0.41',
              'Version::Requirements' => '0.101022',
              'XS::APItest'           => '0.36',
              'XS::Typemap'           => '0.08',
              '_charnames'            => '1.29',
              'arybase'               => '0.04',
              'charnames'             => '1.29',
              'diagnostics'           => '1.28',
              'feature'               => '1.26',
              'locale'                => '1.01',
              'overload'              => '1.18',
              'perlfaq'               => '5.0150039',
              're'                    => '0.19',
              'subs'                  => '1.01',
              'warnings'              => '1.13',
          },
          removed => {
          }
      },
      5.015009 => {
          delta_from => 5.015008,
          changed => {
              'B::Deparse'            => '1.13',
              'B::Lint'               => '1.14',
              'B::Lint::Debug'        => '1.14',
              'CPAN::Meta'            => '2.120630',
              'CPAN::Meta::Converter' => '2.120630',
              'CPAN::Meta::Feature'   => '2.120630',
              'CPAN::Meta::History'   => '2.120630',
              'CPAN::Meta::Prereqs'   => '2.120630',
              'CPAN::Meta::Requirements'=> '2.120630',
              'CPAN::Meta::Spec'      => '2.120630',
              'CPAN::Meta::Validator' => '2.120630',
              'CPANPLUS'              => '0.9121',
              'CPANPLUS::Internals'   => '0.9121',
              'CPANPLUS::Shell::Default'=> '0.9121',
              'Data::Dumper'          => '2.135_06',
              'Digest::SHA'           => '5.71',
              'ExtUtils::CBuilder'    => '0.280206',
              'ExtUtils::CBuilder::Base'=> '0.280206',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280206',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280206',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280206',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280206',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280206',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280206',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280206',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280206',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280206',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280206',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280206',
              'HTTP::Tiny'            => '0.017',
              'Locale::Codes'         => '3.21',
              'Locale::Codes::Constants'=> '3.21',
              'Locale::Codes::Country'=> '3.21',
              'Locale::Codes::Country_Codes'=> '3.21',
              'Locale::Codes::Country_Retired'=> '3.21',
              'Locale::Codes::Currency'=> '3.21',
              'Locale::Codes::Currency_Codes'=> '3.21',
              'Locale::Codes::Currency_Retired'=> '3.21',
              'Locale::Codes::LangExt'=> '3.21',
              'Locale::Codes::LangExt_Codes'=> '3.21',
              'Locale::Codes::LangExt_Retired'=> '3.21',
              'Locale::Codes::LangFam'=> '3.21',
              'Locale::Codes::LangFam_Codes'=> '3.21',
              'Locale::Codes::LangFam_Retired'=> '3.21',
              'Locale::Codes::LangVar'=> '3.21',
              'Locale::Codes::LangVar_Codes'=> '3.21',
              'Locale::Codes::LangVar_Retired'=> '3.21',
              'Locale::Codes::Language'=> '3.21',
              'Locale::Codes::Language_Codes'=> '3.21',
              'Locale::Codes::Language_Retired'=> '3.21',
              'Locale::Codes::Script' => '3.21',
              'Locale::Codes::Script_Codes'=> '3.21',
              'Locale::Codes::Script_Retired'=> '3.21',
              'Locale::Country'       => '3.21',
              'Locale::Currency'      => '3.21',
              'Locale::Language'      => '3.21',
              'Locale::Script'        => '3.21',
              'Module::CoreList'      => '2.65',
              'Pod::Html'             => '1.1501',
              'Pod::Perldoc'          => '3.17',
              'Pod::Perldoc::BaseTo'  => '3.17',
              'Pod::Perldoc::GetOptsOO'=> '3.17',
              'Pod::Perldoc::ToANSI'  => '3.17',
              'Pod::Perldoc::ToChecker'=> '3.17',
              'Pod::Perldoc::ToMan'   => '3.17',
              'Pod::Perldoc::ToNroff' => '3.17',
              'Pod::Perldoc::ToPod'   => '3.17',
              'Pod::Perldoc::ToRtf'   => '3.17',
              'Pod::Perldoc::ToTerm'  => '3.17',
              'Pod::Perldoc::ToText'  => '3.17',
              'Pod::Perldoc::ToTk'    => '3.17',
              'Pod::Perldoc::ToXml'   => '3.17',
              'Pod::Simple'           => '3.20',
              'Pod::Simple::BlackBox' => '3.20',
              'Pod::Simple::Checker'  => '3.20',
              'Pod::Simple::Debug'    => '3.20',
              'Pod::Simple::DumpAsText'=> '3.20',
              'Pod::Simple::DumpAsXML'=> '3.20',
              'Pod::Simple::HTML'     => '3.20',
              'Pod::Simple::HTMLBatch'=> '3.20',
              'Pod::Simple::LinkSection'=> '3.20',
              'Pod::Simple::Methody'  => '3.20',
              'Pod::Simple::Progress' => '3.20',
              'Pod::Simple::PullParser'=> '3.20',
              'Pod::Simple::PullParserEndToken'=> '3.20',
              'Pod::Simple::PullParserStartToken'=> '3.20',
              'Pod::Simple::PullParserTextToken'=> '3.20',
              'Pod::Simple::PullParserToken'=> '3.20',
              'Pod::Simple::RTF'      => '3.20',
              'Pod::Simple::Search'   => '3.20',
              'Pod::Simple::SimpleTree'=> '3.20',
              'Pod::Simple::Text'     => '3.20',
              'Pod::Simple::TextContent'=> '3.20',
              'Pod::Simple::TiedOutFH'=> '3.20',
              'Pod::Simple::Transcode'=> '3.20',
              'Pod::Simple::TranscodeDumb'=> '3.20',
              'Pod::Simple::TranscodeSmart'=> '3.20',
              'Pod::Simple::XHTML'    => '3.20',
              'Pod::Simple::XMLOutStream'=> '3.20',
              'Socket'                => '2.000',
              'Term::ReadLine'        => '1.09',
              'Unicode::Collate'      => '0.89',
              'Unicode::Collate::CJK::Korean'=> '0.88',
              'Unicode::Collate::Locale'=> '0.89',
              'Unicode::Normalize'    => '1.14',
              'Unicode::UCD'          => '0.42',
              'XS::APItest'           => '0.37',
              'arybase'               => '0.05',
              'attributes'            => '0.18',
              'charnames'             => '1.30',
              'feature'               => '1.27',
          },
          removed => {
          }
      },
      5.016 => {
          delta_from => 5.015009,
          changed => {
              'B::Concise'            => '0.89',
              'B::Deparse'            => '1.14',
              'Carp'                  => '1.26',
              'Carp::Heavy'           => '1.26',
              'IO::Socket'            => '1.35',
              'Module::CoreList'      => '2.66',
              'PerlIO::scalar'        => '0.14',
              'Pod::Html'             => '1.1502',
              'Safe'                  => '2.31_01',
              'Socket'                => '2.001',
              'Unicode::UCD'          => '0.43',
              'XS::APItest'           => '0.38',
              '_charnames'            => '1.31',
              'attributes'            => '0.19',
              'strict'                => '1.07',
              'version'               => '0.99',
          },
          removed => {
          }
      },
      5.016001 => {
          delta_from => 5.016,
          changed => {
              'B'                     => '1.35',
              'B::Deparse'            => '1.14_01',
              'List::Util'            => '1.25',
              'List::Util::PP'        => '1.25',
              'List::Util::XS'        => '1.25',
              'Module::CoreList'      => '2.70',
              'PerlIO::scalar'        => '0.14_01',
              'Scalar::Util'          => '1.25',
              'Scalar::Util::PP'      => '1.25',
              're'                    => '0.19_01',
          },
          removed => {
          }
      },
      5.016002 => {
          delta_from => 5.016001,
          changed => {
              'Module::CoreList'      => '2.76',
          },
          removed => {
          }
      },
      5.016003 => {
          delta_from => 5.016002,
          changed => {
              'Encode'                => '2.44_01',
              'Module::CoreList'      => '2.76_02',
              'XS::APItest'           => '0.39',
          },
          removed => {
          }
      },
      5.017 => {
          delta_from => 5.016,
          changed => {
              'B'                     => '1.35',
              'B::Concise'            => '0.90',
              'ExtUtils::ParseXS'     => '3.17',
              'ExtUtils::ParseXS::Utilities'=> '3.17',
              'File::DosGlob'         => '1.07',
              'File::Find'            => '1.21',
              'File::stat'            => '1.06',
              'Hash::Util'            => '0.12',
              'IO::Socket'            => '1.34',
              'Module::CoreList'      => '2.67',
              'Pod::Functions'        => '1.06',
              'Storable'              => '2.35',
              'XS::APItest'           => '0.39',
              'diagnostics'           => '1.29',
              'feature'               => '1.28',
              'overload'              => '1.19',
              'utf8'                  => '1.10',
          },
          removed => {
              'Version::Requirements' => 1,
          }
      },
      5.017001 => {
          delta_from => 5.017,
          changed => {
              'App::Prove'            => '3.25',
              'App::Prove::State'     => '3.25',
              'App::Prove::State::Result'=> '3.25',
              'App::Prove::State::Result::Test'=> '3.25',
              'Archive::Extract'      => '0.60',
              'Archive::Tar'          => '1.88',
              'Archive::Tar::Constant'=> '1.88',
              'Archive::Tar::File'    => '1.88',
              'B'                     => '1.36',
              'B::Deparse'            => '1.15',
              'CPAN::Meta'            => '2.120921',
              'CPAN::Meta::Converter' => '2.120921',
              'CPAN::Meta::Feature'   => '2.120921',
              'CPAN::Meta::History'   => '2.120921',
              'CPAN::Meta::Prereqs'   => '2.120921',
              'CPAN::Meta::Requirements'=> '2.122',
              'CPAN::Meta::Spec'      => '2.120921',
              'CPAN::Meta::Validator' => '2.120921',
              'CPAN::Meta::YAML'      => '0.008',
              'CPANPLUS'              => '0.9130',
              'CPANPLUS::Config::HomeEnv'=> '0.04',
              'CPANPLUS::Internals'   => '0.9130',
              'CPANPLUS::Shell::Default'=> '0.9130',
              'Class::Struct'         => '0.64',
              'Compress::Raw::Bzip2'  => '2.052',
              'Compress::Raw::Zlib'   => '2.054',
              'Compress::Zlib'        => '2.052',
              'Digest::MD5'           => '2.52',
              'DynaLoader'            => '1.15',
              'ExtUtils::CBuilder'    => '0.280208',
              'ExtUtils::CBuilder::Base'=> '0.280208',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280208',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280208',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280208',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280208',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280208',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280208',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280208',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280208',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280208',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280208',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280208',
              'Fatal'                 => '2.11',
              'File::DosGlob'         => '1.08',
              'File::Fetch'           => '0.34',
              'File::Spec::Unix'      => '3.39_03',
              'Filter::Util::Call'    => '1.45',
              'HTTP::Tiny'            => '0.022',
              'IO'                    => '1.25_07',
              'IO::Compress::Adapter::Bzip2'=> '2.052',
              'IO::Compress::Adapter::Deflate'=> '2.052',
              'IO::Compress::Adapter::Identity'=> '2.052',
              'IO::Compress::Base'    => '2.052',
              'IO::Compress::Base::Common'=> '2.052',
              'IO::Compress::Bzip2'   => '2.052',
              'IO::Compress::Deflate' => '2.052',
              'IO::Compress::Gzip'    => '2.052',
              'IO::Compress::Gzip::Constants'=> '2.052',
              'IO::Compress::RawDeflate'=> '2.052',
              'IO::Compress::Zip'     => '2.052',
              'IO::Compress::Zip::Constants'=> '2.052',
              'IO::Compress::Zlib::Constants'=> '2.052',
              'IO::Compress::Zlib::Extra'=> '2.052',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.052',
              'IO::Uncompress::Adapter::Identity'=> '2.052',
              'IO::Uncompress::Adapter::Inflate'=> '2.052',
              'IO::Uncompress::AnyInflate'=> '2.052',
              'IO::Uncompress::AnyUncompress'=> '2.052',
              'IO::Uncompress::Base'  => '2.052',
              'IO::Uncompress::Bunzip2'=> '2.052',
              'IO::Uncompress::Gunzip'=> '2.052',
              'IO::Uncompress::Inflate'=> '2.052',
              'IO::Uncompress::RawInflate'=> '2.052',
              'IO::Uncompress::Unzip' => '2.052',
              'IPC::Cmd'              => '0.78',
              'List::Util'            => '1.25',
              'List::Util::XS'        => '1.25',
              'Locale::Codes'         => '3.22',
              'Locale::Codes::Constants'=> '3.22',
              'Locale::Codes::Country'=> '3.22',
              'Locale::Codes::Country_Codes'=> '3.22',
              'Locale::Codes::Country_Retired'=> '3.22',
              'Locale::Codes::Currency'=> '3.22',
              'Locale::Codes::Currency_Codes'=> '3.22',
              'Locale::Codes::Currency_Retired'=> '3.22',
              'Locale::Codes::LangExt'=> '3.22',
              'Locale::Codes::LangExt_Codes'=> '3.22',
              'Locale::Codes::LangExt_Retired'=> '3.22',
              'Locale::Codes::LangFam'=> '3.22',
              'Locale::Codes::LangFam_Codes'=> '3.22',
              'Locale::Codes::LangFam_Retired'=> '3.22',
              'Locale::Codes::LangVar'=> '3.22',
              'Locale::Codes::LangVar_Codes'=> '3.22',
              'Locale::Codes::LangVar_Retired'=> '3.22',
              'Locale::Codes::Language'=> '3.22',
              'Locale::Codes::Language_Codes'=> '3.22',
              'Locale::Codes::Language_Retired'=> '3.22',
              'Locale::Codes::Script' => '3.22',
              'Locale::Codes::Script_Codes'=> '3.22',
              'Locale::Codes::Script_Retired'=> '3.22',
              'Locale::Country'       => '3.22',
              'Locale::Currency'      => '3.22',
              'Locale::Language'      => '3.22',
              'Locale::Script'        => '3.22',
              'Memoize'               => '1.03',
              'Memoize::AnyDBM_File'  => '1.03',
              'Memoize::Expire'       => '1.03',
              'Memoize::ExpireFile'   => '1.03',
              'Memoize::ExpireTest'   => '1.03',
              'Memoize::NDBM_File'    => '1.03',
              'Memoize::SDBM_File'    => '1.03',
              'Memoize::Storable'     => '1.03',
              'Module::Build'         => '0.40',
              'Module::Build::Base'   => '0.40',
              'Module::Build::Compat' => '0.40',
              'Module::Build::Config' => '0.40',
              'Module::Build::Cookbook'=> '0.40',
              'Module::Build::Dumper' => '0.40',
              'Module::Build::ModuleInfo'=> '0.40',
              'Module::Build::Notes'  => '0.40',
              'Module::Build::PPMMaker'=> '0.40',
              'Module::Build::Platform::Amiga'=> '0.40',
              'Module::Build::Platform::Default'=> '0.40',
              'Module::Build::Platform::EBCDIC'=> '0.40',
              'Module::Build::Platform::MPEiX'=> '0.40',
              'Module::Build::Platform::MacOS'=> '0.40',
              'Module::Build::Platform::RiscOS'=> '0.40',
              'Module::Build::Platform::Unix'=> '0.40',
              'Module::Build::Platform::VMS'=> '0.40',
              'Module::Build::Platform::VOS'=> '0.40',
              'Module::Build::Platform::Windows'=> '0.40',
              'Module::Build::Platform::aix'=> '0.40',
              'Module::Build::Platform::cygwin'=> '0.40',
              'Module::Build::Platform::darwin'=> '0.40',
              'Module::Build::Platform::os2'=> '0.40',
              'Module::Build::PodParser'=> '0.40',
              'Module::CoreList'      => '2.68',
              'Module::Load::Conditional'=> '0.50',
              'Object::Accessor'      => '0.44',
              'POSIX'                 => '1.31',
              'Params::Check'         => '0.36',
              'Parse::CPAN::Meta'     => '1.4404',
              'PerlIO::mmap'          => '0.011',
              'PerlIO::via::QuotedPrint'=> '0.07',
              'Pod::Html'             => '1.16',
              'Pod::Man'              => '2.26',
              'Pod::Text'             => '3.16',
              'Safe'                  => '2.33_01',
              'Scalar::Util'          => '1.25',
              'Search::Dict'          => '1.07',
              'Storable'              => '2.36',
              'TAP::Base'             => '3.25',
              'TAP::Formatter::Base'  => '3.25',
              'TAP::Formatter::Color' => '3.25',
              'TAP::Formatter::Console'=> '3.25',
              'TAP::Formatter::Console::ParallelSession'=> '3.25',
              'TAP::Formatter::Console::Session'=> '3.25',
              'TAP::Formatter::File'  => '3.25',
              'TAP::Formatter::File::Session'=> '3.25',
              'TAP::Formatter::Session'=> '3.25',
              'TAP::Harness'          => '3.25',
              'TAP::Object'           => '3.25',
              'TAP::Parser'           => '3.25',
              'TAP::Parser::Aggregator'=> '3.25',
              'TAP::Parser::Grammar'  => '3.25',
              'TAP::Parser::Iterator' => '3.25',
              'TAP::Parser::Iterator::Array'=> '3.25',
              'TAP::Parser::Iterator::Process'=> '3.25',
              'TAP::Parser::Iterator::Stream'=> '3.25',
              'TAP::Parser::IteratorFactory'=> '3.25',
              'TAP::Parser::Multiplexer'=> '3.25',
              'TAP::Parser::Result'   => '3.25',
              'TAP::Parser::Result::Bailout'=> '3.25',
              'TAP::Parser::Result::Comment'=> '3.25',
              'TAP::Parser::Result::Plan'=> '3.25',
              'TAP::Parser::Result::Pragma'=> '3.25',
              'TAP::Parser::Result::Test'=> '3.25',
              'TAP::Parser::Result::Unknown'=> '3.25',
              'TAP::Parser::Result::Version'=> '3.25',
              'TAP::Parser::Result::YAML'=> '3.25',
              'TAP::Parser::ResultFactory'=> '3.25',
              'TAP::Parser::Scheduler'=> '3.25',
              'TAP::Parser::Scheduler::Job'=> '3.25',
              'TAP::Parser::Scheduler::Spinner'=> '3.25',
              'TAP::Parser::Source'   => '3.25',
              'TAP::Parser::SourceHandler'=> '3.25',
              'TAP::Parser::SourceHandler::Executable'=> '3.25',
              'TAP::Parser::SourceHandler::File'=> '3.25',
              'TAP::Parser::SourceHandler::Handle'=> '3.25',
              'TAP::Parser::SourceHandler::Perl'=> '3.25',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.25',
              'TAP::Parser::Utils'    => '3.25',
              'TAP::Parser::YAMLish::Reader'=> '3.25',
              'TAP::Parser::YAMLish::Writer'=> '3.25',
              'Term::ANSIColor'       => '3.02',
              'Test::Harness'         => '3.25',
              'Unicode'               => '6.2.0',
              'Unicode::UCD'          => '0.44',
              'XS::APItest'           => '0.40',
              '_charnames'            => '1.32',
              'attributes'            => '0.2',
              'autodie'               => '2.11',
              'autodie::exception'    => '2.11',
              'autodie::exception::system'=> '2.11',
              'autodie::hints'        => '2.11',
              'bigint'                => '0.30',
              'charnames'             => '1.32',
              'feature'               => '1.29',
              'inc::latest'           => '0.40',
              'perlfaq'               => '5.0150040',
              're'                    => '0.20',
          },
          removed => {
              'List::Util::PP'        => 1,
              'Scalar::Util::PP'      => 1,
          }
      },
      5.017002 => {
          delta_from => 5.017001,
          changed => {
              'App::Prove'            => '3.25_01',
              'App::Prove::State'     => '3.25_01',
              'App::Prove::State::Result'=> '3.25_01',
              'App::Prove::State::Result::Test'=> '3.25_01',
              'B::Concise'            => '0.91',
              'Compress::Raw::Bzip2'  => '2.05201',
              'Compress::Raw::Zlib'   => '2.05401',
              'Exporter'              => '5.67',
              'Exporter::Heavy'       => '5.67',
              'Fatal'                 => '2.12',
              'File::Fetch'           => '0.36',
              'File::stat'            => '1.07',
              'IO'                    => '1.25_08',
              'IO::Socket'            => '1.35',
              'Module::CoreList'      => '2.69',
              'PerlIO::scalar'        => '0.15',
              'Socket'                => '2.002',
              'Storable'              => '2.37',
              'TAP::Base'             => '3.25_01',
              'TAP::Formatter::Base'  => '3.25_01',
              'TAP::Formatter::Color' => '3.25_01',
              'TAP::Formatter::Console'=> '3.25_01',
              'TAP::Formatter::Console::ParallelSession'=> '3.25_01',
              'TAP::Formatter::Console::Session'=> '3.25_01',
              'TAP::Formatter::File'  => '3.25_01',
              'TAP::Formatter::File::Session'=> '3.25_01',
              'TAP::Formatter::Session'=> '3.25_01',
              'TAP::Harness'          => '3.25_01',
              'TAP::Object'           => '3.25_01',
              'TAP::Parser'           => '3.25_01',
              'TAP::Parser::Aggregator'=> '3.25_01',
              'TAP::Parser::Grammar'  => '3.25_01',
              'TAP::Parser::Iterator' => '3.25_01',
              'TAP::Parser::Iterator::Array'=> '3.25_01',
              'TAP::Parser::Iterator::Process'=> '3.25_01',
              'TAP::Parser::Iterator::Stream'=> '3.25_01',
              'TAP::Parser::IteratorFactory'=> '3.25_01',
              'TAP::Parser::Multiplexer'=> '3.25_01',
              'TAP::Parser::Result'   => '3.25_01',
              'TAP::Parser::Result::Bailout'=> '3.25_01',
              'TAP::Parser::Result::Comment'=> '3.25_01',
              'TAP::Parser::Result::Plan'=> '3.25_01',
              'TAP::Parser::Result::Pragma'=> '3.25_01',
              'TAP::Parser::Result::Test'=> '3.25_01',
              'TAP::Parser::Result::Unknown'=> '3.25_01',
              'TAP::Parser::Result::Version'=> '3.25_01',
              'TAP::Parser::Result::YAML'=> '3.25_01',
              'TAP::Parser::ResultFactory'=> '3.25_01',
              'TAP::Parser::Scheduler'=> '3.25_01',
              'TAP::Parser::Scheduler::Job'=> '3.25_01',
              'TAP::Parser::Scheduler::Spinner'=> '3.25_01',
              'TAP::Parser::Source'   => '3.25_01',
              'TAP::Parser::SourceHandler'=> '3.25_01',
              'TAP::Parser::SourceHandler::Executable'=> '3.25_01',
              'TAP::Parser::SourceHandler::File'=> '3.25_01',
              'TAP::Parser::SourceHandler::Handle'=> '3.25_01',
              'TAP::Parser::SourceHandler::Perl'=> '3.25_01',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.25_01',
              'TAP::Parser::Utils'    => '3.25_01',
              'TAP::Parser::YAMLish::Reader'=> '3.25_01',
              'TAP::Parser::YAMLish::Writer'=> '3.25_01',
              'Test::Harness'         => '3.25_01',
              'Tie::StdHandle'        => '4.3',
              'XS::APItest'           => '0.41',
              'autodie'               => '2.12',
              'autodie::exception'    => '2.12',
              'autodie::exception::system'=> '2.12',
              'autodie::hints'        => '2.12',
              'diagnostics'           => '1.30',
              'overload'              => '1.20',
              're'                    => '0.21',
              'vars'                  => '1.03',
          },
          removed => {
          }
      },
      5.017003 => {
          delta_from => 5.017002,
          changed => {
              'B'                     => '1.37',
              'B::Concise'            => '0.92',
              'B::Debug'              => '1.18',
              'B::Deparse'            => '1.16',
              'CGI'                   => '3.60',
              'Compress::Raw::Bzip2'  => '2.055',
              'Compress::Raw::Zlib'   => '2.056',
              'Compress::Zlib'        => '2.055',
              'Data::Dumper'          => '2.135_07',
              'Devel::Peek'           => '1.09',
              'Encode'                => '2.47',
              'Encode::Alias'         => '2.16',
              'Encode::GSM0338'       => '2.02',
              'Encode::Unicode::UTF7' => '2.06',
              'IO::Compress::Adapter::Bzip2'=> '2.055',
              'IO::Compress::Adapter::Deflate'=> '2.055',
              'IO::Compress::Adapter::Identity'=> '2.055',
              'IO::Compress::Base'    => '2.055',
              'IO::Compress::Base::Common'=> '2.055',
              'IO::Compress::Bzip2'   => '2.055',
              'IO::Compress::Deflate' => '2.055',
              'IO::Compress::Gzip'    => '2.055',
              'IO::Compress::Gzip::Constants'=> '2.055',
              'IO::Compress::RawDeflate'=> '2.055',
              'IO::Compress::Zip'     => '2.055',
              'IO::Compress::Zip::Constants'=> '2.055',
              'IO::Compress::Zlib::Constants'=> '2.055',
              'IO::Compress::Zlib::Extra'=> '2.055',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.055',
              'IO::Uncompress::Adapter::Identity'=> '2.055',
              'IO::Uncompress::Adapter::Inflate'=> '2.055',
              'IO::Uncompress::AnyInflate'=> '2.055',
              'IO::Uncompress::AnyUncompress'=> '2.055',
              'IO::Uncompress::Base'  => '2.055',
              'IO::Uncompress::Bunzip2'=> '2.055',
              'IO::Uncompress::Gunzip'=> '2.055',
              'IO::Uncompress::Inflate'=> '2.055',
              'IO::Uncompress::RawInflate'=> '2.055',
              'IO::Uncompress::Unzip' => '2.055',
              'Module::Build'         => '0.4003',
              'Module::Build::Base'   => '0.4003',
              'Module::Build::Compat' => '0.4003',
              'Module::Build::Config' => '0.4003',
              'Module::Build::Cookbook'=> '0.4003',
              'Module::Build::Dumper' => '0.4003',
              'Module::Build::ModuleInfo'=> '0.4003',
              'Module::Build::Notes'  => '0.4003',
              'Module::Build::PPMMaker'=> '0.4003',
              'Module::Build::Platform::Amiga'=> '0.4003',
              'Module::Build::Platform::Default'=> '0.4003',
              'Module::Build::Platform::EBCDIC'=> '0.4003',
              'Module::Build::Platform::MPEiX'=> '0.4003',
              'Module::Build::Platform::MacOS'=> '0.4003',
              'Module::Build::Platform::RiscOS'=> '0.4003',
              'Module::Build::Platform::Unix'=> '0.4003',
              'Module::Build::Platform::VMS'=> '0.4003',
              'Module::Build::Platform::VOS'=> '0.4003',
              'Module::Build::Platform::Windows'=> '0.4003',
              'Module::Build::Platform::aix'=> '0.4003',
              'Module::Build::Platform::cygwin'=> '0.4003',
              'Module::Build::Platform::darwin'=> '0.4003',
              'Module::Build::Platform::os2'=> '0.4003',
              'Module::Build::PodParser'=> '0.4003',
              'Module::CoreList'      => '2.71',
              'Module::CoreList::TieHashDelta'=> '2.71',
              'Module::Load::Conditional'=> '0.54',
              'Module::Metadata'      => '1.000011',
              'Module::Pluggable'     => '4.3',
              'Module::Pluggable::Object'=> '4.3',
              'Pod::Simple'           => '3.23',
              'Pod::Simple::BlackBox' => '3.23',
              'Pod::Simple::Checker'  => '3.23',
              'Pod::Simple::Debug'    => '3.23',
              'Pod::Simple::DumpAsText'=> '3.23',
              'Pod::Simple::DumpAsXML'=> '3.23',
              'Pod::Simple::HTML'     => '3.23',
              'Pod::Simple::HTMLBatch'=> '3.23',
              'Pod::Simple::LinkSection'=> '3.23',
              'Pod::Simple::Methody'  => '3.23',
              'Pod::Simple::Progress' => '3.23',
              'Pod::Simple::PullParser'=> '3.23',
              'Pod::Simple::PullParserEndToken'=> '3.23',
              'Pod::Simple::PullParserStartToken'=> '3.23',
              'Pod::Simple::PullParserTextToken'=> '3.23',
              'Pod::Simple::PullParserToken'=> '3.23',
              'Pod::Simple::RTF'      => '3.23',
              'Pod::Simple::Search'   => '3.23',
              'Pod::Simple::SimpleTree'=> '3.23',
              'Pod::Simple::Text'     => '3.23',
              'Pod::Simple::TextContent'=> '3.23',
              'Pod::Simple::TiedOutFH'=> '3.23',
              'Pod::Simple::Transcode'=> '3.23',
              'Pod::Simple::TranscodeDumb'=> '3.23',
              'Pod::Simple::TranscodeSmart'=> '3.23',
              'Pod::Simple::XHTML'    => '3.23',
              'Pod::Simple::XMLOutStream'=> '3.23',
              'Socket'                => '2.004',
              'Storable'              => '2.38',
              'Sys::Syslog'           => '0.31',
              'Term::ReadLine'        => '1.10',
              'Text::Tabs'            => '2012.0818',
              'Text::Wrap'            => '2012.0818',
              'Time::Local'           => '1.2300',
              'Unicode::UCD'          => '0.45',
              'Win32'                 => '0.45',
              'Win32CORE'             => '0.03',
              'XS::APItest'           => '0.42',
              'inc::latest'           => '0.4003',
              'perlfaq'               => '5.0150041',
              're'                    => '0.22',
          },
          removed => {
          }
      },
      5.017004 => {
          delta_from => 5.017003,
          changed => {
              'Archive::Tar'          => '1.90',
              'Archive::Tar::Constant'=> '1.90',
              'Archive::Tar::File'    => '1.90',
              'B'                     => '1.38',
              'B::Concise'            => '0.93',
              'B::Deparse'            => '1.17',
              'B::Xref'               => '1.04',
              'CPANPLUS'              => '0.9131',
              'CPANPLUS::Internals'   => '0.9131',
              'CPANPLUS::Shell::Default'=> '0.9131',
              'DB_File'               => '1.827',
              'Devel::Peek'           => '1.10',
              'DynaLoader'            => '1.16',
              'Errno'                 => '1.16',
              'ExtUtils::ParseXS'     => '3.18',
              'ExtUtils::ParseXS::Constants'=> '3.18',
              'ExtUtils::ParseXS::CountLines'=> '3.18',
              'ExtUtils::ParseXS::Utilities'=> '3.18',
              'File::Copy'            => '2.24',
              'File::Find'            => '1.22',
              'IPC::Open3'            => '1.13',
              'Locale::Codes'         => '3.23',
              'Locale::Codes::Constants'=> '3.23',
              'Locale::Codes::Country'=> '3.23',
              'Locale::Codes::Country_Codes'=> '3.23',
              'Locale::Codes::Country_Retired'=> '3.23',
              'Locale::Codes::Currency'=> '3.23',
              'Locale::Codes::Currency_Codes'=> '3.23',
              'Locale::Codes::Currency_Retired'=> '3.23',
              'Locale::Codes::LangExt'=> '3.23',
              'Locale::Codes::LangExt_Codes'=> '3.23',
              'Locale::Codes::LangExt_Retired'=> '3.23',
              'Locale::Codes::LangFam'=> '3.23',
              'Locale::Codes::LangFam_Codes'=> '3.23',
              'Locale::Codes::LangFam_Retired'=> '3.23',
              'Locale::Codes::LangVar'=> '3.23',
              'Locale::Codes::LangVar_Codes'=> '3.23',
              'Locale::Codes::LangVar_Retired'=> '3.23',
              'Locale::Codes::Language'=> '3.23',
              'Locale::Codes::Language_Codes'=> '3.23',
              'Locale::Codes::Language_Retired'=> '3.23',
              'Locale::Codes::Script' => '3.23',
              'Locale::Codes::Script_Codes'=> '3.23',
              'Locale::Codes::Script_Retired'=> '3.23',
              'Locale::Country'       => '3.23',
              'Locale::Currency'      => '3.23',
              'Locale::Language'      => '3.23',
              'Locale::Script'        => '3.23',
              'Math::BigFloat::Trace' => '0.30',
              'Math::BigInt::Trace'   => '0.30',
              'Module::CoreList'      => '2.73',
              'Module::CoreList::TieHashDelta'=> '2.73',
              'Opcode'                => '1.24',
              'Socket'                => '2.006',
              'Storable'              => '2.39',
              'Sys::Syslog'           => '0.32',
              'Unicode::UCD'          => '0.46',
              'XS::APItest'           => '0.43',
              'bignum'                => '0.30',
              'bigrat'                => '0.30',
              'constant'              => '1.24',
              'feature'               => '1.30',
              'threads::shared'       => '1.41',
              'version'               => '0.9901',
              'warnings'              => '1.14',
          },
          removed => {
          }
      },
      5.017005 => {
          delta_from => 5.017004,
          changed => {
              'AutoLoader'            => '5.73',
              'B'                     => '1.39',
              'B::Deparse'            => '1.18',
              'CPANPLUS'              => '0.9133',
              'CPANPLUS::Internals'   => '0.9133',
              'CPANPLUS::Shell::Default'=> '0.9133',
              'Carp'                  => '1.27',
              'Carp::Heavy'           => '1.27',
              'Data::Dumper'          => '2.136',
              'Digest::SHA'           => '5.72',
              'ExtUtils::CBuilder'    => '0.280209',
              'ExtUtils::CBuilder::Base'=> '0.280209',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280209',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280209',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280209',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280209',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280209',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280209',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280209',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280209',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280209',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280209',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280209',
              'File::Copy'            => '2.25',
              'File::Glob'            => '1.18',
              'HTTP::Tiny'            => '0.024',
              'Module::CoreList'      => '2.75',
              'Module::CoreList::TieHashDelta'=> '2.75',
              'PerlIO::encoding'      => '0.16',
              'Unicode::Collate'      => '0.90',
              'Unicode::Collate::Locale'=> '0.90',
              'Unicode::Normalize'    => '1.15',
              'Win32CORE'             => '0.04',
              'XS::APItest'           => '0.44',
              'attributes'            => '0.21',
              'bigint'                => '0.31',
              'bignum'                => '0.31',
              'bigrat'                => '0.31',
              'feature'               => '1.31',
              'threads::shared'       => '1.42',
              'warnings'              => '1.15',
          },
          removed => {
          }
      },
      5.017006 => {
          delta_from => 5.017005,
          changed => {
              'B'                     => '1.40',
              'B::Concise'            => '0.94',
              'B::Deparse'            => '1.19',
              'B::Xref'               => '1.05',
              'CGI'                   => '3.63',
              'CGI::Util'             => '3.62',
              'CPAN'                  => '1.99_51',
              'CPANPLUS::Dist::Build' => '0.64',
              'CPANPLUS::Dist::Build::Constants'=> '0.64',
              'Carp'                  => '1.28',
              'Carp::Heavy'           => '1.28',
              'Compress::Raw::Bzip2'  => '2.058',
              'Compress::Raw::Zlib'   => '2.058',
              'Compress::Zlib'        => '2.058',
              'Data::Dumper'          => '2.137',
              'Digest::SHA'           => '5.73',
              'DynaLoader'            => '1.17',
              'Env'                   => '1.04',
              'Errno'                 => '1.17',
              'ExtUtils::Manifest'    => '1.62',
              'ExtUtils::Typemaps'    => '3.18',
              'ExtUtils::Typemaps::Cmd'=> '3.18',
              'ExtUtils::Typemaps::InputMap'=> '3.18',
              'ExtUtils::Typemaps::OutputMap'=> '3.18',
              'ExtUtils::Typemaps::Type'=> '3.18',
              'Fatal'                 => '2.13',
              'File::Find'            => '1.23',
              'Hash::Util'            => '0.13',
              'IO::Compress::Adapter::Bzip2'=> '2.058',
              'IO::Compress::Adapter::Deflate'=> '2.058',
              'IO::Compress::Adapter::Identity'=> '2.058',
              'IO::Compress::Base'    => '2.058',
              'IO::Compress::Base::Common'=> '2.058',
              'IO::Compress::Bzip2'   => '2.058',
              'IO::Compress::Deflate' => '2.058',
              'IO::Compress::Gzip'    => '2.058',
              'IO::Compress::Gzip::Constants'=> '2.058',
              'IO::Compress::RawDeflate'=> '2.058',
              'IO::Compress::Zip'     => '2.058',
              'IO::Compress::Zip::Constants'=> '2.058',
              'IO::Compress::Zlib::Constants'=> '2.058',
              'IO::Compress::Zlib::Extra'=> '2.058',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.058',
              'IO::Uncompress::Adapter::Identity'=> '2.058',
              'IO::Uncompress::Adapter::Inflate'=> '2.058',
              'IO::Uncompress::AnyInflate'=> '2.058',
              'IO::Uncompress::AnyUncompress'=> '2.058',
              'IO::Uncompress::Base'  => '2.058',
              'IO::Uncompress::Bunzip2'=> '2.058',
              'IO::Uncompress::Gunzip'=> '2.058',
              'IO::Uncompress::Inflate'=> '2.058',
              'IO::Uncompress::RawInflate'=> '2.058',
              'IO::Uncompress::Unzip' => '2.058',
              'Module::CoreList'      => '2.78',
              'Module::CoreList::TieHashDelta'=> '2.77',
              'Module::Pluggable'     => '4.5',
              'Module::Pluggable::Object'=> '4.5',
              'Opcode'                => '1.25',
              'Sys::Hostname'         => '1.17',
              'Term::UI'              => '0.32',
              'Thread::Queue'         => '3.01',
              'Tie::Hash::NamedCapture'=> '0.09',
              'Unicode::Collate'      => '0.93',
              'Unicode::Collate::CJK::Korean'=> '0.93',
              'Unicode::Collate::Locale'=> '0.93',
              'Unicode::Normalize'    => '1.16',
              'Unicode::UCD'          => '0.47',
              'XS::APItest'           => '0.46',
              '_charnames'            => '1.33',
              'autodie'               => '2.13',
              'autodie::exception'    => '2.13',
              'autodie::exception::system'=> '2.13',
              'autodie::hints'        => '2.13',
              'charnames'             => '1.33',
              're'                    => '0.23',
          },
          removed => {
          }
      },
      5.017007 => {
          delta_from => 5.017006,
          changed => {
              'B'                     => '1.41',
              'CPANPLUS::Dist::Build' => '0.68',
              'CPANPLUS::Dist::Build::Constants'=> '0.68',
              'Compress::Raw::Bzip2'  => '2.059',
              'Compress::Raw::Zlib'   => '2.059',
              'Compress::Zlib'        => '2.059',
              'Cwd'                   => '3.39_03',
              'Data::Dumper'          => '2.139',
              'Devel::Peek'           => '1.11',
              'Digest::SHA'           => '5.80',
              'DynaLoader'            => '1.18',
              'English'               => '1.06',
              'Errno'                 => '1.18',
              'ExtUtils::Command::MM' => '6.64',
              'ExtUtils::Liblist'     => '6.64',
              'ExtUtils::Liblist::Kid'=> '6.64',
              'ExtUtils::MM'          => '6.64',
              'ExtUtils::MM_AIX'      => '6.64',
              'ExtUtils::MM_Any'      => '6.64',
              'ExtUtils::MM_BeOS'     => '6.64',
              'ExtUtils::MM_Cygwin'   => '6.64',
              'ExtUtils::MM_DOS'      => '6.64',
              'ExtUtils::MM_Darwin'   => '6.64',
              'ExtUtils::MM_MacOS'    => '6.64',
              'ExtUtils::MM_NW5'      => '6.64',
              'ExtUtils::MM_OS2'      => '6.64',
              'ExtUtils::MM_QNX'      => '6.64',
              'ExtUtils::MM_UWIN'     => '6.64',
              'ExtUtils::MM_Unix'     => '6.64',
              'ExtUtils::MM_VMS'      => '6.64',
              'ExtUtils::MM_VOS'      => '6.64',
              'ExtUtils::MM_Win32'    => '6.64',
              'ExtUtils::MM_Win95'    => '6.64',
              'ExtUtils::MY'          => '6.64',
              'ExtUtils::MakeMaker'   => '6.64',
              'ExtUtils::MakeMaker::Config'=> '6.64',
              'ExtUtils::Mkbootstrap' => '6.64',
              'ExtUtils::Mksymlists'  => '6.64',
              'ExtUtils::testlib'     => '6.64',
              'File::DosGlob'         => '1.09',
              'File::Glob'            => '1.19',
              'GDBM_File'             => '1.15',
              'IO::Compress::Adapter::Bzip2'=> '2.059',
              'IO::Compress::Adapter::Deflate'=> '2.059',
              'IO::Compress::Adapter::Identity'=> '2.059',
              'IO::Compress::Base'    => '2.059',
              'IO::Compress::Base::Common'=> '2.059',
              'IO::Compress::Bzip2'   => '2.059',
              'IO::Compress::Deflate' => '2.059',
              'IO::Compress::Gzip'    => '2.059',
              'IO::Compress::Gzip::Constants'=> '2.059',
              'IO::Compress::RawDeflate'=> '2.059',
              'IO::Compress::Zip'     => '2.059',
              'IO::Compress::Zip::Constants'=> '2.059',
              'IO::Compress::Zlib::Constants'=> '2.059',
              'IO::Compress::Zlib::Extra'=> '2.059',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.059',
              'IO::Uncompress::Adapter::Identity'=> '2.059',
              'IO::Uncompress::Adapter::Inflate'=> '2.059',
              'IO::Uncompress::AnyInflate'=> '2.059',
              'IO::Uncompress::AnyUncompress'=> '2.059',
              'IO::Uncompress::Base'  => '2.059',
              'IO::Uncompress::Bunzip2'=> '2.059',
              'IO::Uncompress::Gunzip'=> '2.059',
              'IO::Uncompress::Inflate'=> '2.059',
              'IO::Uncompress::RawInflate'=> '2.059',
              'IO::Uncompress::Unzip' => '2.059',
              'List::Util'            => '1.26',
              'List::Util::XS'        => '1.26',
              'Locale::Codes'         => '3.24',
              'Locale::Codes::Constants'=> '3.24',
              'Locale::Codes::Country'=> '3.24',
              'Locale::Codes::Country_Codes'=> '3.24',
              'Locale::Codes::Country_Retired'=> '3.24',
              'Locale::Codes::Currency'=> '3.24',
              'Locale::Codes::Currency_Codes'=> '3.24',
              'Locale::Codes::Currency_Retired'=> '3.24',
              'Locale::Codes::LangExt'=> '3.24',
              'Locale::Codes::LangExt_Codes'=> '3.24',
              'Locale::Codes::LangExt_Retired'=> '3.24',
              'Locale::Codes::LangFam'=> '3.24',
              'Locale::Codes::LangFam_Codes'=> '3.24',
              'Locale::Codes::LangFam_Retired'=> '3.24',
              'Locale::Codes::LangVar'=> '3.24',
              'Locale::Codes::LangVar_Codes'=> '3.24',
              'Locale::Codes::LangVar_Retired'=> '3.24',
              'Locale::Codes::Language'=> '3.24',
              'Locale::Codes::Language_Codes'=> '3.24',
              'Locale::Codes::Language_Retired'=> '3.24',
              'Locale::Codes::Script' => '3.24',
              'Locale::Codes::Script_Codes'=> '3.24',
              'Locale::Codes::Script_Retired'=> '3.24',
              'Locale::Country'       => '3.24',
              'Locale::Currency'      => '3.24',
              'Locale::Language'      => '3.24',
              'Locale::Maketext'      => '1.23',
              'Locale::Script'        => '3.24',
              'Module::CoreList'      => '2.79',
              'Module::CoreList::TieHashDelta'=> '2.79',
              'POSIX'                 => '1.32',
              'Scalar::Util'          => '1.26',
              'Socket'                => '2.006_001',
              'Storable'              => '2.40',
              'Term::ReadLine'        => '1.11',
              'Unicode::Collate'      => '0.96',
              'Unicode::Collate::CJK::Stroke'=> '0.94',
              'Unicode::Collate::CJK::Zhuyin'=> '0.94',
              'Unicode::Collate::Locale'=> '0.96',
              'XS::APItest'           => '0.48',
              'XS::Typemap'           => '0.09',
              '_charnames'            => '1.34',
              'charnames'             => '1.34',
              'feature'               => '1.32',
              'mro'                   => '1.10',
              'sigtrap'               => '1.07',
              'sort'                  => '2.02',
          },
          removed => {
          }
      },
      5.017008 => {
          delta_from => 5.017007,
          changed => {
              'Archive::Extract'      => '0.62',
              'B'                     => '1.42',
              'B::Concise'            => '0.95',
              'Compress::Raw::Bzip2'  => '2.060',
              'Compress::Raw::Zlib'   => '2.060',
              'Compress::Zlib'        => '2.060',
              'Cwd'                   => '3.40',
              'Data::Dumper'          => '2.141',
              'Digest::SHA'           => '5.81',
              'ExtUtils::Install'     => '1.59',
              'File::Fetch'           => '0.38',
              'File::Path'            => '2.09',
              'File::Spec'            => '3.40',
              'File::Spec::Cygwin'    => '3.40',
              'File::Spec::Epoc'      => '3.40',
              'File::Spec::Functions' => '3.40',
              'File::Spec::Mac'       => '3.40',
              'File::Spec::OS2'       => '3.40',
              'File::Spec::Unix'      => '3.40',
              'File::Spec::VMS'       => '3.40',
              'File::Spec::Win32'     => '3.40',
              'HTTP::Tiny'            => '0.025',
              'Hash::Util'            => '0.14',
              'I18N::LangTags'        => '0.39',
              'I18N::LangTags::List'  => '0.39',
              'I18N::Langinfo'        => '0.09',
              'IO'                    => '1.26',
              'IO::Compress::Adapter::Bzip2'=> '2.060',
              'IO::Compress::Adapter::Deflate'=> '2.060',
              'IO::Compress::Adapter::Identity'=> '2.060',
              'IO::Compress::Base'    => '2.060',
              'IO::Compress::Base::Common'=> '2.060',
              'IO::Compress::Bzip2'   => '2.060',
              'IO::Compress::Deflate' => '2.060',
              'IO::Compress::Gzip'    => '2.060',
              'IO::Compress::Gzip::Constants'=> '2.060',
              'IO::Compress::RawDeflate'=> '2.060',
              'IO::Compress::Zip'     => '2.060',
              'IO::Compress::Zip::Constants'=> '2.060',
              'IO::Compress::Zlib::Constants'=> '2.060',
              'IO::Compress::Zlib::Extra'=> '2.060',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.060',
              'IO::Uncompress::Adapter::Identity'=> '2.060',
              'IO::Uncompress::Adapter::Inflate'=> '2.060',
              'IO::Uncompress::AnyInflate'=> '2.060',
              'IO::Uncompress::AnyUncompress'=> '2.060',
              'IO::Uncompress::Base'  => '2.060',
              'IO::Uncompress::Bunzip2'=> '2.060',
              'IO::Uncompress::Gunzip'=> '2.060',
              'IO::Uncompress::Inflate'=> '2.060',
              'IO::Uncompress::RawInflate'=> '2.060',
              'IO::Uncompress::Unzip' => '2.060',
              'List::Util'            => '1.27',
              'List::Util::XS'        => '1.27',
              'Module::CoreList'      => '2.80',
              'Module::CoreList::TieHashDelta'=> '2.80',
              'Pod::Html'             => '1.17',
              'Pod::LaTeX'            => '0.61',
              'Pod::Man'              => '2.27',
              'Pod::Text'             => '3.17',
              'Pod::Text::Color'      => '2.07',
              'Pod::Text::Overstrike' => '2.05',
              'Pod::Text::Termcap'    => '2.07',
              'Safe'                  => '2.34',
              'Scalar::Util'          => '1.27',
              'Socket'                => '2.009',
              'Term::ANSIColor'       => '4.02',
              'Test'                  => '1.26',
              'Unicode::Collate'      => '0.97',
              'XS::APItest'           => '0.51',
              'XS::Typemap'           => '0.10',
              '_charnames'            => '1.35',
              'charnames'             => '1.35',
              'constant'              => '1.25',
              'diagnostics'           => '1.31',
              'threads::shared'       => '1.43',
              'warnings'              => '1.16',
          },
          removed => {
          }
      },
      5.017009 => {
          delta_from => 5.017008,
          changed => {
              'App::Cpan'             => '1.60_02',
              'App::Prove'            => '3.26',
              'App::Prove::State'     => '3.26',
              'App::Prove::State::Result'=> '3.26',
              'App::Prove::State::Result::Test'=> '3.26',
              'Archive::Extract'      => '0.68',
              'Attribute::Handlers'   => '0.94',
              'B::Lint'               => '1.17',
              'B::Lint::Debug'        => '1.17',
              'Benchmark'             => '1.14',
              'CPAN'                  => '2.00',
              'CPAN::Distribution'    => '2.00',
              'CPAN::FirstTime'       => '5.5304',
              'CPAN::Nox'             => '5.5001',
              'CPANPLUS'              => '0.9135',
              'CPANPLUS::Backend'     => '0.9135',
              'CPANPLUS::Backend::RV' => '0.9135',
              'CPANPLUS::Config'      => '0.9135',
              'CPANPLUS::Config::HomeEnv'=> '0.9135',
              'CPANPLUS::Configure'   => '0.9135',
              'CPANPLUS::Configure::Setup'=> '0.9135',
              'CPANPLUS::Dist'        => '0.9135',
              'CPANPLUS::Dist::Autobundle'=> '0.9135',
              'CPANPLUS::Dist::Base'  => '0.9135',
              'CPANPLUS::Dist::Build' => '0.70',
              'CPANPLUS::Dist::Build::Constants'=> '0.70',
              'CPANPLUS::Dist::MM'    => '0.9135',
              'CPANPLUS::Dist::Sample'=> '0.9135',
              'CPANPLUS::Error'       => '0.9135',
              'CPANPLUS::Internals'   => '0.9135',
              'CPANPLUS::Internals::Constants'=> '0.9135',
              'CPANPLUS::Internals::Constants::Report'=> '0.9135',
              'CPANPLUS::Internals::Extract'=> '0.9135',
              'CPANPLUS::Internals::Fetch'=> '0.9135',
              'CPANPLUS::Internals::Report'=> '0.9135',
              'CPANPLUS::Internals::Search'=> '0.9135',
              'CPANPLUS::Internals::Source'=> '0.9135',
              'CPANPLUS::Internals::Source::Memory'=> '0.9135',
              'CPANPLUS::Internals::Source::SQLite'=> '0.9135',
              'CPANPLUS::Internals::Source::SQLite::Tie'=> '0.9135',
              'CPANPLUS::Internals::Utils'=> '0.9135',
              'CPANPLUS::Internals::Utils::Autoflush'=> '0.9135',
              'CPANPLUS::Module'      => '0.9135',
              'CPANPLUS::Module::Author'=> '0.9135',
              'CPANPLUS::Module::Author::Fake'=> '0.9135',
              'CPANPLUS::Module::Checksums'=> '0.9135',
              'CPANPLUS::Module::Fake'=> '0.9135',
              'CPANPLUS::Module::Signature'=> '0.9135',
              'CPANPLUS::Selfupdate'  => '0.9135',
              'CPANPLUS::Shell'       => '0.9135',
              'CPANPLUS::Shell::Classic'=> '0.9135',
              'CPANPLUS::Shell::Default'=> '0.9135',
              'CPANPLUS::Shell::Default::Plugins::CustomSource'=> '0.9135',
              'CPANPLUS::Shell::Default::Plugins::Remote'=> '0.9135',
              'CPANPLUS::Shell::Default::Plugins::Source'=> '0.9135',
              'Config'                => '5.017009',
              'Config::Perl::V'       => '0.17',
              'DBM_Filter'            => '0.05',
              'Data::Dumper'          => '2.142',
              'Digest::SHA'           => '5.82',
              'Encode'                => '2.48',
              'ExtUtils::Installed'   => '1.999003',
              'ExtUtils::Manifest'    => '1.63',
              'ExtUtils::ParseXS::Utilities'=> '3.19',
              'ExtUtils::Typemaps'    => '3.19',
              'File::CheckTree'       => '4.42',
              'File::DosGlob'         => '1.10',
              'File::Temp'            => '0.22_90',
              'Filter::Simple'        => '0.89',
              'IO'                    => '1.27',
              'Log::Message'          => '0.06',
              'Log::Message::Config'  => '0.06',
              'Log::Message::Handlers'=> '0.06',
              'Log::Message::Item'    => '0.06',
              'Log::Message::Simple'  => '0.10',
              'Math::BigInt'          => '1.999',
              'Module::CoreList'      => '2.82',
              'Module::CoreList::TieHashDelta'=> '2.82',
              'Module::Load'          => '0.24',
              'Module::Pluggable'     => '4.6',
              'Module::Pluggable::Object'=> '4.6',
              'OS2::DLL'              => '1.05',
              'OS2::ExtAttr'          => '0.03',
              'OS2::Process'          => '1.08',
              'Object::Accessor'      => '0.46',
              'PerlIO::scalar'        => '0.16',
              'Pod::Checker'          => '1.60',
              'Pod::Find'             => '1.60',
              'Pod::Html'             => '1.18',
              'Pod::InputObjects'     => '1.60',
              'Pod::ParseUtils'       => '1.60',
              'Pod::Parser'           => '1.60',
              'Pod::Perldoc'          => '3.19',
              'Pod::Perldoc::BaseTo'  => '3.19',
              'Pod::Perldoc::GetOptsOO'=> '3.19',
              'Pod::Perldoc::ToANSI'  => '3.19',
              'Pod::Perldoc::ToChecker'=> '3.19',
              'Pod::Perldoc::ToMan'   => '3.19',
              'Pod::Perldoc::ToNroff' => '3.19',
              'Pod::Perldoc::ToPod'   => '3.19',
              'Pod::Perldoc::ToRtf'   => '3.19',
              'Pod::Perldoc::ToTerm'  => '3.19',
              'Pod::Perldoc::ToText'  => '3.19',
              'Pod::Perldoc::ToTk'    => '3.19',
              'Pod::Perldoc::ToXml'   => '3.19',
              'Pod::PlainText'        => '2.06',
              'Pod::Select'           => '1.60',
              'Pod::Usage'            => '1.61',
              'SelfLoader'            => '1.21',
              'TAP::Base'             => '3.26',
              'TAP::Formatter::Base'  => '3.26',
              'TAP::Formatter::Color' => '3.26',
              'TAP::Formatter::Console'=> '3.26',
              'TAP::Formatter::Console::ParallelSession'=> '3.26',
              'TAP::Formatter::Console::Session'=> '3.26',
              'TAP::Formatter::File'  => '3.26',
              'TAP::Formatter::File::Session'=> '3.26',
              'TAP::Formatter::Session'=> '3.26',
              'TAP::Harness'          => '3.26',
              'TAP::Object'           => '3.26',
              'TAP::Parser'           => '3.26',
              'TAP::Parser::Aggregator'=> '3.26',
              'TAP::Parser::Grammar'  => '3.26',
              'TAP::Parser::Iterator' => '3.26',
              'TAP::Parser::Iterator::Array'=> '3.26',
              'TAP::Parser::Iterator::Process'=> '3.26',
              'TAP::Parser::Iterator::Stream'=> '3.26',
              'TAP::Parser::IteratorFactory'=> '3.26',
              'TAP::Parser::Multiplexer'=> '3.26',
              'TAP::Parser::Result'   => '3.26',
              'TAP::Parser::Result::Bailout'=> '3.26',
              'TAP::Parser::Result::Comment'=> '3.26',
              'TAP::Parser::Result::Plan'=> '3.26',
              'TAP::Parser::Result::Pragma'=> '3.26',
              'TAP::Parser::Result::Test'=> '3.26',
              'TAP::Parser::Result::Unknown'=> '3.26',
              'TAP::Parser::Result::Version'=> '3.26',
              'TAP::Parser::Result::YAML'=> '3.26',
              'TAP::Parser::ResultFactory'=> '3.26',
              'TAP::Parser::Scheduler'=> '3.26',
              'TAP::Parser::Scheduler::Job'=> '3.26',
              'TAP::Parser::Scheduler::Spinner'=> '3.26',
              'TAP::Parser::Source'   => '3.26',
              'TAP::Parser::SourceHandler'=> '3.26',
              'TAP::Parser::SourceHandler::Executable'=> '3.26',
              'TAP::Parser::SourceHandler::File'=> '3.26',
              'TAP::Parser::SourceHandler::Handle'=> '3.26',
              'TAP::Parser::SourceHandler::Perl'=> '3.26',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.26',
              'TAP::Parser::Utils'    => '3.26',
              'TAP::Parser::YAMLish::Reader'=> '3.26',
              'TAP::Parser::YAMLish::Writer'=> '3.26',
              'Term::UI'              => '0.34',
              'Test::Harness'         => '3.26',
              'Text::Soundex'         => '3.04',
              'Thread::Queue'         => '3.02',
              'Unicode::UCD'          => '0.50',
              'Win32'                 => '0.46',
              'Win32API::File'        => '0.1201',
              '_charnames'            => '1.36',
              'arybase'               => '0.06',
              'bigint'                => '0.32',
              'bignum'                => '0.32',
              'charnames'             => '1.36',
              'filetest'              => '1.03',
              'locale'                => '1.02',
              'overload'              => '1.21',
              'warnings'              => '1.17',
          },
          removed => {
          }
      },
      5.017010 => {
          delta_from => 5.017009,
          changed => {
              'Benchmark'             => '1.15',
              'Config'                => '5.017009',
              'Data::Dumper'          => '2.145',
              'Digest::SHA'           => '5.84',
              'Encode'                => '2.49',
              'ExtUtils::Command::MM' => '6.65_01',
              'ExtUtils::Liblist'     => '6.65_01',
              'ExtUtils::Liblist::Kid'=> '6.65_01',
              'ExtUtils::MM'          => '6.65_01',
              'ExtUtils::MM_AIX'      => '6.65_01',
              'ExtUtils::MM_Any'      => '6.65_01',
              'ExtUtils::MM_BeOS'     => '6.65_01',
              'ExtUtils::MM_Cygwin'   => '6.65_01',
              'ExtUtils::MM_DOS'      => '6.65_01',
              'ExtUtils::MM_Darwin'   => '6.65_01',
              'ExtUtils::MM_MacOS'    => '6.65_01',
              'ExtUtils::MM_NW5'      => '6.65_01',
              'ExtUtils::MM_OS2'      => '6.65_01',
              'ExtUtils::MM_QNX'      => '6.65_01',
              'ExtUtils::MM_UWIN'     => '6.65_01',
              'ExtUtils::MM_Unix'     => '6.65_01',
              'ExtUtils::MM_VMS'      => '6.65_01',
              'ExtUtils::MM_VOS'      => '6.65_01',
              'ExtUtils::MM_Win32'    => '6.65_01',
              'ExtUtils::MM_Win95'    => '6.65_01',
              'ExtUtils::MY'          => '6.65_01',
              'ExtUtils::MakeMaker'   => '6.65_01',
              'ExtUtils::MakeMaker::Config'=> '6.65_01',
              'ExtUtils::Mkbootstrap' => '6.65_01',
              'ExtUtils::Mksymlists'  => '6.65_01',
              'ExtUtils::testlib'     => '6.65_01',
              'File::Copy'            => '2.26',
              'File::Temp'            => '0.23',
              'Getopt::Long'          => '2.39',
              'Hash::Util'            => '0.15',
              'I18N::Langinfo'        => '0.10',
              'IPC::Cmd'              => '0.80',
              'JSON::PP'              => '2.27202',
              'Locale::Codes'         => '3.25',
              'Locale::Codes::Constants'=> '3.25',
              'Locale::Codes::Country'=> '3.25',
              'Locale::Codes::Country_Codes'=> '3.25',
              'Locale::Codes::Country_Retired'=> '3.25',
              'Locale::Codes::Currency'=> '3.25',
              'Locale::Codes::Currency_Codes'=> '3.25',
              'Locale::Codes::Currency_Retired'=> '3.25',
              'Locale::Codes::LangExt'=> '3.25',
              'Locale::Codes::LangExt_Codes'=> '3.25',
              'Locale::Codes::LangExt_Retired'=> '3.25',
              'Locale::Codes::LangFam'=> '3.25',
              'Locale::Codes::LangFam_Codes'=> '3.25',
              'Locale::Codes::LangFam_Retired'=> '3.25',
              'Locale::Codes::LangVar'=> '3.25',
              'Locale::Codes::LangVar_Codes'=> '3.25',
              'Locale::Codes::LangVar_Retired'=> '3.25',
              'Locale::Codes::Language'=> '3.25',
              'Locale::Codes::Language_Codes'=> '3.25',
              'Locale::Codes::Language_Retired'=> '3.25',
              'Locale::Codes::Script' => '3.25',
              'Locale::Codes::Script_Codes'=> '3.25',
              'Locale::Codes::Script_Retired'=> '3.25',
              'Locale::Country'       => '3.25',
              'Locale::Currency'      => '3.25',
              'Locale::Language'      => '3.25',
              'Locale::Script'        => '3.25',
              'Math::BigFloat'        => '1.998',
              'Math::BigFloat::Trace' => '0.32',
              'Math::BigInt'          => '1.9991',
              'Math::BigInt::CalcEmu' => '1.998',
              'Math::BigInt::Trace'   => '0.32',
              'Math::BigRat'          => '0.2604',
              'Module::CoreList'      => '2.84',
              'Module::CoreList::TieHashDelta'=> '2.84',
              'Module::Pluggable'     => '4.7',
              'Net::Ping'             => '2.41',
              'Perl::OSType'          => '1.003',
              'Pod::Simple'           => '3.26',
              'Pod::Simple::BlackBox' => '3.26',
              'Pod::Simple::Checker'  => '3.26',
              'Pod::Simple::Debug'    => '3.26',
              'Pod::Simple::DumpAsText'=> '3.26',
              'Pod::Simple::DumpAsXML'=> '3.26',
              'Pod::Simple::HTML'     => '3.26',
              'Pod::Simple::HTMLBatch'=> '3.26',
              'Pod::Simple::LinkSection'=> '3.26',
              'Pod::Simple::Methody'  => '3.26',
              'Pod::Simple::Progress' => '3.26',
              'Pod::Simple::PullParser'=> '3.26',
              'Pod::Simple::PullParserEndToken'=> '3.26',
              'Pod::Simple::PullParserStartToken'=> '3.26',
              'Pod::Simple::PullParserTextToken'=> '3.26',
              'Pod::Simple::PullParserToken'=> '3.26',
              'Pod::Simple::RTF'      => '3.26',
              'Pod::Simple::Search'   => '3.26',
              'Pod::Simple::SimpleTree'=> '3.26',
              'Pod::Simple::Text'     => '3.26',
              'Pod::Simple::TextContent'=> '3.26',
              'Pod::Simple::TiedOutFH'=> '3.26',
              'Pod::Simple::Transcode'=> '3.26',
              'Pod::Simple::TranscodeDumb'=> '3.26',
              'Pod::Simple::TranscodeSmart'=> '3.26',
              'Pod::Simple::XHTML'    => '3.26',
              'Pod::Simple::XMLOutStream'=> '3.26',
              'Safe'                  => '2.35',
              'Term::ReadLine'        => '1.12',
              'Text::ParseWords'      => '3.28',
              'Tie::File'             => '0.99',
              'Unicode::UCD'          => '0.51',
              'Win32'                 => '0.47',
              'bigint'                => '0.33',
              'bignum'                => '0.33',
              'bigrat'                => '0.33',
              'constant'              => '1.27',
              'perlfaq'               => '5.0150042',
              'version'               => '0.9902',
          },
          removed => {
          }
      },
      5.017011 => {
          delta_from => 5.017010,
          changed => {
              'App::Cpan'             => '1.61',
              'B::Deparse'            => '1.20',
              'Config'                => '5.017009',
              'Exporter'              => '5.68',
              'Exporter::Heavy'       => '5.68',
              'ExtUtils::CBuilder'    => '0.280210',
              'ExtUtils::Command::MM' => '6.66',
              'ExtUtils::Liblist'     => '6.66',
              'ExtUtils::Liblist::Kid'=> '6.66',
              'ExtUtils::MM'          => '6.66',
              'ExtUtils::MM_AIX'      => '6.66',
              'ExtUtils::MM_Any'      => '6.66',
              'ExtUtils::MM_BeOS'     => '6.66',
              'ExtUtils::MM_Cygwin'   => '6.66',
              'ExtUtils::MM_DOS'      => '6.66',
              'ExtUtils::MM_Darwin'   => '6.66',
              'ExtUtils::MM_MacOS'    => '6.66',
              'ExtUtils::MM_NW5'      => '6.66',
              'ExtUtils::MM_OS2'      => '6.66',
              'ExtUtils::MM_QNX'      => '6.66',
              'ExtUtils::MM_UWIN'     => '6.66',
              'ExtUtils::MM_Unix'     => '6.66',
              'ExtUtils::MM_VMS'      => '6.66',
              'ExtUtils::MM_VOS'      => '6.66',
              'ExtUtils::MM_Win32'    => '6.66',
              'ExtUtils::MM_Win95'    => '6.66',
              'ExtUtils::MY'          => '6.66',
              'ExtUtils::MakeMaker'   => '6.66',
              'ExtUtils::MakeMaker::Config'=> '6.66',
              'ExtUtils::Mkbootstrap' => '6.66',
              'ExtUtils::Mksymlists'  => '6.66',
              'ExtUtils::testlib'     => '6.66',
              'File::Glob'            => '1.20',
              'IO'                    => '1.28',
              'Module::CoreList'      => '2.87',
              'Module::CoreList::TieHashDelta'=> '2.87',
              'Storable'              => '2.41',
              'bigint'                => '0.34',
              'mro'                   => '1.11',
              'overload'              => '1.22',
              'warnings'              => '1.18',
          },
          removed => {
          }
      },
      5.018000 => {
          delta_from => 5.017011,
          changed => {
              'Carp'                  => '1.29',
              'Carp::Heavy'           => '1.29',
              'Config'                => '5.018000',
              'Hash::Util'            => '0.16',
              'IO::Handle'            => '1.34',
              'IO::Socket'            => '1.36',
              'Module::CoreList'      => '2.89',
              'Module::CoreList::TieHashDelta'=> '2.89',
              'Pod::Simple'           => '3.28',
              'Pod::Simple::BlackBox' => '3.28',
              'Pod::Simple::Checker'  => '3.28',
              'Pod::Simple::Debug'    => '3.28',
              'Pod::Simple::DumpAsText'=> '3.28',
              'Pod::Simple::DumpAsXML'=> '3.28',
              'Pod::Simple::HTML'     => '3.28',
              'Pod::Simple::HTMLBatch'=> '3.28',
              'Pod::Simple::LinkSection'=> '3.28',
              'Pod::Simple::Methody'  => '3.28',
              'Pod::Simple::Progress' => '3.28',
              'Pod::Simple::PullParser'=> '3.28',
              'Pod::Simple::PullParserEndToken'=> '3.28',
              'Pod::Simple::PullParserStartToken'=> '3.28',
              'Pod::Simple::PullParserTextToken'=> '3.28',
              'Pod::Simple::PullParserToken'=> '3.28',
              'Pod::Simple::RTF'      => '3.28',
              'Pod::Simple::Search'   => '3.28',
              'Pod::Simple::SimpleTree'=> '3.28',
              'Pod::Simple::Text'     => '3.28',
              'Pod::Simple::TextContent'=> '3.28',
              'Pod::Simple::TiedOutFH'=> '3.28',
              'Pod::Simple::Transcode'=> '3.28',
              'Pod::Simple::TranscodeDumb'=> '3.28',
              'Pod::Simple::TranscodeSmart'=> '3.28',
              'Pod::Simple::XHTML'    => '3.28',
              'Pod::Simple::XMLOutStream'=> '3.28',
          },
          removed => {
          }
      },
      5.018001 => {
          delta_from => 5.018000,
          changed => {
              'B'                     => '1.42_01',
              'Config'                => '5.018001',
              'Digest::SHA'           => '5.84_01',
              'Module::CoreList'      => '2.96',
              'Module::CoreList::TieHashDelta'=> '2.96',
              'Module::CoreList::Utils'=> '2.96',
          },
          removed => {
             'VMS::Filespec'         => 1,
          }
      },
      5.018002 => {
          delta_from => 5.018001,
          changed => {
              'B'                     => '1.42_02',
              'B::Concise'            => '0.95_01',
              'Config'                => '5.018002',
              'File::Glob'            => '1.20_01',
              'Module::CoreList'      => '3.03',
              'Module::CoreList::TieHashDelta'=> '3.03',
              'Module::CoreList::Utils'=> '3.03',
          },
      },
      5.018003 => {
          delta_from => 5.018002,
          changed => {
              'Config'                => '5.018003',
              'Digest::SHA'           => '5.84_02',
              'Module::CoreList'      => '3.12',
              'Module::CoreList::TieHashDelta'=> '3.12',
              'Module::CoreList::Utils'=> '3.12',
          },
      },
      5.018004 => {
          delta_from => 5.018003,
          changed => {
              'Config'                => '5.018004',
              'Module::CoreList'      => '3.13',
              'Module::CoreList::TieHashDelta'=> '3.13',
              'Module::CoreList::Utils'=> '3.13',
          },
      },
      5.019000 => {
          delta_from => 5.018000,
          changed => {
              'Config'                => '5.019000',
              'Getopt::Std'           => '1.08',
              'Module::CoreList'      => '2.91',
              'Module::CoreList::TieHashDelta'=> '2.91',
              'Storable'              => '2.42',
              'feature'               => '1.33',
              'utf8'                  => '1.11',
          },
          removed => {
             'Archive::Extract'      => 1,
             'B::Lint'               => 1,
             'B::Lint::Debug'        => 1,
             'CPANPLUS'              => 1,
             'CPANPLUS::Backend'     => 1,
             'CPANPLUS::Backend::RV' => 1,
             'CPANPLUS::Config'      => 1,
             'CPANPLUS::Config::HomeEnv'=> 1,
             'CPANPLUS::Configure'   => 1,
             'CPANPLUS::Configure::Setup'=> 1,
             'CPANPLUS::Dist'        => 1,
             'CPANPLUS::Dist::Autobundle'=> 1,
             'CPANPLUS::Dist::Base'  => 1,
             'CPANPLUS::Dist::Build' => 1,
             'CPANPLUS::Dist::Build::Constants'=> 1,
             'CPANPLUS::Dist::MM'    => 1,
             'CPANPLUS::Dist::Sample'=> 1,
             'CPANPLUS::Error'       => 1,
             'CPANPLUS::Internals'   => 1,
             'CPANPLUS::Internals::Constants'=> 1,
             'CPANPLUS::Internals::Constants::Report'=> 1,
             'CPANPLUS::Internals::Extract'=> 1,
             'CPANPLUS::Internals::Fetch'=> 1,
             'CPANPLUS::Internals::Report'=> 1,
             'CPANPLUS::Internals::Search'=> 1,
             'CPANPLUS::Internals::Source'=> 1,
             'CPANPLUS::Internals::Source::Memory'=> 1,
             'CPANPLUS::Internals::Source::SQLite'=> 1,
             'CPANPLUS::Internals::Source::SQLite::Tie'=> 1,
             'CPANPLUS::Internals::Utils'=> 1,
             'CPANPLUS::Internals::Utils::Autoflush'=> 1,
             'CPANPLUS::Module'      => 1,
             'CPANPLUS::Module::Author'=> 1,
             'CPANPLUS::Module::Author::Fake'=> 1,
             'CPANPLUS::Module::Checksums'=> 1,
             'CPANPLUS::Module::Fake'=> 1,
             'CPANPLUS::Module::Signature'=> 1,
             'CPANPLUS::Selfupdate'  => 1,
             'CPANPLUS::Shell'       => 1,
             'CPANPLUS::Shell::Classic'=> 1,
             'CPANPLUS::Shell::Default'=> 1,
             'CPANPLUS::Shell::Default::Plugins::CustomSource'=> 1,
             'CPANPLUS::Shell::Default::Plugins::Remote'=> 1,
             'CPANPLUS::Shell::Default::Plugins::Source'=> 1,
             'Devel::InnerPackage'   => 1,
             'File::CheckTree'       => 1,
             'Log::Message'          => 1,
             'Log::Message::Config'  => 1,
             'Log::Message::Handlers'=> 1,
             'Log::Message::Item'    => 1,
             'Log::Message::Simple'  => 1,
             'Module::Pluggable'     => 1,
             'Module::Pluggable::Object'=> 1,
             'Object::Accessor'      => 1,
             'Pod::LaTeX'            => 1,
             'Term::UI'              => 1,
             'Term::UI::History'     => 1,
             'Text::Soundex'         => 1,
          }
      },
      5.019001 => {
          delta_from => 5.019000,
          changed => {
              'App::Prove'            => '3.28',
              'App::Prove::State'     => '3.28',
              'App::Prove::State::Result'=> '3.28',
              'App::Prove::State::Result::Test'=> '3.28',
              'Archive::Tar'          => '1.92',
              'Archive::Tar::Constant'=> '1.92',
              'Archive::Tar::File'    => '1.92',
              'Attribute::Handlers'   => '0.95',
              'B'                     => '1.43',
              'B::Concise'            => '0.96',
              'B::Deparse'            => '1.21',
              'B::Showlex'            => '1.04',
              'Benchmark'             => '1.16',
              'CPAN::Meta'            => '2.131560',
              'CPAN::Meta::Converter' => '2.131560',
              'CPAN::Meta::Feature'   => '2.131560',
              'CPAN::Meta::History'   => '2.131560',
              'CPAN::Meta::Prereqs'   => '2.131560',
              'CPAN::Meta::Spec'      => '2.131560',
              'CPAN::Meta::Validator' => '2.131560',
              'Carp'                  => '1.30',
              'Carp::Heavy'           => '1.30',
              'Compress::Raw::Bzip2'  => '2.061',
              'Compress::Raw::Zlib'   => '2.061',
              'Compress::Zlib'        => '2.061',
              'Config'                => '5.019001',
              'Config::Perl::V'       => '0.18',
              'Cwd'                   => '3.41',
              'DB'                    => '1.06',
              'DB_File'               => '1.828',
              'Data::Dumper'          => '2.146',
              'Encode'                => '2.51',
              'Encode::CN::HZ'        => '2.06',
              'Encode::GSM0338'       => '2.03',
              'Encode::Unicode::UTF7' => '2.07',
              'ExtUtils::CBuilder::Base'=> '0.280210',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280210',
              'ExtUtils::Command::MM' => '6.68',
              'ExtUtils::Install'     => '1.60',
              'ExtUtils::Liblist'     => '6.68',
              'ExtUtils::Liblist::Kid'=> '6.68',
              'ExtUtils::MM'          => '6.68',
              'ExtUtils::MM_AIX'      => '6.68',
              'ExtUtils::MM_Any'      => '6.68',
              'ExtUtils::MM_BeOS'     => '6.68',
              'ExtUtils::MM_Cygwin'   => '6.68',
              'ExtUtils::MM_DOS'      => '6.68',
              'ExtUtils::MM_Darwin'   => '6.68',
              'ExtUtils::MM_MacOS'    => '6.68',
              'ExtUtils::MM_NW5'      => '6.68',
              'ExtUtils::MM_OS2'      => '6.68',
              'ExtUtils::MM_QNX'      => '6.68',
              'ExtUtils::MM_UWIN'     => '6.68',
              'ExtUtils::MM_Unix'     => '6.68',
              'ExtUtils::MM_VMS'      => '6.68',
              'ExtUtils::MM_VOS'      => '6.68',
              'ExtUtils::MM_Win32'    => '6.68',
              'ExtUtils::MM_Win95'    => '6.68',
              'ExtUtils::MY'          => '6.68',
              'ExtUtils::MakeMaker'   => '6.68',
              'ExtUtils::MakeMaker::Config'=> '6.68',
              'ExtUtils::Mkbootstrap' => '6.68',
              'ExtUtils::Mksymlists'  => '6.68',
              'ExtUtils::ParseXS'     => '3.19',
              'ExtUtils::testlib'     => '6.68',
              'Fatal'                 => '2.19',
              'File::Copy'            => '2.27',
              'File::DosGlob'         => '1.11',
              'File::Fetch'           => '0.42',
              'File::Find'            => '1.24',
              'File::Spec'            => '3.41',
              'File::Spec::Cygwin'    => '3.41',
              'File::Spec::Epoc'      => '3.41',
              'File::Spec::Mac'       => '3.41',
              'File::Spec::OS2'       => '3.41',
              'File::Spec::Unix'      => '3.41',
              'File::Spec::VMS'       => '3.41',
              'File::Spec::Win32'     => '3.41',
              'File::Temp'            => '0.2301',
              'Filter::Simple'        => '0.90',
              'Filter::Util::Call'    => '1.49',
              'Getopt::Long'          => '2.4',
              'HTTP::Tiny'            => '0.031',
              'Hash::Util::FieldHash' => '1.11',
              'IO::Compress::Adapter::Bzip2'=> '2.061',
              'IO::Compress::Adapter::Deflate'=> '2.061',
              'IO::Compress::Adapter::Identity'=> '2.061',
              'IO::Compress::Base'    => '2.061',
              'IO::Compress::Base::Common'=> '2.061',
              'IO::Compress::Bzip2'   => '2.061',
              'IO::Compress::Deflate' => '2.061',
              'IO::Compress::Gzip'    => '2.061',
              'IO::Compress::Gzip::Constants'=> '2.061',
              'IO::Compress::RawDeflate'=> '2.061',
              'IO::Compress::Zip'     => '2.061',
              'IO::Compress::Zip::Constants'=> '2.061',
              'IO::Compress::Zlib::Constants'=> '2.061',
              'IO::Compress::Zlib::Extra'=> '2.061',
              'IO::Handle'            => '1.35',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.061',
              'IO::Uncompress::Adapter::Identity'=> '2.061',
              'IO::Uncompress::Adapter::Inflate'=> '2.061',
              'IO::Uncompress::AnyInflate'=> '2.061',
              'IO::Uncompress::AnyUncompress'=> '2.061',
              'IO::Uncompress::Base'  => '2.061',
              'IO::Uncompress::Bunzip2'=> '2.061',
              'IO::Uncompress::Gunzip'=> '2.061',
              'IO::Uncompress::Inflate'=> '2.061',
              'IO::Uncompress::RawInflate'=> '2.061',
              'IO::Uncompress::Unzip' => '2.061',
              'IPC::Open3'            => '1.14',
              'Locale::Codes'         => '3.26',
              'Locale::Codes::Constants'=> '3.26',
              'Locale::Codes::Country'=> '3.26',
              'Locale::Codes::Country_Codes'=> '3.26',
              'Locale::Codes::Country_Retired'=> '3.26',
              'Locale::Codes::Currency'=> '3.26',
              'Locale::Codes::Currency_Codes'=> '3.26',
              'Locale::Codes::Currency_Retired'=> '3.26',
              'Locale::Codes::LangExt'=> '3.26',
              'Locale::Codes::LangExt_Codes'=> '3.26',
              'Locale::Codes::LangExt_Retired'=> '3.26',
              'Locale::Codes::LangFam'=> '3.26',
              'Locale::Codes::LangFam_Codes'=> '3.26',
              'Locale::Codes::LangFam_Retired'=> '3.26',
              'Locale::Codes::LangVar'=> '3.26',
              'Locale::Codes::LangVar_Codes'=> '3.26',
              'Locale::Codes::LangVar_Retired'=> '3.26',
              'Locale::Codes::Language'=> '3.26',
              'Locale::Codes::Language_Codes'=> '3.26',
              'Locale::Codes::Language_Retired'=> '3.26',
              'Locale::Codes::Script' => '3.26',
              'Locale::Codes::Script_Codes'=> '3.26',
              'Locale::Codes::Script_Retired'=> '3.26',
              'Locale::Country'       => '3.26',
              'Locale::Currency'      => '3.26',
              'Locale::Language'      => '3.26',
              'Locale::Maketext'      => '1.24',
              'Locale::Script'        => '3.26',
              'Math::BigFloat'        => '1.999',
              'Math::BigInt'          => '1.9992',
              'Math::BigInt::Calc'    => '1.998',
              'Math::BigInt::CalcEmu' => '1.9991',
              'Math::BigRat'          => '0.2606',
              'Module::Build'         => '0.4005',
              'Module::Build::Base'   => '0.4005',
              'Module::Build::Compat' => '0.4005',
              'Module::Build::Config' => '0.4005',
              'Module::Build::Cookbook'=> '0.4005',
              'Module::Build::Dumper' => '0.4005',
              'Module::Build::ModuleInfo'=> '0.4005',
              'Module::Build::Notes'  => '0.4005',
              'Module::Build::PPMMaker'=> '0.4005',
              'Module::Build::Platform::Amiga'=> '0.4005',
              'Module::Build::Platform::Default'=> '0.4005',
              'Module::Build::Platform::EBCDIC'=> '0.4005',
              'Module::Build::Platform::MPEiX'=> '0.4005',
              'Module::Build::Platform::MacOS'=> '0.4005',
              'Module::Build::Platform::RiscOS'=> '0.4005',
              'Module::Build::Platform::Unix'=> '0.4005',
              'Module::Build::Platform::VMS'=> '0.4005',
              'Module::Build::Platform::VOS'=> '0.4005',
              'Module::Build::Platform::Windows'=> '0.4005',
              'Module::Build::Platform::aix'=> '0.4005',
              'Module::Build::Platform::cygwin'=> '0.4005',
              'Module::Build::Platform::darwin'=> '0.4005',
              'Module::Build::Platform::os2'=> '0.4005',
              'Module::Build::PodParser'=> '0.4005',
              'Module::CoreList'      => '2.92',
              'Module::CoreList::TieHashDelta'=> '2.92',
              'Module::CoreList::Utils'=> '2.92',
              'Module::Metadata'      => '1.000014',
              'Net::Ping'             => '2.42',
              'OS2::Process'          => '1.09',
              'POSIX'                 => '1.33',
              'Pod::Find'             => '1.61',
              'Pod::Html'             => '1.19',
              'Pod::InputObjects'     => '1.61',
              'Pod::ParseUtils'       => '1.61',
              'Pod::Parser'           => '1.61',
              'Pod::Perldoc'          => '3.20',
              'Pod::Perldoc::BaseTo'  => '3.20',
              'Pod::Perldoc::GetOptsOO'=> '3.20',
              'Pod::Perldoc::ToANSI'  => '3.20',
              'Pod::Perldoc::ToChecker'=> '3.20',
              'Pod::Perldoc::ToMan'   => '3.20',
              'Pod::Perldoc::ToNroff' => '3.20',
              'Pod::Perldoc::ToPod'   => '3.20',
              'Pod::Perldoc::ToRtf'   => '3.20',
              'Pod::Perldoc::ToTerm'  => '3.20',
              'Pod::Perldoc::ToText'  => '3.20',
              'Pod::Perldoc::ToTk'    => '3.20',
              'Pod::Perldoc::ToXml'   => '3.20',
              'Pod::Select'           => '1.61',
              'Pod::Usage'            => '1.63',
              'Safe'                  => '2.36',
              'Storable'              => '2.43',
              'Sys::Hostname'         => '1.18',
              'Sys::Syslog'           => '0.33',
              'TAP::Base'             => '3.28',
              'TAP::Formatter::Base'  => '3.28',
              'TAP::Formatter::Color' => '3.28',
              'TAP::Formatter::Console'=> '3.28',
              'TAP::Formatter::Console::ParallelSession'=> '3.28',
              'TAP::Formatter::Console::Session'=> '3.28',
              'TAP::Formatter::File'  => '3.28',
              'TAP::Formatter::File::Session'=> '3.28',
              'TAP::Formatter::Session'=> '3.28',
              'TAP::Harness'          => '3.28',
              'TAP::Object'           => '3.28',
              'TAP::Parser'           => '3.28',
              'TAP::Parser::Aggregator'=> '3.28',
              'TAP::Parser::Grammar'  => '3.28',
              'TAP::Parser::Iterator' => '3.28',
              'TAP::Parser::Iterator::Array'=> '3.28',
              'TAP::Parser::Iterator::Process'=> '3.28',
              'TAP::Parser::Iterator::Stream'=> '3.28',
              'TAP::Parser::IteratorFactory'=> '3.28',
              'TAP::Parser::Multiplexer'=> '3.28',
              'TAP::Parser::Result'   => '3.28',
              'TAP::Parser::Result::Bailout'=> '3.28',
              'TAP::Parser::Result::Comment'=> '3.28',
              'TAP::Parser::Result::Plan'=> '3.28',
              'TAP::Parser::Result::Pragma'=> '3.28',
              'TAP::Parser::Result::Test'=> '3.28',
              'TAP::Parser::Result::Unknown'=> '3.28',
              'TAP::Parser::Result::Version'=> '3.28',
              'TAP::Parser::Result::YAML'=> '3.28',
              'TAP::Parser::ResultFactory'=> '3.28',
              'TAP::Parser::Scheduler'=> '3.28',
              'TAP::Parser::Scheduler::Job'=> '3.28',
              'TAP::Parser::Scheduler::Spinner'=> '3.28',
              'TAP::Parser::Source'   => '3.28',
              'TAP::Parser::SourceHandler'=> '3.28',
              'TAP::Parser::SourceHandler::Executable'=> '3.28',
              'TAP::Parser::SourceHandler::File'=> '3.28',
              'TAP::Parser::SourceHandler::Handle'=> '3.28',
              'TAP::Parser::SourceHandler::Perl'=> '3.28',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.28',
              'TAP::Parser::Utils'    => '3.28',
              'TAP::Parser::YAMLish::Reader'=> '3.28',
              'TAP::Parser::YAMLish::Writer'=> '3.28',
              'Term::ReadLine'        => '1.13',
              'Test::Harness'         => '3.28',
              'Text::Tabs'            => '2013.0523',
              'Text::Wrap'            => '2013.0523',
              'Thread'                => '3.04',
              'Tie::File'             => '1.00',
              'Time::Piece'           => '1.2002',
              'Unicode::Collate'      => '0.98',
              'Unicode::UCD'          => '0.53',
              'XS::APItest'           => '0.53',
              '_charnames'            => '1.37',
              'autodie'               => '2.19',
              'autodie::exception'    => '2.19',
              'autodie::exception::system'=> '2.19',
              'autodie::hints'        => '2.19',
              'autodie::skip'         => '2.19',
              'bigint'                => '0.35',
              'charnames'             => '1.38',
              'encoding'              => '2.12',
              'inc::latest'           => '0.4005',
              'mro'                   => '1.12',
              'perlfaq'               => '5.0150043',
              're'                    => '0.25',
              'threads'               => '1.87',
              'threads::shared'       => '1.44',
              'utf8'                  => '1.12',
          },
          removed => {
          }
      },
      5.019002 => {
          delta_from => 5.019001,
          changed => {
              'B'                     => '1.44',
              'B::Concise'            => '0.98',
              'B::Deparse'            => '1.22',
              'Benchmark'             => '1.17',
              'Class::Struct'         => '0.65',
              'Config'                => '5.019002',
              'DB'                    => '1.07',
              'DBM_Filter'            => '0.06',
              'DBM_Filter::compress'  => '0.03',
              'DBM_Filter::encode'    => '0.03',
              'DBM_Filter::int32'     => '0.03',
              'DBM_Filter::null'      => '0.03',
              'DBM_Filter::utf8'      => '0.03',
              'DB_File'               => '1.829',
              'Data::Dumper'          => '2.147',
              'Devel::Peek'           => '1.12',
              'Digest::MD5'           => '2.53',
              'Digest::SHA'           => '5.85',
              'English'               => '1.07',
              'Errno'                 => '1.19',
              'ExtUtils::Embed'       => '1.31',
              'ExtUtils::Miniperl'    => '1',
              'ExtUtils::ParseXS'     => '3.21',
              'ExtUtils::ParseXS::Constants'=> '3.21',
              'ExtUtils::ParseXS::CountLines'=> '3.21',
              'ExtUtils::ParseXS::Eval'=> '3.19',
              'ExtUtils::ParseXS::Utilities'=> '3.21',
              'ExtUtils::Typemaps'    => '3.21',
              'ExtUtils::Typemaps::Cmd'=> '3.21',
              'ExtUtils::Typemaps::InputMap'=> '3.21',
              'ExtUtils::Typemaps::OutputMap'=> '3.21',
              'ExtUtils::Typemaps::Type'=> '3.21',
              'ExtUtils::XSSymSet'    => '1.3',
              'Fatal'                 => '2.20',
              'File::Basename'        => '2.85',
              'File::Spec::VMS'       => '3.43',
              'File::Spec::Win32'     => '3.42',
              'Getopt::Long'          => '2.41',
              'Getopt::Std'           => '1.09',
              'HTTP::Tiny'            => '0.034',
              'Hash::Util::FieldHash' => '1.12',
              'I18N::Langinfo'        => '0.11',
              'IO::Socket::INET'      => '1.34',
              'IO::Socket::UNIX'      => '1.25',
              'IPC::Cmd'              => '0.82',
              'MIME::Base64'          => '3.14',
              'Module::CoreList'      => '2.94',
              'Module::CoreList::TieHashDelta'=> '2.94',
              'Module::CoreList::Utils'=> '2.94',
              'POSIX'                 => '1.34',
              'Params::Check'         => '0.38',
              'Parse::CPAN::Meta'     => '1.4405',
              'Pod::Functions'        => '1.07',
              'Pod::Html'             => '1.2',
              'Safe'                  => '2.37',
              'Socket'                => '2.010',
              'Storable'              => '2.45',
              'Text::ParseWords'      => '3.29',
              'Tie::Array'            => '1.06',
              'Tie::Hash'             => '1.05',
              'Tie::Scalar'           => '1.03',
              'Time::Piece'           => '1.21',
              'Time::Seconds'         => '1.21',
              'XS::APItest'           => '0.54',
              'autodie'               => '2.20',
              'autodie::exception'    => '2.20',
              'autodie::exception::system'=> '2.20',
              'autodie::hints'        => '2.20',
              'autodie::skip'         => '2.20',
              'base'                  => '2.19',
              'deprecate'             => '0.03',
              'if'                    => '0.0603',
              'integer'               => '1.01',
              'strict'                => '1.08',
              'subs'                  => '1.02',
              'vmsish'                => '1.04',
          },
          removed => {
          }
      },
      5.019003 => {
          delta_from => 5.019002,
          changed => {
              'B'                     => '1.45',
              'CPAN::Meta'            => '2.132140',
              'CPAN::Meta::Converter' => '2.132140',
              'CPAN::Meta::Feature'   => '2.132140',
              'CPAN::Meta::History'   => '2.132140',
              'CPAN::Meta::Prereqs'   => '2.132140',
              'CPAN::Meta::Spec'      => '2.132140',
              'CPAN::Meta::Validator' => '2.132140',
              'Carp'                  => '1.31',
              'Carp::Heavy'           => '1.31',
              'Compress::Raw::Bzip2'  => '2.062',
              'Compress::Raw::Zlib'   => '2.062',
              'Compress::Zlib'        => '2.062',
              'Config'                => '5.019003',
              'Config::Perl::V'       => '0.19',
              'Cwd'                   => '3.44',
              'Data::Dumper'          => '2.148',
              'Devel::PPPort'         => '3.21',
              'Devel::Peek'           => '1.13',
              'DynaLoader'            => '1.19',
              'Encode'                => '2.52',
              'Encode::Alias'         => '2.17',
              'Encode::Encoding'      => '2.06',
              'Encode::GSM0338'       => '2.04',
              'Encode::MIME::Header'  => '2.14',
              'Encode::Unicode'       => '2.08',
              'English'               => '1.08',
              'Exporter'              => '5.69',
              'Exporter::Heavy'       => '5.69',
              'ExtUtils::Command::MM' => '6.72',
              'ExtUtils::Liblist'     => '6.72',
              'ExtUtils::Liblist::Kid'=> '6.72',
              'ExtUtils::MM'          => '6.72',
              'ExtUtils::MM_AIX'      => '6.72',
              'ExtUtils::MM_Any'      => '6.72',
              'ExtUtils::MM_BeOS'     => '6.72',
              'ExtUtils::MM_Cygwin'   => '6.72',
              'ExtUtils::MM_DOS'      => '6.72',
              'ExtUtils::MM_Darwin'   => '6.72',
              'ExtUtils::MM_MacOS'    => '6.72',
              'ExtUtils::MM_NW5'      => '6.72',
              'ExtUtils::MM_OS2'      => '6.72',
              'ExtUtils::MM_QNX'      => '6.72',
              'ExtUtils::MM_UWIN'     => '6.72',
              'ExtUtils::MM_Unix'     => '6.72',
              'ExtUtils::MM_VMS'      => '6.72',
              'ExtUtils::MM_VOS'      => '6.72',
              'ExtUtils::MM_Win32'    => '6.72',
              'ExtUtils::MM_Win95'    => '6.72',
              'ExtUtils::MY'          => '6.72',
              'ExtUtils::MakeMaker'   => '6.72',
              'ExtUtils::MakeMaker::Config'=> '6.72',
              'ExtUtils::Mkbootstrap' => '6.72',
              'ExtUtils::Mksymlists'  => '6.72',
              'ExtUtils::ParseXS::Eval'=> '3.21',
              'ExtUtils::testlib'     => '6.72',
              'File::Spec'            => '3.44',
              'File::Spec::Cygwin'    => '3.44',
              'File::Spec::Epoc'      => '3.44',
              'File::Spec::Functions' => '3.44',
              'File::Spec::Mac'       => '3.44',
              'File::Spec::OS2'       => '3.44',
              'File::Spec::Unix'      => '3.44',
              'File::Spec::VMS'       => '3.44',
              'File::Spec::Win32'     => '3.44',
              'Getopt::Std'           => '1.10',
              'IO::Compress::Adapter::Bzip2'=> '2.062',
              'IO::Compress::Adapter::Deflate'=> '2.062',
              'IO::Compress::Adapter::Identity'=> '2.062',
              'IO::Compress::Base'    => '2.062',
              'IO::Compress::Base::Common'=> '2.062',
              'IO::Compress::Bzip2'   => '2.062',
              'IO::Compress::Deflate' => '2.062',
              'IO::Compress::Gzip'    => '2.062',
              'IO::Compress::Gzip::Constants'=> '2.062',
              'IO::Compress::RawDeflate'=> '2.062',
              'IO::Compress::Zip'     => '2.062',
              'IO::Compress::Zip::Constants'=> '2.062',
              'IO::Compress::Zlib::Constants'=> '2.062',
              'IO::Compress::Zlib::Extra'=> '2.062',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.062',
              'IO::Uncompress::Adapter::Identity'=> '2.062',
              'IO::Uncompress::Adapter::Inflate'=> '2.062',
              'IO::Uncompress::AnyInflate'=> '2.062',
              'IO::Uncompress::AnyUncompress'=> '2.062',
              'IO::Uncompress::Base'  => '2.062',
              'IO::Uncompress::Bunzip2'=> '2.062',
              'IO::Uncompress::Gunzip'=> '2.062',
              'IO::Uncompress::Inflate'=> '2.062',
              'IO::Uncompress::RawInflate'=> '2.062',
              'IO::Uncompress::Unzip' => '2.062',
              'IPC::Cmd'              => '0.84',
              'IPC::Msg'              => '2.04',
              'IPC::Open3'            => '1.15',
              'IPC::Semaphore'        => '2.04',
              'IPC::SharedMem'        => '2.04',
              'IPC::SysV'             => '2.04',
              'List::Util'            => '1.31',
              'List::Util::XS'        => '1.31',
              'Math::BigFloat::Trace' => '0.36',
              'Math::BigInt::Trace'   => '0.36',
              'Module::Build'         => '0.4007',
              'Module::Build::Base'   => '0.4007',
              'Module::Build::Compat' => '0.4007',
              'Module::Build::Config' => '0.4007',
              'Module::Build::Cookbook'=> '0.4007',
              'Module::Build::Dumper' => '0.4007',
              'Module::Build::ModuleInfo'=> '0.4007',
              'Module::Build::Notes'  => '0.4007',
              'Module::Build::PPMMaker'=> '0.4007',
              'Module::Build::Platform::Default'=> '0.4007',
              'Module::Build::Platform::MacOS'=> '0.4007',
              'Module::Build::Platform::Unix'=> '0.4007',
              'Module::Build::Platform::VMS'=> '0.4007',
              'Module::Build::Platform::VOS'=> '0.4007',
              'Module::Build::Platform::Windows'=> '0.4007',
              'Module::Build::Platform::aix'=> '0.4007',
              'Module::Build::Platform::cygwin'=> '0.4007',
              'Module::Build::Platform::darwin'=> '0.4007',
              'Module::Build::Platform::os2'=> '0.4007',
              'Module::Build::PodParser'=> '0.4007',
              'Module::CoreList'      => '2.97',
              'Module::CoreList::TieHashDelta'=> '2.97',
              'Module::CoreList::Utils'=> '2.97',
              'Net::Cmd'              => '2.30',
              'Net::Config'           => '1.12',
              'Net::Domain'           => '2.22',
              'Net::FTP'              => '2.78',
              'Net::FTP::dataconn'    => '0.12',
              'Net::NNTP'             => '2.25',
              'Net::Netrc'            => '2.14',
              'Net::POP3'             => '2.30',
              'Net::SMTP'             => '2.32',
              'PerlIO'                => '1.08',
              'Pod::Functions'        => '1.08',
              'Scalar::Util'          => '1.31',
              'Socket'                => '2.011',
              'Storable'              => '2.46',
              'Time::HiRes'           => '1.9726',
              'Time::Piece'           => '1.22',
              'Time::Seconds'         => '1.22',
              'XS::APItest'           => '0.55',
              'bigint'                => '0.36',
              'bignum'                => '0.36',
              'bigrat'                => '0.36',
              'constant'              => '1.28',
              'diagnostics'           => '1.32',
              'inc::latest'           => '0.4007',
              'mro'                   => '1.13',
              'parent'                => '0.226',
              'utf8'                  => '1.13',
              'version'               => '0.9903',
          },
          removed => {
             'Module::Build::Platform::Amiga'=> 1,
             'Module::Build::Platform::EBCDIC'=> 1,
             'Module::Build::Platform::MPEiX'=> 1,
             'Module::Build::Platform::RiscOS'=> 1,
          }
      },
      5.019004 => {
          delta_from => 5.019003,
          changed => {
              'B'                     => '1.46',
              'B::Concise'            => '0.99',
              'B::Deparse'            => '1.23',
              'CPAN'                  => '2.03',
              'CPAN::Meta'            => '2.132620',
              'CPAN::Meta::Converter' => '2.132620',
              'CPAN::Meta::Feature'   => '2.132620',
              'CPAN::Meta::History'   => '2.132620',
              'CPAN::Meta::Prereqs'   => '2.132620',
              'CPAN::Meta::Requirements'=> '2.123',
              'CPAN::Meta::Spec'      => '2.132620',
              'CPAN::Meta::Validator' => '2.132620',
              'Carp'                  => '1.32',
              'Carp::Heavy'           => '1.32',
              'Config'                => '5.019004',
              'Data::Dumper'          => '2.149',
              'Devel::Peek'           => '1.14',
              'DynaLoader'            => '1.20',
              'Encode'                => '2.55',
              'Encode::Alias'         => '2.18',
              'Encode::CN::HZ'        => '2.07',
              'Encode::Encoder'       => '2.03',
              'Encode::Encoding'      => '2.07',
              'Encode::GSM0338'       => '2.05',
              'Encode::Guess'         => '2.06',
              'Encode::JP::JIS7'      => '2.05',
              'Encode::KR::2022_KR'   => '2.03',
              'Encode::MIME::Header'  => '2.15',
              'Encode::MIME::Header::ISO_2022_JP'=> '1.04',
              'Encode::Unicode'       => '2.09',
              'Encode::Unicode::UTF7' => '2.08',
              'Errno'                 => '1.20',
              'Exporter'              => '5.70',
              'Exporter::Heavy'       => '5.70',
              'ExtUtils::CBuilder'    => '0.280212',
              'ExtUtils::CBuilder::Base'=> '0.280212',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280212',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280212',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280212',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280212',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280212',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280212',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280212',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280212',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280212',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280212',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280212',
              'ExtUtils::Command'     => '1.18',
              'ExtUtils::Command::MM' => '6.76',
              'ExtUtils::Liblist'     => '6.76',
              'ExtUtils::Liblist::Kid'=> '6.76',
              'ExtUtils::MM'          => '6.76',
              'ExtUtils::MM_AIX'      => '6.76',
              'ExtUtils::MM_Any'      => '6.76',
              'ExtUtils::MM_BeOS'     => '6.76',
              'ExtUtils::MM_Cygwin'   => '6.76',
              'ExtUtils::MM_DOS'      => '6.76',
              'ExtUtils::MM_Darwin'   => '6.76',
              'ExtUtils::MM_MacOS'    => '6.76',
              'ExtUtils::MM_NW5'      => '6.76',
              'ExtUtils::MM_OS2'      => '6.76',
              'ExtUtils::MM_QNX'      => '6.76',
              'ExtUtils::MM_UWIN'     => '6.76',
              'ExtUtils::MM_Unix'     => '6.76',
              'ExtUtils::MM_VMS'      => '6.76',
              'ExtUtils::MM_VOS'      => '6.76',
              'ExtUtils::MM_Win32'    => '6.76',
              'ExtUtils::MM_Win95'    => '6.76',
              'ExtUtils::MY'          => '6.76',
              'ExtUtils::MakeMaker'   => '6.76',
              'ExtUtils::MakeMaker::Config'=> '6.76',
              'ExtUtils::Mkbootstrap' => '6.76',
              'ExtUtils::Mksymlists'  => '6.76',
              'ExtUtils::ParseXS'     => '3.23',
              'ExtUtils::ParseXS::Constants'=> '3.23',
              'ExtUtils::ParseXS::CountLines'=> '3.23',
              'ExtUtils::ParseXS::Eval'=> '3.23',
              'ExtUtils::ParseXS::Utilities'=> '3.23',
              'ExtUtils::Typemaps'    => '3.23',
              'ExtUtils::Typemaps::Cmd'=> '3.23',
              'ExtUtils::Typemaps::InputMap'=> '3.23',
              'ExtUtils::Typemaps::OutputMap'=> '3.23',
              'ExtUtils::Typemaps::Type'=> '3.23',
              'ExtUtils::testlib'     => '6.76',
              'Fatal'                 => '2.21',
              'File::Copy'            => '2.28',
              'File::Find'            => '1.25',
              'File::Glob'            => '1.21',
              'FileCache'             => '1.09',
              'HTTP::Tiny'            => '0.035',
              'Hash::Util::FieldHash' => '1.13',
              'I18N::LangTags'        => '0.40',
              'IO'                    => '1.29',
              'IO::Socket'            => '1.37',
              'IPC::Open3'            => '1.16',
              'JSON::PP'              => '2.27202_01',
              'List::Util'            => '1.32',
              'List::Util::XS'        => '1.32',
              'Locale::Codes'         => '3.27',
              'Locale::Codes::Constants'=> '3.27',
              'Locale::Codes::Country'=> '3.27',
              'Locale::Codes::Country_Codes'=> '3.27',
              'Locale::Codes::Country_Retired'=> '3.27',
              'Locale::Codes::Currency'=> '3.27',
              'Locale::Codes::Currency_Codes'=> '3.27',
              'Locale::Codes::Currency_Retired'=> '3.27',
              'Locale::Codes::LangExt'=> '3.27',
              'Locale::Codes::LangExt_Codes'=> '3.27',
              'Locale::Codes::LangExt_Retired'=> '3.27',
              'Locale::Codes::LangFam'=> '3.27',
              'Locale::Codes::LangFam_Codes'=> '3.27',
              'Locale::Codes::LangFam_Retired'=> '3.27',
              'Locale::Codes::LangVar'=> '3.27',
              'Locale::Codes::LangVar_Codes'=> '3.27',
              'Locale::Codes::LangVar_Retired'=> '3.27',
              'Locale::Codes::Language'=> '3.27',
              'Locale::Codes::Language_Codes'=> '3.27',
              'Locale::Codes::Language_Retired'=> '3.27',
              'Locale::Codes::Script' => '3.27',
              'Locale::Codes::Script_Codes'=> '3.27',
              'Locale::Codes::Script_Retired'=> '3.27',
              'Locale::Country'       => '3.27',
              'Locale::Currency'      => '3.27',
              'Locale::Language'      => '3.27',
              'Locale::Script'        => '3.27',
              'Math::BigFloat'        => '1.9991',
              'Math::BigInt'          => '1.9993',
              'Math::BigInt::FastCalc'=> '0.31',
              'Module::CoreList'      => '2.99',
              'Module::CoreList::TieHashDelta'=> '2.99',
              'Module::CoreList::Utils'=> '2.99',
              'Module::Load::Conditional'=> '0.58',
              'Module::Metadata'      => '1.000018',
              'Opcode'                => '1.26',
              'POSIX'                 => '1.35',
              'Parse::CPAN::Meta'     => '1.4407',
              'Perl::OSType'          => '1.005',
              'Pod::Html'             => '1.21',
              'Scalar::Util'          => '1.32',
              'Socket'                => '2.012',
              'Storable'              => '2.47',
              'Term::ReadLine'        => '1.14',
              'Test::Builder'         => '0.98_06',
              'Test::Builder::Module' => '0.98_06',
              'Test::More'            => '0.98_06',
              'Test::Simple'          => '0.98_06',
              'Time::Piece'           => '1.23',
              'Time::Seconds'         => '1.23',
              'Unicode::Collate'      => '0.99',
              'Unicode::UCD'          => '0.54',
              'XS::APItest'           => '0.56',
              'XS::Typemap'           => '0.11',
              '_charnames'            => '1.39',
              'autodie'               => '2.21',
              'autodie::exception'    => '2.21',
              'autodie::exception::system'=> '2.21',
              'autodie::hints'        => '2.21',
              'autodie::skip'         => '2.21',
              'charnames'             => '1.39',
              'diagnostics'           => '1.33',
              'mro'                   => '1.14',
              'parent'                => '0.228',
              'perlfaq'               => '5.0150044',
              're'                    => '0.26',
              'version'               => '0.9904',
              'warnings'              => '1.19',
          },
          removed => {
          }
      },
      5.019005 => {
          delta_from => 5.019004,
          changed => {
              'App::Prove'            => '3.29',
              'App::Prove::State'     => '3.29',
              'App::Prove::State::Result'=> '3.29',
              'App::Prove::State::Result::Test'=> '3.29',
              'CPAN::Meta'            => '2.132830',
              'CPAN::Meta::Converter' => '2.132830',
              'CPAN::Meta::Feature'   => '2.132830',
              'CPAN::Meta::History'   => '2.132830',
              'CPAN::Meta::Prereqs'   => '2.132830',
              'CPAN::Meta::Requirements'=> '2.125',
              'CPAN::Meta::Spec'      => '2.132830',
              'CPAN::Meta::Validator' => '2.132830',
              'CPAN::Meta::YAML'      => '0.010',
              'Config'                => '5.019005',
              'Cwd'                   => '3.45',
              'ExtUtils::Command::MM' => '6.80',
              'ExtUtils::Install'     => '1.61',
              'ExtUtils::Liblist'     => '6.80',
              'ExtUtils::Liblist::Kid'=> '6.80',
              'ExtUtils::MM'          => '6.80',
              'ExtUtils::MM_AIX'      => '6.80',
              'ExtUtils::MM_Any'      => '6.80',
              'ExtUtils::MM_BeOS'     => '6.80',
              'ExtUtils::MM_Cygwin'   => '6.80',
              'ExtUtils::MM_DOS'      => '6.80',
              'ExtUtils::MM_Darwin'   => '6.80',
              'ExtUtils::MM_MacOS'    => '6.80',
              'ExtUtils::MM_NW5'      => '6.80',
              'ExtUtils::MM_OS2'      => '6.80',
              'ExtUtils::MM_QNX'      => '6.80',
              'ExtUtils::MM_UWIN'     => '6.80',
              'ExtUtils::MM_Unix'     => '6.80',
              'ExtUtils::MM_VMS'      => '6.80',
              'ExtUtils::MM_VOS'      => '6.80',
              'ExtUtils::MM_Win32'    => '6.80',
              'ExtUtils::MM_Win95'    => '6.80',
              'ExtUtils::MY'          => '6.80',
              'ExtUtils::MakeMaker'   => '6.80',
              'ExtUtils::MakeMaker::Config'=> '6.80',
              'ExtUtils::Mkbootstrap' => '6.80',
              'ExtUtils::Mksymlists'  => '6.80',
              'ExtUtils::testlib'     => '6.80',
              'Fatal'                 => '2.22',
              'File::Fetch'           => '0.44',
              'File::Glob'            => '1.22',
              'File::Spec'            => '3.45',
              'File::Spec::Cygwin'    => '3.45',
              'File::Spec::Epoc'      => '3.45',
              'File::Spec::Functions' => '3.45',
              'File::Spec::Mac'       => '3.45',
              'File::Spec::OS2'       => '3.45',
              'File::Spec::Unix'      => '3.45',
              'File::Spec::VMS'       => '3.45',
              'File::Spec::Win32'     => '3.45',
              'File::Temp'            => '0.2304',
              'Getopt::Long'          => '2.42',
              'HTTP::Tiny'            => '0.036',
              'IPC::Cmd'              => '0.84_01',
              'JSON::PP'              => '2.27203',
              'List::Util'            => '1.35',
              'List::Util::XS'        => '1.35',
              'Module::CoreList'      => '3.00',
              'Module::CoreList::TieHashDelta'=> '3.00',
              'Module::CoreList::Utils'=> '3.00',
              'Module::Metadata'      => '1.000019',
              'Parse::CPAN::Meta'     => '1.4409',
              'Perl::OSType'          => '1.006',
              'PerlIO::scalar'        => '0.17',
              'Pod::Man'              => '2.28',
              'Pod::Text'             => '3.18',
              'Pod::Text::Termcap'    => '2.08',
              'Scalar::Util'          => '1.35',
              'TAP::Base'             => '3.29',
              'TAP::Formatter::Base'  => '3.29',
              'TAP::Formatter::Color' => '3.29',
              'TAP::Formatter::Console'=> '3.29',
              'TAP::Formatter::Console::ParallelSession'=> '3.29',
              'TAP::Formatter::Console::Session'=> '3.29',
              'TAP::Formatter::File'  => '3.29',
              'TAP::Formatter::File::Session'=> '3.29',
              'TAP::Formatter::Session'=> '3.29',
              'TAP::Harness'          => '3.29',
              'TAP::Harness::Env'     => '3.29',
              'TAP::Object'           => '3.29',
              'TAP::Parser'           => '3.29',
              'TAP::Parser::Aggregator'=> '3.29',
              'TAP::Parser::Grammar'  => '3.29',
              'TAP::Parser::Iterator' => '3.29',
              'TAP::Parser::Iterator::Array'=> '3.29',
              'TAP::Parser::Iterator::Process'=> '3.29',
              'TAP::Parser::Iterator::Stream'=> '3.29',
              'TAP::Parser::IteratorFactory'=> '3.29',
              'TAP::Parser::Multiplexer'=> '3.29',
              'TAP::Parser::Result'   => '3.29',
              'TAP::Parser::Result::Bailout'=> '3.29',
              'TAP::Parser::Result::Comment'=> '3.29',
              'TAP::Parser::Result::Plan'=> '3.29',
              'TAP::Parser::Result::Pragma'=> '3.29',
              'TAP::Parser::Result::Test'=> '3.29',
              'TAP::Parser::Result::Unknown'=> '3.29',
              'TAP::Parser::Result::Version'=> '3.29',
              'TAP::Parser::Result::YAML'=> '3.29',
              'TAP::Parser::ResultFactory'=> '3.29',
              'TAP::Parser::Scheduler'=> '3.29',
              'TAP::Parser::Scheduler::Job'=> '3.29',
              'TAP::Parser::Scheduler::Spinner'=> '3.29',
              'TAP::Parser::Source'   => '3.29',
              'TAP::Parser::SourceHandler'=> '3.29',
              'TAP::Parser::SourceHandler::Executable'=> '3.29',
              'TAP::Parser::SourceHandler::File'=> '3.29',
              'TAP::Parser::SourceHandler::Handle'=> '3.29',
              'TAP::Parser::SourceHandler::Perl'=> '3.29',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.29',
              'TAP::Parser::YAMLish::Reader'=> '3.29',
              'TAP::Parser::YAMLish::Writer'=> '3.29',
              'Test::Builder'         => '0.99',
              'Test::Builder::Module' => '0.99',
              'Test::Builder::Tester' => '1.23_002',
              'Test::Builder::Tester::Color'=> '1.23_002',
              'Test::Harness'         => '3.29',
              'Test::More'            => '0.99',
              'Test::Simple'          => '0.99',
              'Unicode'               => '6.3.0',
              'Unicode::Normalize'    => '1.17',
              'Unicode::UCD'          => '0.55',
              'attributes'            => '0.22',
              'autodie'               => '2.22',
              'autodie::exception'    => '2.22',
              'autodie::exception::system'=> '2.22',
              'autodie::hints'        => '2.22',
              'autodie::skip'         => '2.22',
              'feature'               => '1.34',
              'threads'               => '1.89',
              'warnings'              => '1.20',
          },
          removed => {
              'TAP::Parser::Utils'    => 1,
          }
      },
      5.019006 => {
          delta_from => 5.019005,
          changed => {
              'App::Prove'            => '3.30',
              'App::Prove::State'     => '3.30',
              'App::Prove::State::Result'=> '3.30',
              'App::Prove::State::Result::Test'=> '3.30',
              'Archive::Tar'          => '1.96',
              'Archive::Tar::Constant'=> '1.96',
              'Archive::Tar::File'    => '1.96',
              'AutoLoader'            => '5.74',
              'B'                     => '1.47',
              'B::Concise'            => '0.991',
              'B::Debug'              => '1.19',
              'B::Deparse'            => '1.24',
              'Benchmark'             => '1.18',
              'Compress::Raw::Bzip2'  => '2.063',
              'Compress::Raw::Zlib'   => '2.063',
              'Compress::Zlib'        => '2.063',
              'Config'                => '5.019006',
              'DB_File'               => '1.831',
              'Devel::Peek'           => '1.15',
              'DynaLoader'            => '1.21',
              'Errno'                 => '1.20_01',
              'ExtUtils::Command::MM' => '6.82',
              'ExtUtils::Liblist'     => '6.82',
              'ExtUtils::Liblist::Kid'=> '6.82',
              'ExtUtils::MM'          => '6.82',
              'ExtUtils::MM_AIX'      => '6.82',
              'ExtUtils::MM_Any'      => '6.82',
              'ExtUtils::MM_BeOS'     => '6.82',
              'ExtUtils::MM_Cygwin'   => '6.82',
              'ExtUtils::MM_DOS'      => '6.82',
              'ExtUtils::MM_Darwin'   => '6.82',
              'ExtUtils::MM_MacOS'    => '6.82',
              'ExtUtils::MM_NW5'      => '6.82',
              'ExtUtils::MM_OS2'      => '6.82',
              'ExtUtils::MM_QNX'      => '6.82',
              'ExtUtils::MM_UWIN'     => '6.82',
              'ExtUtils::MM_Unix'     => '6.82',
              'ExtUtils::MM_VMS'      => '6.82',
              'ExtUtils::MM_VOS'      => '6.82',
              'ExtUtils::MM_Win32'    => '6.82',
              'ExtUtils::MM_Win95'    => '6.82',
              'ExtUtils::MY'          => '6.82',
              'ExtUtils::MakeMaker'   => '6.82',
              'ExtUtils::MakeMaker::Config'=> '6.82',
              'ExtUtils::Mkbootstrap' => '6.82',
              'ExtUtils::Mksymlists'  => '6.82',
              'ExtUtils::testlib'     => '6.82',
              'File::DosGlob'         => '1.12',
              'File::Find'            => '1.26',
              'File::Glob'            => '1.23',
              'HTTP::Tiny'            => '0.038',
              'IO'                    => '1.30',
              'IO::Compress::Adapter::Bzip2'=> '2.063',
              'IO::Compress::Adapter::Deflate'=> '2.063',
              'IO::Compress::Adapter::Identity'=> '2.063',
              'IO::Compress::Base'    => '2.063',
              'IO::Compress::Base::Common'=> '2.063',
              'IO::Compress::Bzip2'   => '2.063',
              'IO::Compress::Deflate' => '2.063',
              'IO::Compress::Gzip'    => '2.063',
              'IO::Compress::Gzip::Constants'=> '2.063',
              'IO::Compress::RawDeflate'=> '2.063',
              'IO::Compress::Zip'     => '2.063',
              'IO::Compress::Zip::Constants'=> '2.063',
              'IO::Compress::Zlib::Constants'=> '2.063',
              'IO::Compress::Zlib::Extra'=> '2.063',
              'IO::Select'            => '1.22',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.063',
              'IO::Uncompress::Adapter::Identity'=> '2.063',
              'IO::Uncompress::Adapter::Inflate'=> '2.063',
              'IO::Uncompress::AnyInflate'=> '2.063',
              'IO::Uncompress::AnyUncompress'=> '2.063',
              'IO::Uncompress::Base'  => '2.063',
              'IO::Uncompress::Bunzip2'=> '2.063',
              'IO::Uncompress::Gunzip'=> '2.063',
              'IO::Uncompress::Inflate'=> '2.063',
              'IO::Uncompress::RawInflate'=> '2.063',
              'IO::Uncompress::Unzip' => '2.063',
              'IPC::Cmd'              => '0.90',
              'Locale::Maketext'      => '1.25',
              'Module::Build'         => '0.4202',
              'Module::Build::Base'   => '0.4202',
              'Module::Build::Compat' => '0.4202',
              'Module::Build::Config' => '0.4202',
              'Module::Build::Cookbook'=> '0.4202',
              'Module::Build::Dumper' => '0.4202',
              'Module::Build::ModuleInfo'=> '0.4202',
              'Module::Build::Notes'  => '0.4202',
              'Module::Build::PPMMaker'=> '0.4202',
              'Module::Build::Platform::Default'=> '0.4202',
              'Module::Build::Platform::MacOS'=> '0.4202',
              'Module::Build::Platform::Unix'=> '0.4202',
              'Module::Build::Platform::VMS'=> '0.4202',
              'Module::Build::Platform::VOS'=> '0.4202',
              'Module::Build::Platform::Windows'=> '0.4202',
              'Module::Build::Platform::aix'=> '0.4202',
              'Module::Build::Platform::cygwin'=> '0.4202',
              'Module::Build::Platform::darwin'=> '0.4202',
              'Module::Build::Platform::os2'=> '0.4202',
              'Module::Build::PodParser'=> '0.4202',
              'Module::CoreList'      => '3.01',
              'Module::CoreList::TieHashDelta'=> '3.01',
              'Module::CoreList::Utils'=> '3.01',
              'Opcode'                => '1.27',
              'POSIX'                 => '1.36',
              'Package::Constants'    => '0.04',
              'PerlIO::scalar'        => '0.18',
              'PerlIO::via'           => '0.13',
              'SDBM_File'             => '1.10',
              'Socket'                => '2.013',
              'TAP::Base'             => '3.30',
              'TAP::Formatter::Base'  => '3.30',
              'TAP::Formatter::Color' => '3.30',
              'TAP::Formatter::Console'=> '3.30',
              'TAP::Formatter::Console::ParallelSession'=> '3.30',
              'TAP::Formatter::Console::Session'=> '3.30',
              'TAP::Formatter::File'  => '3.30',
              'TAP::Formatter::File::Session'=> '3.30',
              'TAP::Formatter::Session'=> '3.30',
              'TAP::Harness'          => '3.30',
              'TAP::Harness::Env'     => '3.30',
              'TAP::Object'           => '3.30',
              'TAP::Parser'           => '3.30',
              'TAP::Parser::Aggregator'=> '3.30',
              'TAP::Parser::Grammar'  => '3.30',
              'TAP::Parser::Iterator' => '3.30',
              'TAP::Parser::Iterator::Array'=> '3.30',
              'TAP::Parser::Iterator::Process'=> '3.30',
              'TAP::Parser::Iterator::Stream'=> '3.30',
              'TAP::Parser::IteratorFactory'=> '3.30',
              'TAP::Parser::Multiplexer'=> '3.30',
              'TAP::Parser::Result'   => '3.30',
              'TAP::Parser::Result::Bailout'=> '3.30',
              'TAP::Parser::Result::Comment'=> '3.30',
              'TAP::Parser::Result::Plan'=> '3.30',
              'TAP::Parser::Result::Pragma'=> '3.30',
              'TAP::Parser::Result::Test'=> '3.30',
              'TAP::Parser::Result::Unknown'=> '3.30',
              'TAP::Parser::Result::Version'=> '3.30',
              'TAP::Parser::Result::YAML'=> '3.30',
              'TAP::Parser::ResultFactory'=> '3.30',
              'TAP::Parser::Scheduler'=> '3.30',
              'TAP::Parser::Scheduler::Job'=> '3.30',
              'TAP::Parser::Scheduler::Spinner'=> '3.30',
              'TAP::Parser::Source'   => '3.30',
              'TAP::Parser::SourceHandler'=> '3.30',
              'TAP::Parser::SourceHandler::Executable'=> '3.30',
              'TAP::Parser::SourceHandler::File'=> '3.30',
              'TAP::Parser::SourceHandler::Handle'=> '3.30',
              'TAP::Parser::SourceHandler::Perl'=> '3.30',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.30',
              'TAP::Parser::YAMLish::Reader'=> '3.30',
              'TAP::Parser::YAMLish::Writer'=> '3.30',
              'Term::Cap'             => '1.15',
              'Test::Builder'         => '1.001002',
              'Test::Builder::Module' => '1.001002',
              'Test::Harness'         => '3.30',
              'Test::More'            => '1.001002',
              'Test::Simple'          => '1.001002',
              'Tie::StdHandle'        => '4.4',
              'Unicode::Collate'      => '1.02',
              'Unicode::Collate::CJK::Korean'=> '1.02',
              'Unicode::Collate::Locale'=> '1.02',
              'XS::APItest'           => '0.57',
              'XS::Typemap'           => '0.12',
              'arybase'               => '0.07',
              'bignum'                => '0.37',
              'constant'              => '1.29',
              'fields'                => '2.17',
              'inc::latest'           => '0.4202',
              'threads'               => '1.90',
              'threads::shared'       => '1.45',
          },
          removed => {
          }
      },
      5.019007 => {
          delta_from => 5.019006,
          changed => {
              'CGI'                   => '3.64',
              'CGI::Apache'           => '1.02',
              'CGI::Carp'             => '3.64',
              'CGI::Cookie'           => '1.31',
              'CGI::Fast'             => '1.10',
              'CGI::Pretty'           => '3.64',
              'CGI::Push'             => '1.06',
              'CGI::Switch'           => '1.02',
              'CGI::Util'             => '3.64',
              'CPAN::Meta'            => '2.133380',
              'CPAN::Meta::Converter' => '2.133380',
              'CPAN::Meta::Feature'   => '2.133380',
              'CPAN::Meta::History'   => '2.133380',
              'CPAN::Meta::Prereqs'   => '2.133380',
              'CPAN::Meta::Spec'      => '2.133380',
              'CPAN::Meta::Validator' => '2.133380',
              'Config'                => '5.019007',
              'Data::Dumper'          => '2.150',
              'DynaLoader'            => '1.22',
              'ExtUtils::Command::MM' => '6.84',
              'ExtUtils::Liblist'     => '6.84',
              'ExtUtils::Liblist::Kid'=> '6.84',
              'ExtUtils::MM'          => '6.84',
              'ExtUtils::MM_AIX'      => '6.84',
              'ExtUtils::MM_Any'      => '6.84',
              'ExtUtils::MM_BeOS'     => '6.84',
              'ExtUtils::MM_Cygwin'   => '6.84',
              'ExtUtils::MM_DOS'      => '6.84',
              'ExtUtils::MM_Darwin'   => '6.84',
              'ExtUtils::MM_MacOS'    => '6.84',
              'ExtUtils::MM_NW5'      => '6.84',
              'ExtUtils::MM_OS2'      => '6.84',
              'ExtUtils::MM_QNX'      => '6.84',
              'ExtUtils::MM_UWIN'     => '6.84',
              'ExtUtils::MM_Unix'     => '6.84',
              'ExtUtils::MM_VMS'      => '6.84',
              'ExtUtils::MM_VOS'      => '6.84',
              'ExtUtils::MM_Win32'    => '6.84',
              'ExtUtils::MM_Win95'    => '6.84',
              'ExtUtils::MY'          => '6.84',
              'ExtUtils::MakeMaker'   => '6.84',
              'ExtUtils::MakeMaker::Config'=> '6.84',
              'ExtUtils::Mkbootstrap' => '6.84',
              'ExtUtils::Mksymlists'  => '6.84',
              'ExtUtils::testlib'     => '6.84',
              'File::Fetch'           => '0.46',
              'HTTP::Tiny'            => '0.039',
              'Locale::Codes'         => '3.28',
              'Locale::Codes::Constants'=> '3.28',
              'Locale::Codes::Country'=> '3.28',
              'Locale::Codes::Country_Codes'=> '3.28',
              'Locale::Codes::Country_Retired'=> '3.28',
              'Locale::Codes::Currency'=> '3.28',
              'Locale::Codes::Currency_Codes'=> '3.28',
              'Locale::Codes::Currency_Retired'=> '3.28',
              'Locale::Codes::LangExt'=> '3.28',
              'Locale::Codes::LangExt_Codes'=> '3.28',
              'Locale::Codes::LangExt_Retired'=> '3.28',
              'Locale::Codes::LangFam'=> '3.28',
              'Locale::Codes::LangFam_Codes'=> '3.28',
              'Locale::Codes::LangFam_Retired'=> '3.28',
              'Locale::Codes::LangVar'=> '3.28',
              'Locale::Codes::LangVar_Codes'=> '3.28',
              'Locale::Codes::LangVar_Retired'=> '3.28',
              'Locale::Codes::Language'=> '3.28',
              'Locale::Codes::Language_Codes'=> '3.28',
              'Locale::Codes::Language_Retired'=> '3.28',
              'Locale::Codes::Script' => '3.28',
              'Locale::Codes::Script_Codes'=> '3.28',
              'Locale::Codes::Script_Retired'=> '3.28',
              'Locale::Country'       => '3.28',
              'Locale::Currency'      => '3.28',
              'Locale::Language'      => '3.28',
              'Locale::Script'        => '3.28',
              'Module::Build'         => '0.4203',
              'Module::Build::Base'   => '0.4203',
              'Module::Build::Compat' => '0.4203',
              'Module::Build::Config' => '0.4203',
              'Module::Build::Cookbook'=> '0.4203',
              'Module::Build::Dumper' => '0.4203',
              'Module::Build::ModuleInfo'=> '0.4203',
              'Module::Build::Notes'  => '0.4203',
              'Module::Build::PPMMaker'=> '0.4203',
              'Module::Build::Platform::Default'=> '0.4203',
              'Module::Build::Platform::MacOS'=> '0.4203',
              'Module::Build::Platform::Unix'=> '0.4203',
              'Module::Build::Platform::VMS'=> '0.4203',
              'Module::Build::Platform::VOS'=> '0.4203',
              'Module::Build::Platform::Windows'=> '0.4203',
              'Module::Build::Platform::aix'=> '0.4203',
              'Module::Build::Platform::cygwin'=> '0.4203',
              'Module::Build::Platform::darwin'=> '0.4203',
              'Module::Build::Platform::os2'=> '0.4203',
              'Module::Build::PodParser'=> '0.4203',
              'Module::CoreList'      => '3.02',
              'Module::CoreList::TieHashDelta'=> '3.02',
              'Module::CoreList::Utils'=> '3.02',
              'POSIX'                 => '1.37',
              'PerlIO::encoding'      => '0.17',
              'PerlIO::via'           => '0.14',
              'SDBM_File'             => '1.11',
              'Storable'              => '2.48',
              'Time::Piece'           => '1.24',
              'Time::Seconds'         => '1.24',
              'Unicode::Collate'      => '1.04',
              'Win32'                 => '0.48',
              'XS::APItest'           => '0.58',
              'base'                  => '2.20',
              'constant'              => '1.30',
              'inc::latest'           => '0.4203',
              'threads'               => '1.91',
          },
          removed => {
          }
      },
      5.019008 => {
          delta_from => 5.019007,
          changed => {
              'Config'                => '5.019008',
              'DynaLoader'            => '1.24',
              'Encode'                => '2.57',
              'Errno'                 => '1.20_02',
              'ExtUtils::CBuilder'    => '0.280213',
              'ExtUtils::CBuilder::Base'=> '0.280213',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280213',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280213',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280213',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280213',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280213',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280213',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280213',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280213',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280213',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280213',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280213',
              'ExtUtils::Command::MM' => '6.86',
              'ExtUtils::Liblist'     => '6.86',
              'ExtUtils::Liblist::Kid'=> '6.86',
              'ExtUtils::MM'          => '6.86',
              'ExtUtils::MM_AIX'      => '6.86',
              'ExtUtils::MM_Any'      => '6.86',
              'ExtUtils::MM_BeOS'     => '6.86',
              'ExtUtils::MM_Cygwin'   => '6.86',
              'ExtUtils::MM_DOS'      => '6.86',
              'ExtUtils::MM_Darwin'   => '6.86',
              'ExtUtils::MM_MacOS'    => '6.86',
              'ExtUtils::MM_NW5'      => '6.86',
              'ExtUtils::MM_OS2'      => '6.86',
              'ExtUtils::MM_QNX'      => '6.86',
              'ExtUtils::MM_UWIN'     => '6.86',
              'ExtUtils::MM_Unix'     => '6.86',
              'ExtUtils::MM_VMS'      => '6.86',
              'ExtUtils::MM_VOS'      => '6.86',
              'ExtUtils::MM_Win32'    => '6.86',
              'ExtUtils::MM_Win95'    => '6.86',
              'ExtUtils::MY'          => '6.86',
              'ExtUtils::MakeMaker'   => '6.86',
              'ExtUtils::MakeMaker::Config'=> '6.86',
              'ExtUtils::Mkbootstrap' => '6.86',
              'ExtUtils::Mksymlists'  => '6.86',
              'ExtUtils::testlib'     => '6.86',
              'File::Copy'            => '2.29',
              'Hash::Util::FieldHash' => '1.14',
              'IO::Socket::IP'        => '0.26',
              'IO::Socket::UNIX'      => '1.26',
              'List::Util'            => '1.36',
              'List::Util::XS'        => '1.36',
              'Module::Build'         => '0.4204',
              'Module::Build::Base'   => '0.4204',
              'Module::Build::Compat' => '0.4204',
              'Module::Build::Config' => '0.4204',
              'Module::Build::Cookbook'=> '0.4204',
              'Module::Build::Dumper' => '0.4204',
              'Module::Build::ModuleInfo'=> '0.4204',
              'Module::Build::Notes'  => '0.4204',
              'Module::Build::PPMMaker'=> '0.4204',
              'Module::Build::Platform::Default'=> '0.4204',
              'Module::Build::Platform::MacOS'=> '0.4204',
              'Module::Build::Platform::Unix'=> '0.4204',
              'Module::Build::Platform::VMS'=> '0.4204',
              'Module::Build::Platform::VOS'=> '0.4204',
              'Module::Build::Platform::Windows'=> '0.4204',
              'Module::Build::Platform::aix'=> '0.4204',
              'Module::Build::Platform::cygwin'=> '0.4204',
              'Module::Build::Platform::darwin'=> '0.4204',
              'Module::Build::Platform::os2'=> '0.4204',
              'Module::Build::PodParser'=> '0.4204',
              'Module::CoreList'      => '3.04',
              'Module::CoreList::TieHashDelta'=> '3.04',
              'Module::CoreList::Utils'=> '3.04',
              'Module::Load'          => '0.28',
              'Module::Load::Conditional'=> '0.60',
              'Net::Config'           => '1.13',
              'Net::FTP::A'           => '1.19',
              'POSIX'                 => '1.38_01',
              'Perl::OSType'          => '1.007',
              'PerlIO::encoding'      => '0.18',
              'Pod::Perldoc'          => '3.21',
              'Pod::Perldoc::BaseTo'  => '3.21',
              'Pod::Perldoc::GetOptsOO'=> '3.21',
              'Pod::Perldoc::ToANSI'  => '3.21',
              'Pod::Perldoc::ToChecker'=> '3.21',
              'Pod::Perldoc::ToMan'   => '3.21',
              'Pod::Perldoc::ToNroff' => '3.21',
              'Pod::Perldoc::ToPod'   => '3.21',
              'Pod::Perldoc::ToRtf'   => '3.21',
              'Pod::Perldoc::ToTerm'  => '3.21',
              'Pod::Perldoc::ToText'  => '3.21',
              'Pod::Perldoc::ToTk'    => '3.21',
              'Pod::Perldoc::ToXml'   => '3.21',
              'Scalar::Util'          => '1.36',
              'Time::Piece'           => '1.27',
              'Time::Seconds'         => '1.27',
              'Unicode::UCD'          => '0.57',
              'XS::APItest'           => '0.59',
              'XSLoader'              => '0.17',
              'base'                  => '2.21',
              'constant'              => '1.31',
              'inc::latest'           => '0.4204',
              'threads::shared'       => '1.46',
              'version'               => '0.9907',
              'version::regex'        => '0.9907',
              'version::vpp'          => '0.9907',
              'warnings'              => '1.21',
          },
          removed => {
          }
      },
      5.019009 => {
          delta_from => 5.019008,
          changed => {
              'B'                     => '1.48',
              'B::Concise'            => '0.992',
              'B::Deparse'            => '1.25',
              'CGI'                   => '3.65',
              'CPAN::Meta::YAML'      => '0.011',
              'Compress::Raw::Bzip2'  => '2.064',
              'Compress::Raw::Zlib'   => '2.065',
              'Compress::Zlib'        => '2.064',
              'Config'                => '5.019009',
              'Config::Perl::V'       => '0.20',
              'Cwd'                   => '3.47',
              'Devel::Peek'           => '1.16',
              'Digest::SHA'           => '5.87',
              'DynaLoader'            => '1.25',
              'English'               => '1.09',
              'ExtUtils::CBuilder'    => '0.280216',
              'ExtUtils::CBuilder::Base'=> '0.280216',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280216',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280216',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280216',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280216',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280216',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280216',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280216',
              'ExtUtils::CBuilder::Platform::android'=> '0.280216',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280216',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280216',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280216',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280216',
              'ExtUtils::Command::MM' => '6.88',
              'ExtUtils::Embed'       => '1.32',
              'ExtUtils::Install'     => '1.62',
              'ExtUtils::Installed'   => '1.999004',
              'ExtUtils::Liblist'     => '6.88',
              'ExtUtils::Liblist::Kid'=> '6.88',
              'ExtUtils::MM'          => '6.88',
              'ExtUtils::MM_AIX'      => '6.88',
              'ExtUtils::MM_Any'      => '6.88',
              'ExtUtils::MM_BeOS'     => '6.88',
              'ExtUtils::MM_Cygwin'   => '6.88',
              'ExtUtils::MM_DOS'      => '6.88',
              'ExtUtils::MM_Darwin'   => '6.88',
              'ExtUtils::MM_MacOS'    => '6.88',
              'ExtUtils::MM_NW5'      => '6.88',
              'ExtUtils::MM_OS2'      => '6.88',
              'ExtUtils::MM_QNX'      => '6.88',
              'ExtUtils::MM_UWIN'     => '6.88',
              'ExtUtils::MM_Unix'     => '6.88',
              'ExtUtils::MM_VMS'      => '6.88',
              'ExtUtils::MM_VOS'      => '6.88',
              'ExtUtils::MM_Win32'    => '6.88',
              'ExtUtils::MM_Win95'    => '6.88',
              'ExtUtils::MY'          => '6.88',
              'ExtUtils::MakeMaker'   => '6.88',
              'ExtUtils::MakeMaker::Config'=> '6.88',
              'ExtUtils::Mkbootstrap' => '6.88',
              'ExtUtils::Mksymlists'  => '6.88',
              'ExtUtils::Packlist'    => '1.47',
              'ExtUtils::testlib'     => '6.88',
              'Fatal'                 => '2.23',
              'File::Fetch'           => '0.48',
              'File::Spec'            => '3.47',
              'File::Spec::Cygwin'    => '3.47',
              'File::Spec::Epoc'      => '3.47',
              'File::Spec::Functions' => '3.47',
              'File::Spec::Mac'       => '3.47',
              'File::Spec::OS2'       => '3.47',
              'File::Spec::Unix'      => '3.47',
              'File::Spec::VMS'       => '3.47',
              'File::Spec::Win32'     => '3.47',
              'HTTP::Tiny'            => '0.042',
              'IO::Compress::Adapter::Bzip2'=> '2.064',
              'IO::Compress::Adapter::Deflate'=> '2.064',
              'IO::Compress::Adapter::Identity'=> '2.064',
              'IO::Compress::Base'    => '2.064',
              'IO::Compress::Base::Common'=> '2.064',
              'IO::Compress::Bzip2'   => '2.064',
              'IO::Compress::Deflate' => '2.064',
              'IO::Compress::Gzip'    => '2.064',
              'IO::Compress::Gzip::Constants'=> '2.064',
              'IO::Compress::RawDeflate'=> '2.064',
              'IO::Compress::Zip'     => '2.064',
              'IO::Compress::Zip::Constants'=> '2.064',
              'IO::Compress::Zlib::Constants'=> '2.064',
              'IO::Compress::Zlib::Extra'=> '2.064',
              'IO::Socket::INET'      => '1.35',
              'IO::Socket::IP'        => '0.28',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.064',
              'IO::Uncompress::Adapter::Identity'=> '2.064',
              'IO::Uncompress::Adapter::Inflate'=> '2.064',
              'IO::Uncompress::AnyInflate'=> '2.064',
              'IO::Uncompress::AnyUncompress'=> '2.064',
              'IO::Uncompress::Base'  => '2.064',
              'IO::Uncompress::Bunzip2'=> '2.064',
              'IO::Uncompress::Gunzip'=> '2.064',
              'IO::Uncompress::Inflate'=> '2.064',
              'IO::Uncompress::RawInflate'=> '2.064',
              'IO::Uncompress::Unzip' => '2.064',
              'IPC::Cmd'              => '0.92',
              'List::Util'            => '1.38',
              'List::Util::XS'        => '1.38',
              'Locale::Codes'         => '3.29',
              'Locale::Codes::Constants'=> '3.29',
              'Locale::Codes::Country'=> '3.29',
              'Locale::Codes::Country_Codes'=> '3.29',
              'Locale::Codes::Country_Retired'=> '3.29',
              'Locale::Codes::Currency'=> '3.29',
              'Locale::Codes::Currency_Codes'=> '3.29',
              'Locale::Codes::Currency_Retired'=> '3.29',
              'Locale::Codes::LangExt'=> '3.29',
              'Locale::Codes::LangExt_Codes'=> '3.29',
              'Locale::Codes::LangExt_Retired'=> '3.29',
              'Locale::Codes::LangFam'=> '3.29',
              'Locale::Codes::LangFam_Codes'=> '3.29',
              'Locale::Codes::LangFam_Retired'=> '3.29',
              'Locale::Codes::LangVar'=> '3.29',
              'Locale::Codes::LangVar_Codes'=> '3.29',
              'Locale::Codes::LangVar_Retired'=> '3.29',
              'Locale::Codes::Language'=> '3.29',
              'Locale::Codes::Language_Codes'=> '3.29',
              'Locale::Codes::Language_Retired'=> '3.29',
              'Locale::Codes::Script' => '3.29',
              'Locale::Codes::Script_Codes'=> '3.29',
              'Locale::Codes::Script_Retired'=> '3.29',
              'Locale::Country'       => '3.29',
              'Locale::Currency'      => '3.29',
              'Locale::Language'      => '3.29',
              'Locale::Script'        => '3.29',
              'Module::Build'         => '0.4205',
              'Module::Build::Base'   => '0.4205',
              'Module::Build::Compat' => '0.4205',
              'Module::Build::Config' => '0.4205',
              'Module::Build::Cookbook'=> '0.4205',
              'Module::Build::Dumper' => '0.4205',
              'Module::Build::ModuleInfo'=> '0.4205',
              'Module::Build::Notes'  => '0.4205',
              'Module::Build::PPMMaker'=> '0.4205',
              'Module::Build::Platform::Default'=> '0.4205',
              'Module::Build::Platform::MacOS'=> '0.4205',
              'Module::Build::Platform::Unix'=> '0.4205',
              'Module::Build::Platform::VMS'=> '0.4205',
              'Module::Build::Platform::VOS'=> '0.4205',
              'Module::Build::Platform::Windows'=> '0.4205',
              'Module::Build::Platform::aix'=> '0.4205',
              'Module::Build::Platform::cygwin'=> '0.4205',
              'Module::Build::Platform::darwin'=> '0.4205',
              'Module::Build::Platform::os2'=> '0.4205',
              'Module::Build::PodParser'=> '0.4205',
              'Module::CoreList'      => '3.06',
              'Module::CoreList::TieHashDelta'=> '3.06',
              'Module::CoreList::Utils'=> '3.06',
              'Module::Load'          => '0.30',
              'Module::Load::Conditional'=> '0.62',
              'Net::Domain'           => '2.23',
              'Net::FTP'              => '2.79',
              'Net::NNTP'             => '2.26',
              'Net::POP3'             => '2.31',
              'Net::Ping'             => '2.43',
              'Net::SMTP'             => '2.33',
              'POSIX'                 => '1.38_02',
              'Parse::CPAN::Meta'     => '1.4413',
              'Pod::Escapes'          => '1.06',
              'Pod::Find'             => '1.62',
              'Pod::InputObjects'     => '1.62',
              'Pod::ParseUtils'       => '1.62',
              'Pod::Parser'           => '1.62',
              'Pod::Select'           => '1.62',
              'Scalar::Util'          => '1.38',
              'autodie'               => '2.23',
              'autodie::exception'    => '2.23',
              'autodie::exception::system'=> '2.23',
              'autodie::hints'        => '2.23',
              'autodie::skip'         => '2.23',
              'diagnostics'           => '1.34',
              'feature'               => '1.35',
              'inc::latest'           => '0.4205',
              'locale'                => '1.03',
              'mro'                   => '1.15',
              'threads'               => '1.92',
              'version'               => '0.9908',
              'version::regex'        => '0.9908',
              'version::vpp'          => '0.9908',
              'warnings'              => '1.22',
          },
          removed => {
          }
      },
      5.01901 => {
          delta_from => 5.019009,
          changed => {
              'App::Cpan'             => '1.62',
              'Attribute::Handlers'   => '0.96',
              'B::Deparse'            => '1.26',
              'CPAN'                  => '2.04',
              'CPAN::Bundle'          => '5.5001',
              'CPAN::Complete'        => '5.5001',
              'CPAN::Distribution'    => '2.01',
              'CPAN::Distroprefs'     => '6.0001',
              'CPAN::FirstTime'       => '5.5305',
              'CPAN::Meta'            => '2.140640',
              'CPAN::Meta::Converter' => '2.140640',
              'CPAN::Meta::Feature'   => '2.140640',
              'CPAN::Meta::History'   => '2.140640',
              'CPAN::Meta::Prereqs'   => '2.140640',
              'CPAN::Meta::Spec'      => '2.140640',
              'CPAN::Meta::Validator' => '2.140640',
              'CPAN::Meta::YAML'      => '0.012',
              'CPAN::Queue'           => '5.5002',
              'CPAN::Shell'           => '5.5003',
              'CPAN::Tarzip'          => '5.5012',
              'CPAN::Version'         => '5.5003',
              'Carp'                  => '1.33',
              'Carp::Heavy'           => '1.33',
              'Config'                => '5.019010',
              'Data::Dumper'          => '2.151',
              'Devel::PPPort'         => '3.22',
              'Digest::SHA'           => '5.88',
              'ExtUtils::Command::MM' => '6.92',
              'ExtUtils::Install'     => '1.63',
              'ExtUtils::Installed'   => '1.999005',
              'ExtUtils::Liblist'     => '6.92',
              'ExtUtils::Liblist::Kid'=> '6.92',
              'ExtUtils::MM'          => '6.92',
              'ExtUtils::MM_AIX'      => '6.92',
              'ExtUtils::MM_Any'      => '6.92',
              'ExtUtils::MM_BeOS'     => '6.92',
              'ExtUtils::MM_Cygwin'   => '6.92',
              'ExtUtils::MM_DOS'      => '6.92',
              'ExtUtils::MM_Darwin'   => '6.92',
              'ExtUtils::MM_MacOS'    => '6.92',
              'ExtUtils::MM_NW5'      => '6.92',
              'ExtUtils::MM_OS2'      => '6.92',
              'ExtUtils::MM_QNX'      => '6.92',
              'ExtUtils::MM_UWIN'     => '6.92',
              'ExtUtils::MM_Unix'     => '6.92',
              'ExtUtils::MM_VMS'      => '6.92',
              'ExtUtils::MM_VOS'      => '6.92',
              'ExtUtils::MM_Win32'    => '6.92',
              'ExtUtils::MM_Win95'    => '6.92',
              'ExtUtils::MY'          => '6.92',
              'ExtUtils::MakeMaker'   => '6.92',
              'ExtUtils::MakeMaker::Config'=> '6.92',
              'ExtUtils::Mkbootstrap' => '6.92',
              'ExtUtils::Mksymlists'  => '6.92',
              'ExtUtils::Packlist'    => '1.48',
              'ExtUtils::ParseXS'     => '3.24',
              'ExtUtils::ParseXS::Constants'=> '3.24',
              'ExtUtils::ParseXS::CountLines'=> '3.24',
              'ExtUtils::ParseXS::Eval'=> '3.24',
              'ExtUtils::ParseXS::Utilities'=> '3.24',
              'ExtUtils::Typemaps'    => '3.24',
              'ExtUtils::Typemaps::Cmd'=> '3.24',
              'ExtUtils::Typemaps::InputMap'=> '3.24',
              'ExtUtils::Typemaps::OutputMap'=> '3.24',
              'ExtUtils::Typemaps::Type'=> '3.24',
              'ExtUtils::testlib'     => '6.92',
              'File::Find'            => '1.27',
              'Filter::Simple'        => '0.91',
              'HTTP::Tiny'            => '0.043',
              'Hash::Util::FieldHash' => '1.15',
              'IO'                    => '1.31',
              'IO::Socket::IP'        => '0.29',
              'Locale::Codes'         => '3.30',
              'Locale::Codes::Constants'=> '3.30',
              'Locale::Codes::Country'=> '3.30',
              'Locale::Codes::Country_Codes'=> '3.30',
              'Locale::Codes::Country_Retired'=> '3.30',
              'Locale::Codes::Currency'=> '3.30',
              'Locale::Codes::Currency_Codes'=> '3.30',
              'Locale::Codes::Currency_Retired'=> '3.30',
              'Locale::Codes::LangExt'=> '3.30',
              'Locale::Codes::LangExt_Codes'=> '3.30',
              'Locale::Codes::LangExt_Retired'=> '3.30',
              'Locale::Codes::LangFam'=> '3.30',
              'Locale::Codes::LangFam_Codes'=> '3.30',
              'Locale::Codes::LangFam_Retired'=> '3.30',
              'Locale::Codes::LangVar'=> '3.30',
              'Locale::Codes::LangVar_Codes'=> '3.30',
              'Locale::Codes::LangVar_Retired'=> '3.30',
              'Locale::Codes::Language'=> '3.30',
              'Locale::Codes::Language_Codes'=> '3.30',
              'Locale::Codes::Language_Retired'=> '3.30',
              'Locale::Codes::Script' => '3.30',
              'Locale::Codes::Script_Codes'=> '3.30',
              'Locale::Codes::Script_Retired'=> '3.30',
              'Locale::Country'       => '3.30',
              'Locale::Currency'      => '3.30',
              'Locale::Language'      => '3.30',
              'Locale::Script'        => '3.30',
              'Module::CoreList'      => '3.09',
              'Module::CoreList::TieHashDelta'=> '3.09',
              'Module::CoreList::Utils'=> '3.09',
              'Module::Load'          => '0.32',
              'POSIX'                 => '1.38_03',
              'Parse::CPAN::Meta'     => '1.4414',
              'Pod::Perldoc'          => '3.23',
              'Pod::Perldoc::BaseTo'  => '3.23',
              'Pod::Perldoc::GetOptsOO'=> '3.23',
              'Pod::Perldoc::ToANSI'  => '3.23',
              'Pod::Perldoc::ToChecker'=> '3.23',
              'Pod::Perldoc::ToMan'   => '3.23',
              'Pod::Perldoc::ToNroff' => '3.23',
              'Pod::Perldoc::ToPod'   => '3.23',
              'Pod::Perldoc::ToRtf'   => '3.23',
              'Pod::Perldoc::ToTerm'  => '3.23',
              'Pod::Perldoc::ToText'  => '3.23',
              'Pod::Perldoc::ToTk'    => '3.23',
              'Pod::Perldoc::ToXml'   => '3.23',
              'Thread::Queue'         => '3.05',
              'XS::APItest'           => '0.60',
              'XS::Typemap'           => '0.13',
              'autouse'               => '1.08',
              'base'                  => '2.22',
              'charnames'             => '1.40',
              'feature'               => '1.36',
              'mro'                   => '1.16',
              'threads'               => '1.93',
              'warnings'              => '1.23',
              'warnings::register'    => '1.03',
          },
          removed => {
          }
      },
      5.019011 => {
          delta_from => 5.01901,
          changed => {
              'CPAN'                  => '2.05',
              'CPAN::Distribution'    => '2.02',
              'CPAN::FirstTime'       => '5.5306',
              'CPAN::Shell'           => '5.5004',
              'Carp'                  => '1.3301',
              'Carp::Heavy'           => '1.3301',
              'Config'                => '5.019011',
              'ExtUtils::Command::MM' => '6.94',
              'ExtUtils::Install'     => '1.67',
              'ExtUtils::Liblist'     => '6.94',
              'ExtUtils::Liblist::Kid'=> '6.94',
              'ExtUtils::MM'          => '6.94',
              'ExtUtils::MM_AIX'      => '6.94',
              'ExtUtils::MM_Any'      => '6.94',
              'ExtUtils::MM_BeOS'     => '6.94',
              'ExtUtils::MM_Cygwin'   => '6.94',
              'ExtUtils::MM_DOS'      => '6.94',
              'ExtUtils::MM_Darwin'   => '6.94',
              'ExtUtils::MM_MacOS'    => '6.94',
              'ExtUtils::MM_NW5'      => '6.94',
              'ExtUtils::MM_OS2'      => '6.94',
              'ExtUtils::MM_QNX'      => '6.94',
              'ExtUtils::MM_UWIN'     => '6.94',
              'ExtUtils::MM_Unix'     => '6.94',
              'ExtUtils::MM_VMS'      => '6.94',
              'ExtUtils::MM_VOS'      => '6.94',
              'ExtUtils::MM_Win32'    => '6.94',
              'ExtUtils::MM_Win95'    => '6.94',
              'ExtUtils::MY'          => '6.94',
              'ExtUtils::MakeMaker'   => '6.94',
              'ExtUtils::MakeMaker::Config'=> '6.94',
              'ExtUtils::Mkbootstrap' => '6.94',
              'ExtUtils::Mksymlists'  => '6.94',
              'ExtUtils::testlib'     => '6.94',
              'Module::CoreList'      => '3.10',
              'Module::CoreList::TieHashDelta'=> '3.10',
              'Module::CoreList::Utils'=> '3.10',
              'PerlIO'                => '1.09',
              'Storable'              => '2.49',
              'Win32'                 => '0.49',
              'experimental'          => '0.007',
          },
          removed => {
          }
      },
      5.020000 => {
          delta_from => 5.019011,
          changed => {
              'Config'                => '5.02',
              'Devel::PPPort'         => '3.21',
              'Encode'                => '2.60',
              'Errno'                 => '1.20_03',
              'ExtUtils::Command::MM' => '6.98',
              'ExtUtils::Liblist'     => '6.98',
              'ExtUtils::Liblist::Kid'=> '6.98',
              'ExtUtils::MM'          => '6.98',
              'ExtUtils::MM_AIX'      => '6.98',
              'ExtUtils::MM_Any'      => '6.98',
              'ExtUtils::MM_BeOS'     => '6.98',
              'ExtUtils::MM_Cygwin'   => '6.98',
              'ExtUtils::MM_DOS'      => '6.98',
              'ExtUtils::MM_Darwin'   => '6.98',
              'ExtUtils::MM_MacOS'    => '6.98',
              'ExtUtils::MM_NW5'      => '6.98',
              'ExtUtils::MM_OS2'      => '6.98',
              'ExtUtils::MM_QNX'      => '6.98',
              'ExtUtils::MM_UWIN'     => '6.98',
              'ExtUtils::MM_Unix'     => '6.98',
              'ExtUtils::MM_VMS'      => '6.98',
              'ExtUtils::MM_VOS'      => '6.98',
              'ExtUtils::MM_Win32'    => '6.98',
              'ExtUtils::MM_Win95'    => '6.98',
              'ExtUtils::MY'          => '6.98',
              'ExtUtils::MakeMaker'   => '6.98',
              'ExtUtils::MakeMaker::Config'=> '6.98',
              'ExtUtils::Miniperl'    => '1.01',
              'ExtUtils::Mkbootstrap' => '6.98',
              'ExtUtils::Mksymlists'  => '6.98',
              'ExtUtils::testlib'     => '6.98',
              'Pod::Functions::Functions'=> '1.08',
          },
          removed => {
          }
      },
      5.021000 => {
          delta_from => 5.020000,
          changed => {
              'Module::CoreList'      => '5.021001',
              'Module::CoreList::TieHashDelta'=> '5.021001',
              'Module::CoreList::Utils'=> '5.021001',
              'feature'               => '1.37',
          },
          removed => {
              'CGI'                   => 1,
              'CGI::Apache'           => 1,
              'CGI::Carp'             => 1,
              'CGI::Cookie'           => 1,
              'CGI::Fast'             => 1,
              'CGI::Pretty'           => 1,
              'CGI::Push'             => 1,
              'CGI::Switch'           => 1,
              'CGI::Util'             => 1,
              'Module::Build'         => 1,
              'Module::Build::Base'   => 1,
              'Module::Build::Compat' => 1,
              'Module::Build::Config' => 1,
              'Module::Build::ConfigData'=> 1,
              'Module::Build::Cookbook'=> 1,
              'Module::Build::Dumper' => 1,
              'Module::Build::ModuleInfo'=> 1,
              'Module::Build::Notes'  => 1,
              'Module::Build::PPMMaker'=> 1,
              'Module::Build::Platform::Default'=> 1,
              'Module::Build::Platform::MacOS'=> 1,
              'Module::Build::Platform::Unix'=> 1,
              'Module::Build::Platform::VMS'=> 1,
              'Module::Build::Platform::VOS'=> 1,
              'Module::Build::Platform::Windows'=> 1,
              'Module::Build::Platform::aix'=> 1,
              'Module::Build::Platform::cygwin'=> 1,
              'Module::Build::Platform::darwin'=> 1,
              'Module::Build::Platform::os2'=> 1,
              'Module::Build::PodParser'=> 1,
              'Module::Build::Version'=> 1,
              'Module::Build::YAML'   => 1,
              'Package::Constants'    => 1,
              'inc::latest'           => 1,
          }
      },
      5.021001 => {
          delta_from => 5.021000,
          changed => {
              'App::Prove'            => '3.32',
              'App::Prove::State'     => '3.32',
              'App::Prove::State::Result'=> '3.32',
              'App::Prove::State::Result::Test'=> '3.32',
              'Archive::Tar'          => '2.00',
              'Archive::Tar::Constant'=> '2.00',
              'Archive::Tar::File'    => '2.00',
              'B'                     => '1.49',
              'B::Deparse'            => '1.27',
              'Benchmark'             => '1.19',
              'CPAN::Meta'            => '2.141520',
              'CPAN::Meta::Converter' => '2.141520',
              'CPAN::Meta::Feature'   => '2.141520',
              'CPAN::Meta::History'   => '2.141520',
              'CPAN::Meta::Prereqs'   => '2.141520',
              'CPAN::Meta::Spec'      => '2.141520',
              'CPAN::Meta::Validator' => '2.141520',
              'Carp'                  => '1.34',
              'Carp::Heavy'           => '1.34',
              'Config'                => '5.021001',
              'Cwd'                   => '3.48',
              'Data::Dumper'          => '2.152',
              'Devel::PPPort'         => '3.24',
              'Devel::Peek'           => '1.17',
              'Digest::SHA'           => '5.92',
              'DynaLoader'            => '1.26',
              'Encode'                => '2.62',
              'Errno'                 => '1.20_04',
              'Exporter'              => '5.71',
              'Exporter::Heavy'       => '5.71',
              'ExtUtils::Install'     => '1.68',
              'ExtUtils::Miniperl'    => '1.02',
              'ExtUtils::ParseXS'     => '3.25',
              'ExtUtils::ParseXS::Constants'=> '3.25',
              'ExtUtils::ParseXS::CountLines'=> '3.25',
              'ExtUtils::ParseXS::Eval'=> '3.25',
              'ExtUtils::ParseXS::Utilities'=> '3.25',
              'ExtUtils::Typemaps'    => '3.25',
              'ExtUtils::Typemaps::Cmd'=> '3.25',
              'ExtUtils::Typemaps::InputMap'=> '3.25',
              'ExtUtils::Typemaps::OutputMap'=> '3.25',
              'ExtUtils::Typemaps::Type'=> '3.25',
              'Fatal'                 => '2.25',
              'File::Spec'            => '3.48',
              'File::Spec::Cygwin'    => '3.48',
              'File::Spec::Epoc'      => '3.48',
              'File::Spec::Functions' => '3.48',
              'File::Spec::Mac'       => '3.48',
              'File::Spec::OS2'       => '3.48',
              'File::Spec::Unix'      => '3.48',
              'File::Spec::VMS'       => '3.48',
              'File::Spec::Win32'     => '3.48',
              'Hash::Util'            => '0.17',
              'IO'                    => '1.32',
              'List::Util'            => '1.39',
              'List::Util::XS'        => '1.39',
              'Locale::Codes'         => '3.31',
              'Locale::Codes::Constants'=> '3.31',
              'Locale::Codes::Country'=> '3.31',
              'Locale::Codes::Country_Codes'=> '3.31',
              'Locale::Codes::Country_Retired'=> '3.31',
              'Locale::Codes::Currency'=> '3.31',
              'Locale::Codes::Currency_Codes'=> '3.31',
              'Locale::Codes::Currency_Retired'=> '3.31',
              'Locale::Codes::LangExt'=> '3.31',
              'Locale::Codes::LangExt_Codes'=> '3.31',
              'Locale::Codes::LangExt_Retired'=> '3.31',
              'Locale::Codes::LangFam'=> '3.31',
              'Locale::Codes::LangFam_Codes'=> '3.31',
              'Locale::Codes::LangFam_Retired'=> '3.31',
              'Locale::Codes::LangVar'=> '3.31',
              'Locale::Codes::LangVar_Codes'=> '3.31',
              'Locale::Codes::LangVar_Retired'=> '3.31',
              'Locale::Codes::Language'=> '3.31',
              'Locale::Codes::Language_Codes'=> '3.31',
              'Locale::Codes::Language_Retired'=> '3.31',
              'Locale::Codes::Script' => '3.31',
              'Locale::Codes::Script_Codes'=> '3.31',
              'Locale::Codes::Script_Retired'=> '3.31',
              'Locale::Country'       => '3.31',
              'Locale::Currency'      => '3.31',
              'Locale::Language'      => '3.31',
              'Locale::Script'        => '3.31',
              'Math::BigFloat'        => '1.9994',
              'Math::BigInt'          => '1.9995',
              'Math::BigInt::Calc'    => '1.9994',
              'Math::BigInt::CalcEmu' => '1.9994',
              'Math::BigRat'          => '0.2608',
              'Module::CoreList'      => '5.021001_01',
              'Module::CoreList::TieHashDelta'=> '5.021001_01',
              'Module::CoreList::Utils'=> '5.021001_01',
              'Module::Metadata'      => '1.000024',
              'NDBM_File'             => '1.13',
              'Net::Config'           => '1.14',
              'Net::SMTP'             => '2.34',
              'Net::Time'             => '2.11',
              'OS2::Process'          => '1.10',
              'POSIX'                 => '1.40',
              'PerlIO::encoding'      => '0.19',
              'PerlIO::mmap'          => '0.013',
              'PerlIO::scalar'        => '0.19',
              'PerlIO::via'           => '0.15',
              'Pod::Html'             => '1.22',
              'Scalar::Util'          => '1.39',
              'SelfLoader'            => '1.22',
              'Socket'                => '2.014',
              'Storable'              => '2.51',
              'TAP::Base'             => '3.32',
              'TAP::Formatter::Base'  => '3.32',
              'TAP::Formatter::Color' => '3.32',
              'TAP::Formatter::Console'=> '3.32',
              'TAP::Formatter::Console::ParallelSession'=> '3.32',
              'TAP::Formatter::Console::Session'=> '3.32',
              'TAP::Formatter::File'  => '3.32',
              'TAP::Formatter::File::Session'=> '3.32',
              'TAP::Formatter::Session'=> '3.32',
              'TAP::Harness'          => '3.32',
              'TAP::Harness::Env'     => '3.32',
              'TAP::Object'           => '3.32',
              'TAP::Parser'           => '3.32',
              'TAP::Parser::Aggregator'=> '3.32',
              'TAP::Parser::Grammar'  => '3.32',
              'TAP::Parser::Iterator' => '3.32',
              'TAP::Parser::Iterator::Array'=> '3.32',
              'TAP::Parser::Iterator::Process'=> '3.32',
              'TAP::Parser::Iterator::Stream'=> '3.32',
              'TAP::Parser::IteratorFactory'=> '3.32',
              'TAP::Parser::Multiplexer'=> '3.32',
              'TAP::Parser::Result'   => '3.32',
              'TAP::Parser::Result::Bailout'=> '3.32',
              'TAP::Parser::Result::Comment'=> '3.32',
              'TAP::Parser::Result::Plan'=> '3.32',
              'TAP::Parser::Result::Pragma'=> '3.32',
              'TAP::Parser::Result::Test'=> '3.32',
              'TAP::Parser::Result::Unknown'=> '3.32',
              'TAP::Parser::Result::Version'=> '3.32',
              'TAP::Parser::Result::YAML'=> '3.32',
              'TAP::Parser::ResultFactory'=> '3.32',
              'TAP::Parser::Scheduler'=> '3.32',
              'TAP::Parser::Scheduler::Job'=> '3.32',
              'TAP::Parser::Scheduler::Spinner'=> '3.32',
              'TAP::Parser::Source'   => '3.32',
              'TAP::Parser::SourceHandler'=> '3.32',
              'TAP::Parser::SourceHandler::Executable'=> '3.32',
              'TAP::Parser::SourceHandler::File'=> '3.32',
              'TAP::Parser::SourceHandler::Handle'=> '3.32',
              'TAP::Parser::SourceHandler::Perl'=> '3.32',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.32',
              'TAP::Parser::YAMLish::Reader'=> '3.32',
              'TAP::Parser::YAMLish::Writer'=> '3.32',
              'Term::ANSIColor'       => '4.03',
              'Test::Builder'         => '1.001003',
              'Test::Builder::Module' => '1.001003',
              'Test::Builder::Tester' => '1.23_003',
              'Test::Harness'         => '3.32',
              'Test::More'            => '1.001003',
              'Test::Simple'          => '1.001003',
              'Tie::File'             => '1.01',
              'Unicode'               => '7.0.0',
              'Unicode::Collate'      => '1.07',
              'Unicode::Normalize'    => '1.18',
              'Unicode::UCD'          => '0.58',
              'XS::APItest'           => '0.61',
              '_charnames'            => '1.41',
              'autodie'               => '2.25',
              'autodie::Scope::Guard' => '2.25',
              'autodie::Scope::GuardStack'=> '2.25',
              'autodie::ScopeUtil'    => '2.25',
              'autodie::exception'    => '2.25',
              'autodie::exception::system'=> '2.25',
              'autodie::hints'        => '2.25',
              'autodie::skip'         => '2.25',
              'charnames'             => '1.41',
              'locale'                => '1.04',
              'threads'               => '1.94',
              'utf8'                  => '1.14',
              'warnings'              => '1.24',
          },
          removed => {
          }
      },
      5.021002 => {
          delta_from => 5.021001,
          changed => {
              'B'                     => '1.50',
              'Config'                => '5.021002',
              'Cwd'                   => '3.49',
              'Devel::Peek'           => '1.18',
              'ExtUtils::Manifest'    => '1.64',
              'File::Copy'            => '2.30',
              'File::Spec'            => '3.49',
              'File::Spec::Cygwin'    => '3.49',
              'File::Spec::Epoc'      => '3.49',
              'File::Spec::Functions' => '3.49',
              'File::Spec::Mac'       => '3.49',
              'File::Spec::OS2'       => '3.49',
              'File::Spec::Unix'      => '3.49',
              'File::Spec::VMS'       => '3.49',
              'File::Spec::Win32'     => '3.49',
              'Filter::Simple'        => '0.92',
              'Hash::Util'            => '0.18',
              'IO'                    => '1.33',
              'IO::Socket::IP'        => '0.31',
              'IPC::Open3'            => '1.17',
              'Math::BigFloat'        => '1.9996',
              'Math::BigInt'          => '1.9996',
              'Math::BigInt::Calc'    => '1.9996',
              'Math::BigInt::CalcEmu' => '1.9996',
              'Module::CoreList'      => '5.021002',
              'Module::CoreList::TieHashDelta'=> '5.021002',
              'Module::CoreList::Utils'=> '5.021002',
              'POSIX'                 => '1.41',
              'Pod::Usage'            => '1.64',
              'XS::APItest'           => '0.62',
              'arybase'               => '0.08',
              'experimental'          => '0.008',
              'threads'               => '1.95',
              'warnings'              => '1.26',
          },
          removed => {
          }
      },
      5.021003 => {
          delta_from => 5.021002,
          changed => {
              'B::Debug'              => '1.21',
              'CPAN::Meta'            => '2.142060',
              'CPAN::Meta::Converter' => '2.142060',
              'CPAN::Meta::Feature'   => '2.142060',
              'CPAN::Meta::History'   => '2.142060',
              'CPAN::Meta::Merge'     => '2.142060',
              'CPAN::Meta::Prereqs'   => '2.142060',
              'CPAN::Meta::Requirements'=> '2.126',
              'CPAN::Meta::Spec'      => '2.142060',
              'CPAN::Meta::Validator' => '2.142060',
              'Config'                => '5.021003',
              'Config::Perl::V'       => '0.22',
              'ExtUtils::CBuilder'    => '0.280217',
              'ExtUtils::CBuilder::Base'=> '0.280217',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280217',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280217',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280217',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280217',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280217',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280217',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280217',
              'ExtUtils::CBuilder::Platform::android'=> '0.280217',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280217',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280217',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280217',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280217',
              'ExtUtils::Manifest'    => '1.65',
              'HTTP::Tiny'            => '0.047',
              'IPC::Open3'            => '1.18',
              'Module::CoreList'      => '5.021003',
              'Module::CoreList::TieHashDelta'=> '5.021003',
              'Module::CoreList::Utils'=> '5.021003',
              'Opcode'                => '1.28',
              'POSIX'                 => '1.42',
              'Safe'                  => '2.38',
              'Socket'                => '2.015',
              'Sys::Hostname'         => '1.19',
              'UNIVERSAL'             => '1.12',
              'XS::APItest'           => '0.63',
              'perlfaq'               => '5.0150045',
          },
          removed => {
          }
      },
      5.020001 => {
          delta_from => 5.020000,
          changed => {
              'Config'                => '5.020001',
              'Config::Perl::V'       => '0.22',
              'Cwd'                   => '3.48',
              'Exporter'              => '5.71',
              'Exporter::Heavy'       => '5.71',
              'ExtUtils::CBuilder'    => '0.280217',
              'ExtUtils::CBuilder::Base'=> '0.280217',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280217',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280217',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280217',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280217',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280217',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280217',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280217',
              'ExtUtils::CBuilder::Platform::android'=> '0.280217',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280217',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280217',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280217',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280217',
              'File::Copy'            => '2.30',
              'File::Spec'            => '3.48',
              'File::Spec::Cygwin'    => '3.48',
              'File::Spec::Epoc'      => '3.48',
              'File::Spec::Functions' => '3.48',
              'File::Spec::Mac'       => '3.48',
              'File::Spec::OS2'       => '3.48',
              'File::Spec::Unix'      => '3.48',
              'File::Spec::VMS'       => '3.48',
              'File::Spec::Win32'     => '3.48',
              'Module::CoreList'      => '5.020001',
              'Module::CoreList::TieHashDelta'=> '5.020001',
              'Module::CoreList::Utils'=> '5.020001',
              'PerlIO::via'           => '0.15',
              'Unicode::UCD'          => '0.58',
              'XS::APItest'           => '0.60_01',
              'utf8'                  => '1.13_01',
              'version'               => '0.9909',
              'version::regex'        => '0.9909',
              'version::vpp'          => '0.9909',
          },
          removed => {
          }
      },
      5.021004 => {
          delta_from => 5.021003,
          changed => {
              'App::Prove'            => '3.33',
              'App::Prove::State'     => '3.33',
              'App::Prove::State::Result'=> '3.33',
              'App::Prove::State::Result::Test'=> '3.33',
              'Archive::Tar'          => '2.02',
              'Archive::Tar::Constant'=> '2.02',
              'Archive::Tar::File'    => '2.02',
              'Attribute::Handlers'   => '0.97',
              'B'                     => '1.51',
              'B::Concise'            => '0.993',
              'B::Deparse'            => '1.28',
              'B::Op_private'         => '5.021004',
              'CPAN::Meta::Requirements'=> '2.128',
              'Config'                => '5.021004',
              'Cwd'                   => '3.50',
              'Data::Dumper'          => '2.154',
              'ExtUtils::CBuilder'    => '0.280219',
              'ExtUtils::CBuilder::Base'=> '0.280219',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280219',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280219',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280219',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280219',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280219',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280219',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280219',
              'ExtUtils::CBuilder::Platform::android'=> '0.280219',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280219',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280219',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280219',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280219',
              'ExtUtils::Install'     => '2.04',
              'ExtUtils::Installed'   => '2.04',
              'ExtUtils::Liblist::Kid'=> '6.98_01',
              'ExtUtils::Manifest'    => '1.68',
              'ExtUtils::Packlist'    => '2.04',
              'File::Find'            => '1.28',
              'File::Spec'            => '3.50',
              'File::Spec::Cygwin'    => '3.50',
              'File::Spec::Epoc'      => '3.50',
              'File::Spec::Functions' => '3.50',
              'File::Spec::Mac'       => '3.50',
              'File::Spec::OS2'       => '3.50',
              'File::Spec::Unix'      => '3.50',
              'File::Spec::VMS'       => '3.50',
              'File::Spec::Win32'     => '3.50',
              'Getopt::Std'           => '1.11',
              'HTTP::Tiny'            => '0.049',
              'IO'                    => '1.34',
              'IO::Socket::IP'        => '0.32',
              'List::Util'            => '1.41',
              'List::Util::XS'        => '1.41',
              'Locale::Codes'         => '3.32',
              'Locale::Codes::Constants'=> '3.32',
              'Locale::Codes::Country'=> '3.32',
              'Locale::Codes::Country_Codes'=> '3.32',
              'Locale::Codes::Country_Retired'=> '3.32',
              'Locale::Codes::Currency'=> '3.32',
              'Locale::Codes::Currency_Codes'=> '3.32',
              'Locale::Codes::Currency_Retired'=> '3.32',
              'Locale::Codes::LangExt'=> '3.32',
              'Locale::Codes::LangExt_Codes'=> '3.32',
              'Locale::Codes::LangExt_Retired'=> '3.32',
              'Locale::Codes::LangFam'=> '3.32',
              'Locale::Codes::LangFam_Codes'=> '3.32',
              'Locale::Codes::LangFam_Retired'=> '3.32',
              'Locale::Codes::LangVar'=> '3.32',
              'Locale::Codes::LangVar_Codes'=> '3.32',
              'Locale::Codes::LangVar_Retired'=> '3.32',
              'Locale::Codes::Language'=> '3.32',
              'Locale::Codes::Language_Codes'=> '3.32',
              'Locale::Codes::Language_Retired'=> '3.32',
              'Locale::Codes::Script' => '3.32',
              'Locale::Codes::Script_Codes'=> '3.32',
              'Locale::Codes::Script_Retired'=> '3.32',
              'Locale::Country'       => '3.32',
              'Locale::Currency'      => '3.32',
              'Locale::Language'      => '3.32',
              'Locale::Script'        => '3.32',
              'Math::BigFloat'        => '1.9997',
              'Math::BigInt'          => '1.9997',
              'Math::BigInt::Calc'    => '1.9997',
              'Math::BigInt::CalcEmu' => '1.9997',
              'Module::CoreList'      => '5.20140920',
              'Module::CoreList::TieHashDelta'=> '5.20140920',
              'Module::CoreList::Utils'=> '5.20140920',
              'POSIX'                 => '1.43',
              'Pod::Perldoc'          => '3.24',
              'Pod::Perldoc::BaseTo'  => '3.24',
              'Pod::Perldoc::GetOptsOO'=> '3.24',
              'Pod::Perldoc::ToANSI'  => '3.24',
              'Pod::Perldoc::ToChecker'=> '3.24',
              'Pod::Perldoc::ToMan'   => '3.24',
              'Pod::Perldoc::ToNroff' => '3.24',
              'Pod::Perldoc::ToPod'   => '3.24',
              'Pod::Perldoc::ToRtf'   => '3.24',
              'Pod::Perldoc::ToTerm'  => '3.24',
              'Pod::Perldoc::ToText'  => '3.24',
              'Pod::Perldoc::ToTk'    => '3.24',
              'Pod::Perldoc::ToXml'   => '3.24',
              'Scalar::Util'          => '1.41',
              'Sub::Util'             => '1.41',
              'TAP::Base'             => '3.33',
              'TAP::Formatter::Base'  => '3.33',
              'TAP::Formatter::Color' => '3.33',
              'TAP::Formatter::Console'=> '3.33',
              'TAP::Formatter::Console::ParallelSession'=> '3.33',
              'TAP::Formatter::Console::Session'=> '3.33',
              'TAP::Formatter::File'  => '3.33',
              'TAP::Formatter::File::Session'=> '3.33',
              'TAP::Formatter::Session'=> '3.33',
              'TAP::Harness'          => '3.33',
              'TAP::Harness::Env'     => '3.33',
              'TAP::Object'           => '3.33',
              'TAP::Parser'           => '3.33',
              'TAP::Parser::Aggregator'=> '3.33',
              'TAP::Parser::Grammar'  => '3.33',
              'TAP::Parser::Iterator' => '3.33',
              'TAP::Parser::Iterator::Array'=> '3.33',
              'TAP::Parser::Iterator::Process'=> '3.33',
              'TAP::Parser::Iterator::Stream'=> '3.33',
              'TAP::Parser::IteratorFactory'=> '3.33',
              'TAP::Parser::Multiplexer'=> '3.33',
              'TAP::Parser::Result'   => '3.33',
              'TAP::Parser::Result::Bailout'=> '3.33',
              'TAP::Parser::Result::Comment'=> '3.33',
              'TAP::Parser::Result::Plan'=> '3.33',
              'TAP::Parser::Result::Pragma'=> '3.33',
              'TAP::Parser::Result::Test'=> '3.33',
              'TAP::Parser::Result::Unknown'=> '3.33',
              'TAP::Parser::Result::Version'=> '3.33',
              'TAP::Parser::Result::YAML'=> '3.33',
              'TAP::Parser::ResultFactory'=> '3.33',
              'TAP::Parser::Scheduler'=> '3.33',
              'TAP::Parser::Scheduler::Job'=> '3.33',
              'TAP::Parser::Scheduler::Spinner'=> '3.33',
              'TAP::Parser::Source'   => '3.33',
              'TAP::Parser::SourceHandler'=> '3.33',
              'TAP::Parser::SourceHandler::Executable'=> '3.33',
              'TAP::Parser::SourceHandler::File'=> '3.33',
              'TAP::Parser::SourceHandler::Handle'=> '3.33',
              'TAP::Parser::SourceHandler::Perl'=> '3.33',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.33',
              'TAP::Parser::YAMLish::Reader'=> '3.33',
              'TAP::Parser::YAMLish::Writer'=> '3.33',
              'Term::ReadLine'        => '1.15',
              'Test::Builder'         => '1.001006',
              'Test::Builder::Module' => '1.001006',
              'Test::Builder::Tester' => '1.24',
              'Test::Builder::Tester::Color'=> '1.24',
              'Test::Harness'         => '3.33',
              'Test::More'            => '1.001006',
              'Test::Simple'          => '1.001006',
              'Time::Piece'           => '1.29',
              'Time::Seconds'         => '1.29',
              'XS::APItest'           => '0.64',
              '_charnames'            => '1.42',
              'attributes'            => '0.23',
              'bigint'                => '0.37',
              'bignum'                => '0.38',
              'bigrat'                => '0.37',
              'constant'              => '1.32',
              'experimental'          => '0.010',
              'overload'              => '1.23',
              'threads'               => '1.96',
              'version'               => '0.9909',
              'version::regex'        => '0.9909',
              'version::vpp'          => '0.9909',
          },
          removed => {
          }
      },
      5.021005 => {
          delta_from => 5.021004,
          changed => {
              'B'                     => '1.52',
              'B::Concise'            => '0.994',
              'B::Debug'              => '1.22',
              'B::Deparse'            => '1.29',
              'B::Op_private'         => '5.021005',
              'CPAN::Meta'            => '2.142690',
              'CPAN::Meta::Converter' => '2.142690',
              'CPAN::Meta::Feature'   => '2.142690',
              'CPAN::Meta::History'   => '2.142690',
              'CPAN::Meta::Merge'     => '2.142690',
              'CPAN::Meta::Prereqs'   => '2.142690',
              'CPAN::Meta::Spec'      => '2.142690',
              'CPAN::Meta::Validator' => '2.142690',
              'Compress::Raw::Bzip2'  => '2.066',
              'Compress::Raw::Zlib'   => '2.066',
              'Compress::Zlib'        => '2.066',
              'Config'                => '5.021005',
              'Cwd'                   => '3.51',
              'DynaLoader'            => '1.27',
              'Errno'                 => '1.21',
              'ExtUtils::CBuilder'    => '0.280220',
              'ExtUtils::CBuilder::Base'=> '0.280220',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280220',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280220',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280220',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280220',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280220',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280220',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280220',
              'ExtUtils::CBuilder::Platform::android'=> '0.280220',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280220',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280220',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280220',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280220',
              'ExtUtils::Miniperl'    => '1.03',
              'Fcntl'                 => '1.13',
              'File::Find'            => '1.29',
              'File::Spec'            => '3.51',
              'File::Spec::Cygwin'    => '3.51',
              'File::Spec::Epoc'      => '3.51',
              'File::Spec::Functions' => '3.51',
              'File::Spec::Mac'       => '3.51',
              'File::Spec::OS2'       => '3.51',
              'File::Spec::Unix'      => '3.51',
              'File::Spec::VMS'       => '3.51',
              'File::Spec::Win32'     => '3.51',
              'HTTP::Tiny'            => '0.050',
              'IO::Compress::Adapter::Bzip2'=> '2.066',
              'IO::Compress::Adapter::Deflate'=> '2.066',
              'IO::Compress::Adapter::Identity'=> '2.066',
              'IO::Compress::Base'    => '2.066',
              'IO::Compress::Base::Common'=> '2.066',
              'IO::Compress::Bzip2'   => '2.066',
              'IO::Compress::Deflate' => '2.066',
              'IO::Compress::Gzip'    => '2.066',
              'IO::Compress::Gzip::Constants'=> '2.066',
              'IO::Compress::RawDeflate'=> '2.066',
              'IO::Compress::Zip'     => '2.066',
              'IO::Compress::Zip::Constants'=> '2.066',
              'IO::Compress::Zlib::Constants'=> '2.066',
              'IO::Compress::Zlib::Extra'=> '2.066',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.066',
              'IO::Uncompress::Adapter::Identity'=> '2.066',
              'IO::Uncompress::Adapter::Inflate'=> '2.066',
              'IO::Uncompress::AnyInflate'=> '2.066',
              'IO::Uncompress::AnyUncompress'=> '2.066',
              'IO::Uncompress::Base'  => '2.066',
              'IO::Uncompress::Bunzip2'=> '2.066',
              'IO::Uncompress::Gunzip'=> '2.066',
              'IO::Uncompress::Inflate'=> '2.066',
              'IO::Uncompress::RawInflate'=> '2.066',
              'IO::Uncompress::Unzip' => '2.066',
              'JSON::PP'              => '2.27300',
              'Module::CoreList'      => '5.20141020',
              'Module::CoreList::TieHashDelta'=> '5.20141020',
              'Module::CoreList::Utils'=> '5.20141020',
              'Net::Cmd'              => '3.02',
              'Net::Config'           => '3.02',
              'Net::Domain'           => '3.02',
              'Net::FTP'              => '3.02',
              'Net::FTP::A'           => '3.02',
              'Net::FTP::E'           => '3.02',
              'Net::FTP::I'           => '3.02',
              'Net::FTP::L'           => '3.02',
              'Net::FTP::dataconn'    => '3.02',
              'Net::NNTP'             => '3.02',
              'Net::Netrc'            => '3.02',
              'Net::POP3'             => '3.02',
              'Net::SMTP'             => '3.02',
              'Net::Time'             => '3.02',
              'Opcode'                => '1.29',
              'POSIX'                 => '1.45',
              'Socket'                => '2.016',
              'Test::Builder'         => '1.001008',
              'Test::Builder::Module' => '1.001008',
              'Test::More'            => '1.001008',
              'Test::Simple'          => '1.001008',
              'XS::APItest'           => '0.65',
              'XSLoader'              => '0.18',
              'attributes'            => '0.24',
              'experimental'          => '0.012',
              'feature'               => '1.38',
              'perlfaq'               => '5.0150046',
              're'                    => '0.27',
              'threads::shared'       => '1.47',
              'warnings'              => '1.28',
              'warnings::register'    => '1.04',
          },
          removed => {
          }
      },
      5.021006 => {
          delta_from => 5.021005,
          changed => {
              'App::Prove'            => '3.34',
              'App::Prove::State'     => '3.34',
              'App::Prove::State::Result'=> '3.34',
              'App::Prove::State::Result::Test'=> '3.34',
              'B'                     => '1.53',
              'B::Concise'            => '0.995',
              'B::Deparse'            => '1.30',
              'B::Op_private'         => '5.021006',
              'CPAN::Meta'            => '2.143240',
              'CPAN::Meta::Converter' => '2.143240',
              'CPAN::Meta::Feature'   => '2.143240',
              'CPAN::Meta::History'   => '2.143240',
              'CPAN::Meta::Merge'     => '2.143240',
              'CPAN::Meta::Prereqs'   => '2.143240',
              'CPAN::Meta::Requirements'=> '2.130',
              'CPAN::Meta::Spec'      => '2.143240',
              'CPAN::Meta::Validator' => '2.143240',
              'Config'                => '5.021006',
              'Devel::Peek'           => '1.19',
              'Digest::SHA'           => '5.93',
              'DynaLoader'            => '1.28',
              'Encode'                => '2.64',
              'Exporter'              => '5.72',
              'Exporter::Heavy'       => '5.72',
              'ExtUtils::Command::MM' => '7.02',
              'ExtUtils::Liblist'     => '7.02',
              'ExtUtils::Liblist::Kid'=> '7.02',
              'ExtUtils::MM'          => '7.02',
              'ExtUtils::MM_AIX'      => '7.02',
              'ExtUtils::MM_Any'      => '7.02',
              'ExtUtils::MM_BeOS'     => '7.02',
              'ExtUtils::MM_Cygwin'   => '7.02',
              'ExtUtils::MM_DOS'      => '7.02',
              'ExtUtils::MM_Darwin'   => '7.02',
              'ExtUtils::MM_MacOS'    => '7.02',
              'ExtUtils::MM_NW5'      => '7.02',
              'ExtUtils::MM_OS2'      => '7.02',
              'ExtUtils::MM_QNX'      => '7.02',
              'ExtUtils::MM_UWIN'     => '7.02',
              'ExtUtils::MM_Unix'     => '7.02',
              'ExtUtils::MM_VMS'      => '7.02',
              'ExtUtils::MM_VOS'      => '7.02',
              'ExtUtils::MM_Win32'    => '7.02',
              'ExtUtils::MM_Win95'    => '7.02',
              'ExtUtils::MY'          => '7.02',
              'ExtUtils::MakeMaker'   => '7.02',
              'ExtUtils::MakeMaker::Config'=> '7.02',
              'ExtUtils::MakeMaker::Locale'=> '7.02',
              'ExtUtils::MakeMaker::version'=> '7.02',
              'ExtUtils::MakeMaker::version::regex'=> '7.02',
              'ExtUtils::MakeMaker::version::vpp'=> '7.02',
              'ExtUtils::Manifest'    => '1.69',
              'ExtUtils::Mkbootstrap' => '7.02',
              'ExtUtils::Mksymlists'  => '7.02',
              'ExtUtils::ParseXS'     => '3.26',
              'ExtUtils::ParseXS::Constants'=> '3.26',
              'ExtUtils::ParseXS::CountLines'=> '3.26',
              'ExtUtils::ParseXS::Eval'=> '3.26',
              'ExtUtils::ParseXS::Utilities'=> '3.26',
              'ExtUtils::testlib'     => '7.02',
              'File::Spec::VMS'       => '3.52',
              'HTTP::Tiny'            => '0.051',
              'I18N::Langinfo'        => '0.12',
              'IO::Socket'            => '1.38',
              'Module::CoreList'      => '5.20141120',
              'Module::CoreList::TieHashDelta'=> '5.20141120',
              'Module::CoreList::Utils'=> '5.20141120',
              'POSIX'                 => '1.46',
              'PerlIO::encoding'      => '0.20',
              'PerlIO::scalar'        => '0.20',
              'TAP::Base'             => '3.34',
              'TAP::Formatter::Base'  => '3.34',
              'TAP::Formatter::Color' => '3.34',
              'TAP::Formatter::Console'=> '3.34',
              'TAP::Formatter::Console::ParallelSession'=> '3.34',
              'TAP::Formatter::Console::Session'=> '3.34',
              'TAP::Formatter::File'  => '3.34',
              'TAP::Formatter::File::Session'=> '3.34',
              'TAP::Formatter::Session'=> '3.34',
              'TAP::Harness'          => '3.34',
              'TAP::Harness::Env'     => '3.34',
              'TAP::Object'           => '3.34',
              'TAP::Parser'           => '3.34',
              'TAP::Parser::Aggregator'=> '3.34',
              'TAP::Parser::Grammar'  => '3.34',
              'TAP::Parser::Iterator' => '3.34',
              'TAP::Parser::Iterator::Array'=> '3.34',
              'TAP::Parser::Iterator::Process'=> '3.34',
              'TAP::Parser::Iterator::Stream'=> '3.34',
              'TAP::Parser::IteratorFactory'=> '3.34',
              'TAP::Parser::Multiplexer'=> '3.34',
              'TAP::Parser::Result'   => '3.34',
              'TAP::Parser::Result::Bailout'=> '3.34',
              'TAP::Parser::Result::Comment'=> '3.34',
              'TAP::Parser::Result::Plan'=> '3.34',
              'TAP::Parser::Result::Pragma'=> '3.34',
              'TAP::Parser::Result::Test'=> '3.34',
              'TAP::Parser::Result::Unknown'=> '3.34',
              'TAP::Parser::Result::Version'=> '3.34',
              'TAP::Parser::Result::YAML'=> '3.34',
              'TAP::Parser::ResultFactory'=> '3.34',
              'TAP::Parser::Scheduler'=> '3.34',
              'TAP::Parser::Scheduler::Job'=> '3.34',
              'TAP::Parser::Scheduler::Spinner'=> '3.34',
              'TAP::Parser::Source'   => '3.34',
              'TAP::Parser::SourceHandler'=> '3.34',
              'TAP::Parser::SourceHandler::Executable'=> '3.34',
              'TAP::Parser::SourceHandler::File'=> '3.34',
              'TAP::Parser::SourceHandler::Handle'=> '3.34',
              'TAP::Parser::SourceHandler::Perl'=> '3.34',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.34',
              'TAP::Parser::YAMLish::Reader'=> '3.34',
              'TAP::Parser::YAMLish::Writer'=> '3.34',
              'Test::Builder'         => '1.301001_075',
              'Test::Builder::Module' => '1.301001_075',
              'Test::Builder::Tester' => '1.301001_075',
              'Test::Builder::Tester::Color'=> '1.301001_075',
              'Test::Harness'         => '3.34',
              'Test::More'            => '1.301001_075',
              'Test::More::DeepCheck' => undef,
              'Test::More::DeepCheck::Strict'=> undef,
              'Test::More::DeepCheck::Tolerant'=> undef,
              'Test::More::Tools'     => undef,
              'Test::MostlyLike'      => undef,
              'Test::Simple'          => '1.301001_075',
              'Test::Stream'          => '1.301001_075',
              'Test::Stream::ArrayBase'=> undef,
              'Test::Stream::ArrayBase::Meta'=> undef,
              'Test::Stream::Carp'    => undef,
              'Test::Stream::Context' => undef,
              'Test::Stream::Event'   => undef,
              'Test::Stream::Event::Bail'=> undef,
              'Test::Stream::Event::Child'=> undef,
              'Test::Stream::Event::Diag'=> undef,
              'Test::Stream::Event::Finish'=> undef,
              'Test::Stream::Event::Note'=> undef,
              'Test::Stream::Event::Ok'=> undef,
              'Test::Stream::Event::Plan'=> undef,
              'Test::Stream::Event::Subtest'=> undef,
              'Test::Stream::ExitMagic'=> undef,
              'Test::Stream::ExitMagic::Context'=> undef,
              'Test::Stream::Exporter'=> undef,
              'Test::Stream::Exporter::Meta'=> undef,
              'Test::Stream::IOSets'  => undef,
              'Test::Stream::Meta'    => undef,
              'Test::Stream::PackageUtil'=> undef,
              'Test::Stream::Tester'  => undef,
              'Test::Stream::Tester::Checks'=> undef,
              'Test::Stream::Tester::Checks::Event'=> undef,
              'Test::Stream::Tester::Events'=> undef,
              'Test::Stream::Tester::Events::Event'=> undef,
              'Test::Stream::Tester::Grab'=> undef,
              'Test::Stream::Threads' => undef,
              'Test::Stream::Toolset' => undef,
              'Test::Stream::Util'    => undef,
              'Test::Tester'          => '1.301001_075',
              'Test::Tester::Capture' => undef,
              'Test::use::ok'         => '1.301001_075',
              'Unicode::UCD'          => '0.59',
              'XS::APItest'           => '0.68',
              'XSLoader'              => '0.19',
              'experimental'          => '0.013',
              'locale'                => '1.05',
              'ok'                    => '1.301001_075',
              'overload'              => '1.24',
              're'                    => '0.28',
              'warnings'              => '1.29',
          },
          removed => {
          }
      },
      5.021007 => {
          delta_from => 5.021006,
          changed => {
              'Archive::Tar'          => '2.04',
              'Archive::Tar::Constant'=> '2.04',
              'Archive::Tar::File'    => '2.04',
              'B'                     => '1.54',
              'B::Concise'            => '0.996',
              'B::Deparse'            => '1.31',
              'B::Op_private'         => '5.021007',
              'B::Showlex'            => '1.05',
              'Compress::Raw::Bzip2'  => '2.067',
              'Compress::Raw::Zlib'   => '2.067',
              'Compress::Zlib'        => '2.067',
              'Config'                => '5.021007',
              'Cwd'                   => '3.54',
              'DB_File'               => '1.834',
              'Data::Dumper'          => '2.155',
              'Devel::PPPort'         => '3.25',
              'Devel::Peek'           => '1.20',
              'DynaLoader'            => '1.29',
              'Encode'                => '2.67',
              'Errno'                 => '1.22',
              'ExtUtils::CBuilder'    => '0.280221',
              'ExtUtils::CBuilder::Base'=> '0.280221',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280221',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280221',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280221',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280221',
              'ExtUtils::CBuilder::Platform::android'=> '0.280221',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280221',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280221',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280221',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280221',
              'ExtUtils::Command::MM' => '7.04',
              'ExtUtils::Liblist'     => '7.04',
              'ExtUtils::Liblist::Kid'=> '7.04',
              'ExtUtils::MM'          => '7.04',
              'ExtUtils::MM_AIX'      => '7.04',
              'ExtUtils::MM_Any'      => '7.04',
              'ExtUtils::MM_BeOS'     => '7.04',
              'ExtUtils::MM_Cygwin'   => '7.04',
              'ExtUtils::MM_DOS'      => '7.04',
              'ExtUtils::MM_Darwin'   => '7.04',
              'ExtUtils::MM_MacOS'    => '7.04',
              'ExtUtils::MM_NW5'      => '7.04',
              'ExtUtils::MM_OS2'      => '7.04',
              'ExtUtils::MM_QNX'      => '7.04',
              'ExtUtils::MM_UWIN'     => '7.04',
              'ExtUtils::MM_Unix'     => '7.04',
              'ExtUtils::MM_VMS'      => '7.04',
              'ExtUtils::MM_VOS'      => '7.04',
              'ExtUtils::MM_Win32'    => '7.04',
              'ExtUtils::MM_Win95'    => '7.04',
              'ExtUtils::MY'          => '7.04',
              'ExtUtils::MakeMaker'   => '7.04',
              'ExtUtils::MakeMaker::Config'=> '7.04',
              'ExtUtils::MakeMaker::Locale'=> '7.04',
              'ExtUtils::MakeMaker::version'=> '7.04',
              'ExtUtils::MakeMaker::version::regex'=> '7.04',
              'ExtUtils::MakeMaker::version::vpp'=> '7.04',
              'ExtUtils::Mkbootstrap' => '7.04',
              'ExtUtils::Mksymlists'  => '7.04',
              'ExtUtils::ParseXS'     => '3.27',
              'ExtUtils::ParseXS::Constants'=> '3.27',
              'ExtUtils::ParseXS::CountLines'=> '3.27',
              'ExtUtils::ParseXS::Eval'=> '3.27',
              'ExtUtils::ParseXS::Utilities'=> '3.27',
              'ExtUtils::testlib'     => '7.04',
              'File::Spec'            => '3.53',
              'File::Spec::Cygwin'    => '3.54',
              'File::Spec::Epoc'      => '3.54',
              'File::Spec::Functions' => '3.54',
              'File::Spec::Mac'       => '3.54',
              'File::Spec::OS2'       => '3.54',
              'File::Spec::Unix'      => '3.54',
              'File::Spec::VMS'       => '3.54',
              'File::Spec::Win32'     => '3.54',
              'Filter::Util::Call'    => '1.51',
              'HTTP::Tiny'            => '0.053',
              'IO'                    => '1.35',
              'IO::Compress::Adapter::Bzip2'=> '2.067',
              'IO::Compress::Adapter::Deflate'=> '2.067',
              'IO::Compress::Adapter::Identity'=> '2.067',
              'IO::Compress::Base'    => '2.067',
              'IO::Compress::Base::Common'=> '2.067',
              'IO::Compress::Bzip2'   => '2.067',
              'IO::Compress::Deflate' => '2.067',
              'IO::Compress::Gzip'    => '2.067',
              'IO::Compress::Gzip::Constants'=> '2.067',
              'IO::Compress::RawDeflate'=> '2.067',
              'IO::Compress::Zip'     => '2.067',
              'IO::Compress::Zip::Constants'=> '2.067',
              'IO::Compress::Zlib::Constants'=> '2.067',
              'IO::Compress::Zlib::Extra'=> '2.067',
              'IO::Socket::IP'        => '0.34',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.067',
              'IO::Uncompress::Adapter::Identity'=> '2.067',
              'IO::Uncompress::Adapter::Inflate'=> '2.067',
              'IO::Uncompress::AnyInflate'=> '2.067',
              'IO::Uncompress::AnyUncompress'=> '2.067',
              'IO::Uncompress::Base'  => '2.067',
              'IO::Uncompress::Bunzip2'=> '2.067',
              'IO::Uncompress::Gunzip'=> '2.067',
              'IO::Uncompress::Inflate'=> '2.067',
              'IO::Uncompress::RawInflate'=> '2.067',
              'IO::Uncompress::Unzip' => '2.067',
              'Locale::Codes'         => '3.33',
              'Locale::Codes::Constants'=> '3.33',
              'Locale::Codes::Country'=> '3.33',
              'Locale::Codes::Country_Codes'=> '3.33',
              'Locale::Codes::Country_Retired'=> '3.33',
              'Locale::Codes::Currency'=> '3.33',
              'Locale::Codes::Currency_Codes'=> '3.33',
              'Locale::Codes::Currency_Retired'=> '3.33',
              'Locale::Codes::LangExt'=> '3.33',
              'Locale::Codes::LangExt_Codes'=> '3.33',
              'Locale::Codes::LangExt_Retired'=> '3.33',
              'Locale::Codes::LangFam'=> '3.33',
              'Locale::Codes::LangFam_Codes'=> '3.33',
              'Locale::Codes::LangFam_Retired'=> '3.33',
              'Locale::Codes::LangVar'=> '3.33',
              'Locale::Codes::LangVar_Codes'=> '3.33',
              'Locale::Codes::LangVar_Retired'=> '3.33',
              'Locale::Codes::Language'=> '3.33',
              'Locale::Codes::Language_Codes'=> '3.33',
              'Locale::Codes::Language_Retired'=> '3.33',
              'Locale::Codes::Script' => '3.33',
              'Locale::Codes::Script_Codes'=> '3.33',
              'Locale::Codes::Script_Retired'=> '3.33',
              'Locale::Country'       => '3.33',
              'Locale::Currency'      => '3.33',
              'Locale::Language'      => '3.33',
              'Locale::Maketext'      => '1.26',
              'Locale::Script'        => '3.33',
              'Module::CoreList'      => '5.20141220',
              'Module::CoreList::TieHashDelta'=> '5.20141220',
              'Module::CoreList::Utils'=> '5.20141220',
              'NDBM_File'             => '1.14',
              'Net::Cmd'              => '3.04',
              'Net::Config'           => '3.04',
              'Net::Domain'           => '3.04',
              'Net::FTP'              => '3.04',
              'Net::FTP::A'           => '3.04',
              'Net::FTP::E'           => '3.04',
              'Net::FTP::I'           => '3.04',
              'Net::FTP::L'           => '3.04',
              'Net::FTP::dataconn'    => '3.04',
              'Net::NNTP'             => '3.04',
              'Net::Netrc'            => '3.04',
              'Net::POP3'             => '3.04',
              'Net::SMTP'             => '3.04',
              'Net::Time'             => '3.04',
              'Opcode'                => '1.30',
              'POSIX'                 => '1.48',
              'PerlIO::scalar'        => '0.21',
              'Pod::Escapes'          => '1.07',
              'SDBM_File'             => '1.12',
              'Storable'              => '2.52',
              'Sys::Hostname'         => '1.20',
              'Test::Builder'         => '1.301001_090',
              'Test::Builder::Module' => '1.301001_090',
              'Test::Builder::Tester' => '1.301001_090',
              'Test::Builder::Tester::Color'=> '1.301001_090',
              'Test::CanFork'         => undef,
              'Test::CanThread'       => undef,
              'Test::More'            => '1.301001_090',
              'Test::Simple'          => '1.301001_090',
              'Test::Stream'          => '1.301001_090',
              'Test::Stream::API'     => undef,
              'Test::Stream::ForceExit'=> undef,
              'Test::Stream::Subtest' => undef,
              'Test::Tester'          => '1.301001_090',
              'Test::use::ok'         => '1.301001_090',
              'Unicode::Collate'      => '1.09',
              'Unicode::Collate::CJK::Big5'=> '1.09',
              'Unicode::Collate::CJK::GB2312'=> '1.09',
              'Unicode::Collate::CJK::JISX0208'=> '1.09',
              'Unicode::Collate::CJK::Korean'=> '1.09',
              'Unicode::Collate::CJK::Pinyin'=> '1.09',
              'Unicode::Collate::CJK::Stroke'=> '1.09',
              'Unicode::Collate::CJK::Zhuyin'=> '1.09',
              'Unicode::Collate::Locale'=> '1.09',
              'XS::APItest'           => '0.69',
              'XSLoader'              => '0.20',
              '_charnames'            => '1.43',
              'arybase'               => '0.09',
              'charnames'             => '1.43',
              'feature'               => '1.39',
              'mro'                   => '1.17',
              'ok'                    => '1.301001_090',
              'strict'                => '1.09',
              'threads'               => '1.96_001',
          },
          removed => {
          }
      },
      5.021008 => {
          delta_from => 5.021007,
          changed => {
              'App::Prove'            => '3.35',
              'App::Prove::State'     => '3.35',
              'App::Prove::State::Result'=> '3.35',
              'App::Prove::State::Result::Test'=> '3.35',
              'B'                     => '1.55',
              'B::Deparse'            => '1.32',
              'B::Op_private'         => '5.021008',
              'CPAN::Meta::Requirements'=> '2.131',
              'Compress::Raw::Bzip2'  => '2.068',
              'Compress::Raw::Zlib'   => '2.068',
              'Compress::Zlib'        => '2.068',
              'Config'                => '5.021008',
              'DB_File'               => '1.835',
              'Data::Dumper'          => '2.156',
              'Devel::PPPort'         => '3.28',
              'Devel::Peek'           => '1.21',
              'Digest::MD5'           => '2.54',
              'Digest::SHA'           => '5.95',
              'DynaLoader'            => '1.30',
              'ExtUtils::Command'     => '1.20',
              'ExtUtils::Manifest'    => '1.70',
              'Fatal'                 => '2.26',
              'File::Glob'            => '1.24',
              'Filter::Util::Call'    => '1.54',
              'Getopt::Long'          => '2.43',
              'IO::Compress::Adapter::Bzip2'=> '2.068',
              'IO::Compress::Adapter::Deflate'=> '2.068',
              'IO::Compress::Adapter::Identity'=> '2.068',
              'IO::Compress::Base'    => '2.068',
              'IO::Compress::Base::Common'=> '2.068',
              'IO::Compress::Bzip2'   => '2.068',
              'IO::Compress::Deflate' => '2.068',
              'IO::Compress::Gzip'    => '2.068',
              'IO::Compress::Gzip::Constants'=> '2.068',
              'IO::Compress::RawDeflate'=> '2.068',
              'IO::Compress::Zip'     => '2.068',
              'IO::Compress::Zip::Constants'=> '2.068',
              'IO::Compress::Zlib::Constants'=> '2.068',
              'IO::Compress::Zlib::Extra'=> '2.068',
              'IO::Socket::IP'        => '0.36',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.068',
              'IO::Uncompress::Adapter::Identity'=> '2.068',
              'IO::Uncompress::Adapter::Inflate'=> '2.068',
              'IO::Uncompress::AnyInflate'=> '2.068',
              'IO::Uncompress::AnyUncompress'=> '2.068',
              'IO::Uncompress::Base'  => '2.068',
              'IO::Uncompress::Bunzip2'=> '2.068',
              'IO::Uncompress::Gunzip'=> '2.068',
              'IO::Uncompress::Inflate'=> '2.068',
              'IO::Uncompress::RawInflate'=> '2.068',
              'IO::Uncompress::Unzip' => '2.068',
              'MIME::Base64'          => '3.15',
              'Module::CoreList'      => '5.20150220',
              'Module::CoreList::TieHashDelta'=> '5.20150220',
              'Module::CoreList::Utils'=> '5.20150220',
              'Module::Load::Conditional'=> '0.64',
              'Module::Metadata'      => '1.000026',
              'Net::Cmd'              => '3.05',
              'Net::Config'           => '3.05',
              'Net::Domain'           => '3.05',
              'Net::FTP'              => '3.05',
              'Net::FTP::A'           => '3.05',
              'Net::FTP::E'           => '3.05',
              'Net::FTP::I'           => '3.05',
              'Net::FTP::L'           => '3.05',
              'Net::FTP::dataconn'    => '3.05',
              'Net::NNTP'             => '3.05',
              'Net::Netrc'            => '3.05',
              'Net::POP3'             => '3.05',
              'Net::SMTP'             => '3.05',
              'Net::Time'             => '3.05',
              'Opcode'                => '1.31',
              'POSIX'                 => '1.49',
              'PerlIO::encoding'      => '0.21',
              'Pod::Simple'           => '3.29',
              'Pod::Simple::BlackBox' => '3.29',
              'Pod::Simple::Checker'  => '3.29',
              'Pod::Simple::Debug'    => '3.29',
              'Pod::Simple::DumpAsText'=> '3.29',
              'Pod::Simple::DumpAsXML'=> '3.29',
              'Pod::Simple::HTML'     => '3.29',
              'Pod::Simple::HTMLBatch'=> '3.29',
              'Pod::Simple::LinkSection'=> '3.29',
              'Pod::Simple::Methody'  => '3.29',
              'Pod::Simple::Progress' => '3.29',
              'Pod::Simple::PullParser'=> '3.29',
              'Pod::Simple::PullParserEndToken'=> '3.29',
              'Pod::Simple::PullParserStartToken'=> '3.29',
              'Pod::Simple::PullParserTextToken'=> '3.29',
              'Pod::Simple::PullParserToken'=> '3.29',
              'Pod::Simple::RTF'      => '3.29',
              'Pod::Simple::Search'   => '3.29',
              'Pod::Simple::SimpleTree'=> '3.29',
              'Pod::Simple::Text'     => '3.29',
              'Pod::Simple::TextContent'=> '3.29',
              'Pod::Simple::TiedOutFH'=> '3.29',
              'Pod::Simple::Transcode'=> '3.29',
              'Pod::Simple::TranscodeDumb'=> '3.29',
              'Pod::Simple::TranscodeSmart'=> '3.29',
              'Pod::Simple::XHTML'    => '3.29',
              'Pod::Simple::XMLOutStream'=> '3.29',
              'SDBM_File'             => '1.13',
              'Safe'                  => '2.39',
              'TAP::Base'             => '3.35',
              'TAP::Formatter::Base'  => '3.35',
              'TAP::Formatter::Color' => '3.35',
              'TAP::Formatter::Console'=> '3.35',
              'TAP::Formatter::Console::ParallelSession'=> '3.35',
              'TAP::Formatter::Console::Session'=> '3.35',
              'TAP::Formatter::File'  => '3.35',
              'TAP::Formatter::File::Session'=> '3.35',
              'TAP::Formatter::Session'=> '3.35',
              'TAP::Harness'          => '3.35',
              'TAP::Harness::Env'     => '3.35',
              'TAP::Object'           => '3.35',
              'TAP::Parser'           => '3.35',
              'TAP::Parser::Aggregator'=> '3.35',
              'TAP::Parser::Grammar'  => '3.35',
              'TAP::Parser::Iterator' => '3.35',
              'TAP::Parser::Iterator::Array'=> '3.35',
              'TAP::Parser::Iterator::Process'=> '3.35',
              'TAP::Parser::Iterator::Stream'=> '3.35',
              'TAP::Parser::IteratorFactory'=> '3.35',
              'TAP::Parser::Multiplexer'=> '3.35',
              'TAP::Parser::Result'   => '3.35',
              'TAP::Parser::Result::Bailout'=> '3.35',
              'TAP::Parser::Result::Comment'=> '3.35',
              'TAP::Parser::Result::Plan'=> '3.35',
              'TAP::Parser::Result::Pragma'=> '3.35',
              'TAP::Parser::Result::Test'=> '3.35',
              'TAP::Parser::Result::Unknown'=> '3.35',
              'TAP::Parser::Result::Version'=> '3.35',
              'TAP::Parser::Result::YAML'=> '3.35',
              'TAP::Parser::ResultFactory'=> '3.35',
              'TAP::Parser::Scheduler'=> '3.35',
              'TAP::Parser::Scheduler::Job'=> '3.35',
              'TAP::Parser::Scheduler::Spinner'=> '3.35',
              'TAP::Parser::Source'   => '3.35',
              'TAP::Parser::SourceHandler'=> '3.35',
              'TAP::Parser::SourceHandler::Executable'=> '3.35',
              'TAP::Parser::SourceHandler::File'=> '3.35',
              'TAP::Parser::SourceHandler::Handle'=> '3.35',
              'TAP::Parser::SourceHandler::Perl'=> '3.35',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.35',
              'TAP::Parser::YAMLish::Reader'=> '3.35',
              'TAP::Parser::YAMLish::Writer'=> '3.35',
              'Test::Builder'         => '1.301001_097',
              'Test::Builder::Module' => '1.301001_097',
              'Test::Builder::Tester' => '1.301001_097',
              'Test::Builder::Tester::Color'=> '1.301001_097',
              'Test::Harness'         => '3.35',
              'Test::More'            => '1.301001_097',
              'Test::Simple'          => '1.301001_097',
              'Test::Stream'          => '1.301001_097',
              'Test::Stream::Block'   => undef,
              'Test::Tester'          => '1.301001_097',
              'Test::Tester::CaptureRunner'=> undef,
              'Test::Tester::Delegate'=> undef,
              'Test::use::ok'         => '1.301001_097',
              'Unicode::Collate'      => '1.10',
              'Unicode::Collate::CJK::Big5'=> '1.10',
              'Unicode::Collate::CJK::GB2312'=> '1.10',
              'Unicode::Collate::CJK::JISX0208'=> '1.10',
              'Unicode::Collate::CJK::Korean'=> '1.10',
              'Unicode::Collate::CJK::Pinyin'=> '1.10',
              'Unicode::Collate::CJK::Stroke'=> '1.10',
              'Unicode::Collate::CJK::Zhuyin'=> '1.10',
              'Unicode::Collate::Locale'=> '1.10',
              'VMS::DCLsym'           => '1.06',
              'XS::APItest'           => '0.70',
              'arybase'               => '0.10',
              'attributes'            => '0.25',
              'autodie'               => '2.26',
              'autodie::Scope::Guard' => '2.26',
              'autodie::Scope::GuardStack'=> '2.26',
              'autodie::ScopeUtil'    => '2.26',
              'autodie::exception'    => '2.26',
              'autodie::exception::system'=> '2.26',
              'autodie::hints'        => '2.26',
              'autodie::skip'         => '2.26',
              'ok'                    => '1.301001_097',
              're'                    => '0.30',
              'warnings'              => '1.30',
          },
          removed => {
          }
      },
      5.020002 => {
          delta_from => 5.020001,
          changed => {
              'CPAN::Author'          => '5.5002',
              'CPAN::CacheMgr'        => '5.5002',
              'CPAN::FTP'             => '5.5006',
              'CPAN::HTTP::Client'    => '1.9601',
              'CPAN::HandleConfig'    => '5.5005',
              'CPAN::Index'           => '1.9601',
              'CPAN::LWP::UserAgent'  => '1.9601',
              'CPAN::Mirrors'         => '1.9601',
              'Config'                => '5.020002',
              'Cwd'                   => '3.48_01',
              'Data::Dumper'          => '2.151_01',
              'Errno'                 => '1.20_05',
              'File::Spec'            => '3.48_01',
              'File::Spec::Cygwin'    => '3.48_01',
              'File::Spec::Epoc'      => '3.48_01',
              'File::Spec::Functions' => '3.48_01',
              'File::Spec::Mac'       => '3.48_01',
              'File::Spec::OS2'       => '3.48_01',
              'File::Spec::Unix'      => '3.48_01',
              'File::Spec::VMS'       => '3.48_01',
              'File::Spec::Win32'     => '3.48_01',
              'IO::Socket'            => '1.38',
              'Module::CoreList'      => '5.20150214',
              'Module::CoreList::TieHashDelta'=> '5.20150214',
              'Module::CoreList::Utils'=> '5.20150214',
              'PerlIO::scalar'        => '0.18_01',
              'Pod::PlainText'        => '2.07',
              'Storable'              => '2.49_01',
              'VMS::DCLsym'           => '1.05_01',
              'VMS::Stdio'            => '2.41',
              'attributes'            => '0.23',
              'feature'               => '1.36_01',
          },
          removed => {
          }
      },
      5.021009 => {
          delta_from => 5.021008,
          changed => {
              'B'                     => '1.56',
              'B::Debug'              => '1.23',
              'B::Deparse'            => '1.33',
              'B::Op_private'         => '5.021009',
              'Benchmark'             => '1.20',
              'CPAN::Author'          => '5.5002',
              'CPAN::CacheMgr'        => '5.5002',
              'CPAN::FTP'             => '5.5006',
              'CPAN::HTTP::Client'    => '1.9601',
              'CPAN::HandleConfig'    => '5.5005',
              'CPAN::Index'           => '1.9601',
              'CPAN::LWP::UserAgent'  => '1.9601',
              'CPAN::Meta::Requirements'=> '2.132',
              'CPAN::Mirrors'         => '1.9601',
              'Carp'                  => '1.35',
              'Carp::Heavy'           => '1.35',
              'Config'                => '5.021009',
              'Config::Perl::V'       => '0.23',
              'Data::Dumper'          => '2.157',
              'Devel::Peek'           => '1.22',
              'DynaLoader'            => '1.31',
              'Encode'                => '2.70',
              'Encode::MIME::Header'  => '2.16',
              'Errno'                 => '1.23',
              'ExtUtils::Miniperl'    => '1.04',
              'HTTP::Tiny'            => '0.054',
              'Module::CoreList'      => '5.20150220',
              'Module::CoreList::TieHashDelta'=> '5.20150220',
              'Module::CoreList::Utils'=> '5.20150220',
              'Opcode'                => '1.32',
              'POSIX'                 => '1.51',
              'Perl::OSType'          => '1.008',
              'PerlIO::scalar'        => '0.22',
              'Pod::Find'             => '1.63',
              'Pod::InputObjects'     => '1.63',
              'Pod::ParseUtils'       => '1.63',
              'Pod::Parser'           => '1.63',
              'Pod::Perldoc'          => '3.25',
              'Pod::Perldoc::BaseTo'  => '3.25',
              'Pod::Perldoc::GetOptsOO'=> '3.25',
              'Pod::Perldoc::ToANSI'  => '3.25',
              'Pod::Perldoc::ToChecker'=> '3.25',
              'Pod::Perldoc::ToMan'   => '3.25',
              'Pod::Perldoc::ToNroff' => '3.25',
              'Pod::Perldoc::ToPod'   => '3.25',
              'Pod::Perldoc::ToRtf'   => '3.25',
              'Pod::Perldoc::ToTerm'  => '3.25',
              'Pod::Perldoc::ToText'  => '3.25',
              'Pod::Perldoc::ToTk'    => '3.25',
              'Pod::Perldoc::ToXml'   => '3.25',
              'Pod::PlainText'        => '2.07',
              'Pod::Select'           => '1.63',
              'Socket'                => '2.018',
              'Storable'              => '2.53',
              'Test::Builder'         => '1.301001_098',
              'Test::Builder::Module' => '1.301001_098',
              'Test::Builder::Tester' => '1.301001_098',
              'Test::Builder::Tester::Color'=> '1.301001_098',
              'Test::More'            => '1.301001_098',
              'Test::Simple'          => '1.301001_098',
              'Test::Stream'          => '1.301001_098',
              'Test::Tester'          => '1.301001_098',
              'Test::use::ok'         => '1.301001_098',
              'Unicode::Collate'      => '1.11',
              'Unicode::Collate::CJK::Big5'=> '1.11',
              'Unicode::Collate::CJK::GB2312'=> '1.11',
              'Unicode::Collate::CJK::JISX0208'=> '1.11',
              'Unicode::Collate::CJK::Korean'=> '1.11',
              'Unicode::Collate::CJK::Pinyin'=> '1.11',
              'Unicode::Collate::CJK::Stroke'=> '1.11',
              'Unicode::Collate::CJK::Zhuyin'=> '1.11',
              'Unicode::Collate::Locale'=> '1.11',
              'Unicode::UCD'          => '0.61',
              'VMS::Stdio'            => '2.41',
              'Win32'                 => '0.51',
              'Win32API::File'        => '0.1202',
              'attributes'            => '0.26',
              'bigint'                => '0.39',
              'bignum'                => '0.39',
              'bigrat'                => '0.39',
              'constant'              => '1.33',
              'encoding'              => '2.13',
              'feature'               => '1.40',
              'ok'                    => '1.301001_098',
              'overload'              => '1.25',
              'perlfaq'               => '5.021009',
              're'                    => '0.31',
              'threads::shared'       => '1.48',
              'warnings'              => '1.31',
          },
          removed => {
          }
      },
      5.021010 => {
          delta_from => 5.021009,
          changed => {
              'App::Cpan'             => '1.63',
              'B'                     => '1.57',
              'B::Deparse'            => '1.34',
              'B::Op_private'         => '5.021010',
              'Benchmark'             => '1.2',
              'CPAN'                  => '2.10',
              'CPAN::Distribution'    => '2.04',
              'CPAN::FirstTime'       => '5.5307',
              'CPAN::HTTP::Credentials'=> '1.9601',
              'CPAN::HandleConfig'    => '5.5006',
              'CPAN::Meta'            => '2.150001',
              'CPAN::Meta::Converter' => '2.150001',
              'CPAN::Meta::Feature'   => '2.150001',
              'CPAN::Meta::History'   => '2.150001',
              'CPAN::Meta::Merge'     => '2.150001',
              'CPAN::Meta::Prereqs'   => '2.150001',
              'CPAN::Meta::Spec'      => '2.150001',
              'CPAN::Meta::Validator' => '2.150001',
              'CPAN::Module'          => '5.5002',
              'CPAN::Plugin'          => '0.95',
              'CPAN::Plugin::Specfile'=> '0.01',
              'CPAN::Shell'           => '5.5005',
              'Carp'                  => '1.36',
              'Carp::Heavy'           => '1.36',
              'Config'                => '5.02101',
              'Cwd'                   => '3.55',
              'DB'                    => '1.08',
              'Data::Dumper'          => '2.158',
              'Devel::PPPort'         => '3.31',
              'DynaLoader'            => '1.32',
              'Encode'                => '2.72',
              'Encode::Alias'         => '2.19',
              'File::Spec'            => '3.55',
              'File::Spec::Cygwin'    => '3.55',
              'File::Spec::Epoc'      => '3.55',
              'File::Spec::Functions' => '3.55',
              'File::Spec::Mac'       => '3.55',
              'File::Spec::OS2'       => '3.55',
              'File::Spec::Unix'      => '3.55',
              'File::Spec::VMS'       => '3.55',
              'File::Spec::Win32'     => '3.55',
              'Getopt::Long'          => '2.45',
              'Locale::Codes'         => '3.34',
              'Locale::Codes::Constants'=> '3.34',
              'Locale::Codes::Country'=> '3.34',
              'Locale::Codes::Country_Codes'=> '3.34',
              'Locale::Codes::Country_Retired'=> '3.34',
              'Locale::Codes::Currency'=> '3.34',
              'Locale::Codes::Currency_Codes'=> '3.34',
              'Locale::Codes::Currency_Retired'=> '3.34',
              'Locale::Codes::LangExt'=> '3.34',
              'Locale::Codes::LangExt_Codes'=> '3.34',
              'Locale::Codes::LangExt_Retired'=> '3.34',
              'Locale::Codes::LangFam'=> '3.34',
              'Locale::Codes::LangFam_Codes'=> '3.34',
              'Locale::Codes::LangFam_Retired'=> '3.34',
              'Locale::Codes::LangVar'=> '3.34',
              'Locale::Codes::LangVar_Codes'=> '3.34',
              'Locale::Codes::LangVar_Retired'=> '3.34',
              'Locale::Codes::Language'=> '3.34',
              'Locale::Codes::Language_Codes'=> '3.34',
              'Locale::Codes::Language_Retired'=> '3.34',
              'Locale::Codes::Script' => '3.34',
              'Locale::Codes::Script_Codes'=> '3.34',
              'Locale::Codes::Script_Retired'=> '3.34',
              'Locale::Country'       => '3.34',
              'Locale::Currency'      => '3.34',
              'Locale::Language'      => '3.34',
              'Locale::Script'        => '3.34',
              'Module::CoreList'      => '5.20150320',
              'Module::CoreList::TieHashDelta'=> '5.20150320',
              'Module::CoreList::Utils'=> '5.20150320',
              'POSIX'                 => '1.52',
              'Pod::Functions'        => '1.09',
              'Pod::Functions::Functions'=> '1.09',
              'Term::Complete'        => '1.403',
              'Test::Builder'         => '1.001014',
              'Test::Builder::IO::Scalar'=> '2.113',
              'Test::Builder::Module' => '1.001014',
              'Test::Builder::Tester' => '1.28',
              'Test::Builder::Tester::Color'=> '1.290001',
              'Test::More'            => '1.001014',
              'Test::Simple'          => '1.001014',
              'Test::Tester'          => '0.114',
              'Test::use::ok'         => '0.16',
              'Text::Balanced'        => '2.03',
              'Text::ParseWords'      => '3.30',
              'Unicode::Collate'      => '1.12',
              'Unicode::Collate::CJK::Big5'=> '1.12',
              'Unicode::Collate::CJK::GB2312'=> '1.12',
              'Unicode::Collate::CJK::JISX0208'=> '1.12',
              'Unicode::Collate::CJK::Korean'=> '1.12',
              'Unicode::Collate::CJK::Pinyin'=> '1.12',
              'Unicode::Collate::CJK::Stroke'=> '1.12',
              'Unicode::Collate::CJK::Zhuyin'=> '1.12',
              'Unicode::Collate::Locale'=> '1.12',
              'XS::APItest'           => '0.71',
              'encoding'              => '2.14',
              'locale'                => '1.06',
              'meta_notation'         => undef,
              'ok'                    => '0.16',
              'parent'                => '0.232',
              're'                    => '0.32',
              'sigtrap'               => '1.08',
              'threads'               => '2.01',
              'utf8'                  => '1.15',
          },
          removed => {
              'Test::CanFork'         => 1,
              'Test::CanThread'       => 1,
              'Test::More::DeepCheck' => 1,
              'Test::More::DeepCheck::Strict'=> 1,
              'Test::More::DeepCheck::Tolerant'=> 1,
              'Test::More::Tools'     => 1,
              'Test::MostlyLike'      => 1,
              'Test::Stream'          => 1,
              'Test::Stream::API'     => 1,
              'Test::Stream::ArrayBase'=> 1,
              'Test::Stream::ArrayBase::Meta'=> 1,
              'Test::Stream::Block'   => 1,
              'Test::Stream::Carp'    => 1,
              'Test::Stream::Context' => 1,
              'Test::Stream::Event'   => 1,
              'Test::Stream::Event::Bail'=> 1,
              'Test::Stream::Event::Child'=> 1,
              'Test::Stream::Event::Diag'=> 1,
              'Test::Stream::Event::Finish'=> 1,
              'Test::Stream::Event::Note'=> 1,
              'Test::Stream::Event::Ok'=> 1,
              'Test::Stream::Event::Plan'=> 1,
              'Test::Stream::Event::Subtest'=> 1,
              'Test::Stream::ExitMagic'=> 1,
              'Test::Stream::ExitMagic::Context'=> 1,
              'Test::Stream::Exporter'=> 1,
              'Test::Stream::Exporter::Meta'=> 1,
              'Test::Stream::ForceExit'=> 1,
              'Test::Stream::IOSets'  => 1,
              'Test::Stream::Meta'    => 1,
              'Test::Stream::PackageUtil'=> 1,
              'Test::Stream::Subtest' => 1,
              'Test::Stream::Tester'  => 1,
              'Test::Stream::Tester::Checks'=> 1,
              'Test::Stream::Tester::Checks::Event'=> 1,
              'Test::Stream::Tester::Events'=> 1,
              'Test::Stream::Tester::Events::Event'=> 1,
              'Test::Stream::Tester::Grab'=> 1,
              'Test::Stream::Threads' => 1,
              'Test::Stream::Toolset' => 1,
              'Test::Stream::Util'    => 1,
          }
      },
      5.021011 => {
          delta_from => 5.021010,
          changed => {
              'B'                     => '1.58',
              'B::Deparse'            => '1.35',
              'B::Op_private'         => '5.021011',
              'CPAN'                  => '2.11',
              'Config'                => '5.021011',
              'Config::Perl::V'       => '0.24',
              'Cwd'                   => '3.56',
              'ExtUtils::Miniperl'    => '1.05',
              'ExtUtils::ParseXS'     => '3.28',
              'ExtUtils::ParseXS::Constants'=> '3.28',
              'ExtUtils::ParseXS::CountLines'=> '3.28',
              'ExtUtils::ParseXS::Eval'=> '3.28',
              'ExtUtils::ParseXS::Utilities'=> '3.28',
              'ExtUtils::Typemaps'    => '3.28',
              'ExtUtils::Typemaps::Cmd'=> '3.28',
              'ExtUtils::Typemaps::InputMap'=> '3.28',
              'ExtUtils::Typemaps::OutputMap'=> '3.28',
              'ExtUtils::Typemaps::Type'=> '3.28',
              'File::Spec'            => '3.56',
              'File::Spec::Cygwin'    => '3.56',
              'File::Spec::Epoc'      => '3.56',
              'File::Spec::Functions' => '3.56',
              'File::Spec::Mac'       => '3.56',
              'File::Spec::OS2'       => '3.56',
              'File::Spec::Unix'      => '3.56',
              'File::Spec::VMS'       => '3.56',
              'File::Spec::Win32'     => '3.56',
              'IO::Socket::IP'        => '0.37',
              'Module::CoreList'      => '5.20150420',
              'Module::CoreList::TieHashDelta'=> '5.20150420',
              'Module::CoreList::Utils'=> '5.20150420',
              'PerlIO::mmap'          => '0.014',
              'XS::APItest'           => '0.72',
              'attributes'            => '0.27',
              'if'                    => '0.0604',
              'utf8'                  => '1.16',
              'warnings'              => '1.32',
          },
          removed => {
          }
      },
      5.022000 => {
          delta_from => 5.021011,
          changed => {
              'B::Op_private'         => '5.022000',
              'Config'                => '5.022',
              'ExtUtils::Command::MM' => '7.04_01',
              'ExtUtils::Liblist'     => '7.04_01',
              'ExtUtils::Liblist::Kid'=> '7.04_01',
              'ExtUtils::MM'          => '7.04_01',
              'ExtUtils::MM_AIX'      => '7.04_01',
              'ExtUtils::MM_Any'      => '7.04_01',
              'ExtUtils::MM_BeOS'     => '7.04_01',
              'ExtUtils::MM_Cygwin'   => '7.04_01',
              'ExtUtils::MM_DOS'      => '7.04_01',
              'ExtUtils::MM_Darwin'   => '7.04_01',
              'ExtUtils::MM_MacOS'    => '7.04_01',
              'ExtUtils::MM_NW5'      => '7.04_01',
              'ExtUtils::MM_OS2'      => '7.04_01',
              'ExtUtils::MM_QNX'      => '7.04_01',
              'ExtUtils::MM_UWIN'     => '7.04_01',
              'ExtUtils::MM_Unix'     => '7.04_01',
              'ExtUtils::MM_VMS'      => '7.04_01',
              'ExtUtils::MM_VOS'      => '7.04_01',
              'ExtUtils::MM_Win32'    => '7.04_01',
              'ExtUtils::MM_Win95'    => '7.04_01',
              'ExtUtils::MY'          => '7.04_01',
              'ExtUtils::MakeMaker'   => '7.04_01',
              'ExtUtils::MakeMaker::Config'=> '7.04_01',
              'ExtUtils::MakeMaker::Locale'=> '7.04_01',
              'ExtUtils::MakeMaker::version'=> '7.04_01',
              'ExtUtils::MakeMaker::version::regex'=> '7.04_01',
              'ExtUtils::MakeMaker::version::vpp'=> '7.04_01',
              'ExtUtils::Mkbootstrap' => '7.04_01',
              'ExtUtils::Mksymlists'  => '7.04_01',
              'ExtUtils::testlib'     => '7.04_01',
              'Module::CoreList'      => '5.20150520',
              'Module::CoreList::TieHashDelta'=> '5.20150520',
              'Module::CoreList::Utils'=> '5.20150520',
              'POSIX'                 => '1.53',
              'PerlIO::via::QuotedPrint'=> '0.08',
              'overload'              => '1.26',
              'utf8'                  => '1.17',
          },
          removed => {
          }
      },
      5.023000 => {
          delta_from => 5.022000,
          changed => {
              'B::Op_private'         => '5.023000',
              'CPAN::Meta'            => '2.150005',
              'CPAN::Meta::Converter' => '2.150005',
              'CPAN::Meta::Feature'   => '2.150005',
              'CPAN::Meta::History'   => '2.150005',
              'CPAN::Meta::Merge'     => '2.150005',
              'CPAN::Meta::Prereqs'   => '2.150005',
              'CPAN::Meta::Requirements'=> '2.133',
              'CPAN::Meta::Spec'      => '2.150005',
              'CPAN::Meta::Validator' => '2.150005',
              'CPAN::Meta::YAML'      => '0.016',
              'Config'                => '5.023',
              'Encode'                => '2.73',
              'ExtUtils::CBuilder'    => '0.280223',
              'ExtUtils::CBuilder::Base'=> '0.280223',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280223',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280223',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280223',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280223',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280223',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280223',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280223',
              'ExtUtils::CBuilder::Platform::android'=> '0.280223',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280223',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280223',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280223',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280223',
              'Fatal'                 => '2.27',
              'Getopt::Long'          => '2.46',
              'HTTP::Tiny'            => '0.056',
              'List::Util'            => '1.42_01',
              'List::Util::XS'        => '1.42_01',
              'Locale::Codes'         => '3.35',
              'Locale::Codes::Constants'=> '3.35',
              'Locale::Codes::Country'=> '3.35',
              'Locale::Codes::Country_Codes'=> '3.35',
              'Locale::Codes::Country_Retired'=> '3.35',
              'Locale::Codes::Currency'=> '3.35',
              'Locale::Codes::Currency_Codes'=> '3.35',
              'Locale::Codes::Currency_Retired'=> '3.35',
              'Locale::Codes::LangExt'=> '3.35',
              'Locale::Codes::LangExt_Codes'=> '3.35',
              'Locale::Codes::LangExt_Retired'=> '3.35',
              'Locale::Codes::LangFam'=> '3.35',
              'Locale::Codes::LangFam_Codes'=> '3.35',
              'Locale::Codes::LangFam_Retired'=> '3.35',
              'Locale::Codes::LangVar'=> '3.35',
              'Locale::Codes::LangVar_Codes'=> '3.35',
              'Locale::Codes::LangVar_Retired'=> '3.35',
              'Locale::Codes::Language'=> '3.35',
              'Locale::Codes::Language_Codes'=> '3.35',
              'Locale::Codes::Language_Retired'=> '3.35',
              'Locale::Codes::Script' => '3.35',
              'Locale::Codes::Script_Codes'=> '3.35',
              'Locale::Codes::Script_Retired'=> '3.35',
              'Locale::Country'       => '3.35',
              'Locale::Currency'      => '3.35',
              'Locale::Language'      => '3.35',
              'Locale::Script'        => '3.35',
              'Math::BigFloat'        => '1.999701',
              'Math::BigInt'          => '1.999701',
              'Math::BigInt::Calc'    => '1.999701',
              'Math::BigInt::CalcEmu' => '1.999701',
              'Math::BigRat'          => '0.260801',
              'Module::CoreList'      => '5.20150620',
              'Module::CoreList::TieHashDelta'=> '5.20150620',
              'Module::CoreList::Utils'=> '5.20150620',
              'Module::Metadata'      => '1.000027',
              'Net::Cmd'              => '3.06',
              'Net::Config'           => '3.06',
              'Net::Domain'           => '3.06',
              'Net::FTP'              => '3.06',
              'Net::FTP::A'           => '3.06',
              'Net::FTP::E'           => '3.06',
              'Net::FTP::I'           => '3.06',
              'Net::FTP::L'           => '3.06',
              'Net::FTP::dataconn'    => '3.06',
              'Net::NNTP'             => '3.06',
              'Net::Netrc'            => '3.06',
              'Net::POP3'             => '3.06',
              'Net::SMTP'             => '3.06',
              'Net::Time'             => '3.06',
              'POSIX'                 => '1.54',
              'Parse::CPAN::Meta'     => '1.4417',
              'Pod::Simple'           => '3.30',
              'Pod::Simple::BlackBox' => '3.30',
              'Pod::Simple::Checker'  => '3.30',
              'Pod::Simple::Debug'    => '3.30',
              'Pod::Simple::DumpAsText'=> '3.30',
              'Pod::Simple::DumpAsXML'=> '3.30',
              'Pod::Simple::HTML'     => '3.30',
              'Pod::Simple::HTMLBatch'=> '3.30',
              'Pod::Simple::LinkSection'=> '3.30',
              'Pod::Simple::Methody'  => '3.30',
              'Pod::Simple::Progress' => '3.30',
              'Pod::Simple::PullParser'=> '3.30',
              'Pod::Simple::PullParserEndToken'=> '3.30',
              'Pod::Simple::PullParserStartToken'=> '3.30',
              'Pod::Simple::PullParserTextToken'=> '3.30',
              'Pod::Simple::PullParserToken'=> '3.30',
              'Pod::Simple::RTF'      => '3.30',
              'Pod::Simple::Search'   => '3.30',
              'Pod::Simple::SimpleTree'=> '3.30',
              'Pod::Simple::Text'     => '3.30',
              'Pod::Simple::TextContent'=> '3.30',
              'Pod::Simple::TiedOutFH'=> '3.30',
              'Pod::Simple::Transcode'=> '3.30',
              'Pod::Simple::TranscodeDumb'=> '3.30',
              'Pod::Simple::TranscodeSmart'=> '3.30',
              'Pod::Simple::XHTML'    => '3.30',
              'Pod::Simple::XMLOutStream'=> '3.30',
              'Pod::Usage'            => '1.67',
              'Scalar::Util'          => '1.42_01',
              'Socket'                => '2.019',
              'Sub::Util'             => '1.42_01',
              'Time::Piece'           => '1.30',
              'Time::Seconds'         => '1.30',
              'UNIVERSAL'             => '1.13',
              'Unicode'               => '8.0.0',
              'XS::APItest'           => '0.73',
              'autodie'               => '2.27',
              'autodie::Scope::Guard' => '2.27',
              'autodie::Scope::GuardStack'=> '2.27',
              'autodie::Util'         => '2.27',
              'autodie::exception'    => '2.27',
              'autodie::exception::system'=> '2.27',
              'autodie::hints'        => '2.27',
              'autodie::skip'         => '2.27',
              'encoding'              => '2.15',
              'feature'               => '1.41',
              'parent'                => '0.234',
              'threads'               => '2.02',
          },
          removed => {
          }
      },
      5.023001 => {
          delta_from => 5.023000,
          changed => {
              'B::Op_private'         => '5.023001',
              'Config'                => '5.023001',
              'DynaLoader'            => '1.33',
              'Encode'                => '2.75',
              'Encode::MIME::Header'  => '2.17',
              'Encode::Unicode'       => '2.13',
              'Fatal'                 => '2.29',
              'File::Path'            => '2.11',
              'Getopt::Long'          => '2.47',
              'I18N::Langinfo'        => '0.13',
              'IPC::Open3'            => '1.19',
              'Module::CoreList'      => '5.20150720',
              'Module::CoreList::TieHashDelta'=> '5.20150720',
              'Module::CoreList::Utils'=> '5.20150720',
              'Net::Cmd'              => '3.07',
              'Net::Config'           => '3.07',
              'Net::Domain'           => '3.07',
              'Net::FTP'              => '3.07',
              'Net::FTP::A'           => '3.07',
              'Net::FTP::E'           => '3.07',
              'Net::FTP::I'           => '3.07',
              'Net::FTP::L'           => '3.07',
              'Net::FTP::dataconn'    => '3.07',
              'Net::NNTP'             => '3.07',
              'Net::Netrc'            => '3.07',
              'Net::POP3'             => '3.07',
              'Net::SMTP'             => '3.07',
              'Net::Time'             => '3.07',
              'Opcode'                => '1.33',
              'POSIX'                 => '1.55',
              'PerlIO::scalar'        => '0.23',
              'Socket'                => '2.020',
              'Storable'              => '2.54',
              'Unicode::Collate'      => '1.14',
              'Unicode::Collate::CJK::Big5'=> '1.14',
              'Unicode::Collate::CJK::GB2312'=> '1.14',
              'Unicode::Collate::CJK::JISX0208'=> '1.14',
              'Unicode::Collate::CJK::Korean'=> '1.14',
              'Unicode::Collate::CJK::Pinyin'=> '1.14',
              'Unicode::Collate::CJK::Stroke'=> '1.14',
              'Unicode::Collate::CJK::Zhuyin'=> '1.14',
              'Unicode::Collate::Locale'=> '1.14',
              'Unicode::Normalize'    => '1.19',
              'XS::APItest'           => '0.74',
              'XS::Typemap'           => '0.14',
              'autodie'               => '2.29',
              'autodie::Scope::Guard' => '2.29',
              'autodie::Scope::GuardStack'=> '2.29',
              'autodie::Util'         => '2.29',
              'autodie::exception'    => '2.29',
              'autodie::exception::system'=> '2.29',
              'autodie::hints'        => '2.29',
              'autodie::skip'         => '2.29',
              'encoding'              => '2.16',
              'feature'               => '1.42',
              'warnings'              => '1.33',
          },
          removed => {
              'autodie::ScopeUtil'    => 1,
          }
      },
      5.023002 => {
          delta_from => 5.023001,
          changed => {
              'Attribute::Handlers'   => '0.99',
              'B::Op_private'         => '5.023002',
              'CPAN::Meta::YAML'      => '0.017',
              'Config'                => '5.023002',
              'Cwd'                   => '3.57',
              'Encode'                => '2.76',
              'ExtUtils::ParseXS'     => '3.29',
              'ExtUtils::ParseXS::Constants'=> '3.29',
              'ExtUtils::ParseXS::CountLines'=> '3.29',
              'ExtUtils::ParseXS::Eval'=> '3.29',
              'ExtUtils::ParseXS::Utilities'=> '3.29',
              'ExtUtils::Typemaps'    => '3.29',
              'File::Find'            => '1.30',
              'File::Spec'            => '3.57',
              'File::Spec::Cygwin'    => '3.57',
              'File::Spec::Epoc'      => '3.57',
              'File::Spec::Functions' => '3.57',
              'File::Spec::Mac'       => '3.57',
              'File::Spec::OS2'       => '3.57',
              'File::Spec::Unix'      => '3.57',
              'File::Spec::VMS'       => '3.57',
              'File::Spec::Win32'     => '3.57',
              'Filter::Util::Call'    => '1.55',
              'Hash::Util'            => '0.19',
              'Module::CoreList'      => '5.20150820',
              'Module::CoreList::TieHashDelta'=> '5.20150820',
              'Module::CoreList::Utils'=> '5.20150820',
              'POSIX'                 => '1.56',
              'Term::Cap'             => '1.17',
              'Unicode::UCD'          => '0.62',
              'perlfaq'               => '5.021010',
          },
          removed => {
          }
      },
      5.020003 => {
          delta_from => 5.020002,
          changed => {
              'Config'                => '5.020003',
              'Errno'                 => '1.20_06',
              'Module::CoreList'      => '5.20150912',
              'Module::CoreList::TieHashDelta'=> '5.20150912',
              'Module::CoreList::Utils'=> '5.20150912',
          },
          removed => {
          }
      },
      5.023003 => {
          delta_from => 5.023002,
          changed => {
              'Amiga::ARexx'          => '0.02',
              'Amiga::Exec'           => '0.01',
              'B'                     => '1.59',
              'B::Op_private'         => '5.023003',
              'Carp'                  => '1.37',
              'Carp::Heavy'           => '1.37',
              'Compress::Raw::Zlib'   => '2.068_01',
              'Config'                => '5.023003',
              'Cwd'                   => '3.58',
              'DynaLoader'            => '1.34',
              'Encode'                => '2.77',
              'Encode::Unicode'       => '2.14',
              'English'               => '1.10',
              'Errno'                 => '1.24',
              'ExtUtils::Command'     => '7.10',
              'ExtUtils::Command::MM' => '7.10',
              'ExtUtils::Liblist'     => '7.10',
              'ExtUtils::Liblist::Kid'=> '7.10',
              'ExtUtils::MM'          => '7.10',
              'ExtUtils::MM_AIX'      => '7.10',
              'ExtUtils::MM_Any'      => '7.10',
              'ExtUtils::MM_BeOS'     => '7.10',
              'ExtUtils::MM_Cygwin'   => '7.10',
              'ExtUtils::MM_DOS'      => '7.10',
              'ExtUtils::MM_Darwin'   => '7.10',
              'ExtUtils::MM_MacOS'    => '7.10',
              'ExtUtils::MM_NW5'      => '7.10',
              'ExtUtils::MM_OS2'      => '7.10',
              'ExtUtils::MM_QNX'      => '7.10',
              'ExtUtils::MM_UWIN'     => '7.10',
              'ExtUtils::MM_Unix'     => '7.10',
              'ExtUtils::MM_VMS'      => '7.10',
              'ExtUtils::MM_VOS'      => '7.10',
              'ExtUtils::MM_Win32'    => '7.10',
              'ExtUtils::MM_Win95'    => '7.10',
              'ExtUtils::MY'          => '7.10',
              'ExtUtils::MakeMaker'   => '7.10',
              'ExtUtils::MakeMaker::Config'=> '7.10',
              'ExtUtils::MakeMaker::Locale'=> '7.10',
              'ExtUtils::MakeMaker::version'=> '7.10',
              'ExtUtils::MakeMaker::version::regex'=> '7.10',
              'ExtUtils::MakeMaker::version::vpp'=> '7.10',
              'ExtUtils::Mkbootstrap' => '7.10',
              'ExtUtils::Mksymlists'  => '7.10',
              'ExtUtils::ParseXS'     => '3.30',
              'ExtUtils::ParseXS::Constants'=> '3.30',
              'ExtUtils::ParseXS::CountLines'=> '3.30',
              'ExtUtils::ParseXS::Eval'=> '3.30',
              'ExtUtils::ParseXS::Utilities'=> '3.30',
              'ExtUtils::Typemaps'    => '3.30',
              'ExtUtils::Typemaps::Cmd'=> '3.30',
              'ExtUtils::Typemaps::InputMap'=> '3.30',
              'ExtUtils::Typemaps::OutputMap'=> '3.30',
              'ExtUtils::Typemaps::Type'=> '3.30',
              'ExtUtils::testlib'     => '7.10',
              'File::Find'            => '1.31',
              'File::Glob'            => '1.25',
              'File::Spec'            => '3.58',
              'File::Spec::AmigaOS'   => '3.58',
              'File::Spec::Cygwin'    => '3.58',
              'File::Spec::Epoc'      => '3.58',
              'File::Spec::Functions' => '3.58',
              'File::Spec::Mac'       => '3.58',
              'File::Spec::OS2'       => '3.58',
              'File::Spec::Unix'      => '3.58',
              'File::Spec::VMS'       => '3.58',
              'File::Spec::Win32'     => '3.58',
              'Hash::Util::FieldHash' => '1.17',
              'Locale::Codes'         => '3.36',
              'Locale::Codes::Constants'=> '3.36',
              'Locale::Codes::Country'=> '3.36',
              'Locale::Codes::Country_Codes'=> '3.36',
              'Locale::Codes::Country_Retired'=> '3.36',
              'Locale::Codes::Currency'=> '3.36',
              'Locale::Codes::Currency_Codes'=> '3.36',
              'Locale::Codes::Currency_Retired'=> '3.36',
              'Locale::Codes::LangExt'=> '3.36',
              'Locale::Codes::LangExt_Codes'=> '3.36',
              'Locale::Codes::LangExt_Retired'=> '3.36',
              'Locale::Codes::LangFam'=> '3.36',
              'Locale::Codes::LangFam_Codes'=> '3.36',
              'Locale::Codes::LangFam_Retired'=> '3.36',
              'Locale::Codes::LangVar'=> '3.36',
              'Locale::Codes::LangVar_Codes'=> '3.36',
              'Locale::Codes::LangVar_Retired'=> '3.36',
              'Locale::Codes::Language'=> '3.36',
              'Locale::Codes::Language_Codes'=> '3.36',
              'Locale::Codes::Language_Retired'=> '3.36',
              'Locale::Codes::Script' => '3.36',
              'Locale::Codes::Script_Codes'=> '3.36',
              'Locale::Codes::Script_Retired'=> '3.36',
              'Locale::Country'       => '3.36',
              'Locale::Currency'      => '3.36',
              'Locale::Language'      => '3.36',
              'Locale::Script'        => '3.36',
              'Math::BigFloat::Trace' => '0.40',
              'Math::BigInt::Trace'   => '0.40',
              'Module::CoreList'      => '5.20150920',
              'Module::CoreList::TieHashDelta'=> '5.20150920',
              'Module::CoreList::Utils'=> '5.20150920',
              'OS2::DLL'              => '1.06',
              'OS2::ExtAttr'          => '0.04',
              'OS2::Process'          => '1.11',
              'OS2::REXX'             => '1.05',
              'POSIX'                 => '1.57',
              'Pod::Perldoc'          => '3.25_01',
              'Socket'                => '2.020_01',
              'Test'                  => '1.27',
              'Thread::Queue'         => '3.06',
              'Time::HiRes'           => '1.9727_02',
              'Unicode::UCD'          => '0.63',
              'Win32'                 => '0.52',
              'XS::APItest'           => '0.75',
              'bigint'                => '0.40',
              'bignum'                => '0.40',
              'bigrat'                => '0.40',
              'encoding'              => '2.17',
              'experimental'          => '0.014',
              'if'                    => '0.0605',
              'locale'                => '1.07',
              'mro'                   => '1.18',
              'threads'               => '2.03',
          },
          removed => {
          }
      },
      5.023004 => {
          delta_from => 5.023003,
          changed => {
              'B'                     => '1.60',
              'B::Op_private'         => '5.023004',
              'Compress::Raw::Bzip2'  => '2.069',
              'Compress::Raw::Zlib'   => '2.069',
              'Compress::Zlib'        => '2.069',
              'Config'                => '5.023004',
              'Devel::PPPort'         => '3.32',
              'DynaLoader'            => '1.35',
              'Encode'                => '2.78',
              'ExtUtils::CBuilder'    => '0.280224',
              'ExtUtils::CBuilder::Base'=> '0.280224',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280224',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280224',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280224',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280224',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280224',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280224',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280224',
              'ExtUtils::CBuilder::Platform::android'=> '0.280224',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280224',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280224',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280224',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280224',
              'File::Path'            => '2.12',
              'IO'                    => '1.36',
              'IO::Compress::Adapter::Bzip2'=> '2.069',
              'IO::Compress::Adapter::Deflate'=> '2.069',
              'IO::Compress::Adapter::Identity'=> '2.069',
              'IO::Compress::Base'    => '2.069',
              'IO::Compress::Base::Common'=> '2.069',
              'IO::Compress::Bzip2'   => '2.069',
              'IO::Compress::Deflate' => '2.069',
              'IO::Compress::Gzip'    => '2.069',
              'IO::Compress::Gzip::Constants'=> '2.069',
              'IO::Compress::RawDeflate'=> '2.069',
              'IO::Compress::Zip'     => '2.069',
              'IO::Compress::Zip::Constants'=> '2.069',
              'IO::Compress::Zlib::Constants'=> '2.069',
              'IO::Compress::Zlib::Extra'=> '2.069',
              'IO::Poll'              => '0.10',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.069',
              'IO::Uncompress::Adapter::Identity'=> '2.069',
              'IO::Uncompress::Adapter::Inflate'=> '2.069',
              'IO::Uncompress::AnyInflate'=> '2.069',
              'IO::Uncompress::AnyUncompress'=> '2.069',
              'IO::Uncompress::Base'  => '2.069',
              'IO::Uncompress::Bunzip2'=> '2.069',
              'IO::Uncompress::Gunzip'=> '2.069',
              'IO::Uncompress::Inflate'=> '2.069',
              'IO::Uncompress::RawInflate'=> '2.069',
              'IO::Uncompress::Unzip' => '2.069',
              'Math::BigFloat'        => '1.999704',
              'Math::BigFloat::Trace' => '0.41',
              'Math::BigInt'          => '1.999704',
              'Math::BigInt::Calc'    => '1.999704',
              'Math::BigInt::CalcEmu' => '1.999704',
              'Math::BigInt::FastCalc'=> '0.34',
              'Math::BigInt::Trace'   => '0.41',
              'Module::CoreList'      => '5.20151020',
              'Module::CoreList::TieHashDelta'=> '5.20151020',
              'Module::CoreList::Utils'=> '5.20151020',
              'Module::Metadata'      => '1.000029',
              'POSIX'                 => '1.58',
              'Perl::OSType'          => '1.009',
              'PerlIO::encoding'      => '0.22',
              'Socket'                => '2.020_02',
              'Unicode::Normalize'    => '1.21',
              'XS::APItest'           => '0.76',
              'bigint'                => '0.41',
              'bignum'                => '0.41',
              'bigrat'                => '0.41',
              'experimental'          => '0.016',
              'if'                    => '0.0606',
              'warnings'              => '1.35',
          },
          removed => {
          }
      },
      5.023005 => {
          delta_from => 5.023004,
          changed => {
              'B'                     => '1.61',
              'B::Op_private'         => '5.023005',
              'Carp'                  => '1.38',
              'Carp::Heavy'           => '1.38',
              'Config'                => '5.023005',
              'Config::Perl::V'       => '0.25',
              'Cwd'                   => '3.59',
              'Devel::Peek'           => '1.23',
              'Dumpvalue'             => '1.18',
              'DynaLoader'            => '1.36',
              'File::Find'            => '1.32',
              'File::Spec'            => '3.59',
              'File::Spec::AmigaOS'   => '3.59',
              'File::Spec::Cygwin'    => '3.59',
              'File::Spec::Epoc'      => '3.59',
              'File::Spec::Functions' => '3.59',
              'File::Spec::Mac'       => '3.59',
              'File::Spec::OS2'       => '3.59',
              'File::Spec::Unix'      => '3.59',
              'File::Spec::VMS'       => '3.59',
              'File::Spec::Win32'     => '3.59',
              'Getopt::Long'          => '2.48',
              'Hash::Util::FieldHash' => '1.18',
              'IPC::Open3'            => '1.20',
              'Math::BigFloat'        => '1.999710',
              'Math::BigInt'          => '1.999710',
              'Math::BigInt::Calc'    => '1.999710',
              'Math::BigInt::CalcEmu' => '1.999710',
              'Math::BigInt::FastCalc'=> '0.37',
              'Module::CoreList'      => '5.20151120',
              'Module::CoreList::TieHashDelta'=> '5.20151120',
              'Module::CoreList::Utils'=> '5.20151120',
              'Module::Metadata'      => '1.000030',
              'POSIX'                 => '1.59',
              'PerlIO::encoding'      => '0.23',
              'PerlIO::mmap'          => '0.015',
              'PerlIO::scalar'        => '0.24',
              'PerlIO::via'           => '0.16',
              'Pod::Simple'           => '3.32',
              'Pod::Simple::BlackBox' => '3.32',
              'Pod::Simple::Checker'  => '3.32',
              'Pod::Simple::Debug'    => '3.32',
              'Pod::Simple::DumpAsText'=> '3.32',
              'Pod::Simple::DumpAsXML'=> '3.32',
              'Pod::Simple::HTML'     => '3.32',
              'Pod::Simple::HTMLBatch'=> '3.32',
              'Pod::Simple::LinkSection'=> '3.32',
              'Pod::Simple::Methody'  => '3.32',
              'Pod::Simple::Progress' => '3.32',
              'Pod::Simple::PullParser'=> '3.32',
              'Pod::Simple::PullParserEndToken'=> '3.32',
              'Pod::Simple::PullParserStartToken'=> '3.32',
              'Pod::Simple::PullParserTextToken'=> '3.32',
              'Pod::Simple::PullParserToken'=> '3.32',
              'Pod::Simple::RTF'      => '3.32',
              'Pod::Simple::Search'   => '3.32',
              'Pod::Simple::SimpleTree'=> '3.32',
              'Pod::Simple::Text'     => '3.32',
              'Pod::Simple::TextContent'=> '3.32',
              'Pod::Simple::TiedOutFH'=> '3.32',
              'Pod::Simple::Transcode'=> '3.32',
              'Pod::Simple::TranscodeDumb'=> '3.32',
              'Pod::Simple::TranscodeSmart'=> '3.32',
              'Pod::Simple::XHTML'    => '3.32',
              'Pod::Simple::XMLOutStream'=> '3.32',
              'Thread::Queue'         => '3.07',
              'Tie::Scalar'           => '1.04',
              'Time::HiRes'           => '1.9728',
              'Time::Piece'           => '1.31',
              'Time::Seconds'         => '1.31',
              'Unicode::Normalize'    => '1.23',
              'XSLoader'              => '0.21',
              'arybase'               => '0.11',
              'base'                  => '2.22_01',
              'fields'                => '2.22_01',
              'threads'               => '2.04',
              'threads::shared'       => '1.49',
          },
          removed => {
              'ExtUtils::MakeMaker::version::vpp'=> 1,
              'version::vpp'          => 1,
          }
      },
      5.022001 => {
          delta_from => 5.022,
          changed => {
              'B::Op_private'         => '5.022001',
              'Config'                => '5.022001',
              'Module::CoreList'      => '5.20151213',
              'Module::CoreList::TieHashDelta'=> '5.20151213',
              'Module::CoreList::Utils'=> '5.20151213',
              'POSIX'                 => '1.53_01',
              'PerlIO::scalar'        => '0.23',
              'Storable'              => '2.53_01',
              'Win32'                 => '0.52',
              'warnings'              => '1.34',
          },
          removed => {
          }
      },
      5.023006 => {
          delta_from => 5.023005,
          changed => {
              'B::Deparse'            => '1.36',
              'B::Op_private'         => '5.023006',
              'Benchmark'             => '1.21',
              'CPAN::Meta::Requirements'=> '2.140',
              'CPAN::Meta::YAML'      => '0.018',
              'Config'                => '5.023006',
              'Cwd'                   => '3.60',
              'Data::Dumper'          => '2.159',
              'DynaLoader'            => '1.37',
              'File::Spec'            => '3.60',
              'File::Spec::AmigaOS'   => '3.60',
              'File::Spec::Cygwin'    => '3.60',
              'File::Spec::Epoc'      => '3.60',
              'File::Spec::Functions' => '3.60',
              'File::Spec::Mac'       => '3.60',
              'File::Spec::OS2'       => '3.60',
              'File::Spec::Unix'      => '3.60',
              'File::Spec::VMS'       => '3.60',
              'File::Spec::Win32'     => '3.60',
              'Hash::Util::FieldHash' => '1.19',
              'Locale::Codes'         => '3.37',
              'Locale::Codes::Constants'=> '3.37',
              'Locale::Codes::Country'=> '3.37',
              'Locale::Codes::Country_Codes'=> '3.37',
              'Locale::Codes::Country_Retired'=> '3.37',
              'Locale::Codes::Currency'=> '3.37',
              'Locale::Codes::Currency_Codes'=> '3.37',
              'Locale::Codes::Currency_Retired'=> '3.37',
              'Locale::Codes::LangExt'=> '3.37',
              'Locale::Codes::LangExt_Codes'=> '3.37',
              'Locale::Codes::LangExt_Retired'=> '3.37',
              'Locale::Codes::LangFam'=> '3.37',
              'Locale::Codes::LangFam_Codes'=> '3.37',
              'Locale::Codes::LangFam_Retired'=> '3.37',
              'Locale::Codes::LangVar'=> '3.37',
              'Locale::Codes::LangVar_Codes'=> '3.37',
              'Locale::Codes::LangVar_Retired'=> '3.37',
              'Locale::Codes::Language'=> '3.37',
              'Locale::Codes::Language_Codes'=> '3.37',
              'Locale::Codes::Language_Retired'=> '3.37',
              'Locale::Codes::Script' => '3.37',
              'Locale::Codes::Script_Codes'=> '3.37',
              'Locale::Codes::Script_Retired'=> '3.37',
              'Locale::Country'       => '3.37',
              'Locale::Currency'      => '3.37',
              'Locale::Language'      => '3.37',
              'Locale::Script'        => '3.37',
              'Math::BigInt::FastCalc'=> '0.38',
              'Module::CoreList'      => '5.20151220',
              'Module::CoreList::TieHashDelta'=> '5.20151220',
              'Module::CoreList::Utils'=> '5.20151220',
              'Module::Metadata'      => '1.000031',
              'Opcode'                => '1.34',
              'PerlIO::mmap'          => '0.016',
              'Pod::Perldoc'          => '3.25_02',
              'SDBM_File'             => '1.14',
              'Term::ANSIColor'       => '4.04',
              'Test'                  => '1.28',
              'Unicode::Normalize'    => '1.24',
              'XS::APItest'           => '0.77',
              'base'                  => '2.23',
              'encoding::warnings'    => '0.12',
              'fields'                => '2.23',
              'locale'                => '1.08',
              'strict'                => '1.10',
              'threads'               => '2.05',
              'threads::shared'       => '1.50',
              'utf8'                  => '1.18',
          },
          removed => {
          }
      },
      5.023007 => {
          delta_from => 5.023006,
          changed => {
              'App::Prove'            => '3.36',
              'App::Prove::State'     => '3.36',
              'App::Prove::State::Result'=> '3.36',
              'App::Prove::State::Result::Test'=> '3.36',
              'B'                     => '1.62',
              'B::Deparse'            => '1.37',
              'B::Op_private'         => '5.023007',
              'Benchmark'             => '1.22',
              'Config'                => '5.023007',
              'Cwd'                   => '3.62',
              'Data::Dumper'          => '2.160',
              'ExtUtils::ParseXS'     => '3.31',
              'ExtUtils::ParseXS::Constants'=> '3.31',
              'ExtUtils::ParseXS::CountLines'=> '3.31',
              'ExtUtils::ParseXS::Eval'=> '3.31',
              'ExtUtils::ParseXS::Utilities'=> '3.31',
              'ExtUtils::Typemaps'    => '3.31',
              'ExtUtils::Typemaps::Cmd'=> '3.31',
              'ExtUtils::Typemaps::InputMap'=> '3.31',
              'ExtUtils::Typemaps::OutputMap'=> '3.31',
              'ExtUtils::Typemaps::Type'=> '3.31',
              'File::Find'            => '1.33',
              'File::Spec'            => '3.62',
              'File::Spec::AmigaOS'   => '3.62',
              'File::Spec::Cygwin'    => '3.62',
              'File::Spec::Epoc'      => '3.62',
              'File::Spec::Functions' => '3.62',
              'File::Spec::Mac'       => '3.62',
              'File::Spec::OS2'       => '3.62',
              'File::Spec::Unix'      => '3.62',
              'File::Spec::VMS'       => '3.62',
              'File::Spec::Win32'     => '3.62',
              'Math::BigFloat'        => '1.999715',
              'Math::BigFloat::Trace' => '0.42',
              'Math::BigInt'          => '1.999715',
              'Math::BigInt::Calc'    => '1.999715',
              'Math::BigInt::CalcEmu' => '1.999715',
              'Math::BigInt::FastCalc'=> '0.40',
              'Math::BigInt::Trace'   => '0.42',
              'Math::BigRat'          => '0.260802',
              'Module::CoreList'      => '5.20160120',
              'Module::CoreList::TieHashDelta'=> '5.20160120',
              'Module::CoreList::Utils'=> '5.20160120',
              'Net::Cmd'              => '3.08',
              'Net::Config'           => '3.08',
              'Net::Domain'           => '3.08',
              'Net::FTP'              => '3.08',
              'Net::FTP::A'           => '3.08',
              'Net::FTP::E'           => '3.08',
              'Net::FTP::I'           => '3.08',
              'Net::FTP::L'           => '3.08',
              'Net::FTP::dataconn'    => '3.08',
              'Net::NNTP'             => '3.08',
              'Net::Netrc'            => '3.08',
              'Net::POP3'             => '3.08',
              'Net::SMTP'             => '3.08',
              'Net::Time'             => '3.08',
              'Pod::Man'              => '4.04',
              'Pod::ParseLink'        => '4.04',
              'Pod::Text'             => '4.04',
              'Pod::Text::Color'      => '4.04',
              'Pod::Text::Overstrike' => '4.04',
              'Pod::Text::Termcap'    => '4.04',
              'Pod::Usage'            => '1.68',
              'TAP::Base'             => '3.36',
              'TAP::Formatter::Base'  => '3.36',
              'TAP::Formatter::Color' => '3.36',
              'TAP::Formatter::Console'=> '3.36',
              'TAP::Formatter::Console::ParallelSession'=> '3.36',
              'TAP::Formatter::Console::Session'=> '3.36',
              'TAP::Formatter::File'  => '3.36',
              'TAP::Formatter::File::Session'=> '3.36',
              'TAP::Formatter::Session'=> '3.36',
              'TAP::Harness'          => '3.36',
              'TAP::Harness::Env'     => '3.36',
              'TAP::Object'           => '3.36',
              'TAP::Parser'           => '3.36',
              'TAP::Parser::Aggregator'=> '3.36',
              'TAP::Parser::Grammar'  => '3.36',
              'TAP::Parser::Iterator' => '3.36',
              'TAP::Parser::Iterator::Array'=> '3.36',
              'TAP::Parser::Iterator::Process'=> '3.36',
              'TAP::Parser::Iterator::Stream'=> '3.36',
              'TAP::Parser::IteratorFactory'=> '3.36',
              'TAP::Parser::Multiplexer'=> '3.36',
              'TAP::Parser::Result'   => '3.36',
              'TAP::Parser::Result::Bailout'=> '3.36',
              'TAP::Parser::Result::Comment'=> '3.36',
              'TAP::Parser::Result::Plan'=> '3.36',
              'TAP::Parser::Result::Pragma'=> '3.36',
              'TAP::Parser::Result::Test'=> '3.36',
              'TAP::Parser::Result::Unknown'=> '3.36',
              'TAP::Parser::Result::Version'=> '3.36',
              'TAP::Parser::Result::YAML'=> '3.36',
              'TAP::Parser::ResultFactory'=> '3.36',
              'TAP::Parser::Scheduler'=> '3.36',
              'TAP::Parser::Scheduler::Job'=> '3.36',
              'TAP::Parser::Scheduler::Spinner'=> '3.36',
              'TAP::Parser::Source'   => '3.36',
              'TAP::Parser::SourceHandler'=> '3.36',
              'TAP::Parser::SourceHandler::Executable'=> '3.36',
              'TAP::Parser::SourceHandler::File'=> '3.36',
              'TAP::Parser::SourceHandler::Handle'=> '3.36',
              'TAP::Parser::SourceHandler::Perl'=> '3.36',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.36',
              'TAP::Parser::YAMLish::Reader'=> '3.36',
              'TAP::Parser::YAMLish::Writer'=> '3.36',
              'Test::Harness'         => '3.36',
              'Unicode::Normalize'    => '1.25',
              'Unicode::UCD'          => '0.64',
              'XS::APItest'           => '0.78',
              'bigint'                => '0.42',
              'bignum'                => '0.42',
              'bigrat'                => '0.42',
              'utf8'                  => '1.19',
          },
          removed => {
          }
      },
      5.023008 => {
          delta_from => 5.023007,
          changed => {
              'B::Op_private'         => '5.023008',
              'Config'                => '5.023008',
              'Cwd'                   => '3.63',
              'DynaLoader'            => '1.38',
              'Encode'                => '2.80',
              'Encode::Alias'         => '2.20',
              'Encode::MIME::Header'  => '2.19',
              'Encode::Unicode'       => '2.15',
              'ExtUtils::CBuilder'    => '0.280225',
              'ExtUtils::CBuilder::Base'=> '0.280225',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280225',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280225',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280225',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280225',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280225',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280225',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280225',
              'ExtUtils::CBuilder::Platform::android'=> '0.280225',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280225',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280225',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280225',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280225',
              'ExtUtils::Command::MM' => '7.10_01',
              'ExtUtils::Liblist'     => '7.10_01',
              'ExtUtils::Liblist::Kid'=> '7.10_01',
              'ExtUtils::MM'          => '7.10_01',
              'ExtUtils::MM_AIX'      => '7.10_01',
              'ExtUtils::MM_Any'      => '7.10_01',
              'ExtUtils::MM_BeOS'     => '7.10_01',
              'ExtUtils::MM_Cygwin'   => '7.10_01',
              'ExtUtils::MM_DOS'      => '7.10_01',
              'ExtUtils::MM_Darwin'   => '7.10_01',
              'ExtUtils::MM_MacOS'    => '7.10_01',
              'ExtUtils::MM_NW5'      => '7.10_01',
              'ExtUtils::MM_OS2'      => '7.10_01',
              'ExtUtils::MM_QNX'      => '7.10_01',
              'ExtUtils::MM_UWIN'     => '7.10_01',
              'ExtUtils::MM_Unix'     => '7.10_01',
              'ExtUtils::MM_VMS'      => '7.10_01',
              'ExtUtils::MM_VOS'      => '7.10_01',
              'ExtUtils::MM_Win32'    => '7.10_01',
              'ExtUtils::MM_Win95'    => '7.10_01',
              'ExtUtils::MY'          => '7.10_01',
              'ExtUtils::MakeMaker'   => '7.10_01',
              'ExtUtils::MakeMaker::Config'=> '7.10_01',
              'ExtUtils::MakeMaker::version'=> '7.10_01',
              'ExtUtils::MakeMaker::version::regex'=> '7.10_01',
              'ExtUtils::Mkbootstrap' => '7.10_01',
              'ExtUtils::Mksymlists'  => '7.10_01',
              'ExtUtils::testlib'     => '7.10_01',
              'File::Spec'            => '3.63',
              'File::Spec::AmigaOS'   => '3.63',
              'File::Spec::Cygwin'    => '3.63',
              'File::Spec::Epoc'      => '3.63',
              'File::Spec::Functions' => '3.63',
              'File::Spec::Mac'       => '3.63',
              'File::Spec::OS2'       => '3.63',
              'File::Spec::Unix'      => '3.63',
              'File::Spec::VMS'       => '3.63',
              'File::Spec::Win32'     => '3.63',
              'IPC::Msg'              => '2.05',
              'IPC::Semaphore'        => '2.05',
              'IPC::SharedMem'        => '2.05',
              'IPC::SysV'             => '2.05',
              'Module::CoreList'      => '5.20160121',
              'Module::CoreList::TieHashDelta'=> '5.20160121',
              'Module::CoreList::Utils'=> '5.20160121',
              'ODBM_File'             => '1.13',
              'POSIX'                 => '1.63',
              'PerlIO::encoding'      => '0.24',
              'Pod::Man'              => '4.06',
              'Pod::ParseLink'        => '4.06',
              'Pod::Text'             => '4.06',
              'Pod::Text::Color'      => '4.06',
              'Pod::Text::Overstrike' => '4.06',
              'Pod::Text::Termcap'    => '4.06',
              'Storable'              => '2.55',
              'Time::HiRes'           => '1.9730',
              'XS::APItest'           => '0.79',
          },
          removed => {
          }
      },
      5.023009 => {
          delta_from => 5.023008,
          changed => {
              'Amiga::ARexx'          => '0.04',
              'Amiga::Exec'           => '0.02',
              'B::Op_private'         => '5.023009',
              'Carp'                  => '1.40',
              'Carp::Heavy'           => '1.40',
              'Config'                => '5.023009',
              'Errno'                 => '1.25',
              'ExtUtils::Embed'       => '1.33',
              'File::Find'            => '1.34',
              'File::Glob'            => '1.26',
              'File::Spec::AmigaOS'   => ';.64',
              'IPC::Msg'              => '2.06_01',
              'IPC::Semaphore'        => '2.06_01',
              'IPC::SharedMem'        => '2.06_01',
              'IPC::SysV'             => '2.06_01',
              'List::Util'            => '1.42_02',
              'List::Util::XS'        => '1.42_02',
              'Module::CoreList'      => '5.20160320',
              'Module::CoreList::TieHashDelta'=> '5.20160320',
              'Module::CoreList::Utils'=> '5.20160320',
              'POSIX'                 => '1.64',
              'Pod::Functions'        => '1.10',
              'Pod::Functions::Functions'=> '1.10',
              'Scalar::Util'          => '1.42_02',
              'SelfLoader'            => '1.23',
              'Socket'                => '2.020_03',
              'Storable'              => '2.56',
              'Sub::Util'             => '1.42_02',
              'Thread::Queue'         => '3.08',
              'Tie::File'             => '1.02',
              'Time::HiRes'           => '1.9732',
              'Win32API::File'        => '0.1203',
              'Win32API::File::inc::ExtUtils::Myconst2perl'=> '1',
              'XS::APItest'           => '0.80',
              'autouse'               => '1.11',
              'bytes'                 => '1.05',
              'strict'                => '1.11',
              'threads'               => '2.06',
              'version'               => '0.9916',
              'version::regex'        => '0.9916',
              'warnings'              => '1.36',
          },
          removed => {
              'Win32API::File::ExtUtils::Myconst2perl'=> 1,
          }
      },
      5.022002 => {
          delta_from => 5.022001,
          changed => {
              'B::Op_private'         => '5.022002',
              'Config'                => '5.022002',
              'Cwd'                   => '3.56_01',
              'File::Spec'            => '3.56_01',
              'File::Spec::Cygwin'    => '3.56_01',
              'File::Spec::Epoc'      => '3.56_01',
              'File::Spec::Functions' => '3.56_01',
              'File::Spec::Mac'       => '3.56_01',
              'File::Spec::OS2'       => '3.56_01',
              'File::Spec::Unix'      => '3.56_01',
              'File::Spec::VMS'       => '3.56_01',
              'File::Spec::Win32'     => '3.56_01',
              'Module::CoreList'      => '5.20160429',
              'Module::CoreList::TieHashDelta'=> '5.20160429',
              'Module::CoreList::Utils'=> '5.20160429',
              'XS::APItest'           => '0.72_01',
          },
          removed => {
          }
      },
      5.024000 => {
          delta_from => 5.023009,
          changed => {
              'B::Op_private'         => '5.024000',
              'Config'                => '5.024',
              'File::Copy'            => '2.31',
              'File::Path'            => '2.12_01',
              'File::Spec::AmigaOS'   => '3.64',
              'IO::Handle'            => '1.36',
              'Module::CoreList'      => '5.20160506',
              'Module::CoreList::TieHashDelta'=> '5.20160506',
              'Module::CoreList::Utils'=> '5.20160506',
              'ODBM_File'             => '1.14',
              'POSIX'                 => '1.65',
              'Pod::Man'              => '4.07',
              'Pod::ParseLink'        => '4.07',
              'Pod::Text'             => '4.07',
              'Pod::Text::Color'      => '4.07',
              'Pod::Text::Overstrike' => '4.07',
              'Pod::Text::Termcap'    => '4.07',
              'Thread::Queue'         => '3.09',
              'Time::HiRes'           => '1.9733',
              'threads'               => '2.07',
              'threads::shared'       => '1.51',
              'locale'                => '1.09',
          },
          removed => {
          }
      },
      5.025000 => {
          delta_from => 5.024,
          changed => {
              'B::Op_private'         => '5.025000',
              'Config'                => '5.025',
              'Module::CoreList'      => '5.20160507',
              'Module::CoreList::TieHashDelta'=> '5.20160507',
              'Module::CoreList::Utils'=> '5.20160507',
              'feature'               => '1.43',
          },
          removed => {
          }
      },
      5.025001 => {
          delta_from => 5.025,
          changed => {
              'Archive::Tar'          => '2.08',
              'Archive::Tar::Constant'=> '2.08',
              'Archive::Tar::File'    => '2.08',
              'B::Op_private'         => '5.025001',
              'Carp'                  => '1.41',
              'Carp::Heavy'           => '1.41',
              'Config'                => '5.025001',
              'Config::Perl::V'       => '0.26',
              'DB_File'               => '1.838',
              'Digest::MD5'           => '2.55',
              'IPC::Cmd'              => '0.94',
              'IPC::Msg'              => '2.07',
              'IPC::Semaphore'        => '2.07',
              'IPC::SharedMem'        => '2.07',
              'IPC::SysV'             => '2.07',
              'List::Util'            => '1.45_01',
              'List::Util::XS'        => '1.45_01',
              'Locale::Codes'         => '3.38',
              'Locale::Codes::Constants'=> '3.38',
              'Locale::Codes::Country'=> '3.38',
              'Locale::Codes::Country_Codes'=> '3.38',
              'Locale::Codes::Country_Retired'=> '3.38',
              'Locale::Codes::Currency'=> '3.38',
              'Locale::Codes::Currency_Codes'=> '3.38',
              'Locale::Codes::Currency_Retired'=> '3.38',
              'Locale::Codes::LangExt'=> '3.38',
              'Locale::Codes::LangExt_Codes'=> '3.38',
              'Locale::Codes::LangExt_Retired'=> '3.38',
              'Locale::Codes::LangFam'=> '3.38',
              'Locale::Codes::LangFam_Codes'=> '3.38',
              'Locale::Codes::LangFam_Retired'=> '3.38',
              'Locale::Codes::LangVar'=> '3.38',
              'Locale::Codes::LangVar_Codes'=> '3.38',
              'Locale::Codes::LangVar_Retired'=> '3.38',
              'Locale::Codes::Language'=> '3.38',
              'Locale::Codes::Language_Codes'=> '3.38',
              'Locale::Codes::Language_Retired'=> '3.38',
              'Locale::Codes::Script' => '3.38',
              'Locale::Codes::Script_Codes'=> '3.38',
              'Locale::Codes::Script_Retired'=> '3.38',
              'Locale::Country'       => '3.38',
              'Locale::Currency'      => '3.38',
              'Locale::Language'      => '3.38',
              'Locale::Maketext'      => '1.27',
              'Locale::Script'        => '3.38',
              'Module::CoreList'      => '5.20160520',
              'Module::CoreList::TieHashDelta'=> '5.20160520',
              'Module::CoreList::Utils'=> '5.20160520',
              'Module::Metadata'      => '1.000032',
              'POSIX'                 => '1.69',
              'Scalar::Util'          => '1.45_01',
              'Sub::Util'             => '1.45_01',
              'Sys::Syslog'           => '0.34',
              'Term::ANSIColor'       => '4.05',
              'Test2'                 => '1.302015',
              'Test2::API'            => '1.302015',
              'Test2::API::Breakage'  => '1.302015',
              'Test2::API::Context'   => '1.302015',
              'Test2::API::Instance'  => '1.302015',
              'Test2::API::Stack'     => '1.302015',
              'Test2::Event'          => '1.302015',
              'Test2::Event::Bail'    => '1.302015',
              'Test2::Event::Diag'    => '1.302015',
              'Test2::Event::Exception'=> '1.302015',
              'Test2::Event::Note'    => '1.302015',
              'Test2::Event::Ok'      => '1.302015',
              'Test2::Event::Plan'    => '1.302015',
              'Test2::Event::Skip'    => '1.302015',
              'Test2::Event::Subtest' => '1.302015',
              'Test2::Event::Waiting' => '1.302015',
              'Test2::Formatter'      => '1.302015',
              'Test2::Formatter::TAP' => '1.302015',
              'Test2::Hub'            => '1.302015',
              'Test2::Hub::Interceptor'=> '1.302015',
              'Test2::Hub::Interceptor::Terminator'=> '1.302015',
              'Test2::Hub::Subtest'   => '1.302015',
              'Test2::IPC'            => '1.302015',
              'Test2::IPC::Driver'    => '1.302015',
              'Test2::IPC::Driver::Files'=> '1.302015',
              'Test2::Util'           => '1.302015',
              'Test2::Util::ExternalMeta'=> '1.302015',
              'Test2::Util::HashBase' => '1.302015',
              'Test2::Util::Trace'    => '1.302015',
              'Test::Builder'         => '1.302015',
              'Test::Builder::Formatter'=> '1.302015',
              'Test::Builder::Module' => '1.302015',
              'Test::Builder::Tester' => '1.302015',
              'Test::Builder::Tester::Color'=> '1.302015',
              'Test::Builder::TodoDiag'=> '1.302015',
              'Test::More'            => '1.302015',
              'Test::Simple'          => '1.302015',
              'Test::Tester'          => '1.302015',
              'Test::Tester::Capture' => '1.302015',
              'Test::Tester::CaptureRunner'=> '1.302015',
              'Test::Tester::Delegate'=> '1.302015',
              'Test::use::ok'         => '1.302015',
              'XS::APItest'           => '0.81',
              '_charnames'            => '1.44',
              'charnames'             => '1.44',
              'ok'                    => '1.302015',
              'perlfaq'               => '5.021011',
              're'                    => '0.33',
              'threads'               => '2.08',
              'threads::shared'       => '1.52',
          },
          removed => {
          }
      },
      5.025002 => {
          delta_from => 5.025001,
          changed => {
              'App::Cpan'             => '1.64',
              'B::Op_private'         => '5.025002',
              'CPAN'                  => '2.14',
              'CPAN::Distribution'    => '2.12',
              'CPAN::FTP'             => '5.5007',
              'CPAN::FirstTime'       => '5.5309',
              'CPAN::HandleConfig'    => '5.5007',
              'CPAN::Index'           => '2.12',
              'CPAN::Mirrors'         => '2.12',
              'CPAN::Plugin'          => '0.96',
              'CPAN::Shell'           => '5.5006',
              'Config'                => '5.025002',
              'Cwd'                   => '3.64',
              'Devel::Peek'           => '1.24',
              'DynaLoader'            => '1.39',
              'ExtUtils::Command'     => '7.18',
              'ExtUtils::Command::MM' => '7.18',
              'ExtUtils::Liblist'     => '7.18',
              'ExtUtils::Liblist::Kid'=> '7.18',
              'ExtUtils::MM'          => '7.18',
              'ExtUtils::MM_AIX'      => '7.18',
              'ExtUtils::MM_Any'      => '7.18',
              'ExtUtils::MM_BeOS'     => '7.18',
              'ExtUtils::MM_Cygwin'   => '7.18',
              'ExtUtils::MM_DOS'      => '7.18',
              'ExtUtils::MM_Darwin'   => '7.18',
              'ExtUtils::MM_MacOS'    => '7.18',
              'ExtUtils::MM_NW5'      => '7.18',
              'ExtUtils::MM_OS2'      => '7.18',
              'ExtUtils::MM_QNX'      => '7.18',
              'ExtUtils::MM_UWIN'     => '7.18',
              'ExtUtils::MM_Unix'     => '7.18',
              'ExtUtils::MM_VMS'      => '7.18',
              'ExtUtils::MM_VOS'      => '7.18',
              'ExtUtils::MM_Win32'    => '7.18',
              'ExtUtils::MM_Win95'    => '7.18',
              'ExtUtils::MY'          => '7.18',
              'ExtUtils::MakeMaker'   => '7.18',
              'ExtUtils::MakeMaker::Config'=> '7.18',
              'ExtUtils::MakeMaker::Locale'=> '7.18',
              'ExtUtils::MakeMaker::version'=> '7.18',
              'ExtUtils::MakeMaker::version::regex'=> '7.18',
              'ExtUtils::Miniperl'    => '1.06',
              'ExtUtils::Mkbootstrap' => '7.18',
              'ExtUtils::Mksymlists'  => '7.18',
              'ExtUtils::ParseXS'     => '3.32',
              'ExtUtils::ParseXS::Constants'=> '3.32',
              'ExtUtils::ParseXS::CountLines'=> '3.32',
              'ExtUtils::ParseXS::Eval'=> '3.32',
              'ExtUtils::ParseXS::Utilities'=> '3.32',
              'ExtUtils::Typemaps'    => '3.32',
              'ExtUtils::Typemaps::Cmd'=> '3.32',
              'ExtUtils::Typemaps::InputMap'=> '3.32',
              'ExtUtils::Typemaps::OutputMap'=> '3.32',
              'ExtUtils::Typemaps::Type'=> '3.32',
              'ExtUtils::testlib'     => '7.18',
              'File::Copy'            => '2.32',
              'File::Glob'            => '1.27',
              'File::Spec'            => '3.64',
              'File::Spec::Cygwin'    => '3.64',
              'File::Spec::Epoc'      => '3.64',
              'File::Spec::Functions' => '3.64',
              'File::Spec::Mac'       => '3.64',
              'File::Spec::OS2'       => '3.64',
              'File::Spec::Unix'      => '3.64',
              'File::Spec::VMS'       => '3.64',
              'File::Spec::Win32'     => '3.64',
              'FileHandle'            => '2.03',
              'Getopt::Long'          => '2.49',
              'HTTP::Tiny'            => '0.058',
              'JSON::PP'              => '2.27400',
              'Locale::Codes'         => '3.39',
              'Locale::Codes::Constants'=> '3.39',
              'Locale::Codes::Country'=> '3.39',
              'Locale::Codes::Country_Codes'=> '3.39',
              'Locale::Codes::Country_Retired'=> '3.39',
              'Locale::Codes::Currency'=> '3.39',
              'Locale::Codes::Currency_Codes'=> '3.39',
              'Locale::Codes::Currency_Retired'=> '3.39',
              'Locale::Codes::LangExt'=> '3.39',
              'Locale::Codes::LangExt_Codes'=> '3.39',
              'Locale::Codes::LangExt_Retired'=> '3.39',
              'Locale::Codes::LangFam'=> '3.39',
              'Locale::Codes::LangFam_Codes'=> '3.39',
              'Locale::Codes::LangFam_Retired'=> '3.39',
              'Locale::Codes::LangVar'=> '3.39',
              'Locale::Codes::LangVar_Codes'=> '3.39',
              'Locale::Codes::LangVar_Retired'=> '3.39',
              'Locale::Codes::Language'=> '3.39',
              'Locale::Codes::Language_Codes'=> '3.39',
              'Locale::Codes::Language_Retired'=> '3.39',
              'Locale::Codes::Script' => '3.39',
              'Locale::Codes::Script_Codes'=> '3.39',
              'Locale::Codes::Script_Retired'=> '3.39',
              'Locale::Country'       => '3.39',
              'Locale::Currency'      => '3.39',
              'Locale::Language'      => '3.39',
              'Locale::Script'        => '3.39',
              'Module::CoreList'      => '5.20160620',
              'Module::CoreList::TieHashDelta'=> '5.20160620',
              'Module::CoreList::Utils'=> '5.20160620',
              'Opcode'                => '1.35',
              'POSIX'                 => '1.70',
              'Pod::Checker'          => '1.73',
              'Pod::Functions'        => '1.11',
              'Pod::Functions::Functions'=> '1.11',
              'Pod::Usage'            => '1.69',
              'Test2'                 => '1.302026',
              'Test2::API'            => '1.302026',
              'Test2::API::Breakage'  => '1.302026',
              'Test2::API::Context'   => '1.302026',
              'Test2::API::Instance'  => '1.302026',
              'Test2::API::Stack'     => '1.302026',
              'Test2::Event'          => '1.302026',
              'Test2::Event::Bail'    => '1.302026',
              'Test2::Event::Diag'    => '1.302026',
              'Test2::Event::Exception'=> '1.302026',
              'Test2::Event::Generic' => '1.302026',
              'Test2::Event::Note'    => '1.302026',
              'Test2::Event::Ok'      => '1.302026',
              'Test2::Event::Plan'    => '1.302026',
              'Test2::Event::Skip'    => '1.302026',
              'Test2::Event::Subtest' => '1.302026',
              'Test2::Event::Waiting' => '1.302026',
              'Test2::Formatter'      => '1.302026',
              'Test2::Formatter::TAP' => '1.302026',
              'Test2::Hub'            => '1.302026',
              'Test2::Hub::Interceptor'=> '1.302026',
              'Test2::Hub::Interceptor::Terminator'=> '1.302026',
              'Test2::Hub::Subtest'   => '1.302026',
              'Test2::IPC'            => '1.302026',
              'Test2::IPC::Driver'    => '1.302026',
              'Test2::IPC::Driver::Files'=> '1.302026',
              'Test2::Util'           => '1.302026',
              'Test2::Util::ExternalMeta'=> '1.302026',
              'Test2::Util::HashBase' => '1.302026',
              'Test2::Util::Trace'    => '1.302026',
              'Test::Builder'         => '1.302026',
              'Test::Builder::Formatter'=> '1.302026',
              'Test::Builder::Module' => '1.302026',
              'Test::Builder::Tester' => '1.302026',
              'Test::Builder::Tester::Color'=> '1.302026',
              'Test::Builder::TodoDiag'=> '1.302026',
              'Test::More'            => '1.302026',
              'Test::Simple'          => '1.302026',
              'Test::Tester'          => '1.302026',
              'Test::Tester::Capture' => '1.302026',
              'Test::Tester::CaptureRunner'=> '1.302026',
              'Test::Tester::Delegate'=> '1.302026',
              'Test::use::ok'         => '1.302026',
              'Thread::Queue'         => '3.11',
              'Time::HiRes'           => '1.9734',
              'Unicode::UCD'          => '0.65',
              'VMS::DCLsym'           => '1.07',
              'XS::APItest'           => '0.82',
              'diagnostics'           => '1.35',
              'feature'               => '1.44',
              'ok'                    => '1.302026',
              'threads'               => '2.09',
          },
          removed => {
          }
      },
      5.025003 => {
          delta_from => 5.025002,
          changed => {
              'B::Op_private'         => '5.025003',
              'Config'                => '5.025003',
              'Data::Dumper'          => '2.161',
              'Devel::PPPort'         => '3.35',
              'Encode'                => '2.84',
              'Encode::MIME::Header'  => '2.23',
              'Encode::MIME::Header::ISO_2022_JP'=> '1.07',
              'ExtUtils::ParseXS'     => '3.33',
              'ExtUtils::ParseXS::Constants'=> '3.33',
              'ExtUtils::ParseXS::CountLines'=> '3.33',
              'ExtUtils::ParseXS::Eval'=> '3.33',
              'ExtUtils::ParseXS::Utilities'=> '3.33',
              'ExtUtils::Typemaps'    => '3.33',
              'ExtUtils::Typemaps::Cmd'=> '3.33',
              'ExtUtils::Typemaps::InputMap'=> '3.33',
              'ExtUtils::Typemaps::OutputMap'=> '3.33',
              'ExtUtils::Typemaps::Type'=> '3.33',
              'Hash::Util'            => '0.20',
              'Math::BigFloat'        => '1.999726',
              'Math::BigFloat::Trace' => '0.43',
              'Math::BigInt'          => '1.999726',
              'Math::BigInt::Calc'    => '1.999726',
              'Math::BigInt::CalcEmu' => '1.999726',
              'Math::BigInt::FastCalc'=> '0.42',
              'Math::BigInt::Trace'   => '0.43',
              'Math::BigRat'          => '0.260804',
              'Module::CoreList'      => '5.20160720',
              'Module::CoreList::TieHashDelta'=> '5.20160720',
              'Module::CoreList::Utils'=> '5.20160720',
              'Net::Cmd'              => '3.09',
              'Net::Config'           => '3.09',
              'Net::Domain'           => '3.09',
              'Net::FTP'              => '3.09',
              'Net::FTP::A'           => '3.09',
              'Net::FTP::E'           => '3.09',
              'Net::FTP::I'           => '3.09',
              'Net::FTP::L'           => '3.09',
              'Net::FTP::dataconn'    => '3.09',
              'Net::NNTP'             => '3.09',
              'Net::Netrc'            => '3.09',
              'Net::POP3'             => '3.09',
              'Net::SMTP'             => '3.09',
              'Net::Time'             => '3.09',
              'Parse::CPAN::Meta'     => '1.4422',
              'Perl::OSType'          => '1.010',
              'Test2'                 => '1.302045',
              'Test2::API'            => '1.302045',
              'Test2::API::Breakage'  => '1.302045',
              'Test2::API::Context'   => '1.302045',
              'Test2::API::Instance'  => '1.302045',
              'Test2::API::Stack'     => '1.302045',
              'Test2::Event'          => '1.302045',
              'Test2::Event::Bail'    => '1.302045',
              'Test2::Event::Diag'    => '1.302045',
              'Test2::Event::Exception'=> '1.302045',
              'Test2::Event::Generic' => '1.302045',
              'Test2::Event::Info'    => '1.302045',
              'Test2::Event::Note'    => '1.302045',
              'Test2::Event::Ok'      => '1.302045',
              'Test2::Event::Plan'    => '1.302045',
              'Test2::Event::Skip'    => '1.302045',
              'Test2::Event::Subtest' => '1.302045',
              'Test2::Event::Waiting' => '1.302045',
              'Test2::Formatter'      => '1.302045',
              'Test2::Formatter::TAP' => '1.302045',
              'Test2::Hub'            => '1.302045',
              'Test2::Hub::Interceptor'=> '1.302045',
              'Test2::Hub::Interceptor::Terminator'=> '1.302045',
              'Test2::Hub::Subtest'   => '1.302045',
              'Test2::IPC'            => '1.302045',
              'Test2::IPC::Driver'    => '1.302045',
              'Test2::IPC::Driver::Files'=> '1.302045',
              'Test2::Util'           => '1.302045',
              'Test2::Util::ExternalMeta'=> '1.302045',
              'Test2::Util::HashBase' => '1.302045',
              'Test2::Util::Trace'    => '1.302045',
              'Test::Builder'         => '1.302045',
              'Test::Builder::Formatter'=> '1.302045',
              'Test::Builder::Module' => '1.302045',
              'Test::Builder::Tester' => '1.302045',
              'Test::Builder::Tester::Color'=> '1.302045',
              'Test::Builder::TodoDiag'=> '1.302045',
              'Test::More'            => '1.302045',
              'Test::Simple'          => '1.302045',
              'Test::Tester'          => '1.302045',
              'Test::Tester::Capture' => '1.302045',
              'Test::Tester::CaptureRunner'=> '1.302045',
              'Test::Tester::Delegate'=> '1.302045',
              'Test::use::ok'         => '1.302045',
              'Time::HiRes'           => '1.9739',
              'Unicode'               => '9.0.0',
              'Unicode::UCD'          => '0.66',
              'XSLoader'              => '0.22',
              'bigint'                => '0.43',
              'bignum'                => '0.43',
              'bigrat'                => '0.43',
              'encoding'              => '2.17_01',
              'encoding::warnings'    => '0.13',
              'feature'               => '1.45',
              'ok'                    => '1.302045',
              'version'               => '0.9917',
              'version::regex'        => '0.9917',
              'warnings'              => '1.37',
          },
          removed => {
          }
      },
      5.025004 => {
          delta_from => 5.025003,
          changed => {
              'App::Cpan'             => '1.64_01',
              'App::Prove'            => '3.36_01',
              'App::Prove::State'     => '3.36_01',
              'App::Prove::State::Result'=> '3.36_01',
              'App::Prove::State::Result::Test'=> '3.36_01',
              'Archive::Tar'          => '2.10',
              'Archive::Tar::Constant'=> '2.10',
              'Archive::Tar::File'    => '2.10',
              'B'                     => '1.63',
              'B::Concise'            => '0.998',
              'B::Deparse'            => '1.38',
              'B::Op_private'         => '5.025004',
              'CPAN'                  => '2.14_01',
              'CPAN::Meta'            => '2.150010',
              'CPAN::Meta::Converter' => '2.150010',
              'CPAN::Meta::Feature'   => '2.150010',
              'CPAN::Meta::History'   => '2.150010',
              'CPAN::Meta::Merge'     => '2.150010',
              'CPAN::Meta::Prereqs'   => '2.150010',
              'CPAN::Meta::Spec'      => '2.150010',
              'CPAN::Meta::Validator' => '2.150010',
              'Carp'                  => '1.42',
              'Carp::Heavy'           => '1.42',
              'Compress::Zlib'        => '2.069_01',
              'Config'                => '5.025004',
              'Config::Perl::V'       => '0.27',
              'Cwd'                   => '3.65',
              'Digest'                => '1.17_01',
              'Digest::SHA'           => '5.96',
              'Encode'                => '2.86',
              'Errno'                 => '1.26',
              'ExtUtils::Command'     => '7.24',
              'ExtUtils::Command::MM' => '7.24',
              'ExtUtils::Liblist'     => '7.24',
              'ExtUtils::Liblist::Kid'=> '7.24',
              'ExtUtils::MM'          => '7.24',
              'ExtUtils::MM_AIX'      => '7.24',
              'ExtUtils::MM_Any'      => '7.24',
              'ExtUtils::MM_BeOS'     => '7.24',
              'ExtUtils::MM_Cygwin'   => '7.24',
              'ExtUtils::MM_DOS'      => '7.24',
              'ExtUtils::MM_Darwin'   => '7.24',
              'ExtUtils::MM_MacOS'    => '7.24',
              'ExtUtils::MM_NW5'      => '7.24',
              'ExtUtils::MM_OS2'      => '7.24',
              'ExtUtils::MM_QNX'      => '7.24',
              'ExtUtils::MM_UWIN'     => '7.24',
              'ExtUtils::MM_Unix'     => '7.24',
              'ExtUtils::MM_VMS'      => '7.24',
              'ExtUtils::MM_VOS'      => '7.24',
              'ExtUtils::MM_Win32'    => '7.24',
              'ExtUtils::MM_Win95'    => '7.24',
              'ExtUtils::MY'          => '7.24',
              'ExtUtils::MakeMaker'   => '7.24',
              'ExtUtils::MakeMaker::Config'=> '7.24',
              'ExtUtils::MakeMaker::Locale'=> '7.24',
              'ExtUtils::MakeMaker::version'=> '7.24',
              'ExtUtils::MakeMaker::version::regex'=> '7.24',
              'ExtUtils::Mkbootstrap' => '7.24',
              'ExtUtils::Mksymlists'  => '7.24',
              'ExtUtils::testlib'     => '7.24',
              'File::Fetch'           => '0.52',
              'File::Spec'            => '3.65',
              'File::Spec::AmigaOS'   => '3.65',
              'File::Spec::Cygwin'    => '3.65',
              'File::Spec::Epoc'      => '3.65',
              'File::Spec::Functions' => '3.65',
              'File::Spec::Mac'       => '3.65',
              'File::Spec::OS2'       => '3.65',
              'File::Spec::Unix'      => '3.65',
              'File::Spec::VMS'       => '3.65',
              'File::Spec::Win32'     => '3.65',
              'HTTP::Tiny'            => '0.064',
              'Hash::Util'            => '0.21',
              'I18N::LangTags'        => '0.41',
              'I18N::LangTags::Detect'=> '1.06',
              'IO'                    => '1.37',
              'IO::Compress::Adapter::Bzip2'=> '2.069_01',
              'IO::Compress::Adapter::Deflate'=> '2.069_01',
              'IO::Compress::Adapter::Identity'=> '2.069_01',
              'IO::Compress::Base'    => '2.069_01',
              'IO::Compress::Base::Common'=> '2.069_01',
              'IO::Compress::Bzip2'   => '2.069_01',
              'IO::Compress::Deflate' => '2.069_01',
              'IO::Compress::Gzip'    => '2.069_01',
              'IO::Compress::Gzip::Constants'=> '2.069_01',
              'IO::Compress::RawDeflate'=> '2.069_01',
              'IO::Compress::Zip'     => '2.069_01',
              'IO::Compress::Zip::Constants'=> '2.069_01',
              'IO::Compress::Zlib::Constants'=> '2.069_01',
              'IO::Compress::Zlib::Extra'=> '2.069_01',
              'IO::Socket::IP'        => '0.38',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.069_01',
              'IO::Uncompress::Adapter::Identity'=> '2.069_01',
              'IO::Uncompress::Adapter::Inflate'=> '2.069_01',
              'IO::Uncompress::AnyInflate'=> '2.069_01',
              'IO::Uncompress::AnyUncompress'=> '2.069_01',
              'IO::Uncompress::Base'  => '2.069_01',
              'IO::Uncompress::Bunzip2'=> '2.069_01',
              'IO::Uncompress::Gunzip'=> '2.069_01',
              'IO::Uncompress::Inflate'=> '2.069_01',
              'IO::Uncompress::RawInflate'=> '2.069_01',
              'IO::Uncompress::Unzip' => '2.069_01',
              'IPC::Cmd'              => '0.96',
              'JSON::PP'              => '2.27400_01',
              'Locale::Maketext'      => '1.28',
              'Locale::Maketext::Simple'=> '0.21_01',
              'Math::BigFloat::Trace' => '0.43_01',
              'Math::BigInt::Trace'   => '0.43_01',
              'Memoize'               => '1.03_01',
              'Module::CoreList'      => '5.20160820',
              'Module::CoreList::TieHashDelta'=> '5.20160820',
              'Module::CoreList::Utils'=> '5.20160820',
              'Module::Load::Conditional'=> '0.68',
              'Module::Metadata'      => '1.000033',
              'NEXT'                  => '0.67',
              'Net::Cmd'              => '3.10',
              'Net::Config'           => '3.10',
              'Net::Domain'           => '3.10',
              'Net::FTP'              => '3.10',
              'Net::FTP::A'           => '3.10',
              'Net::FTP::E'           => '3.10',
              'Net::FTP::I'           => '3.10',
              'Net::FTP::L'           => '3.10',
              'Net::FTP::dataconn'    => '3.10',
              'Net::NNTP'             => '3.10',
              'Net::Netrc'            => '3.10',
              'Net::POP3'             => '3.10',
              'Net::Ping'             => '2.44',
              'Net::SMTP'             => '3.10',
              'Net::Time'             => '3.10',
              'Opcode'                => '1.37',
              'POSIX'                 => '1.71',
              'Parse::CPAN::Meta'     => '2.150010',
              'Pod::Html'             => '1.2201',
              'Pod::Perldoc'          => '3.27',
              'Pod::Perldoc::BaseTo'  => '3.27',
              'Pod::Perldoc::GetOptsOO'=> '3.27',
              'Pod::Perldoc::ToANSI'  => '3.27',
              'Pod::Perldoc::ToChecker'=> '3.27',
              'Pod::Perldoc::ToMan'   => '3.27',
              'Pod::Perldoc::ToNroff' => '3.27',
              'Pod::Perldoc::ToPod'   => '3.27',
              'Pod::Perldoc::ToRtf'   => '3.27',
              'Pod::Perldoc::ToTerm'  => '3.27',
              'Pod::Perldoc::ToText'  => '3.27',
              'Pod::Perldoc::ToTk'    => '3.27',
              'Pod::Perldoc::ToXml'   => '3.27',
              'Storable'              => '2.57',
              'Sys::Syslog'           => '0.34_01',
              'TAP::Base'             => '3.36_01',
              'TAP::Formatter::Base'  => '3.36_01',
              'TAP::Formatter::Color' => '3.36_01',
              'TAP::Formatter::Console'=> '3.36_01',
              'TAP::Formatter::Console::ParallelSession'=> '3.36_01',
              'TAP::Formatter::Console::Session'=> '3.36_01',
              'TAP::Formatter::File'  => '3.36_01',
              'TAP::Formatter::File::Session'=> '3.36_01',
              'TAP::Formatter::Session'=> '3.36_01',
              'TAP::Harness'          => '3.36_01',
              'TAP::Harness::Env'     => '3.36_01',
              'TAP::Object'           => '3.36_01',
              'TAP::Parser'           => '3.36_01',
              'TAP::Parser::Aggregator'=> '3.36_01',
              'TAP::Parser::Grammar'  => '3.36_01',
              'TAP::Parser::Iterator' => '3.36_01',
              'TAP::Parser::Iterator::Array'=> '3.36_01',
              'TAP::Parser::Iterator::Process'=> '3.36_01',
              'TAP::Parser::Iterator::Stream'=> '3.36_01',
              'TAP::Parser::IteratorFactory'=> '3.36_01',
              'TAP::Parser::Multiplexer'=> '3.36_01',
              'TAP::Parser::Result'   => '3.36_01',
              'TAP::Parser::Result::Bailout'=> '3.36_01',
              'TAP::Parser::Result::Comment'=> '3.36_01',
              'TAP::Parser::Result::Plan'=> '3.36_01',
              'TAP::Parser::Result::Pragma'=> '3.36_01',
              'TAP::Parser::Result::Test'=> '3.36_01',
              'TAP::Parser::Result::Unknown'=> '3.36_01',
              'TAP::Parser::Result::Version'=> '3.36_01',
              'TAP::Parser::Result::YAML'=> '3.36_01',
              'TAP::Parser::ResultFactory'=> '3.36_01',
              'TAP::Parser::Scheduler'=> '3.36_01',
              'TAP::Parser::Scheduler::Job'=> '3.36_01',
              'TAP::Parser::Scheduler::Spinner'=> '3.36_01',
              'TAP::Parser::Source'   => '3.36_01',
              'TAP::Parser::SourceHandler'=> '3.36_01',
              'TAP::Parser::SourceHandler::Executable'=> '3.36_01',
              'TAP::Parser::SourceHandler::File'=> '3.36_01',
              'TAP::Parser::SourceHandler::Handle'=> '3.36_01',
              'TAP::Parser::SourceHandler::Perl'=> '3.36_01',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.36_01',
              'TAP::Parser::YAMLish::Reader'=> '3.36_01',
              'TAP::Parser::YAMLish::Writer'=> '3.36_01',
              'Test'                  => '1.29',
              'Test2'                 => '1.302052',
              'Test2::API'            => '1.302052',
              'Test2::API::Breakage'  => '1.302052',
              'Test2::API::Context'   => '1.302052',
              'Test2::API::Instance'  => '1.302052',
              'Test2::API::Stack'     => '1.302052',
              'Test2::Event'          => '1.302052',
              'Test2::Event::Bail'    => '1.302052',
              'Test2::Event::Diag'    => '1.302052',
              'Test2::Event::Exception'=> '1.302052',
              'Test2::Event::Generic' => '1.302052',
              'Test2::Event::Info'    => '1.302052',
              'Test2::Event::Note'    => '1.302052',
              'Test2::Event::Ok'      => '1.302052',
              'Test2::Event::Plan'    => '1.302052',
              'Test2::Event::Skip'    => '1.302052',
              'Test2::Event::Subtest' => '1.302052',
              'Test2::Event::Waiting' => '1.302052',
              'Test2::Formatter'      => '1.302052',
              'Test2::Formatter::TAP' => '1.302052',
              'Test2::Hub'            => '1.302052',
              'Test2::Hub::Interceptor'=> '1.302052',
              'Test2::Hub::Interceptor::Terminator'=> '1.302052',
              'Test2::Hub::Subtest'   => '1.302052',
              'Test2::IPC'            => '1.302052',
              'Test2::IPC::Driver'    => '1.302052',
              'Test2::IPC::Driver::Files'=> '1.302052',
              'Test2::Util'           => '1.302052',
              'Test2::Util::ExternalMeta'=> '1.302052',
              'Test2::Util::HashBase' => '1.302052',
              'Test2::Util::Trace'    => '1.302052',
              'Test::Builder'         => '1.302052',
              'Test::Builder::Formatter'=> '1.302052',
              'Test::Builder::Module' => '1.302052',
              'Test::Builder::Tester' => '1.302052',
              'Test::Builder::Tester::Color'=> '1.302052',
              'Test::Builder::TodoDiag'=> '1.302052',
              'Test::Harness'         => '3.36_01',
              'Test::More'            => '1.302052',
              'Test::Simple'          => '1.302052',
              'Test::Tester'          => '1.302052',
              'Test::Tester::Capture' => '1.302052',
              'Test::Tester::CaptureRunner'=> '1.302052',
              'Test::Tester::Delegate'=> '1.302052',
              'Test::use::ok'         => '1.302052',
              'Tie::Hash::NamedCapture'=> '0.10',
              'Time::Local'           => '1.24',
              'XS::APItest'           => '0.83',
              'arybase'               => '0.12',
              'base'                  => '2.24',
              'bigint'                => '0.43_01',
              'bignum'                => '0.43_01',
              'bigrat'                => '0.43_01',
              'encoding'              => '2.18',
              'ok'                    => '1.302052',
          },
          removed => {
          }
      },
      5.025005 => {
          delta_from => 5.025004,
          changed => {
              'B::Op_private'         => '5.025005',
              'Config'                => '5.025005',
              'Filter::Simple'        => '0.93',
              'Locale::Codes'         => '3.40',
              'Locale::Codes::Constants'=> '3.40',
              'Locale::Codes::Country'=> '3.40',
              'Locale::Codes::Country_Codes'=> '3.40',
              'Locale::Codes::Country_Retired'=> '3.40',
              'Locale::Codes::Currency'=> '3.40',
              'Locale::Codes::Currency_Codes'=> '3.40',
              'Locale::Codes::Currency_Retired'=> '3.40',
              'Locale::Codes::LangExt'=> '3.40',
              'Locale::Codes::LangExt_Codes'=> '3.40',
              'Locale::Codes::LangExt_Retired'=> '3.40',
              'Locale::Codes::LangFam'=> '3.40',
              'Locale::Codes::LangFam_Codes'=> '3.40',
              'Locale::Codes::LangFam_Retired'=> '3.40',
              'Locale::Codes::LangVar'=> '3.40',
              'Locale::Codes::LangVar_Codes'=> '3.40',
              'Locale::Codes::LangVar_Retired'=> '3.40',
              'Locale::Codes::Language'=> '3.40',
              'Locale::Codes::Language_Codes'=> '3.40',
              'Locale::Codes::Language_Retired'=> '3.40',
              'Locale::Codes::Script' => '3.40',
              'Locale::Codes::Script_Codes'=> '3.40',
              'Locale::Codes::Script_Retired'=> '3.40',
              'Locale::Country'       => '3.40',
              'Locale::Currency'      => '3.40',
              'Locale::Language'      => '3.40',
              'Locale::Script'        => '3.40',
              'Module::CoreList'      => '5.20160920',
              'Module::CoreList::TieHashDelta'=> '5.20160920',
              'Module::CoreList::Utils'=> '5.20160920',
              'POSIX'                 => '1.72',
              'Sys::Syslog'           => '0.35',
              'Test2'                 => '1.302056',
              'Test2::API'            => '1.302056',
              'Test2::API::Breakage'  => '1.302056',
              'Test2::API::Context'   => '1.302056',
              'Test2::API::Instance'  => '1.302056',
              'Test2::API::Stack'     => '1.302056',
              'Test2::Event'          => '1.302056',
              'Test2::Event::Bail'    => '1.302056',
              'Test2::Event::Diag'    => '1.302056',
              'Test2::Event::Exception'=> '1.302056',
              'Test2::Event::Generic' => '1.302056',
              'Test2::Event::Info'    => '1.302056',
              'Test2::Event::Note'    => '1.302056',
              'Test2::Event::Ok'      => '1.302056',
              'Test2::Event::Plan'    => '1.302056',
              'Test2::Event::Skip'    => '1.302056',
              'Test2::Event::Subtest' => '1.302056',
              'Test2::Event::Waiting' => '1.302056',
              'Test2::Formatter'      => '1.302056',
              'Test2::Formatter::TAP' => '1.302056',
              'Test2::Hub'            => '1.302056',
              'Test2::Hub::Interceptor'=> '1.302056',
              'Test2::Hub::Interceptor::Terminator'=> '1.302056',
              'Test2::Hub::Subtest'   => '1.302056',
              'Test2::IPC'            => '1.302056',
              'Test2::IPC::Driver'    => '1.302056',
              'Test2::IPC::Driver::Files'=> '1.302056',
              'Test2::Util'           => '1.302056',
              'Test2::Util::ExternalMeta'=> '1.302056',
              'Test2::Util::HashBase' => '1.302056',
              'Test2::Util::Trace'    => '1.302056',
              'Test::Builder'         => '1.302056',
              'Test::Builder::Formatter'=> '1.302056',
              'Test::Builder::Module' => '1.302056',
              'Test::Builder::Tester' => '1.302056',
              'Test::Builder::Tester::Color'=> '1.302056',
              'Test::Builder::TodoDiag'=> '1.302056',
              'Test::More'            => '1.302056',
              'Test::Simple'          => '1.302056',
              'Test::Tester'          => '1.302056',
              'Test::Tester::Capture' => '1.302056',
              'Test::Tester::CaptureRunner'=> '1.302056',
              'Test::Tester::Delegate'=> '1.302056',
              'Test::use::ok'         => '1.302056',
              'Thread::Semaphore'     => '2.13',
              'XS::APItest'           => '0.84',
              'XSLoader'              => '0.24',
              'ok'                    => '1.302056',
          },
          removed => {
          }
      },
      5.025006 => {
          delta_from => 5.025005,
          changed => {
              'Archive::Tar'          => '2.14',
              'Archive::Tar::Constant'=> '2.14',
              'Archive::Tar::File'    => '2.14',
              'B'                     => '1.64',
              'B::Concise'            => '0.999',
              'B::Deparse'            => '1.39',
              'B::Op_private'         => '5.025006',
              'Config'                => '5.025006',
              'Data::Dumper'          => '2.162',
              'Devel::Peek'           => '1.25',
              'HTTP::Tiny'            => '0.070',
              'List::Util'            => '1.46',
              'List::Util::XS'        => '1.46',
              'Module::CoreList'      => '5.20161020',
              'Module::CoreList::TieHashDelta'=> '5.20161020',
              'Module::CoreList::Utils'=> '5.20161020',
              'Net::Ping'             => '2.51',
              'OS2::DLL'              => '1.07',
              'Opcode'                => '1.38',
              'POSIX'                 => '1.73',
              'PerlIO::encoding'      => '0.25',
              'Pod::Man'              => '4.08',
              'Pod::ParseLink'        => '4.08',
              'Pod::Text'             => '4.08',
              'Pod::Text::Color'      => '4.08',
              'Pod::Text::Overstrike' => '4.08',
              'Pod::Text::Termcap'    => '4.08',
              'Scalar::Util'          => '1.46',
              'Storable'              => '2.58',
              'Sub::Util'             => '1.46',
              'Test2'                 => '1.302059',
              'Test2::API'            => '1.302059',
              'Test2::API::Breakage'  => '1.302059',
              'Test2::API::Context'   => '1.302059',
              'Test2::API::Instance'  => '1.302059',
              'Test2::API::Stack'     => '1.302059',
              'Test2::Event'          => '1.302059',
              'Test2::Event::Bail'    => '1.302059',
              'Test2::Event::Diag'    => '1.302059',
              'Test2::Event::Exception'=> '1.302059',
              'Test2::Event::Generic' => '1.302059',
              'Test2::Event::Info'    => '1.302059',
              'Test2::Event::Note'    => '1.302059',
              'Test2::Event::Ok'      => '1.302059',
              'Test2::Event::Plan'    => '1.302059',
              'Test2::Event::Skip'    => '1.302059',
              'Test2::Event::Subtest' => '1.302059',
              'Test2::Event::Waiting' => '1.302059',
              'Test2::Formatter'      => '1.302059',
              'Test2::Formatter::TAP' => '1.302059',
              'Test2::Hub'            => '1.302059',
              'Test2::Hub::Interceptor'=> '1.302059',
              'Test2::Hub::Interceptor::Terminator'=> '1.302059',
              'Test2::Hub::Subtest'   => '1.302059',
              'Test2::IPC'            => '1.302059',
              'Test2::IPC::Driver'    => '1.302059',
              'Test2::IPC::Driver::Files'=> '1.302059',
              'Test2::Util'           => '1.302059',
              'Test2::Util::ExternalMeta'=> '1.302059',
              'Test2::Util::HashBase' => '1.302059',
              'Test2::Util::Trace'    => '1.302059',
              'Test::Builder'         => '1.302059',
              'Test::Builder::Formatter'=> '1.302059',
              'Test::Builder::Module' => '1.302059',
              'Test::Builder::Tester' => '1.302059',
              'Test::Builder::Tester::Color'=> '1.302059',
              'Test::Builder::TodoDiag'=> '1.302059',
              'Test::More'            => '1.302059',
              'Test::Simple'          => '1.302059',
              'Test::Tester'          => '1.302059',
              'Test::Tester::Capture' => '1.302059',
              'Test::Tester::CaptureRunner'=> '1.302059',
              'Test::Tester::Delegate'=> '1.302059',
              'Test::use::ok'         => '1.302059',
              'Time::HiRes'           => '1.9740_01',
              'VMS::Stdio'            => '2.42',
              'XS::APItest'           => '0.86',
              'attributes'            => '0.28',
              'mro'                   => '1.19',
              'ok'                    => '1.302059',
              'overload'              => '1.27',
              'parent'                => '0.236',
          },
          removed => {
          }
      },
      5.025007 => {
          delta_from => 5.025006,
          changed => {
              'Archive::Tar'          => '2.18',
              'Archive::Tar::Constant'=> '2.18',
              'Archive::Tar::File'    => '2.18',
              'B'                     => '1.65',
              'B::Op_private'         => '5.025007',
              'Config'                => '5.025007',
              'Cwd'                   => '3.66',
              'Data::Dumper'          => '2.165',
              'Devel::Peek'           => '1.26',
              'DynaLoader'            => '1.40',
              'Errno'                 => '1.27',
              'ExtUtils::ParseXS::Utilities'=> '3.34',
              'File::Spec'            => '3.66',
              'File::Spec::AmigaOS'   => '3.66',
              'File::Spec::Cygwin'    => '3.66',
              'File::Spec::Epoc'      => '3.66',
              'File::Spec::Functions' => '3.66',
              'File::Spec::Mac'       => '3.66',
              'File::Spec::OS2'       => '3.66',
              'File::Spec::Unix'      => '3.66',
              'File::Spec::VMS'       => '3.66',
              'File::Spec::Win32'     => '3.66',
              'Hash::Util'            => '0.22',
              'JSON::PP'              => '2.27400_02',
              'List::Util'            => '1.46_02',
              'List::Util::XS'        => '1.46_02',
              'Math::BigFloat'        => '1.999727',
              'Math::BigInt'          => '1.999727',
              'Math::BigInt::Calc'    => '1.999727',
              'Math::BigInt::CalcEmu' => '1.999727',
              'Math::Complex'         => '1.5901',
              'Module::CoreList'      => '5.20161120',
              'Module::CoreList::TieHashDelta'=> '5.20161120',
              'Module::CoreList::Utils'=> '5.20161120',
              'Net::Ping'             => '2.55',
              'Opcode'                => '1.39',
              'POSIX'                 => '1.75',
              'Pod::Man'              => '4.09',
              'Pod::ParseLink'        => '4.09',
              'Pod::Text'             => '4.09',
              'Pod::Text::Color'      => '4.09',
              'Pod::Text::Overstrike' => '4.09',
              'Pod::Text::Termcap'    => '4.09',
              'Scalar::Util'          => '1.46_02',
              'Storable'              => '2.59',
              'Sub::Util'             => '1.46_02',
              'Term::ANSIColor'       => '4.06',
              'Test2'                 => '1.302062',
              'Test2::API'            => '1.302062',
              'Test2::API::Breakage'  => '1.302062',
              'Test2::API::Context'   => '1.302062',
              'Test2::API::Instance'  => '1.302062',
              'Test2::API::Stack'     => '1.302062',
              'Test2::Event'          => '1.302062',
              'Test2::Event::Bail'    => '1.302062',
              'Test2::Event::Diag'    => '1.302062',
              'Test2::Event::Exception'=> '1.302062',
              'Test2::Event::Generic' => '1.302062',
              'Test2::Event::Info'    => '1.302062',
              'Test2::Event::Note'    => '1.302062',
              'Test2::Event::Ok'      => '1.302062',
              'Test2::Event::Plan'    => '1.302062',
              'Test2::Event::Skip'    => '1.302062',
              'Test2::Event::Subtest' => '1.302062',
              'Test2::Event::Waiting' => '1.302062',
              'Test2::Formatter'      => '1.302062',
              'Test2::Formatter::TAP' => '1.302062',
              'Test2::Hub'            => '1.302062',
              'Test2::Hub::Interceptor'=> '1.302062',
              'Test2::Hub::Interceptor::Terminator'=> '1.302062',
              'Test2::Hub::Subtest'   => '1.302062',
              'Test2::IPC'            => '1.302062',
              'Test2::IPC::Driver'    => '1.302062',
              'Test2::IPC::Driver::Files'=> '1.302062',
              'Test2::Util'           => '1.302062',
              'Test2::Util::ExternalMeta'=> '1.302062',
              'Test2::Util::HashBase' => '1.302062',
              'Test2::Util::Trace'    => '1.302062',
              'Test::Builder'         => '1.302062',
              'Test::Builder::Formatter'=> '1.302062',
              'Test::Builder::Module' => '1.302062',
              'Test::Builder::Tester' => '1.302062',
              'Test::Builder::Tester::Color'=> '1.302062',
              'Test::Builder::TodoDiag'=> '1.302062',
              'Test::More'            => '1.302062',
              'Test::Simple'          => '1.302062',
              'Test::Tester'          => '1.302062',
              'Test::Tester::Capture' => '1.302062',
              'Test::Tester::CaptureRunner'=> '1.302062',
              'Test::Tester::Delegate'=> '1.302062',
              'Test::use::ok'         => '1.302062',
              'Time::HiRes'           => '1.9740_03',
              'Unicode::Collate'      => '1.18',
              'Unicode::Collate::CJK::Big5'=> '1.18',
              'Unicode::Collate::CJK::GB2312'=> '1.18',
              'Unicode::Collate::CJK::JISX0208'=> '1.18',
              'Unicode::Collate::CJK::Korean'=> '1.18',
              'Unicode::Collate::CJK::Pinyin'=> '1.18',
              'Unicode::Collate::CJK::Stroke'=> '1.18',
              'Unicode::Collate::CJK::Zhuyin'=> '1.18',
              'Unicode::Collate::Locale'=> '1.18',
              'Unicode::UCD'          => '0.67',
              'XS::APItest'           => '0.87',
              'XS::Typemap'           => '0.15',
              'mro'                   => '1.20',
              'ok'                    => '1.302062',
              'threads'               => '2.10',
          },
          removed => {
          }
      },
      5.025008 => {
          delta_from => 5.025007,
          changed => {
              'Archive::Tar'          => '2.24',
              'Archive::Tar::Constant'=> '2.24',
              'Archive::Tar::File'    => '2.24',
              'B::Debug'              => '1.24',
              'B::Op_private'         => '5.025008',
              'Config'                => '5.025008',
              'Data::Dumper'          => '2.166',
              'Encode'                => '2.88',
              'Encode::Alias'         => '2.21',
              'Encode::CN::HZ'        => '2.08',
              'Encode::MIME::Header'  => '2.24',
              'Encode::MIME::Name'    => '1.02',
              'Encode::Unicode'       => '2.1501',
              'IO'                    => '1.38',
              'Locale::Codes'         => '3.42',
              'Locale::Codes::Constants'=> '3.42',
              'Locale::Codes::Country'=> '3.42',
              'Locale::Codes::Country_Codes'=> '3.42',
              'Locale::Codes::Country_Retired'=> '3.42',
              'Locale::Codes::Currency'=> '3.42',
              'Locale::Codes::Currency_Codes'=> '3.42',
              'Locale::Codes::Currency_Retired'=> '3.42',
              'Locale::Codes::LangExt'=> '3.42',
              'Locale::Codes::LangExt_Codes'=> '3.42',
              'Locale::Codes::LangExt_Retired'=> '3.42',
              'Locale::Codes::LangFam'=> '3.42',
              'Locale::Codes::LangFam_Codes'=> '3.42',
              'Locale::Codes::LangFam_Retired'=> '3.42',
              'Locale::Codes::LangVar'=> '3.42',
              'Locale::Codes::LangVar_Codes'=> '3.42',
              'Locale::Codes::LangVar_Retired'=> '3.42',
              'Locale::Codes::Language'=> '3.42',
              'Locale::Codes::Language_Codes'=> '3.42',
              'Locale::Codes::Language_Retired'=> '3.42',
              'Locale::Codes::Script' => '3.42',
              'Locale::Codes::Script_Codes'=> '3.42',
              'Locale::Codes::Script_Retired'=> '3.42',
              'Locale::Country'       => '3.42',
              'Locale::Currency'      => '3.42',
              'Locale::Language'      => '3.42',
              'Locale::Script'        => '3.42',
              'Math::BigFloat'        => '1.999806',
              'Math::BigFloat::Trace' => '0.47',
              'Math::BigInt'          => '1.999806',
              'Math::BigInt::Calc'    => '1.999806',
              'Math::BigInt::CalcEmu' => '1.999806',
              'Math::BigInt::FastCalc'=> '0.5005',
              'Math::BigInt::Lib'     => '1.999806',
              'Math::BigInt::Trace'   => '0.47',
              'Math::BigRat'          => '0.2611',
              'Module::CoreList'      => '5.20161220',
              'Module::CoreList::TieHashDelta'=> '5.20161220',
              'Module::CoreList::Utils'=> '5.20161220',
              'POSIX'                 => '1.76',
              'PerlIO::scalar'        => '0.25',
              'Pod::Simple'           => '3.35',
              'Pod::Simple::BlackBox' => '3.35',
              'Pod::Simple::Checker'  => '3.35',
              'Pod::Simple::Debug'    => '3.35',
              'Pod::Simple::DumpAsText'=> '3.35',
              'Pod::Simple::DumpAsXML'=> '3.35',
              'Pod::Simple::HTML'     => '3.35',
              'Pod::Simple::HTMLBatch'=> '3.35',
              'Pod::Simple::LinkSection'=> '3.35',
              'Pod::Simple::Methody'  => '3.35',
              'Pod::Simple::Progress' => '3.35',
              'Pod::Simple::PullParser'=> '3.35',
              'Pod::Simple::PullParserEndToken'=> '3.35',
              'Pod::Simple::PullParserStartToken'=> '3.35',
              'Pod::Simple::PullParserTextToken'=> '3.35',
              'Pod::Simple::PullParserToken'=> '3.35',
              'Pod::Simple::RTF'      => '3.35',
              'Pod::Simple::Search'   => '3.35',
              'Pod::Simple::SimpleTree'=> '3.35',
              'Pod::Simple::Text'     => '3.35',
              'Pod::Simple::TextContent'=> '3.35',
              'Pod::Simple::TiedOutFH'=> '3.35',
              'Pod::Simple::Transcode'=> '3.35',
              'Pod::Simple::TranscodeDumb'=> '3.35',
              'Pod::Simple::TranscodeSmart'=> '3.35',
              'Pod::Simple::XHTML'    => '3.35',
              'Pod::Simple::XMLOutStream'=> '3.35',
              'Test2'                 => '1.302073',
              'Test2::API'            => '1.302073',
              'Test2::API::Breakage'  => '1.302073',
              'Test2::API::Context'   => '1.302073',
              'Test2::API::Instance'  => '1.302073',
              'Test2::API::Stack'     => '1.302073',
              'Test2::Event'          => '1.302073',
              'Test2::Event::Bail'    => '1.302073',
              'Test2::Event::Diag'    => '1.302073',
              'Test2::Event::Encoding'=> '1.302073',
              'Test2::Event::Exception'=> '1.302073',
              'Test2::Event::Generic' => '1.302073',
              'Test2::Event::Info'    => '1.302073',
              'Test2::Event::Note'    => '1.302073',
              'Test2::Event::Ok'      => '1.302073',
              'Test2::Event::Plan'    => '1.302073',
              'Test2::Event::Skip'    => '1.302073',
              'Test2::Event::Subtest' => '1.302073',
              'Test2::Event::TAP::Version'=> '1.302073',
              'Test2::Event::Waiting' => '1.302073',
              'Test2::Formatter'      => '1.302073',
              'Test2::Formatter::TAP' => '1.302073',
              'Test2::Hub'            => '1.302073',
              'Test2::Hub::Interceptor'=> '1.302073',
              'Test2::Hub::Interceptor::Terminator'=> '1.302073',
              'Test2::Hub::Subtest'   => '1.302073',
              'Test2::IPC'            => '1.302073',
              'Test2::IPC::Driver'    => '1.302073',
              'Test2::IPC::Driver::Files'=> '1.302073',
              'Test2::Tools::Tiny'    => '1.302073',
              'Test2::Util'           => '1.302073',
              'Test2::Util::ExternalMeta'=> '1.302073',
              'Test2::Util::HashBase' => '0.002',
              'Test2::Util::Trace'    => '1.302073',
              'Test::Builder'         => '1.302073',
              'Test::Builder::Formatter'=> '1.302073',
              'Test::Builder::Module' => '1.302073',
              'Test::Builder::Tester' => '1.302073',
              'Test::Builder::Tester::Color'=> '1.302073',
              'Test::Builder::TodoDiag'=> '1.302073',
              'Test::More'            => '1.302073',
              'Test::Simple'          => '1.302073',
              'Test::Tester'          => '1.302073',
              'Test::Tester::Capture' => '1.302073',
              'Test::Tester::CaptureRunner'=> '1.302073',
              'Test::Tester::Delegate'=> '1.302073',
              'Test::use::ok'         => '1.302073',
              'Time::HiRes'           => '1.9741',
              'Time::Local'           => '1.25',
              'Unicode::Collate'      => '1.19',
              'Unicode::Collate::CJK::Big5'=> '1.19',
              'Unicode::Collate::CJK::GB2312'=> '1.19',
              'Unicode::Collate::CJK::JISX0208'=> '1.19',
              'Unicode::Collate::CJK::Korean'=> '1.19',
              'Unicode::Collate::CJK::Pinyin'=> '1.19',
              'Unicode::Collate::CJK::Stroke'=> '1.19',
              'Unicode::Collate::CJK::Zhuyin'=> '1.19',
              'Unicode::Collate::Locale'=> '1.19',
              'bigint'                => '0.47',
              'bignum'                => '0.47',
              'bigrat'                => '0.47',
              'encoding'              => '2.19',
              'ok'                    => '1.302073',
          },
          removed => {
          }
      },
      5.022003 => {
          delta_from => 5.022002,
          changed => {
              'App::Cpan'             => '1.63_01',
              'App::Prove'            => '3.35_01',
              'App::Prove::State'     => '3.35_01',
              'App::Prove::State::Result'=> '3.35_01',
              'App::Prove::State::Result::Test'=> '3.35_01',
              'Archive::Tar'          => '2.04_01',
              'Archive::Tar::Constant'=> '2.04_01',
              'Archive::Tar::File'    => '2.04_01',
              'B::Op_private'         => '5.022003',
              'CPAN'                  => '2.11_01',
              'Compress::Zlib'        => '2.068_001',
              'Config'                => '5.022003',
              'Cwd'                   => '3.56_02',
              'Digest'                => '1.17_01',
              'Digest::SHA'           => '5.95_01',
              'Encode'                => '2.72_01',
              'ExtUtils::Command'     => '1.20_01',
              'ExtUtils::Command::MM' => '7.04_02',
              'ExtUtils::Liblist'     => '7.04_02',
              'ExtUtils::Liblist::Kid'=> '7.04_02',
              'ExtUtils::MM'          => '7.04_02',
              'ExtUtils::MM_AIX'      => '7.04_02',
              'ExtUtils::MM_Any'      => '7.04_02',
              'ExtUtils::MM_BeOS'     => '7.04_02',
              'ExtUtils::MM_Cygwin'   => '7.04_02',
              'ExtUtils::MM_DOS'      => '7.04_02',
              'ExtUtils::MM_Darwin'   => '7.04_02',
              'ExtUtils::MM_MacOS'    => '7.04_02',
              'ExtUtils::MM_NW5'      => '7.04_02',
              'ExtUtils::MM_OS2'      => '7.04_02',
              'ExtUtils::MM_QNX'      => '7.04_02',
              'ExtUtils::MM_UWIN'     => '7.04_02',
              'ExtUtils::MM_Unix'     => '7.04_02',
              'ExtUtils::MM_VMS'      => '7.04_02',
              'ExtUtils::MM_VOS'      => '7.04_02',
              'ExtUtils::MM_Win32'    => '7.04_02',
              'ExtUtils::MM_Win95'    => '7.04_02',
              'ExtUtils::MY'          => '7.04_02',
              'ExtUtils::MakeMaker'   => '7.04_02',
              'ExtUtils::MakeMaker::Config'=> '7.04_02',
              'ExtUtils::Mkbootstrap' => '7.04_02',
              'ExtUtils::Mksymlists'  => '7.04_02',
              'ExtUtils::testlib'     => '7.04_02',
              'File::Fetch'           => '0.48_01',
              'File::Spec'            => '3.56_02',
              'File::Spec::Cygwin'    => '3.56_02',
              'File::Spec::Epoc'      => '3.56_02',
              'File::Spec::Functions' => '3.56_02',
              'File::Spec::Mac'       => '3.56_02',
              'File::Spec::OS2'       => '3.56_02',
              'File::Spec::Unix'      => '3.56_02',
              'File::Spec::VMS'       => '3.56_02',
              'File::Spec::Win32'     => '3.56_02',
              'HTTP::Tiny'            => '0.054_01',
              'I18N::LangTags::Detect'=> '1.05_01',
              'IO'                    => '1.35_01',
              'IO::Compress::Adapter::Bzip2'=> '2.068_001',
              'IO::Compress::Adapter::Deflate'=> '2.068_001',
              'IO::Compress::Adapter::Identity'=> '2.068_001',
              'IO::Compress::Base'    => '2.068_001',
              'IO::Compress::Base::Common'=> '2.068_001',
              'IO::Compress::Bzip2'   => '2.068_001',
              'IO::Compress::Deflate' => '2.068_001',
              'IO::Compress::Gzip'    => '2.068_001',
              'IO::Compress::Gzip::Constants'=> '2.068_001',
              'IO::Compress::RawDeflate'=> '2.068_001',
              'IO::Compress::Zip'     => '2.068_001',
              'IO::Compress::Zip::Constants'=> '2.068_001',
              'IO::Compress::Zlib::Constants'=> '2.068_001',
              'IO::Compress::Zlib::Extra'=> '2.068_001',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.068_001',
              'IO::Uncompress::Adapter::Identity'=> '2.068_001',
              'IO::Uncompress::Adapter::Inflate'=> '2.068_001',
              'IO::Uncompress::AnyInflate'=> '2.068_001',
              'IO::Uncompress::AnyUncompress'=> '2.068_001',
              'IO::Uncompress::Base'  => '2.068_001',
              'IO::Uncompress::Bunzip2'=> '2.068_001',
              'IO::Uncompress::Gunzip'=> '2.068_001',
              'IO::Uncompress::Inflate'=> '2.068_001',
              'IO::Uncompress::RawInflate'=> '2.068_001',
              'IO::Uncompress::Unzip' => '2.068_001',
              'IPC::Cmd'              => '0.92_01',
              'JSON::PP'              => '2.27300_01',
              'Locale::Maketext'      => '1.26_01',
              'Locale::Maketext::Simple'=> '0.21_01',
              'Memoize'               => '1.03_01',
              'Module::CoreList'      => '5.20170114_22',
              'Module::CoreList::TieHashDelta'=> '5.20170114_22',
              'Module::CoreList::Utils'=> '5.20170114_22',
              'Module::Metadata::corpus::BOMTest::UTF16BE'=> undef,
              'Module::Metadata::corpus::BOMTest::UTF16LE'=> undef,
              'Module::Metadata::corpus::BOMTest::UTF8'=> '1',
              'Net::Cmd'              => '3.05_01',
              'Net::Config'           => '3.05_01',
              'Net::Domain'           => '3.05_01',
              'Net::FTP'              => '3.05_01',
              'Net::FTP::A'           => '3.05_01',
              'Net::FTP::E'           => '3.05_01',
              'Net::FTP::I'           => '3.05_01',
              'Net::FTP::L'           => '3.05_01',
              'Net::FTP::dataconn'    => '3.05_01',
              'Net::NNTP'             => '3.05_01',
              'Net::Netrc'            => '3.05_01',
              'Net::POP3'             => '3.05_01',
              'Net::Ping'             => '2.43_01',
              'Net::SMTP'             => '3.05_01',
              'Net::Time'             => '3.05_01',
              'Parse::CPAN::Meta'     => '1.4414_001',
              'Pod::Html'             => '1.2201',
              'Pod::Perldoc'          => '3.25_01',
              'Storable'              => '2.53_02',
              'Sys::Syslog'           => '0.33_01',
              'TAP::Base'             => '3.35_01',
              'TAP::Formatter::Base'  => '3.35_01',
              'TAP::Formatter::Color' => '3.35_01',
              'TAP::Formatter::Console'=> '3.35_01',
              'TAP::Formatter::Console::ParallelSession'=> '3.35_01',
              'TAP::Formatter::Console::Session'=> '3.35_01',
              'TAP::Formatter::File'  => '3.35_01',
              'TAP::Formatter::File::Session'=> '3.35_01',
              'TAP::Formatter::Session'=> '3.35_01',
              'TAP::Harness'          => '3.35_01',
              'TAP::Harness::Env'     => '3.35_01',
              'TAP::Object'           => '3.35_01',
              'TAP::Parser'           => '3.35_01',
              'TAP::Parser::Aggregator'=> '3.35_01',
              'TAP::Parser::Grammar'  => '3.35_01',
              'TAP::Parser::Iterator' => '3.35_01',
              'TAP::Parser::Iterator::Array'=> '3.35_01',
              'TAP::Parser::Iterator::Process'=> '3.35_01',
              'TAP::Parser::Iterator::Stream'=> '3.35_01',
              'TAP::Parser::IteratorFactory'=> '3.35_01',
              'TAP::Parser::Multiplexer'=> '3.35_01',
              'TAP::Parser::Result'   => '3.35_01',
              'TAP::Parser::Result::Bailout'=> '3.35_01',
              'TAP::Parser::Result::Comment'=> '3.35_01',
              'TAP::Parser::Result::Plan'=> '3.35_01',
              'TAP::Parser::Result::Pragma'=> '3.35_01',
              'TAP::Parser::Result::Test'=> '3.35_01',
              'TAP::Parser::Result::Unknown'=> '3.35_01',
              'TAP::Parser::Result::Version'=> '3.35_01',
              'TAP::Parser::Result::YAML'=> '3.35_01',
              'TAP::Parser::ResultFactory'=> '3.35_01',
              'TAP::Parser::Scheduler'=> '3.35_01',
              'TAP::Parser::Scheduler::Job'=> '3.35_01',
              'TAP::Parser::Scheduler::Spinner'=> '3.35_01',
              'TAP::Parser::Source'   => '3.35_01',
              'TAP::Parser::SourceHandler'=> '3.35_01',
              'TAP::Parser::SourceHandler::Executable'=> '3.35_01',
              'TAP::Parser::SourceHandler::File'=> '3.35_01',
              'TAP::Parser::SourceHandler::Handle'=> '3.35_01',
              'TAP::Parser::SourceHandler::Perl'=> '3.35_01',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.35_01',
              'TAP::Parser::YAMLish::Reader'=> '3.35_01',
              'TAP::Parser::YAMLish::Writer'=> '3.35_01',
              'Test'                  => '1.26_01',
              'Test::Harness'         => '3.35_01',
              'XSLoader'              => '0.20_01',
              'bigint'                => '0.39_01',
              'bignum'                => '0.39_01',
              'bigrat'                => '0.39_01',
          },
          removed => {
          }
      },
      5.024001 => {
          delta_from => 5.024000,
          changed => {
              'App::Cpan'             => '1.63_01',
              'App::Prove'            => '3.36_01',
              'App::Prove::State'     => '3.36_01',
              'App::Prove::State::Result'=> '3.36_01',
              'App::Prove::State::Result::Test'=> '3.36_01',
              'Archive::Tar'          => '2.04_01',
              'Archive::Tar::Constant'=> '2.04_01',
              'Archive::Tar::File'    => '2.04_01',
              'B::Op_private'         => '5.024001',
              'CPAN'                  => '2.11_01',
              'Compress::Zlib'        => '2.069_001',
              'Config'                => '5.024001',
              'Cwd'                   => '3.63_01',
              'Digest'                => '1.17_01',
              'Digest::SHA'           => '5.95_01',
              'Encode'                => '2.80_01',
              'ExtUtils::Command'     => '7.10_02',
              'ExtUtils::Command::MM' => '7.10_02',
              'ExtUtils::Liblist'     => '7.10_02',
              'ExtUtils::Liblist::Kid'=> '7.10_02',
              'ExtUtils::MM'          => '7.10_02',
              'ExtUtils::MM_AIX'      => '7.10_02',
              'ExtUtils::MM_Any'      => '7.10_02',
              'ExtUtils::MM_BeOS'     => '7.10_02',
              'ExtUtils::MM_Cygwin'   => '7.10_02',
              'ExtUtils::MM_DOS'      => '7.10_02',
              'ExtUtils::MM_Darwin'   => '7.10_02',
              'ExtUtils::MM_MacOS'    => '7.10_02',
              'ExtUtils::MM_NW5'      => '7.10_02',
              'ExtUtils::MM_OS2'      => '7.10_02',
              'ExtUtils::MM_QNX'      => '7.10_02',
              'ExtUtils::MM_UWIN'     => '7.10_02',
              'ExtUtils::MM_Unix'     => '7.10_02',
              'ExtUtils::MM_VMS'      => '7.10_02',
              'ExtUtils::MM_VOS'      => '7.10_02',
              'ExtUtils::MM_Win32'    => '7.10_02',
              'ExtUtils::MM_Win95'    => '7.10_02',
              'ExtUtils::MY'          => '7.10_02',
              'ExtUtils::MakeMaker'   => '7.10_02',
              'ExtUtils::MakeMaker::Config'=> '7.10_02',
              'ExtUtils::Mkbootstrap' => '7.10_02',
              'ExtUtils::Mksymlists'  => '7.10_02',
              'ExtUtils::testlib'     => '7.10_02',
              'File::Fetch'           => '0.48_01',
              'File::Spec'            => '3.63_01',
              'File::Spec::Cygwin'    => '3.63_01',
              'File::Spec::Epoc'      => '3.63_01',
              'File::Spec::Functions' => '3.63_01',
              'File::Spec::Mac'       => '3.63_01',
              'File::Spec::OS2'       => '3.63_01',
              'File::Spec::Unix'      => '3.63_01',
              'File::Spec::VMS'       => '3.63_01',
              'File::Spec::Win32'     => '3.63_01',
              'HTTP::Tiny'            => '0.056_001',
              'I18N::LangTags::Detect'=> '1.05_01',
              'IO'                    => '1.36_01',
              'IO::Compress::Adapter::Bzip2'=> '2.069_001',
              'IO::Compress::Adapter::Deflate'=> '2.069_001',
              'IO::Compress::Adapter::Identity'=> '2.069_001',
              'IO::Compress::Base'    => '2.069_001',
              'IO::Compress::Base::Common'=> '2.069_001',
              'IO::Compress::Bzip2'   => '2.069_001',
              'IO::Compress::Deflate' => '2.069_001',
              'IO::Compress::Gzip'    => '2.069_001',
              'IO::Compress::Gzip::Constants'=> '2.069_001',
              'IO::Compress::RawDeflate'=> '2.069_001',
              'IO::Compress::Zip'     => '2.069_001',
              'IO::Compress::Zip::Constants'=> '2.069_001',
              'IO::Compress::Zlib::Constants'=> '2.069_001',
              'IO::Compress::Zlib::Extra'=> '2.069_001',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.069_001',
              'IO::Uncompress::Adapter::Identity'=> '2.069_001',
              'IO::Uncompress::Adapter::Inflate'=> '2.069_001',
              'IO::Uncompress::AnyInflate'=> '2.069_001',
              'IO::Uncompress::AnyUncompress'=> '2.069_001',
              'IO::Uncompress::Base'  => '2.069_001',
              'IO::Uncompress::Bunzip2'=> '2.069_001',
              'IO::Uncompress::Gunzip'=> '2.069_001',
              'IO::Uncompress::Inflate'=> '2.069_001',
              'IO::Uncompress::RawInflate'=> '2.069_001',
              'IO::Uncompress::Unzip' => '2.069_001',
              'IPC::Cmd'              => '0.92_01',
              'JSON::PP'              => '2.27300_01',
              'Locale::Maketext'      => '1.26_01',
              'Locale::Maketext::Simple'=> '0.21_01',
              'Math::BigFloat::Trace' => '0.42_01',
              'Math::BigInt::Trace'   => '0.42_01',
              'Memoize'               => '1.03_01',
              'Module::CoreList'      => '5.20170114_24',
              'Module::CoreList::TieHashDelta'=> '5.20170114_24',
              'Module::CoreList::Utils'=> '5.20170114_24',
              'Module::Metadata::corpus::BOMTest::UTF16BE'=> undef,
              'Module::Metadata::corpus::BOMTest::UTF16LE'=> undef,
              'Module::Metadata::corpus::BOMTest::UTF8'=> '1',
              'Net::Cmd'              => '3.08_01',
              'Net::Config'           => '3.08_01',
              'Net::Domain'           => '3.08_01',
              'Net::FTP'              => '3.08_01',
              'Net::FTP::A'           => '3.08_01',
              'Net::FTP::E'           => '3.08_01',
              'Net::FTP::I'           => '3.08_01',
              'Net::FTP::L'           => '3.08_01',
              'Net::FTP::dataconn'    => '3.08_01',
              'Net::NNTP'             => '3.08_01',
              'Net::Netrc'            => '3.08_01',
              'Net::POP3'             => '3.08_01',
              'Net::Ping'             => '2.43_01',
              'Net::SMTP'             => '3.08_01',
              'Net::Time'             => '3.08_01',
              'Parse::CPAN::Meta'     => '1.4417_001',
              'Pod::Html'             => '1.2201',
              'Pod::Perldoc'          => '3.25_03',
              'Storable'              => '2.56_01',
              'Sys::Syslog'           => '0.33_01',
              'TAP::Base'             => '3.36_01',
              'TAP::Formatter::Base'  => '3.36_01',
              'TAP::Formatter::Color' => '3.36_01',
              'TAP::Formatter::Console'=> '3.36_01',
              'TAP::Formatter::Console::ParallelSession'=> '3.36_01',
              'TAP::Formatter::Console::Session'=> '3.36_01',
              'TAP::Formatter::File'  => '3.36_01',
              'TAP::Formatter::File::Session'=> '3.36_01',
              'TAP::Formatter::Session'=> '3.36_01',
              'TAP::Harness'          => '3.36_01',
              'TAP::Harness::Env'     => '3.36_01',
              'TAP::Object'           => '3.36_01',
              'TAP::Parser'           => '3.36_01',
              'TAP::Parser::Aggregator'=> '3.36_01',
              'TAP::Parser::Grammar'  => '3.36_01',
              'TAP::Parser::Iterator' => '3.36_01',
              'TAP::Parser::Iterator::Array'=> '3.36_01',
              'TAP::Parser::Iterator::Process'=> '3.36_01',
              'TAP::Parser::Iterator::Stream'=> '3.36_01',
              'TAP::Parser::IteratorFactory'=> '3.36_01',
              'TAP::Parser::Multiplexer'=> '3.36_01',
              'TAP::Parser::Result'   => '3.36_01',
              'TAP::Parser::Result::Bailout'=> '3.36_01',
              'TAP::Parser::Result::Comment'=> '3.36_01',
              'TAP::Parser::Result::Plan'=> '3.36_01',
              'TAP::Parser::Result::Pragma'=> '3.36_01',
              'TAP::Parser::Result::Test'=> '3.36_01',
              'TAP::Parser::Result::Unknown'=> '3.36_01',
              'TAP::Parser::Result::Version'=> '3.36_01',
              'TAP::Parser::Result::YAML'=> '3.36_01',
              'TAP::Parser::ResultFactory'=> '3.36_01',
              'TAP::Parser::Scheduler'=> '3.36_01',
              'TAP::Parser::Scheduler::Job'=> '3.36_01',
              'TAP::Parser::Scheduler::Spinner'=> '3.36_01',
              'TAP::Parser::Source'   => '3.36_01',
              'TAP::Parser::SourceHandler'=> '3.36_01',
              'TAP::Parser::SourceHandler::Executable'=> '3.36_01',
              'TAP::Parser::SourceHandler::File'=> '3.36_01',
              'TAP::Parser::SourceHandler::Handle'=> '3.36_01',
              'TAP::Parser::SourceHandler::Perl'=> '3.36_01',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.36_01',
              'TAP::Parser::YAMLish::Reader'=> '3.36_01',
              'TAP::Parser::YAMLish::Writer'=> '3.36_01',
              'Test'                  => '1.28_01',
              'Test::Harness'         => '3.36_01',
              'XSLoader'              => '0.22',
              'bigint'                => '0.42_01',
              'bignum'                => '0.42_01',
              'bigrat'                => '0.42_01',
          },
          removed => {
          }
      },
      5.025009 => {
          delta_from => 5.025008,
          changed => {
              'App::Cpan'             => '1.66',
              'B::Deparse'            => '1.40',
              'B::Op_private'         => '5.025009',
              'B::Terse'              => '1.07',
              'B::Xref'               => '1.06',
              'CPAN'                  => '2.16',
              'CPAN::Bundle'          => '5.5002',
              'CPAN::Distribution'    => '2.16',
              'CPAN::Exception::RecursiveDependency'=> '5.5001',
              'CPAN::FTP'             => '5.5008',
              'CPAN::FirstTime'       => '5.5310',
              'CPAN::HandleConfig'    => '5.5008',
              'CPAN::Module'          => '5.5003',
              'Compress::Raw::Bzip2'  => '2.070',
              'Compress::Raw::Zlib'   => '2.070',
              'Config'                => '5.025009',
              'DB_File'               => '1.840',
              'Data::Dumper'          => '2.167',
              'Devel::SelfStubber'    => '1.06',
              'DynaLoader'            => '1.41',
              'Errno'                 => '1.28',
              'ExtUtils::Embed'       => '1.34',
              'File::Glob'            => '1.28',
              'I18N::LangTags'        => '0.42',
              'Module::CoreList'      => '5.20170120',
              'Module::CoreList::TieHashDelta'=> '5.20170120',
              'Module::CoreList::Utils'=> '5.20170120',
              'OS2::Process'          => '1.12',
              'PerlIO::scalar'        => '0.26',
              'Pod::Html'             => '1.2202',
              'Storable'              => '2.61',
              'Symbol'                => '1.08',
              'Term::ReadLine'        => '1.16',
              'Test'                  => '1.30',
              'Unicode::UCD'          => '0.68',
              'VMS::DCLsym'           => '1.08',
              'XS::APItest'           => '0.88',
              'XSLoader'              => '0.26',
              'attributes'            => '0.29',
              'diagnostics'           => '1.36',
              'feature'               => '1.46',
              'lib'                   => '0.64',
              'overload'              => '1.28',
              're'                    => '0.34',
              'threads'               => '2.12',
              'threads::shared'       => '1.54',
          },
          removed => {
          }
      },
      5.025010 => {
          delta_from => 5.025009,
          changed => {
              'B'                     => '1.68',
              'B::Op_private'         => '5.025010',
              'CPAN'                  => '2.17',
              'CPAN::Distribution'    => '2.17',
              'Config'                => '5.02501',
              'Getopt::Std'           => '1.12',
              'Module::CoreList'      => '5.20170220',
              'Module::CoreList::TieHashDelta'=> '5.20170220',
              'Module::CoreList::Utils'=> '5.20170220',
              'PerlIO'                => '1.10',
              'Storable'              => '2.62',
              'Thread::Queue'         => '3.12',
              'feature'               => '1.47',
              'open'                  => '1.11',
              'threads'               => '2.13',
          },
          removed => {
          }
      },
      5.025011 => {
          delta_from => 5.025010,
          changed => {
              'App::Prove'            => '3.38',
              'App::Prove::State'     => '3.38',
              'App::Prove::State::Result'=> '3.38',
              'App::Prove::State::Result::Test'=> '3.38',
              'B::Op_private'         => '5.025011',
              'Compress::Raw::Bzip2'  => '2.074',
              'Compress::Raw::Zlib'   => '2.074',
              'Compress::Zlib'        => '2.074',
              'Config'                => '5.025011',
              'Config::Perl::V'       => '0.28',
              'Cwd'                   => '3.67',
              'ExtUtils::ParseXS'     => '3.34',
              'ExtUtils::ParseXS::Constants'=> '3.34',
              'ExtUtils::ParseXS::CountLines'=> '3.34',
              'ExtUtils::ParseXS::Eval'=> '3.34',
              'ExtUtils::Typemaps'    => '3.34',
              'ExtUtils::Typemaps::Cmd'=> '3.34',
              'ExtUtils::Typemaps::InputMap'=> '3.34',
              'ExtUtils::Typemaps::OutputMap'=> '3.34',
              'ExtUtils::Typemaps::Type'=> '3.34',
              'File::Spec'            => '3.67',
              'File::Spec::AmigaOS'   => '3.67',
              'File::Spec::Cygwin'    => '3.67',
              'File::Spec::Epoc'      => '3.67',
              'File::Spec::Functions' => '3.67',
              'File::Spec::Mac'       => '3.67',
              'File::Spec::OS2'       => '3.67',
              'File::Spec::Unix'      => '3.67',
              'File::Spec::VMS'       => '3.67',
              'File::Spec::Win32'     => '3.67',
              'IO::Compress::Adapter::Bzip2'=> '2.074',
              'IO::Compress::Adapter::Deflate'=> '2.074',
              'IO::Compress::Adapter::Identity'=> '2.074',
              'IO::Compress::Base'    => '2.074',
              'IO::Compress::Base::Common'=> '2.074',
              'IO::Compress::Bzip2'   => '2.074',
              'IO::Compress::Deflate' => '2.074',
              'IO::Compress::Gzip'    => '2.074',
              'IO::Compress::Gzip::Constants'=> '2.074',
              'IO::Compress::RawDeflate'=> '2.074',
              'IO::Compress::Zip'     => '2.074',
              'IO::Compress::Zip::Constants'=> '2.074',
              'IO::Compress::Zlib::Constants'=> '2.074',
              'IO::Compress::Zlib::Extra'=> '2.074',
              'IO::Uncompress::Adapter::Bunzip2'=> '2.074',
              'IO::Uncompress::Adapter::Identity'=> '2.074',
              'IO::Uncompress::Adapter::Inflate'=> '2.074',
              'IO::Uncompress::AnyInflate'=> '2.074',
              'IO::Uncompress::AnyUncompress'=> '2.074',
              'IO::Uncompress::Base'  => '2.074',
              'IO::Uncompress::Bunzip2'=> '2.074',
              'IO::Uncompress::Gunzip'=> '2.074',
              'IO::Uncompress::Inflate'=> '2.074',
              'IO::Uncompress::RawInflate'=> '2.074',
              'IO::Uncompress::Unzip' => '2.074',
              'Module::CoreList'      => '5.20170320',
              'Module::CoreList::TieHashDelta'=> '5.20170230',
              'Module::CoreList::Utils'=> '5.20170320',
              'Pod::Perldoc'          => '3.28',
              'Pod::Perldoc::BaseTo'  => '3.28',
              'Pod::Perldoc::GetOptsOO'=> '3.28',
              'Pod::Perldoc::ToANSI'  => '3.28',
              'Pod::Perldoc::ToChecker'=> '3.28',
              'Pod::Perldoc::ToMan'   => '3.28',
              'Pod::Perldoc::ToNroff' => '3.28',
              'Pod::Perldoc::ToPod'   => '3.28',
              'Pod::Perldoc::ToRtf'   => '3.28',
              'Pod::Perldoc::ToTerm'  => '3.28',
              'Pod::Perldoc::ToText'  => '3.28',
              'Pod::Perldoc::ToTk'    => '3.28',
              'Pod::Perldoc::ToXml'   => '3.28',
              'TAP::Base'             => '3.38',
              'TAP::Formatter::Base'  => '3.38',
              'TAP::Formatter::Color' => '3.38',
              'TAP::Formatter::Console'=> '3.38',
              'TAP::Formatter::Console::ParallelSession'=> '3.38',
              'TAP::Formatter::Console::Session'=> '3.38',
              'TAP::Formatter::File'  => '3.38',
              'TAP::Formatter::File::Session'=> '3.38',
              'TAP::Formatter::Session'=> '3.38',
              'TAP::Harness'          => '3.38',
              'TAP::Harness::Env'     => '3.38',
              'TAP::Object'           => '3.38',
              'TAP::Parser'           => '3.38',
              'TAP::Parser::Aggregator'=> '3.38',
              'TAP::Parser::Grammar'  => '3.38',
              'TAP::Parser::Iterator' => '3.38',
              'TAP::Parser::Iterator::Array'=> '3.38',
              'TAP::Parser::Iterator::Process'=> '3.38',
              'TAP::Parser::Iterator::Stream'=> '3.38',
              'TAP::Parser::IteratorFactory'=> '3.38',
              'TAP::Parser::Multiplexer'=> '3.38',
              'TAP::Parser::Result'   => '3.38',
              'TAP::Parser::Result::Bailout'=> '3.38',
              'TAP::Parser::Result::Comment'=> '3.38',
              'TAP::Parser::Result::Plan'=> '3.38',
              'TAP::Parser::Result::Pragma'=> '3.38',
              'TAP::Parser::Result::Test'=> '3.38',
              'TAP::Parser::Result::Unknown'=> '3.38',
              'TAP::Parser::Result::Version'=> '3.38',
              'TAP::Parser::Result::YAML'=> '3.38',
              'TAP::Parser::ResultFactory'=> '3.38',
              'TAP::Parser::Scheduler'=> '3.38',
              'TAP::Parser::Scheduler::Job'=> '3.38',
              'TAP::Parser::Scheduler::Spinner'=> '3.38',
              'TAP::Parser::Source'   => '3.38',
              'TAP::Parser::SourceHandler'=> '3.38',
              'TAP::Parser::SourceHandler::Executable'=> '3.38',
              'TAP::Parser::SourceHandler::File'=> '3.38',
              'TAP::Parser::SourceHandler::Handle'=> '3.38',
              'TAP::Parser::SourceHandler::Perl'=> '3.38',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.38',
              'TAP::Parser::YAMLish::Reader'=> '3.38',
              'TAP::Parser::YAMLish::Writer'=> '3.38',
              'Test::Harness'         => '3.38',
              'VMS::Stdio'            => '2.41',
              'threads'               => '2.15',
              'threads::shared'       => '1.55',
          },
          removed => {
          }
      },
      5.025012 => {
          delta_from => 5.025011,
          changed => {
              'B::Op_private'         => '5.025012',
              'CPAN'                  => '2.18',
              'CPAN::Bundle'          => '5.5003',
              'CPAN::Distribution'    => '2.18',
              'Config'                => '5.025012',
              'DynaLoader'            => '1.42',
              'Module::CoreList'      => '5.20170420',
              'Module::CoreList::TieHashDelta'=> '5.20170420',
              'Module::CoreList::Utils'=> '5.20170420',
              'Safe'                  => '2.40',
              'XSLoader'              => '0.27',
              'base'                  => '2.25',
              'threads::shared'       => '1.56',
          },
          removed => {
          }
      },
      5.026000 => {
          delta_from => 5.025012,
          changed => {
              'B::Op_private'         => '5.026000',
              'Config'                => '5.026',
              'Module::CoreList'      => '5.20170530',
              'Module::CoreList::TieHashDelta'=> '5.20170530',
              'Module::CoreList::Utils'=> '5.20170530',
          },
          removed => {
          }
      },
      5.027000 => {
          delta_from => 5.026000,
          changed => {
              'Attribute::Handlers'   => '1.00',
              'B::Concise'            => '1.000',
              'B::Deparse'            => '1.41',
              'B::Op_private'         => '5.027000',
              'Config'                => '5.027',
              'Module::CoreList'      => '5.20170531',
              'Module::CoreList::TieHashDelta'=> '5.20170531',
              'Module::CoreList::Utils'=> '5.20170531',
              'O'                     => '1.02',
              'attributes'            => '0.3',
              'feature'               => '1.48',
          },
          removed => {
          }
      },
      5.027001 => {
          delta_from => 5.027,
          changed => {
              'App::Prove'            => '3.39',
              'App::Prove::State'     => '3.39',
              'App::Prove::State::Result'=> '3.39',
              'App::Prove::State::Result::Test'=> '3.39',
              'Archive::Tar'          => '2.26',
              'Archive::Tar::Constant'=> '2.26',
              'Archive::Tar::File'    => '2.26',
              'B::Op_private'         => '5.027001',
              'B::Terse'              => '1.08',
              'Config'                => '5.027001',
              'Devel::PPPort'         => '3.36',
              'DirHandle'             => '1.05',
              'ExtUtils::Command'     => '7.30',
              'ExtUtils::Command::MM' => '7.30',
              'ExtUtils::Install'     => '2.14',
              'ExtUtils::Installed'   => '2.14',
              'ExtUtils::Liblist'     => '7.30',
              'ExtUtils::Liblist::Kid'=> '7.30',
              'ExtUtils::MM'          => '7.30',
              'ExtUtils::MM_AIX'      => '7.30',
              'ExtUtils::MM_Any'      => '7.30',
              'ExtUtils::MM_BeOS'     => '7.30',
              'ExtUtils::MM_Cygwin'   => '7.30',
              'ExtUtils::MM_DOS'      => '7.30',
              'ExtUtils::MM_Darwin'   => '7.30',
              'ExtUtils::MM_MacOS'    => '7.30',
              'ExtUtils::MM_NW5'      => '7.30',
              'ExtUtils::MM_OS2'      => '7.30',
              'ExtUtils::MM_QNX'      => '7.30',
              'ExtUtils::MM_UWIN'     => '7.30',
              'ExtUtils::MM_Unix'     => '7.30',
              'ExtUtils::MM_VMS'      => '7.30',
              'ExtUtils::MM_VOS'      => '7.30',
              'ExtUtils::MM_Win32'    => '7.30',
              'ExtUtils::MM_Win95'    => '7.30',
              'ExtUtils::MY'          => '7.30',
              'ExtUtils::MakeMaker'   => '7.30',
              'ExtUtils::MakeMaker::Config'=> '7.30',
              'ExtUtils::MakeMaker::Locale'=> '7.30',
              'ExtUtils::MakeMaker::version'=> '7.30',
              'ExtUtils::MakeMaker::version::regex'=> '7.30',
              'ExtUtils::Mkbootstrap' => '7.30',
              'ExtUtils::Mksymlists'  => '7.30',
              'ExtUtils::Packlist'    => '2.14',
              'ExtUtils::testlib'     => '7.30',
              'File::Path'            => '2.14',
              'Filter::Util::Call'    => '1.57',
              'GDBM_File'             => '1.16',
              'Getopt::Long'          => '2.5',
              'IO::Socket::IP'        => '0.39',
              'IPC::Cmd'              => '0.98',
              'JSON::PP'              => '2.94',
              'JSON::PP::Boolean'     => '2.94',
              'Locale::Codes'         => '3.52',
              'Locale::Codes::Constants'=> '3.52',
              'Locale::Codes::Country'=> '3.52',
              'Locale::Codes::Country_Codes'=> '3.52',
              'Locale::Codes::Country_Retired'=> '3.52',
              'Locale::Codes::Currency'=> '3.52',
              'Locale::Codes::Currency_Codes'=> '3.52',
              'Locale::Codes::Currency_Retired'=> '3.52',
              'Locale::Codes::LangExt'=> '3.52',
              'Locale::Codes::LangExt_Codes'=> '3.52',
              'Locale::Codes::LangExt_Retired'=> '3.52',
              'Locale::Codes::LangFam'=> '3.52',
              'Locale::Codes::LangFam_Codes'=> '3.52',
              'Locale::Codes::LangFam_Retired'=> '3.52',
              'Locale::Codes::LangVar'=> '3.52',
              'Locale::Codes::LangVar_Codes'=> '3.52',
              'Locale::Codes::LangVar_Retired'=> '3.52',
              'Locale::Codes::Language'=> '3.52',
              'Locale::Codes::Language_Codes'=> '3.52',
              'Locale::Codes::Language_Retired'=> '3.52',
              'Locale::Codes::Script' => '3.52',
              'Locale::Codes::Script_Codes'=> '3.52',
              'Locale::Codes::Script_Retired'=> '3.52',
              'Locale::Country'       => '3.52',
              'Locale::Currency'      => '3.52',
              'Locale::Language'      => '3.52',
              'Locale::Script'        => '3.52',
              'Module::CoreList'      => '5.20170621',
              'Module::CoreList::TieHashDelta'=> '5.20170621',
              'Module::CoreList::Utils'=> '5.20170621',
              'PerlIO::scalar'        => '0.27',
              'PerlIO::via'           => '0.17',
              'Storable'              => '2.63',
              'TAP::Base'             => '3.39',
              'TAP::Formatter::Base'  => '3.39',
              'TAP::Formatter::Color' => '3.39',
              'TAP::Formatter::Console'=> '3.39',
              'TAP::Formatter::Console::ParallelSession'=> '3.39',
              'TAP::Formatter::Console::Session'=> '3.39',
              'TAP::Formatter::File'  => '3.39',
              'TAP::Formatter::File::Session'=> '3.39',
              'TAP::Formatter::Session'=> '3.39',
              'TAP::Harness'          => '3.39',
              'TAP::Harness::Env'     => '3.39',
              'TAP::Object'           => '3.39',
              'TAP::Parser'           => '3.39',
              'TAP::Parser::Aggregator'=> '3.39',
              'TAP::Parser::Grammar'  => '3.39',
              'TAP::Parser::Iterator' => '3.39',
              'TAP::Parser::Iterator::Array'=> '3.39',
              'TAP::Parser::Iterator::Process'=> '3.39',
              'TAP::Parser::Iterator::Stream'=> '3.39',
              'TAP::Parser::IteratorFactory'=> '3.39',
              'TAP::Parser::Multiplexer'=> '3.39',
              'TAP::Parser::Result'   => '3.39',
              'TAP::Parser::Result::Bailout'=> '3.39',
              'TAP::Parser::Result::Comment'=> '3.39',
              'TAP::Parser::Result::Plan'=> '3.39',
              'TAP::Parser::Result::Pragma'=> '3.39',
              'TAP::Parser::Result::Test'=> '3.39',
              'TAP::Parser::Result::Unknown'=> '3.39',
              'TAP::Parser::Result::Version'=> '3.39',
              'TAP::Parser::Result::YAML'=> '3.39',
              'TAP::Parser::ResultFactory'=> '3.39',
              'TAP::Parser::Scheduler'=> '3.39',
              'TAP::Parser::Scheduler::Job'=> '3.39',
              'TAP::Parser::Scheduler::Spinner'=> '3.39',
              'TAP::Parser::Source'   => '3.39',
              'TAP::Parser::SourceHandler'=> '3.39',
              'TAP::Parser::SourceHandler::Executable'=> '3.39',
              'TAP::Parser::SourceHandler::File'=> '3.39',
              'TAP::Parser::SourceHandler::Handle'=> '3.39',
              'TAP::Parser::SourceHandler::Perl'=> '3.39',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.39',
              'TAP::Parser::YAMLish::Reader'=> '3.39',
              'TAP::Parser::YAMLish::Writer'=> '3.39',
              'Test::Harness'         => '3.39',
              'XS::APItest'           => '0.89',
              '_charnames'            => '1.45',
              'charnames'             => '1.45',
              'if'                    => '0.0607',
              'mro'                   => '1.21',
              'threads'               => '2.16',
              'threads::shared'       => '1.57',
              'version'               => '0.9918',
              'version::regex'        => '0.9918',
          },
          removed => {
          }
      },
      5.022004 => {
          delta_from => 5.022003,
          changed => {
              'B::Op_private'         => '5.022004',
              'Config'                => '5.022004',
              'Module::CoreList'      => '5.20170715_22',
              'Module::CoreList::TieHashDelta'=> '5.20170715_22',
              'Module::CoreList::Utils'=> '5.20170715_22',
              'base'                  => '2.22_01',
          },
          removed => {
          }
      },
      5.024002 => {
          delta_from => 5.024001,
          changed => {
              'B::Op_private'         => '5.024002',
              'Config'                => '5.024002',
              'Module::CoreList'      => '5.20170715_24',
              'Module::CoreList::TieHashDelta'=> '5.20170715_24',
              'Module::CoreList::Utils'=> '5.20170715_24',
              'base'                  => '2.23_01',
          },
          removed => {
          }
      },
      5.027002 => {
          delta_from => 5.027001,
          changed => {
              'B::Op_private'         => '5.027002',
              'Carp'                  => '1.43',
              'Carp::Heavy'           => '1.43',
              'Config'                => '5.027002',
              'Cwd'                   => '3.68',
              'Encode'                => '2.92',
              'Encode::Alias'         => '2.23',
              'Encode::CN::HZ'        => '2.09',
              'Encode::Encoding'      => '2.08',
              'Encode::GSM0338'       => '2.07',
              'Encode::Guess'         => '2.07',
              'Encode::JP::JIS7'      => '2.07',
              'Encode::KR::2022_KR'   => '2.04',
              'Encode::MIME::Header'  => '2.27',
              'Encode::MIME::Header::ISO_2022_JP'=> '1.09',
              'Encode::Unicode'       => '2.16',
              'Encode::Unicode::UTF7' => '2.10',
              'ExtUtils::CBuilder'    => '0.280228',
              'ExtUtils::CBuilder::Base'=> '0.280228',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280228',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280228',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280228',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280228',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280228',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280228',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280228',
              'ExtUtils::CBuilder::Platform::android'=> '0.280228',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280228',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280228',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280228',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280228',
              'File::Glob'            => '1.29',
              'File::Spec'            => '3.68',
              'File::Spec::AmigaOS'   => '3.68',
              'File::Spec::Cygwin'    => '3.68',
              'File::Spec::Epoc'      => '3.68',
              'File::Spec::Functions' => '3.68',
              'File::Spec::Mac'       => '3.68',
              'File::Spec::OS2'       => '3.68',
              'File::Spec::Unix'      => '3.68',
              'File::Spec::VMS'       => '3.68',
              'File::Spec::Win32'     => '3.68',
              'List::Util'            => '1.48',
              'List::Util::XS'        => '1.48',
              'Math::BigRat'          => '0.2613',
              'Module::CoreList'      => '5.20170720',
              'Module::CoreList::TieHashDelta'=> '5.20170720',
              'Module::CoreList::Utils'=> '5.20170720',
              'Opcode'                => '1.40',
              'POSIX'                 => '1.77',
              'PerlIO::scalar'        => '0.29',
              'Scalar::Util'          => '1.48',
              'Sub::Util'             => '1.48',
              'Time::HiRes'           => '1.9743',
              'Time::Piece'           => '1.3201',
              'Time::Seconds'         => '1.3201',
              'Unicode'               => '10.0.0',
              'XS::APItest'           => '0.90',
              'arybase'               => '0.13',
              'encoding'              => '2.20',
              'feature'               => '1.49',
              're'                    => '0.35',
          },
          removed => {
          }
      },
      5.027003 => {
          delta_from => 5.027002,
          changed => {
              'B'                     => '1.69',
              'B::Concise'            => '1.001',
              'B::Debug'              => '1.25',
              'B::Deparse'            => '1.42',
              'B::Op_private'         => '5.027003',
              'Config'                => '5.027003',
              'Data::Dumper'          => '2.167_02',
              'Devel::Peek'           => '1.27',
              'ExtUtils::Constant'    => '0.24',
              'ExtUtils::Constant::Base'=> '0.06',
              'ExtUtils::Constant::ProxySubs'=> '0.09',
              'ExtUtils::Constant::Utils'=> '0.04',
              'ExtUtils::ParseXS'     => '3.35',
              'ExtUtils::ParseXS::Constants'=> '3.35',
              'ExtUtils::ParseXS::CountLines'=> '3.35',
              'ExtUtils::ParseXS::Eval'=> '3.35',
              'ExtUtils::ParseXS::Utilities'=> '3.35',
              'ExtUtils::Typemaps'    => '3.35',
              'ExtUtils::Typemaps::Cmd'=> '3.35',
              'ExtUtils::Typemaps::InputMap'=> '3.35',
              'ExtUtils::Typemaps::OutputMap'=> '3.35',
              'ExtUtils::Typemaps::Type'=> '3.35',
              'Filter::Simple'        => '0.94',
              'Module::CoreList'      => '5.20170821',
              'Module::CoreList::TieHashDelta'=> '5.20170821',
              'Module::CoreList::Utils'=> '5.20170821',
              'SelfLoader'            => '1.24',
              'Storable'              => '2.64',
              'XS::APItest'           => '0.91',
              'base'                  => '2.26',
              'threads'               => '2.17',
              'utf8'                  => '1.20',
          },
          removed => {
          }
      },
      5.027004 => {
          delta_from => 5.027003,
          changed => {
              'B::Op_private'         => '5.027004',
              'Config'                => '5.027004',
              'File::Glob'            => '1.30',
              'I18N::Langinfo'        => '0.14',
              'Module::CoreList'      => '5.20170920',
              'Module::CoreList::TieHashDelta'=> '5.20170920',
              'Module::CoreList::Utils'=> '5.20170920',
              'Term::ReadLine'        => '1.17',
              'VMS::Stdio'            => '2.42',
              'XS::APItest'           => '0.92',
              'attributes'            => '0.31',
              'sort'                  => '2.03',
              'threads'               => '2.18',
          },
          removed => {
          }
      },
      5.024003 => {
          delta_from => 5.024002,
          changed => {
              'B::Op_private'         => '5.024003',
              'Config'                => '5.024003',
              'Module::CoreList'      => '5.20170922_24',
              'Module::CoreList::TieHashDelta'=> '5.20170922_24',
              'Module::CoreList::Utils'=> '5.20170922_24',
              'POSIX'                 => '1.65_01',
              'Time::HiRes'           => '1.9741',
          },
          removed => {
          }
      },
      5.026001 => {
          delta_from => 5.026000,
          changed => {
              'B::Op_private'         => '5.026001',
              'Config'                => '5.026001',
              'Module::CoreList'      => '5.20170922_26',
              'Module::CoreList::TieHashDelta'=> '5.20170922_26',
              'Module::CoreList::Utils'=> '5.20170922_26',
              '_charnames'            => '1.45',
              'base'                  => '2.26',
              'charnames'             => '1.45',
          },
          removed => {
          }
      },
      5.027005 => {
          delta_from => 5.027004,
          changed => {
              'B'                     => '1.70',
              'B::Concise'            => '1.002',
              'B::Deparse'            => '1.43',
              'B::Op_private'         => '5.027005',
              'B::Xref'               => '1.07',
              'Config'                => '5.027005',
              'Config::Perl::V'       => '0.29',
              'Digest::SHA'           => '5.98',
              'Encode'                => '2.93',
              'Encode::CN::HZ'        => '2.10',
              'Encode::JP::JIS7'      => '2.08',
              'Encode::MIME::Header'  => '2.28',
              'Encode::MIME::Name'    => '1.03',
              'File::Fetch'           => '0.54',
              'File::Path'            => '2.15',
              'List::Util'            => '1.49',
              'List::Util::XS'        => '1.49',
              'Locale::Codes'         => '3.54',
              'Locale::Codes::Constants'=> '3.54',
              'Locale::Codes::Country'=> '3.54',
              'Locale::Codes::Country_Codes'=> '3.54',
              'Locale::Codes::Country_Retired'=> '3.54',
              'Locale::Codes::Currency'=> '3.54',
              'Locale::Codes::Currency_Codes'=> '3.54',
              'Locale::Codes::Currency_Retired'=> '3.54',
              'Locale::Codes::LangExt'=> '3.54',
              'Locale::Codes::LangExt_Codes'=> '3.54',
              'Locale::Codes::LangExt_Retired'=> '3.54',
              'Locale::Codes::LangFam'=> '3.54',
              'Locale::Codes::LangFam_Codes'=> '3.54',
              'Locale::Codes::LangFam_Retired'=> '3.54',
              'Locale::Codes::LangVar'=> '3.54',
              'Locale::Codes::LangVar_Codes'=> '3.54',
              'Locale::Codes::LangVar_Retired'=> '3.54',
              'Locale::Codes::Language'=> '3.54',
              'Locale::Codes::Language_Codes'=> '3.54',
              'Locale::Codes::Language_Retired'=> '3.54',
              'Locale::Codes::Script' => '3.54',
              'Locale::Codes::Script_Codes'=> '3.54',
              'Locale::Codes::Script_Retired'=> '3.54',
              'Locale::Country'       => '3.54',
              'Locale::Currency'      => '3.54',
              'Locale::Language'      => '3.54',
              'Locale::Script'        => '3.54',
              'Math::BigFloat'        => '1.999811',
              'Math::BigInt'          => '1.999811',
              'Math::BigInt::Calc'    => '1.999811',
              'Math::BigInt::CalcEmu' => '1.999811',
              'Math::BigInt::FastCalc'=> '0.5006',
              'Math::BigInt::Lib'     => '1.999811',
              'Module::CoreList'      => '5.20171020',
              'Module::CoreList::TieHashDelta'=> '5.20171020',
              'Module::CoreList::Utils'=> '5.20171020',
              'NEXT'                  => '0.67_01',
              'POSIX'                 => '1.78',
              'Pod::Perldoc'          => '3.2801',
              'Scalar::Util'          => '1.49',
              'Sub::Util'             => '1.49',
              'Sys::Hostname'         => '1.21',
              'Test2'                 => '1.302103',
              'Test2::API'            => '1.302103',
              'Test2::API::Breakage'  => '1.302103',
              'Test2::API::Context'   => '1.302103',
              'Test2::API::Instance'  => '1.302103',
              'Test2::API::Stack'     => '1.302103',
              'Test2::Event'          => '1.302103',
              'Test2::Event::Bail'    => '1.302103',
              'Test2::Event::Diag'    => '1.302103',
              'Test2::Event::Encoding'=> '1.302103',
              'Test2::Event::Exception'=> '1.302103',
              'Test2::Event::Fail'    => '1.302103',
              'Test2::Event::Generic' => '1.302103',
              'Test2::Event::Note'    => '1.302103',
              'Test2::Event::Ok'      => '1.302103',
              'Test2::Event::Pass'    => '1.302103',
              'Test2::Event::Plan'    => '1.302103',
              'Test2::Event::Skip'    => '1.302103',
              'Test2::Event::Subtest' => '1.302103',
              'Test2::Event::TAP::Version'=> '1.302103',
              'Test2::Event::Waiting' => '1.302103',
              'Test2::EventFacet'     => '1.302103',
              'Test2::EventFacet::About'=> '1.302103',
              'Test2::EventFacet::Amnesty'=> '1.302103',
              'Test2::EventFacet::Assert'=> '1.302103',
              'Test2::EventFacet::Control'=> '1.302103',
              'Test2::EventFacet::Error'=> '1.302103',
              'Test2::EventFacet::Info'=> '1.302103',
              'Test2::EventFacet::Meta'=> '1.302103',
              'Test2::EventFacet::Parent'=> '1.302103',
              'Test2::EventFacet::Plan'=> '1.302103',
              'Test2::EventFacet::Trace'=> '1.302103',
              'Test2::Formatter'      => '1.302103',
              'Test2::Formatter::TAP' => '1.302103',
              'Test2::Hub'            => '1.302103',
              'Test2::Hub::Interceptor'=> '1.302103',
              'Test2::Hub::Interceptor::Terminator'=> '1.302103',
              'Test2::Hub::Subtest'   => '1.302103',
              'Test2::IPC'            => '1.302103',
              'Test2::IPC::Driver'    => '1.302103',
              'Test2::IPC::Driver::Files'=> '1.302103',
              'Test2::Tools::Tiny'    => '1.302103',
              'Test2::Util'           => '1.302103',
              'Test2::Util::ExternalMeta'=> '1.302103',
              'Test2::Util::Facets2Legacy'=> '1.302103',
              'Test2::Util::HashBase' => '0.005',
              'Test2::Util::Trace'    => '1.302103',
              'Test::Builder'         => '1.302103',
              'Test::Builder::Formatter'=> '1.302103',
              'Test::Builder::IO::Scalar'=> '2.114',
              'Test::Builder::Module' => '1.302103',
              'Test::Builder::Tester' => '1.302103',
              'Test::Builder::Tester::Color'=> '1.302103',
              'Test::Builder::TodoDiag'=> '1.302103',
              'Test::More'            => '1.302103',
              'Test::Simple'          => '1.302103',
              'Test::Tester'          => '1.302103',
              'Test::Tester::Capture' => '1.302103',
              'Test::Tester::CaptureRunner'=> '1.302103',
              'Test::Tester::Delegate'=> '1.302103',
              'Test::use::ok'         => '1.302103',
              'Time::HiRes'           => '1.9746',
              'Time::Piece'           => '1.3202',
              'Time::Seconds'         => '1.3202',
              'arybase'               => '0.14',
              'encoding'              => '2.21',
              'ok'                    => '1.302103',
          },
          removed => {
              'Test2::Event::Info'    => 1,
          }
      },
      5.027006 => {
          delta_from => 5.027005,
          changed => {
              'Attribute::Handlers'   => '1.01',
              'B'                     => '1.72',
              'B::Concise'            => '1.003',
              'B::Deparse'            => '1.45',
              'B::Op_private'         => '5.027006',
              'Carp'                  => '1.44',
              'Carp::Heavy'           => '1.44',
              'Compress::Raw::Zlib'   => '2.075',
              'Config'                => '5.027006',
              'Config::Extensions'    => '0.02',
              'Cwd'                   => '3.70',
              'DynaLoader'            => '1.44',
              'ExtUtils::CBuilder'    => '0.280229',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280229',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280229',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280229',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280229',
              'ExtUtils::CBuilder::Platform::android'=> '0.280229',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280229',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280229',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280229',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280229',
              'ExtUtils::Embed'       => '1.35',
              'ExtUtils::Miniperl'    => '1.07',
              'ExtUtils::ParseXS'     => '3.36',
              'ExtUtils::ParseXS::Constants'=> '3.36',
              'ExtUtils::ParseXS::CountLines'=> '3.36',
              'ExtUtils::ParseXS::Eval'=> '3.36',
              'ExtUtils::ParseXS::Utilities'=> '3.36',
              'ExtUtils::Typemaps'    => '3.36',
              'ExtUtils::Typemaps::Cmd'=> '3.36',
              'ExtUtils::Typemaps::InputMap'=> '3.36',
              'ExtUtils::Typemaps::OutputMap'=> '3.36',
              'ExtUtils::Typemaps::Type'=> '3.36',
              'ExtUtils::XSSymSet'    => '1.4',
              'File::Copy'            => '2.33',
              'File::Spec'            => '3.69',
              'File::Spec::AmigaOS'   => '3.69',
              'File::Spec::Cygwin'    => '3.69',
              'File::Spec::Epoc'      => '3.69',
              'File::Spec::Functions' => '3.69',
              'File::Spec::Mac'       => '3.69',
              'File::Spec::OS2'       => '3.69',
              'File::Spec::Unix'      => '3.69',
              'File::Spec::VMS'       => '3.69',
              'File::Spec::Win32'     => '3.69',
              'File::stat'            => '1.08',
              'FileCache'             => '1.10',
              'Filter::Simple'        => '0.95',
              'Hash::Util::FieldHash' => '1.20',
              'I18N::LangTags'        => '0.43',
              'I18N::LangTags::Detect'=> '1.07',
              'I18N::LangTags::List'  => '0.40',
              'I18N::Langinfo'        => '0.15',
              'IO::Handle'            => '1.37',
              'IO::Select'            => '1.23',
              'Locale::Maketext'      => '1.29',
              'Module::CoreList'      => '5.20171120',
              'Module::CoreList::TieHashDelta'=> '5.20171120',
              'Module::CoreList::Utils'=> '5.20171120',
              'Net::Cmd'              => '3.11',
              'Net::Config'           => '3.11',
              'Net::Domain'           => '3.11',
              'Net::FTP'              => '3.11',
              'Net::FTP::A'           => '3.11',
              'Net::FTP::E'           => '3.11',
              'Net::FTP::I'           => '3.11',
              'Net::FTP::L'           => '3.11',
              'Net::FTP::dataconn'    => '3.11',
              'Net::NNTP'             => '3.11',
              'Net::Netrc'            => '3.11',
              'Net::POP3'             => '3.11',
              'Net::Ping'             => '2.62',
              'Net::SMTP'             => '3.11',
              'Net::Time'             => '3.11',
              'Net::hostent'          => '1.02',
              'Net::netent'           => '1.01',
              'Net::protoent'         => '1.01',
              'Net::servent'          => '1.02',
              'O'                     => '1.03',
              'ODBM_File'             => '1.15',
              'Opcode'                => '1.41',
              'POSIX'                 => '1.80',
              'Pod::Html'             => '1.2203',
              'SelfLoader'            => '1.25',
              'Socket'                => '2.020_04',
              'Storable'              => '2.65',
              'Test'                  => '1.31',
              'Test2'                 => '1.302111',
              'Test2::API'            => '1.302111',
              'Test2::API::Breakage'  => '1.302111',
              'Test2::API::Context'   => '1.302111',
              'Test2::API::Instance'  => '1.302111',
              'Test2::API::Stack'     => '1.302111',
              'Test2::Event'          => '1.302111',
              'Test2::Event::Bail'    => '1.302111',
              'Test2::Event::Diag'    => '1.302111',
              'Test2::Event::Encoding'=> '1.302111',
              'Test2::Event::Exception'=> '1.302111',
              'Test2::Event::Fail'    => '1.302111',
              'Test2::Event::Generic' => '1.302111',
              'Test2::Event::Note'    => '1.302111',
              'Test2::Event::Ok'      => '1.302111',
              'Test2::Event::Pass'    => '1.302111',
              'Test2::Event::Plan'    => '1.302111',
              'Test2::Event::Skip'    => '1.302111',
              'Test2::Event::Subtest' => '1.302111',
              'Test2::Event::TAP::Version'=> '1.302111',
              'Test2::Event::Waiting' => '1.302111',
              'Test2::EventFacet'     => '1.302111',
              'Test2::EventFacet::About'=> '1.302111',
              'Test2::EventFacet::Amnesty'=> '1.302111',
              'Test2::EventFacet::Assert'=> '1.302111',
              'Test2::EventFacet::Control'=> '1.302111',
              'Test2::EventFacet::Error'=> '1.302111',
              'Test2::EventFacet::Info'=> '1.302111',
              'Test2::EventFacet::Meta'=> '1.302111',
              'Test2::EventFacet::Parent'=> '1.302111',
              'Test2::EventFacet::Plan'=> '1.302111',
              'Test2::EventFacet::Trace'=> '1.302111',
              'Test2::Formatter'      => '1.302111',
              'Test2::Formatter::TAP' => '1.302111',
              'Test2::Hub'            => '1.302111',
              'Test2::Hub::Interceptor'=> '1.302111',
              'Test2::Hub::Interceptor::Terminator'=> '1.302111',
              'Test2::Hub::Subtest'   => '1.302111',
              'Test2::IPC'            => '1.302111',
              'Test2::IPC::Driver'    => '1.302111',
              'Test2::IPC::Driver::Files'=> '1.302111',
              'Test2::Tools::Tiny'    => '1.302111',
              'Test2::Util'           => '1.302111',
              'Test2::Util::ExternalMeta'=> '1.302111',
              'Test2::Util::Facets2Legacy'=> '1.302111',
              'Test2::Util::HashBase' => '1.302111',
              'Test2::Util::Trace'    => '1.302111',
              'Test::Builder'         => '1.302111',
              'Test::Builder::Formatter'=> '1.302111',
              'Test::Builder::Module' => '1.302111',
              'Test::Builder::Tester' => '1.302111',
              'Test::Builder::Tester::Color'=> '1.302111',
              'Test::Builder::TodoDiag'=> '1.302111',
              'Test::More'            => '1.302111',
              'Test::Simple'          => '1.302111',
              'Test::Tester'          => '1.302111',
              'Test::Tester::Capture' => '1.302111',
              'Test::Tester::CaptureRunner'=> '1.302111',
              'Test::Tester::Delegate'=> '1.302111',
              'Test::use::ok'         => '1.302111',
              'Tie::Array'            => '1.07',
              'Tie::StdHandle'        => '4.5',
              'Time::HiRes'           => '1.9747',
              'Time::gmtime'          => '1.04',
              'Time::localtime'       => '1.03',
              'Unicode::Collate'      => '1.23',
              'Unicode::Collate::CJK::Big5'=> '1.23',
              'Unicode::Collate::CJK::GB2312'=> '1.23',
              'Unicode::Collate::CJK::JISX0208'=> '1.23',
              'Unicode::Collate::CJK::Korean'=> '1.23',
              'Unicode::Collate::CJK::Pinyin'=> '1.23',
              'Unicode::Collate::CJK::Stroke'=> '1.23',
              'Unicode::Collate::CJK::Zhuyin'=> '1.23',
              'Unicode::Collate::Locale'=> '1.23',
              'Unicode::Normalize'    => '1.26',
              'User::grent'           => '1.02',
              'User::pwent'           => '1.01',
              'VMS::DCLsym'           => '1.09',
              'VMS::Stdio'            => '2.44',
              'XS::APItest'           => '0.93',
              'XS::Typemap'           => '0.16',
              'XSLoader'              => '0.28',
              'attributes'            => '0.32',
              'base'                  => '2.27',
              'blib'                  => '1.07',
              'experimental'          => '0.017',
              'fields'                => '2.24',
              'ok'                    => '1.302111',
              're'                    => '0.36',
              'sort'                  => '2.04',
              'threads'               => '2.19',
              'warnings'              => '1.38',
          },
          removed => {
          }
      },
      5.027007 => {
          delta_from => 5.027006,
          changed => {
              'App::Cpan'             => '1.67',
              'B'                     => '1.73',
              'B::Debug'              => '1.26',
              'B::Deparse'            => '1.46',
              'B::Op_private'         => '5.027007',
              'CPAN'                  => '2.20',
              'CPAN::Distribution'    => '2.19',
              'CPAN::FTP'             => '5.5011',
              'CPAN::FirstTime'       => '5.5311',
              'CPAN::Shell'           => '5.5007',
              'Carp'                  => '1.45',
              'Carp::Heavy'           => '1.45',
              'Compress::Raw::Zlib'   => '2.076',
              'Config'                => '5.027007',
              'Cwd'                   => '3.71',
              'Data::Dumper'          => '2.169',
              'Devel::PPPort'         => '3.37',
              'Digest::SHA'           => '6.00',
              'DynaLoader'            => '1.45',
              'ExtUtils::CBuilder'    => '0.280230',
              'ExtUtils::CBuilder::Base'=> '0.280230',
              'ExtUtils::CBuilder::Platform::Unix'=> '0.280230',
              'ExtUtils::CBuilder::Platform::VMS'=> '0.280230',
              'ExtUtils::CBuilder::Platform::Windows'=> '0.280230',
              'ExtUtils::CBuilder::Platform::Windows::BCC'=> '0.280230',
              'ExtUtils::CBuilder::Platform::Windows::GCC'=> '0.280230',
              'ExtUtils::CBuilder::Platform::Windows::MSVC'=> '0.280230',
              'ExtUtils::CBuilder::Platform::aix'=> '0.280230',
              'ExtUtils::CBuilder::Platform::android'=> '0.280230',
              'ExtUtils::CBuilder::Platform::cygwin'=> '0.280230',
              'ExtUtils::CBuilder::Platform::darwin'=> '0.280230',
              'ExtUtils::CBuilder::Platform::dec_osf'=> '0.280230',
              'ExtUtils::CBuilder::Platform::os2'=> '0.280230',
              'ExtUtils::Typemaps'    => '3.37',
              'File::Fetch'           => '0.56',
              'File::Spec'            => '3.71',
              'File::Spec::AmigaOS'   => '3.71',
              'File::Spec::Cygwin'    => '3.71',
              'File::Spec::Epoc'      => '3.71',
              'File::Spec::Functions' => '3.71',
              'File::Spec::Mac'       => '3.71',
              'File::Spec::OS2'       => '3.71',
              'File::Spec::Unix'      => '3.71',
              'File::Spec::VMS'       => '3.71',
              'File::Spec::Win32'     => '3.71',
              'Filter::Util::Call'    => '1.58',
              'GDBM_File'             => '1.17',
              'JSON::PP'              => '2.97000',
              'JSON::PP::Boolean'     => '2.97000',
              'Locale::Codes'         => '3.55',
              'Locale::Codes::Constants'=> '3.55',
              'Locale::Codes::Country'=> '3.55',
              'Locale::Codes::Country_Codes'=> '3.55',
              'Locale::Codes::Country_Retired'=> '3.55',
              'Locale::Codes::Currency'=> '3.55',
              'Locale::Codes::Currency_Codes'=> '3.55',
              'Locale::Codes::Currency_Retired'=> '3.55',
              'Locale::Codes::LangExt'=> '3.55',
              'Locale::Codes::LangExt_Codes'=> '3.55',
              'Locale::Codes::LangExt_Retired'=> '3.55',
              'Locale::Codes::LangFam'=> '3.55',
              'Locale::Codes::LangFam_Codes'=> '3.55',
              'Locale::Codes::LangFam_Retired'=> '3.55',
              'Locale::Codes::LangVar'=> '3.55',
              'Locale::Codes::LangVar_Codes'=> '3.55',
              'Locale::Codes::LangVar_Retired'=> '3.55',
              'Locale::Codes::Language'=> '3.55',
              'Locale::Codes::Language_Codes'=> '3.55',
              'Locale::Codes::Language_Retired'=> '3.55',
              'Locale::Codes::Script' => '3.55',
              'Locale::Codes::Script_Codes'=> '3.55',
              'Locale::Codes::Script_Retired'=> '3.55',
              'Locale::Country'       => '3.55',
              'Locale::Currency'      => '3.55',
              'Locale::Language'      => '3.55',
              'Locale::Script'        => '3.55',
              'Module::CoreList'      => '5.20171220',
              'Module::CoreList::TieHashDelta'=> '5.20171220',
              'Module::CoreList::Utils'=> '5.20171220',
              'Opcode'                => '1.42',
              'POSIX'                 => '1.81',
              'Pod::Functions'        => '1.12',
              'Pod::Functions::Functions'=> '1.12',
              'Pod::Html'             => '1.23',
              'Sys::Hostname'         => '1.22',
              'Test2'                 => '1.302120',
              'Test2::API'            => '1.302120',
              'Test2::API::Breakage'  => '1.302120',
              'Test2::API::Context'   => '1.302120',
              'Test2::API::Instance'  => '1.302120',
              'Test2::API::Stack'     => '1.302120',
              'Test2::Event'          => '1.302120',
              'Test2::Event::Bail'    => '1.302120',
              'Test2::Event::Diag'    => '1.302120',
              'Test2::Event::Encoding'=> '1.302120',
              'Test2::Event::Exception'=> '1.302120',
              'Test2::Event::Fail'    => '1.302120',
              'Test2::Event::Generic' => '1.302120',
              'Test2::Event::Note'    => '1.302120',
              'Test2::Event::Ok'      => '1.302120',
              'Test2::Event::Pass'    => '1.302120',
              'Test2::Event::Plan'    => '1.302120',
              'Test2::Event::Skip'    => '1.302120',
              'Test2::Event::Subtest' => '1.302120',
              'Test2::Event::TAP::Version'=> '1.302120',
              'Test2::Event::Waiting' => '1.302120',
              'Test2::EventFacet'     => '1.302120',
              'Test2::EventFacet::About'=> '1.302120',
              'Test2::EventFacet::Amnesty'=> '1.302120',
              'Test2::EventFacet::Assert'=> '1.302120',
              'Test2::EventFacet::Control'=> '1.302120',
              'Test2::EventFacet::Error'=> '1.302120',
              'Test2::EventFacet::Info'=> '1.302120',
              'Test2::EventFacet::Meta'=> '1.302120',
              'Test2::EventFacet::Parent'=> '1.302120',
              'Test2::EventFacet::Plan'=> '1.302120',
              'Test2::EventFacet::Trace'=> '1.302120',
              'Test2::Formatter'      => '1.302120',
              'Test2::Formatter::TAP' => '1.302120',
              'Test2::Hub'            => '1.302120',
              'Test2::Hub::Interceptor'=> '1.302120',
              'Test2::Hub::Interceptor::Terminator'=> '1.302120',
              'Test2::Hub::Subtest'   => '1.302120',
              'Test2::IPC'            => '1.302120',
              'Test2::IPC::Driver'    => '1.302120',
              'Test2::IPC::Driver::Files'=> '1.302120',
              'Test2::Tools::Tiny'    => '1.302120',
              'Test2::Util'           => '1.302120',
              'Test2::Util::ExternalMeta'=> '1.302120',
              'Test2::Util::Facets2Legacy'=> '1.302120',
              'Test2::Util::HashBase' => '1.302120',
              'Test2::Util::Trace'    => '1.302120',
              'Test::Builder'         => '1.302120',
              'Test::Builder::Formatter'=> '1.302120',
              'Test::Builder::Module' => '1.302120',
              'Test::Builder::Tester' => '1.302120',
              'Test::Builder::Tester::Color'=> '1.302120',
              'Test::Builder::TodoDiag'=> '1.302120',
              'Test::More'            => '1.302120',
              'Test::Simple'          => '1.302120',
              'Test::Tester'          => '1.302120',
              'Test::Tester::Capture' => '1.302120',
              'Test::Tester::CaptureRunner'=> '1.302120',
              'Test::Tester::Delegate'=> '1.302120',
              'Test::use::ok'         => '1.302120',
              'Time::HiRes'           => '1.9748',
              'Time::Piece'           => '1.3203',
              'Time::Seconds'         => '1.3203',
              'Unicode::Collate'      => '1.25',
              'Unicode::Collate::CJK::Big5'=> '1.25',
              'Unicode::Collate::CJK::GB2312'=> '1.25',
              'Unicode::Collate::CJK::JISX0208'=> '1.25',
              'Unicode::Collate::CJK::Korean'=> '1.25',
              'Unicode::Collate::CJK::Pinyin'=> '1.25',
              'Unicode::Collate::CJK::Stroke'=> '1.25',
              'Unicode::Collate::CJK::Zhuyin'=> '1.25',
              'Unicode::Collate::Locale'=> '1.25',
              'Unicode::UCD'          => '0.69',
              'XS::APItest'           => '0.94',
              'XSLoader'              => '0.29',
              'arybase'               => '0.15',
              'autodie::exception'    => '2.29001',
              'autodie::hints'        => '2.29001',
              'experimental'          => '0.019',
              'feature'               => '1.50',
              'ok'                    => '1.302120',
              'overload'              => '1.29',
              'threads'               => '2.21',
              'threads::shared'       => '1.58',
              'warnings'              => '1.39',
          },
          removed => {
          }
      },
      5.027008 => {
          delta_from => 5.027007,
          changed => {
              'B'                     => '1.74',
              'B::Deparse'            => '1.47',
              'B::Op_private'         => '5.027008',
              'Config'                => '5.027008',
              'Cwd'                   => '3.72',
              'Data::Dumper'          => '2.170',
              'Devel::PPPort'         => '3.38',
              'Digest::SHA'           => '6.01',
              'Encode'                => '2.94',
              'Encode::Alias'         => '2.24',
              'ExtUtils::Miniperl'    => '1.08',
              'File::Spec'            => '3.72',
              'File::Spec::AmigaOS'   => '3.72',
              'File::Spec::Cygwin'    => '3.72',
              'File::Spec::Epoc'      => '3.72',
              'File::Spec::Functions' => '3.72',
              'File::Spec::Mac'       => '3.72',
              'File::Spec::OS2'       => '3.72',
              'File::Spec::Unix'      => '3.72',
              'File::Spec::VMS'       => '3.72',
              'File::Spec::Win32'     => '3.72',
              'JSON::PP'              => '2.97001',
              'JSON::PP::Boolean'     => '2.97001',
              'Module::CoreList'      => '5.20180120',
              'Module::CoreList::TieHashDelta'=> '5.20180120',
              'Module::CoreList::Utils'=> '5.20180120',
              'Opcode'                => '1.43',
              'Pod::Functions'        => '1.13',
              'Pod::Functions::Functions'=> '1.13',
              'Pod::Html'             => '1.24',
              'Pod::Man'              => '4.10',
              'Pod::ParseLink'        => '4.10',
              'Pod::Text'             => '4.10',
              'Pod::Text::Color'      => '4.10',
              'Pod::Text::Overstrike' => '4.10',
              'Pod::Text::Termcap'    => '4.10',
              'Socket'                => '2.027',
              'Time::HiRes'           => '1.9752',
              'Unicode::UCD'          => '0.70',
              'XS::APItest'           => '0.95',
              'XSLoader'              => '0.30',
              'autodie::exception'    => '2.29002',
              'feature'               => '1.51',
              'overload'              => '1.30',
              'utf8'                  => '1.21',
              'warnings'              => '1.40',
          },
          removed => {
          }
      },
      5.027009 => {
          delta_from => 5.027008,
          changed => {
              'B::Op_private'         => '5.027009',
              'Carp'                  => '1.46',
              'Carp::Heavy'           => '1.46',
              'Config'                => '5.027009',
              'Cwd'                   => '3.74',
              'Devel::PPPort'         => '3.39',
              'Encode'                => '2.96',
              'Encode::Unicode'       => '2.17',
              'Errno'                 => '1.29',
              'ExtUtils::Command'     => '7.32',
              'ExtUtils::Command::MM' => '7.32',
              'ExtUtils::Liblist'     => '7.32',
              'ExtUtils::Liblist::Kid'=> '7.32',
              'ExtUtils::MM'          => '7.32',
              'ExtUtils::MM_AIX'      => '7.32',
              'ExtUtils::MM_Any'      => '7.32',
              'ExtUtils::MM_BeOS'     => '7.32',
              'ExtUtils::MM_Cygwin'   => '7.32',
              'ExtUtils::MM_DOS'      => '7.32',
              'ExtUtils::MM_Darwin'   => '7.32',
              'ExtUtils::MM_MacOS'    => '7.32',
              'ExtUtils::MM_NW5'      => '7.32',
              'ExtUtils::MM_OS2'      => '7.32',
              'ExtUtils::MM_QNX'      => '7.32',
              'ExtUtils::MM_UWIN'     => '7.32',
              'ExtUtils::MM_Unix'     => '7.32',
              'ExtUtils::MM_VMS'      => '7.32',
              'ExtUtils::MM_VOS'      => '7.32',
              'ExtUtils::MM_Win32'    => '7.32',
              'ExtUtils::MM_Win95'    => '7.32',
              'ExtUtils::MY'          => '7.32',
              'ExtUtils::MakeMaker'   => '7.32',
              'ExtUtils::MakeMaker::Config'=> '7.32',
              'ExtUtils::MakeMaker::Locale'=> '7.32',
              'ExtUtils::MakeMaker::version'=> '7.32',
              'ExtUtils::MakeMaker::version::regex'=> '7.32',
              'ExtUtils::Mkbootstrap' => '7.32',
              'ExtUtils::Mksymlists'  => '7.32',
              'ExtUtils::ParseXS'     => '3.38',
              'ExtUtils::ParseXS::Constants'=> '3.38',
              'ExtUtils::ParseXS::CountLines'=> '3.38',
              'ExtUtils::ParseXS::Eval'=> '3.38',
              'ExtUtils::ParseXS::Utilities'=> '3.38',
              'ExtUtils::Typemaps'    => '3.38',
              'ExtUtils::Typemaps::Cmd'=> '3.38',
              'ExtUtils::Typemaps::InputMap'=> '3.38',
              'ExtUtils::Typemaps::OutputMap'=> '3.38',
              'ExtUtils::Typemaps::Type'=> '3.38',
              'ExtUtils::testlib'     => '7.32',
              'File::Spec'            => '3.74',
              'File::Spec::AmigaOS'   => '3.74',
              'File::Spec::Cygwin'    => '3.74',
              'File::Spec::Epoc'      => '3.74',
              'File::Spec::Functions' => '3.74',
              'File::Spec::Mac'       => '3.74',
              'File::Spec::OS2'       => '3.74',
              'File::Spec::Unix'      => '3.74',
              'File::Spec::VMS'       => '3.74',
              'File::Spec::Win32'     => '3.74',
              'IPC::Cmd'              => '1.00',
              'Math::BigFloat::Trace' => '0.49',
              'Math::BigInt::Trace'   => '0.49',
              'Module::CoreList'      => '5.20180220',
              'Module::CoreList::Utils'=> '5.20180220',
              'POSIX'                 => '1.82',
              'PerlIO::encoding'      => '0.26',
              'Storable'              => '3.06',
              'Storable::Limit'       => undef,
              'Test2'                 => '1.302122',
              'Test2::API'            => '1.302122',
              'Test2::API::Breakage'  => '1.302122',
              'Test2::API::Context'   => '1.302122',
              'Test2::API::Instance'  => '1.302122',
              'Test2::API::Stack'     => '1.302122',
              'Test2::Event'          => '1.302122',
              'Test2::Event::Bail'    => '1.302122',
              'Test2::Event::Diag'    => '1.302122',
              'Test2::Event::Encoding'=> '1.302122',
              'Test2::Event::Exception'=> '1.302122',
              'Test2::Event::Fail'    => '1.302122',
              'Test2::Event::Generic' => '1.302122',
              'Test2::Event::Note'    => '1.302122',
              'Test2::Event::Ok'      => '1.302122',
              'Test2::Event::Pass'    => '1.302122',
              'Test2::Event::Plan'    => '1.302122',
              'Test2::Event::Skip'    => '1.302122',
              'Test2::Event::Subtest' => '1.302122',
              'Test2::Event::TAP::Version'=> '1.302122',
              'Test2::Event::Waiting' => '1.302122',
              'Test2::EventFacet'     => '1.302122',
              'Test2::EventFacet::About'=> '1.302122',
              'Test2::EventFacet::Amnesty'=> '1.302122',
              'Test2::EventFacet::Assert'=> '1.302122',
              'Test2::EventFacet::Control'=> '1.302122',
              'Test2::EventFacet::Error'=> '1.302122',
              'Test2::EventFacet::Info'=> '1.302122',
              'Test2::EventFacet::Meta'=> '1.302122',
              'Test2::EventFacet::Parent'=> '1.302122',
              'Test2::EventFacet::Plan'=> '1.302122',
              'Test2::EventFacet::Render'=> '1.302122',
              'Test2::EventFacet::Trace'=> '1.302122',
              'Test2::Formatter'      => '1.302122',
              'Test2::Formatter::TAP' => '1.302122',
              'Test2::Hub'            => '1.302122',
              'Test2::Hub::Interceptor'=> '1.302122',
              'Test2::Hub::Interceptor::Terminator'=> '1.302122',
              'Test2::Hub::Subtest'   => '1.302122',
              'Test2::IPC'            => '1.302122',
              'Test2::IPC::Driver'    => '1.302122',
              'Test2::IPC::Driver::Files'=> '1.302122',
              'Test2::Tools::Tiny'    => '1.302122',
              'Test2::Util'           => '1.302122',
              'Test2::Util::ExternalMeta'=> '1.302122',
              'Test2::Util::Facets2Legacy'=> '1.302122',
              'Test2::Util::HashBase' => '1.302122',
              'Test2::Util::Trace'    => '1.302122',
              'Test::Builder'         => '1.302122',
              'Test::Builder::Formatter'=> '1.302122',
              'Test::Builder::Module' => '1.302122',
              'Test::Builder::Tester' => '1.302122',
              'Test::Builder::Tester::Color'=> '1.302122',
              'Test::Builder::TodoDiag'=> '1.302122',
              'Test::More'            => '1.302122',
              'Test::Simple'          => '1.302122',
              'Test::Tester'          => '1.302122',
              'Test::Tester::Capture' => '1.302122',
              'Test::Tester::CaptureRunner'=> '1.302122',
              'Test::Tester::Delegate'=> '1.302122',
              'Test::use::ok'         => '1.302122',
              'Time::HiRes'           => '1.9753',
              'XS::APItest'           => '0.96',
              'bigint'                => '0.49',
              'bignum'                => '0.49',
              'bigrat'                => '0.49',
              'encoding'              => '2.22',
              'if'                    => '0.0608',
              'mro'                   => '1.22',
              'ok'                    => '1.302122',
              'threads'               => '2.22',
              'warnings'              => '1.41',
          },
          removed => {
              'Module::CoreList::TieHashDelta'=> 1,
          }
      },
      5.027010 => {
          delta_from => 5.027009,
          changed => {
              'App::Prove'            => '3.42',
              'App::Prove::State'     => '3.42',
              'App::Prove::State::Result'=> '3.42',
              'App::Prove::State::Result::Test'=> '3.42',
              'B::Deparse'            => '1.48',
              'B::Op_private'         => '5.027010',
              'Carp'                  => '1.49',
              'Carp::Heavy'           => '1.49',
              'Config'                => '5.02701',
              'Encode'                => '2.97',
              'ExtUtils::Command'     => '7.34',
              'ExtUtils::Command::MM' => '7.34',
              'ExtUtils::Liblist'     => '7.34',
              'ExtUtils::Liblist::Kid'=> '7.34',
              'ExtUtils::MM'          => '7.34',
              'ExtUtils::MM_AIX'      => '7.34',
              'ExtUtils::MM_Any'      => '7.34',
              'ExtUtils::MM_BeOS'     => '7.34',
              'ExtUtils::MM_Cygwin'   => '7.34',
              'ExtUtils::MM_DOS'      => '7.34',
              'ExtUtils::MM_Darwin'   => '7.34',
              'ExtUtils::MM_MacOS'    => '7.34',
              'ExtUtils::MM_NW5'      => '7.34',
              'ExtUtils::MM_OS2'      => '7.34',
              'ExtUtils::MM_QNX'      => '7.34',
              'ExtUtils::MM_UWIN'     => '7.34',
              'ExtUtils::MM_Unix'     => '7.34',
              'ExtUtils::MM_VMS'      => '7.34',
              'ExtUtils::MM_VOS'      => '7.34',
              'ExtUtils::MM_Win32'    => '7.34',
              'ExtUtils::MM_Win95'    => '7.34',
              'ExtUtils::MY'          => '7.34',
              'ExtUtils::MakeMaker'   => '7.34',
              'ExtUtils::MakeMaker::Config'=> '7.34',
              'ExtUtils::MakeMaker::Locale'=> '7.34',
              'ExtUtils::MakeMaker::version'=> '7.34',
              'ExtUtils::MakeMaker::version::regex'=> '7.34',
              'ExtUtils::Mkbootstrap' => '7.34',
              'ExtUtils::Mksymlists'  => '7.34',
              'ExtUtils::ParseXS'     => '3.39',
              'ExtUtils::ParseXS::Constants'=> '3.39',
              'ExtUtils::ParseXS::CountLines'=> '3.39',
              'ExtUtils::ParseXS::Eval'=> '3.39',
              'ExtUtils::ParseXS::Utilities'=> '3.39',
              'ExtUtils::testlib'     => '7.34',
              'File::Glob'            => '1.31',
              'I18N::Langinfo'        => '0.16',
              'List::Util'            => '1.50',
              'List::Util::XS'        => '1.50',
              'Locale::Codes'         => '3.56',
              'Locale::Codes::Constants'=> '3.56',
              'Locale::Codes::Country'=> '3.56',
              'Locale::Codes::Country_Codes'=> '3.56',
              'Locale::Codes::Country_Retired'=> '3.56',
              'Locale::Codes::Currency'=> '3.56',
              'Locale::Codes::Currency_Codes'=> '3.56',
              'Locale::Codes::Currency_Retired'=> '3.56',
              'Locale::Codes::LangExt'=> '3.56',
              'Locale::Codes::LangExt_Codes'=> '3.56',
              'Locale::Codes::LangExt_Retired'=> '3.56',
              'Locale::Codes::LangFam'=> '3.56',
              'Locale::Codes::LangFam_Codes'=> '3.56',
              'Locale::Codes::LangFam_Retired'=> '3.56',
              'Locale::Codes::LangVar'=> '3.56',
              'Locale::Codes::LangVar_Codes'=> '3.56',
              'Locale::Codes::LangVar_Retired'=> '3.56',
              'Locale::Codes::Language'=> '3.56',
              'Locale::Codes::Language_Codes'=> '3.56',
              'Locale::Codes::Language_Retired'=> '3.56',
              'Locale::Codes::Script' => '3.56',
              'Locale::Codes::Script_Codes'=> '3.56',
              'Locale::Codes::Script_Retired'=> '3.56',
              'Locale::Country'       => '3.56',
              'Locale::Currency'      => '3.56',
              'Locale::Language'      => '3.56',
              'Locale::Script'        => '3.56',
              'Module::CoreList'      => '5.20180221',
              'Module::CoreList::Utils'=> '5.20180221',
              'POSIX'                 => '1.83',
              'Scalar::Util'          => '1.50',
              'Sub::Util'             => '1.50',
              'TAP::Base'             => '3.42',
              'TAP::Formatter::Base'  => '3.42',
              'TAP::Formatter::Color' => '3.42',
              'TAP::Formatter::Console'=> '3.42',
              'TAP::Formatter::Console::ParallelSession'=> '3.42',
              'TAP::Formatter::Console::Session'=> '3.42',
              'TAP::Formatter::File'  => '3.42',
              'TAP::Formatter::File::Session'=> '3.42',
              'TAP::Formatter::Session'=> '3.42',
              'TAP::Harness'          => '3.42',
              'TAP::Harness::Env'     => '3.42',
              'TAP::Object'           => '3.42',
              'TAP::Parser'           => '3.42',
              'TAP::Parser::Aggregator'=> '3.42',
              'TAP::Parser::Grammar'  => '3.42',
              'TAP::Parser::Iterator' => '3.42',
              'TAP::Parser::Iterator::Array'=> '3.42',
              'TAP::Parser::Iterator::Process'=> '3.42',
              'TAP::Parser::Iterator::Stream'=> '3.42',
              'TAP::Parser::IteratorFactory'=> '3.42',
              'TAP::Parser::Multiplexer'=> '3.42',
              'TAP::Parser::Result'   => '3.42',
              'TAP::Parser::Result::Bailout'=> '3.42',
              'TAP::Parser::Result::Comment'=> '3.42',
              'TAP::Parser::Result::Plan'=> '3.42',
              'TAP::Parser::Result::Pragma'=> '3.42',
              'TAP::Parser::Result::Test'=> '3.42',
              'TAP::Parser::Result::Unknown'=> '3.42',
              'TAP::Parser::Result::Version'=> '3.42',
              'TAP::Parser::Result::YAML'=> '3.42',
              'TAP::Parser::ResultFactory'=> '3.42',
              'TAP::Parser::Scheduler'=> '3.42',
              'TAP::Parser::Scheduler::Job'=> '3.42',
              'TAP::Parser::Scheduler::Spinner'=> '3.42',
              'TAP::Parser::Source'   => '3.42',
              'TAP::Parser::SourceHandler'=> '3.42',
              'TAP::Parser::SourceHandler::Executable'=> '3.42',
              'TAP::Parser::SourceHandler::File'=> '3.42',
              'TAP::Parser::SourceHandler::Handle'=> '3.42',
              'TAP::Parser::SourceHandler::Perl'=> '3.42',
              'TAP::Parser::SourceHandler::RawTAP'=> '3.42',
              'TAP::Parser::YAMLish::Reader'=> '3.42',
              'TAP::Parser::YAMLish::Writer'=> '3.42',
              'Test2'                 => '1.302133',
              'Test2::API'            => '1.302133',
              'Test2::API::Breakage'  => '1.302133',
              'Test2::API::Context'   => '1.302133',
              'Test2::API::Instance'  => '1.302133',
              'Test2::API::Stack'     => '1.302133',
              'Test2::Event'          => '1.302133',
              'Test2::Event::Bail'    => '1.302133',
              'Test2::Event::Diag'    => '1.302133',
              'Test2::Event::Encoding'=> '1.302133',
              'Test2::Event::Exception'=> '1.302133',
              'Test2::Event::Fail'    => '1.302133',
              'Test2::Event::Generic' => '1.302133',
              'Test2::Event::Note'    => '1.302133',
              'Test2::Event::Ok'      => '1.302133',
              'Test2::Event::Pass'    => '1.302133',
              'Test2::Event::Plan'    => '1.302133',
              'Test2::Event::Skip'    => '1.302133',
              'Test2::Event::Subtest' => '1.302133',
              'Test2::Event::TAP::Version'=> '1.302133',
              'Test2::Event::V2'      => '1.302133',
              'Test2::Event::Waiting' => '1.302133',
              'Test2::EventFacet'     => '1.302133',
              'Test2::EventFacet::About'=> '1.302133',
              'Test2::EventFacet::Amnesty'=> '1.302133',
              'Test2::EventFacet::Assert'=> '1.302133',
              'Test2::EventFacet::Control'=> '1.302133',
              'Test2::EventFacet::Error'=> '1.302133',
              'Test2::EventFacet::Hub'=> '1.302133',
              'Test2::EventFacet::Info'=> '1.302133',
              'Test2::EventFacet::Meta'=> '1.302133',
              'Test2::EventFacet::Parent'=> '1.302133',
              'Test2::EventFacet::Plan'=> '1.302133',
              'Test2::EventFacet::Render'=> '1.302133',
              'Test2::EventFacet::Trace'=> '1.302133',
              'Test2::Formatter'      => '1.302133',
              'Test2::Formatter::TAP' => '1.302133',
              'Test2::Hub'            => '1.302133',
              'Test2::Hub::Interceptor'=> '1.302133',
              'Test2::Hub::Interceptor::Terminator'=> '1.302133',
              'Test2::Hub::Subtest'   => '1.302133',
              'Test2::IPC'            => '1.302133',
              'Test2::IPC::Driver'    => '1.302133',
              'Test2::IPC::Driver::Files'=> '1.302133',
              'Test2::Tools::Tiny'    => '1.302133',
              'Test2::Util'           => '1.302133',
              'Test2::Util::ExternalMeta'=> '1.302133',
              'Test2::Util::Facets2Legacy'=> '1.302133',
              'Test2::Util::HashBase' => '1.302133',
              'Test2::Util::Trace'    => '1.302133',
              'Test::Builder'         => '1.302133',
              'Test::Builder::Formatter'=> '1.302133',
              'Test::Builder::Module' => '1.302133',
              'Test::Builder::Tester' => '1.302133',
              'Test::Builder::Tester::Color'=> '1.302133',
              'Test::Builder::TodoDiag'=> '1.302133',
              'Test::Harness'         => '3.42',
              'Test::More'            => '1.302133',
              'Test::Simple'          => '1.302133',
              'Test::Tester'          => '1.302133',
              'Test::Tester::Capture' => '1.302133',
              'Test::Tester::CaptureRunner'=> '1.302133',
              'Test::Tester::Delegate'=> '1.302133',
              'Test::use::ok'         => '1.302133',
              'Time::HiRes'           => '1.9757',
              'Time::Piece'           => '1.3204',
              'Time::Seconds'         => '1.3204',
              'attributes'            => '0.33',
              'ok'                    => '1.302133',
              'warnings'              => '1.42',
          },
          removed => {
          }
      },
      5.024004 => {
          delta_from => 5.024003,
          changed => {
              'B::Op_private'         => '5.024004',
              'Config'                => '5.024004',
              'Module::CoreList'      => '5.20180414_24',
              'Module::CoreList::TieHashDelta'=> '5.20180414_24',
              'Module::CoreList::Utils'=> '5.20180414_24',
          },
          removed => {
          }
      },
      5.026002 => {
          delta_from => 5.026001,
          changed => {
              'B::Op_private'         => '5.026002',
              'Config'                => '5.026002',
              'Module::CoreList'      => '5.20180414_26',
              'Module::CoreList::TieHashDelta'=> '5.20180414_26',
              'Module::CoreList::Utils'=> '5.20180414_26',
              'PerlIO::via'           => '0.17',
              'Term::ReadLine'        => '1.17',
              'Unicode::UCD'          => '0.69',
          },
          removed => {
          }
      },
      5.027011 => {
          delta_from => 5.027010,
          changed => {
              'B::Op_private'         => '5.027011',
              'Carp'                  => '1.50',
              'Carp::Heavy'           => '1.50',
              'Config'                => '5.027011',
              'Devel::PPPort'         => '3.40',
              'Exporter'              => '5.73',
              'Exporter::Heavy'       => '5.73',
              'ExtUtils::Constant'    => '0.25',
              'I18N::Langinfo'        => '0.17',
              'IO'                    => '1.39',
              'IO::Dir'               => '1.39',
              'IO::File'              => '1.39',
              'IO::Handle'            => '1.39',
              'IO::Pipe'              => '1.39',
              'IO::Poll'              => '1.39',
              'IO::Seekable'          => '1.39',
              'IO::Select'            => '1.39',
              'IO::Socket'            => '1.39',
              'IO::Socket::INET'      => '1.39',
              'IO::Socket::UNIX'      => '1.39',
              'Module::CoreList'      => '5.20180420',
              'Module::CoreList::Utils'=> '5.20180420',
              'POSIX'                 => '1.84',
              'Time::HiRes'           => '1.9759',
              'XS::APItest'           => '0.97',
              'bytes'                 => '1.06',
              'subs'                  => '1.03',
              'vars'                  => '1.04',
              'version'               => '0.9923',
              'version::regex'        => '0.9923',
          },
          removed => {
          }
      },
      5.028000 => {
          delta_from => 5.027011,
          changed => {
              'Archive::Tar'          => '2.28',
              'Archive::Tar::Constant'=> '2.28',
              'Archive::Tar::File'    => '2.28',
              'B::Op_private'         => '5.028000',
              'Config'                => '5.028',
              'Module::CoreList'      => '5.20180622',
              'Module::CoreList::Utils'=> '5.20180622',
              'Storable'              => '3.08',
              'XS::APItest'           => '0.98',
              'feature'               => '1.52',
          },
          removed => {
          }
      },
      5.029000 => {
          delta_from => 5.028,
          changed => {
              'Archive::Tar'          => '2.30',
              'Archive::Tar::Constant'=> '2.30',
              'Archive::Tar::File'    => '2.30',
              'B::Op_private'         => '5.029000',
              'Config'                => '5.029',
              'Module::CoreList'      => '5.20180626',
              'Module::CoreList::Utils'=> '5.20180626',
              'Unicode::UCD'          => '0.71',
              'XS::APItest'           => '0.99',
              'feature'               => '1.53',
          },
          removed => {
          }
      },
  );
  
  sub is_core
  {
      shift if defined $_[1] and $_[1] =~ /^\w/ and _looks_like_invocant $_[0];
      my $module = shift;
      my $module_version = @_ > 0 ? shift : undef;
      my $perl_version   = @_ > 0 ? shift : $];
  
      my $first_release = first_release($module);
  
      return 0 if !defined($first_release) || $first_release > $perl_version;
  
      my $final_release = removed_from($module);
  
      return 0 if defined($final_release) && $perl_version >= $final_release;
  
      # If a minimum version of the module was specified:
      # Step through all perl releases ($prn)
      # so we can find what version of the module
      # was included in the specified version of perl.
      # On the way if we pass the required module version, we can
      # short-circuit and return true
      if (defined($module_version)) {
          my $module_version_object = eval { version->parse($module_version) };
          if (!defined($module_version_object)) {
              (my $err = $@) =~ s/^Invalid version format\b/Invalid version '$module_version' specified/;
              die $err;
          }
          # The Perl releases aren't a linear sequence, but a tree. We need to build the path
          # of releases from 5 to the specified release, and follow the module's version(s)
          # along that path.
          my @releases = ($perl_version);
          my $rel = $perl_version;
          while (defined($rel)) {
              # XXX: This line is a sign of failure. -- rjbs, 2015-04-15
              my $this_delta = $delta{$rel} || $delta{ sprintf '%0.6f', $rel };
              $rel = $this_delta->{delta_from};
              unshift(@releases, $rel) if defined($rel);
          }
          RELEASE:
          foreach my $prn (@releases) {
              next RELEASE if $prn < $first_release;
              last RELEASE if $prn > $perl_version;
              next unless defined(my $next_module_version
                                     = $delta{$prn}->{changed}->{$module});
              return 1 if eval { version->parse($next_module_version) >= $module_version_object };
          }
          return 0;
      }
  
      return 1 if !defined($final_release);
  
      return $perl_version <= $final_release;
  }
  
  %version = _undelta(\%delta);
  
  %deprecated = (
      5.011    => {
          changed => { map { $_ => 1 } qw/
              Class::ISA
              Pod::Plainer
              Shell
              Switch
          /},
      },
      5.011001 => { delta_from => 5.011 },
      5.011002 => { delta_from => 5.011001 },
      5.011003 => { delta_from => 5.011002 },
      5.011004 => { delta_from => 5.011003 },
      5.011005 => { delta_from => 5.011004 },
  
      5.012    => { delta_from => 5.011005 },
      5.012001 => { delta_from => 5.012 },
      5.012002 => { delta_from => 5.012001 },
      5.012003 => { delta_from => 5.012002 },
      5.012004 => { delta_from => 5.012003 },
      5.012005 => { delta_from => 5.012004 },
  
      5.013    => { delta_from => 5.012005 },
      5.013001 => {
          delta_from => 5.013,
          removed => { map { $_ => 1 } qw/
              Class::ISA
              Pod::Plainer
              Switch
          /},
      },
      5.013002 => { delta_from => 5.013001 },
      5.013003 => { delta_from => 5.013002 },
      5.013004 => { delta_from => 5.013003 },
      5.013005 => { delta_from => 5.013004 },
      5.013006 => { delta_from => 5.013005 },
      5.013007 => { delta_from => 5.013006 },
      5.013008 => { delta_from => 5.013007 },
      5.013009 => { delta_from => 5.013008 },
      5.01301  => { delta_from => 5.013009 },
      5.013011 => { delta_from => 5.01301  },
  
      5.014    => { delta_from => 5.013011 },
      5.014001 => { delta_from => 5.014    },
      5.014002 => { delta_from => 5.014001 },
      5.014003 => { delta_from => 5.014002 },
      5.014004 => { delta_from => 5.014003 },
  
      5.015    => {
          delta_from => 5.014004,
          removed => { Shell => 1 },
      },
      5.015001 => { delta_from => 5.015    },
      5.015002 => { delta_from => 5.015001 },
      5.015003 => { delta_from => 5.015002 },
      5.015004 => { delta_from => 5.015003 },
      5.015005 => { delta_from => 5.015004 },
      5.015006 => { delta_from => 5.015005 },
      5.015007 => { delta_from => 5.015006 },
      5.015008 => { delta_from => 5.015007 },
      5.015009 => { delta_from => 5.015008 },
  
      5.016    => { delta_from => 5.015009 },
      5.016001 => { delta_from => 5.016    },
      5.016002 => { delta_from => 5.016001 },
      5.016003 => { delta_from => 5.016002 },
  
      5.017    => { delta_from => 5.016003 },
      5.017001 => { delta_from => 5.017    },
      5.017002 => { delta_from => 5.017001 },
      5.017003 => { delta_from => 5.017002 },
      5.017004 => { delta_from => 5.017003 },
      5.017005 => { delta_from => 5.017004 },
      5.017006 => { delta_from => 5.017005 },
      5.017007 => { delta_from => 5.017006 },
      5.017008 => {
          delta_from => 5.017007,
          changed => { 'Pod::LaTeX' => 1 },
      },
      5.017009 => {
          delta_from => 5.017008,
          changed => { map { $_ => 1 } qw/
              Archive::Extract
              B::Lint
              B::Lint::Debug
              CPANPLUS
              CPANPLUS::Backend
              CPANPLUS::Backend::RV
              CPANPLUS::Config
              CPANPLUS::Config::HomeEnv
              CPANPLUS::Configure
              CPANPLUS::Configure::Setup
              CPANPLUS::Dist
              CPANPLUS::Dist::Autobundle
              CPANPLUS::Dist::Base
              CPANPLUS::Dist::Build
              CPANPLUS::Dist::Build::Constants
              CPANPLUS::Dist::MM
              CPANPLUS::Dist::Sample
              CPANPLUS::Error
              CPANPLUS::Internals
              CPANPLUS::Internals::Constants
              CPANPLUS::Internals::Constants::Report
              CPANPLUS::Internals::Extract
              CPANPLUS::Internals::Fetch
              CPANPLUS::Internals::Report
              CPANPLUS::Internals::Search
              CPANPLUS::Internals::Source
              CPANPLUS::Internals::Source::Memory
              CPANPLUS::Internals::Source::SQLite
              CPANPLUS::Internals::Source::SQLite::Tie
              CPANPLUS::Internals::Utils
              CPANPLUS::Internals::Utils::Autoflush
              CPANPLUS::Module
              CPANPLUS::Module::Author
              CPANPLUS::Module::Author::Fake
              CPANPLUS::Module::Checksums
              CPANPLUS::Module::Fake
              CPANPLUS::Module::Signature
              CPANPLUS::Selfupdate
              CPANPLUS::Shell
              CPANPLUS::Shell::Classic
              CPANPLUS::Shell::Default
              CPANPLUS::Shell::Default::Plugins::CustomSource
              CPANPLUS::Shell::Default::Plugins::Remote
              CPANPLUS::Shell::Default::Plugins::Source
              Devel::InnerPackage
              File::CheckTree
              Log::Message
              Log::Message::Config
              Log::Message::Handlers
              Log::Message::Item
              Log::Message::Simple
              Module::Pluggable
              Module::Pluggable::Object
              Object::Accessor
              Term::UI
              Term::UI::History
              Text::Soundex
          /},
      },
      5.01701  => { delta_from => 5.017009 },
      5.017011 => { delta_from => 5.01701  },
  
      5.018    => { delta_from => 5.017011 },
      5.018001 => {
          delta_from => 5.018,
          changed => {
          },
          removed => {
          }
      },
      5.018002 => {
          delta_from => 5.018001,
          changed => {
          },
          removed => {
          }
      },
      5.018003 => {
          delta_from => 5.018,
          changed => {
          },
          removed => {
          }
      },
      5.018004 => {
          delta_from => 5.018,
          changed => {
          },
          removed => {
          }
      },
  
      5.019    => {
          delta_from => 5.018,
          changed => { 'Module::Build' => 1 },
          removed => { map { $_ => 1 } qw/
              Archive::Extract
              B::Lint
              B::Lint::Debug
              CPANPLUS
              CPANPLUS::Backend
              CPANPLUS::Backend::RV
              CPANPLUS::Config
              CPANPLUS::Config::HomeEnv
              CPANPLUS::Configure
              CPANPLUS::Configure::Setup
              CPANPLUS::Dist
              CPANPLUS::Dist::Autobundle
              CPANPLUS::Dist::Base
              CPANPLUS::Dist::Build
              CPANPLUS::Dist::Build::Constants
              CPANPLUS::Dist::MM
              CPANPLUS::Dist::Sample
              CPANPLUS::Error
              CPANPLUS::Internals
              CPANPLUS::Internals::Constants
              CPANPLUS::Internals::Constants::Report
              CPANPLUS::Internals::Extract
              CPANPLUS::Internals::Fetch
              CPANPLUS::Internals::Report
              CPANPLUS::Internals::Search
              CPANPLUS::Internals::Source
              CPANPLUS::Internals::Source::Memory
              CPANPLUS::Internals::Source::SQLite
              CPANPLUS::Internals::Source::SQLite::Tie
              CPANPLUS::Internals::Utils
              CPANPLUS::Internals::Utils::Autoflush
              CPANPLUS::Module
              CPANPLUS::Module::Author
              CPANPLUS::Module::Author::Fake
              CPANPLUS::Module::Checksums
              CPANPLUS::Module::Fake
              CPANPLUS::Module::Signature
              CPANPLUS::Selfupdate
              CPANPLUS::Shell
              CPANPLUS::Shell::Classic
              CPANPLUS::Shell::Default
              CPANPLUS::Shell::Default::Plugins::CustomSource
              CPANPLUS::Shell::Default::Plugins::Remote
              CPANPLUS::Shell::Default::Plugins::Source
              Devel::InnerPackage
              File::CheckTree
              Log::Message
              Log::Message::Config
              Log::Message::Handlers
              Log::Message::Item
              Log::Message::Simple
              Module::Pluggable
              Module::Pluggable::Object
              Object::Accessor
              Pod::LaTeX
              Term::UI
              Term::UI::History
              Text::Soundex
          /}
      },
      5.019001 => {
          delta_from => 5.019,
          changed => {
          },
          removed => {
          }
      },
      5.019002 => {
          delta_from => 5.019001,
          changed => {
          },
          removed => {
          }
      },
      5.019003 => {
          delta_from => 5.019002,
          changed => {
          },
          removed => {
          }
      },
      5.019004 => {
          delta_from => 5.019003,
          changed => {
              'Module::Build::Base'   => '1',
              'Module::Build::Compat' => '1',
              'Module::Build::Config' => '1',
              'Module::Build::ConfigData'=> '1',
              'Module::Build::Cookbook'=> '1',
              'Module::Build::Dumper' => '1',
              'Module::Build::ModuleInfo'=> '1',
              'Module::Build::Notes'  => '1',
              'Module::Build::PPMMaker'=> '1',
              'Module::Build::Platform::Default'=> '1',
              'Module::Build::Platform::MacOS'=> '1',
              'Module::Build::Platform::Unix'=> '1',
              'Module::Build::Platform::VMS'=> '1',
              'Module::Build::Platform::VOS'=> '1',
              'Module::Build::Platform::Windows'=> '1',
              'Module::Build::Platform::aix'=> '1',
              'Module::Build::Platform::cygwin'=> '1',
              'Module::Build::Platform::darwin'=> '1',
              'Module::Build::Platform::os2'=> '1',
              'Module::Build::PodParser'=> '1',
              'Module::Build::Version'=> '1',
              'Module::Build::YAML'   => '1',
              'inc::latest'           => '1',
          },
          removed => {
          }
      },
      5.019005 => {
          delta_from => 5.019004,
          changed => {
          },
          removed => {
          }
      },
      5.019006 => {
          delta_from => 5.019005,
          changed => {
              'Package::Constants'    => '1',
          },
          removed => {
          }
      },
      5.019007 => {
          delta_from => 5.019006,
          changed => {
              'CGI'                   => '1',
              'CGI::Apache'           => '1',
              'CGI::Carp'             => '1',
              'CGI::Cookie'           => '1',
              'CGI::Fast'             => '1',
              'CGI::Pretty'           => '1',
              'CGI::Push'             => '1',
              'CGI::Switch'           => '1',
              'CGI::Util'             => '1',
          },
          removed => {
          }
      },
      5.019008 => {
          delta_from => 5.019007,
          changed => {
          },
          removed => {
          }
      },
      5.019009 => {
          delta_from => 5.019008,
          changed => {
          },
          removed => {
          }
      },
      5.01901 => {
          delta_from => 5.019009,
          changed => {
          },
          removed => {
          }
      },
      5.019011 => {
          delta_from => 5.019010,
          changed => {
          },
          removed => {
          }
      },
      5.020000 => {
          delta_from => 5.019011,
          changed => {
          },
          removed => {
          }
      },
      5.021000 => {
          delta_from => 5.020000,
          changed => {
          },
          removed => {
              'CGI'                   => 1,
              'CGI::Apache'           => 1,
              'CGI::Carp'             => 1,
              'CGI::Cookie'           => 1,
              'CGI::Fast'             => 1,
              'CGI::Pretty'           => 1,
              'CGI::Push'             => 1,
              'CGI::Switch'           => 1,
              'CGI::Util'             => 1,
              'Module::Build'         => 1,
              'Module::Build::Base'   => 1,
              'Module::Build::Compat' => 1,
              'Module::Build::Config' => 1,
              'Module::Build::ConfigData'=> 1,
              'Module::Build::Cookbook'=> 1,
              'Module::Build::Dumper' => 1,
              'Module::Build::ModuleInfo'=> 1,
              'Module::Build::Notes'  => 1,
              'Module::Build::PPMMaker'=> 1,
              'Module::Build::Platform::Default'=> 1,
              'Module::Build::Platform::MacOS'=> 1,
              'Module::Build::Platform::Unix'=> 1,
              'Module::Build::Platform::VMS'=> 1,
              'Module::Build::Platform::VOS'=> 1,
              'Module::Build::Platform::Windows'=> 1,
              'Module::Build::Platform::aix'=> 1,
              'Module::Build::Platform::cygwin'=> 1,
              'Module::Build::Platform::darwin'=> 1,
              'Module::Build::Platform::os2'=> 1,
              'Module::Build::PodParser'=> 1,
              'Module::Build::Version'=> 1,
              'Module::Build::YAML'   => 1,
              'Package::Constants'    => 1,
              'inc::latest'           => 1,
          }
      },
      5.021001 => {
          delta_from => 5.021000,
          changed => {
          },
          removed => {
          }
      },
      5.021002 => {
          delta_from => 5.021001,
          changed => {
          },
          removed => {
          }
      },
      5.021003 => {
          delta_from => 5.021002,
          changed => {
          },
          removed => {
          }
      },
      5.020001 => {
          delta_from => 5.020000,
          changed => {
          },
          removed => {
          }
      },
      5.021004 => {
          delta_from => 5.021003,
          changed => {
          },
          removed => {
          }
      },
      5.021005 => {
          delta_from => 5.021004,
          changed => {
          },
          removed => {
          }
      },
      5.021006 => {
          delta_from => 5.021005,
          changed => {
          },
          removed => {
          }
      },
      5.021007 => {
          delta_from => 5.021006,
          changed => {
          },
          removed => {
          }
      },
      5.021008 => {
          delta_from => 5.021007,
          changed => {
          },
          removed => {
          }
      },
      5.020002 => {
          delta_from => 5.020001,
          changed => {
          },
          removed => {
          }
      },
      5.021009 => {
          delta_from => 5.021008,
          changed => {
          },
          removed => {
          }
      },
      5.021010 => {
          delta_from => 5.021009,
          changed => {
          },
          removed => {
          }
      },
      5.021011 => {
          delta_from => 5.02101,
          changed => {
          },
          removed => {
          }
      },
      5.022000 => {
          delta_from => 5.021011,
          changed => {
          },
          removed => {
          }
      },
      5.023000 => {
          delta_from => 5.022000,
          changed => {
          },
          removed => {
          }
      },
      5.023001 => {
          delta_from => 5.023000,
          changed => {
          },
          removed => {
          }
      },
      5.023002 => {
          delta_from => 5.023001,
          changed => {
          },
          removed => {
          }
      },
      5.020003 => {
          delta_from => 5.020002,
          changed => {
          },
          removed => {
          }
      },
      5.023003 => {
          delta_from => 5.023002,
          changed => {
          },
          removed => {
          }
      },
      5.023004 => {
          delta_from => 5.023003,
          changed => {
          },
          removed => {
          }
      },
      5.023005 => {
          delta_from => 5.023004,
          changed => {
          },
          removed => {
          }
      },
      5.022001 => {
          delta_from => 5.022,
          changed => {
          },
          removed => {
          }
      },
      5.023006 => {
          delta_from => 5.023005,
          changed => {
          },
          removed => {
          }
      },
      5.023007 => {
          delta_from => 5.023006,
          changed => {
          },
          removed => {
          }
      },
      5.023008 => {
          delta_from => 5.023007,
          changed => {
          },
          removed => {
          }
      },
      5.023009 => {
          delta_from => 5.023008,
          changed => {
          },
          removed => {
          }
      },
      5.022002 => {
          delta_from => 5.022001,
          changed => {
          },
          removed => {
          }
      },
      5.024000 => {
          delta_from => 5.023009,
          changed => {
          },
          removed => {
          }
      },
      5.025000 => {
          delta_from => 5.024,
          changed => {
          },
          removed => {
          }
      },
      5.025001 => {
          delta_from => 5.025,
          changed => {
          },
          removed => {
          }
      },
      5.025002 => {
          delta_from => 5.025001,
          changed => {
          },
          removed => {
          }
      },
      5.025003 => {
          delta_from => 5.025002,
          changed => {
          },
          removed => {
          }
      },
      5.025004 => {
          delta_from => 5.025003,
          changed => {
          },
          removed => {
          }
      },
      5.025005 => {
          delta_from => 5.025004,
          changed => {
          },
          removed => {
          }
      },
      5.025006 => {
          delta_from => 5.025005,
          changed => {
          },
          removed => {
          }
      },
      5.025007 => {
          delta_from => 5.025006,
          changed => {
          },
          removed => {
          }
      },
      5.025008 => {
          delta_from => 5.025007,
          changed => {
          },
          removed => {
          }
      },
      5.022003 => {
          delta_from => 5.022002,
          changed => {
          },
          removed => {
          }
      },
      5.024001 => {
          delta_from => 5.024000,
          changed => {
          },
          removed => {
          }
      },
      5.025009 => {
          delta_from => 5.025008,
          changed => {
          },
          removed => {
          }
      },
      5.025010 => {
          delta_from => 5.025009,
          changed => {
          },
          removed => {
          }
      },
      5.025011 => {
          delta_from => 5.025010,
          changed => {
          },
          removed => {
          }
      },
      5.025012 => {
          delta_from => 5.025011,
          changed => {
          },
          removed => {
          }
      },
      5.026000 => {
          delta_from => 5.025012,
          changed => {
          },
          removed => {
          }
      },
      5.027000 => {
          delta_from => 5.026,
          changed => {
          },
          removed => {
          }
      },
      5.027001 => {
          delta_from => 5.027,
          changed => {
          },
          removed => {
          }
      },
      5.022004 => {
          delta_from => 5.022003,
          changed => {
          },
          removed => {
          }
      },
      5.024002 => {
          delta_from => 5.024001,
          changed => {
          },
          removed => {
          }
      },
      5.027002 => {
          delta_from => 5.027001,
          changed => {
          },
          removed => {
          }
      },
      5.027003 => {
          delta_from => 5.027002,
          changed => {
              'B::Debug'              => '1',
          },
          removed => {
          }
      },
      5.027004 => {
          delta_from => 5.027003,
          changed => {
          },
          removed => {
          }
      },
      5.024003 => {
          delta_from => 5.024002,
          changed => {
          },
          removed => {
          }
      },
      5.026001 => {
          delta_from => 5.026000,
          changed => {
          },
          removed => {
          }
      },
      5.027005 => {
          delta_from => 5.027004,
          changed => {
          },
          removed => {
          }
      },
      5.027006 => {
          delta_from => 5.027005,
          changed => {
          },
          removed => {
          }
      },
      5.027007 => {
          delta_from => 5.027006,
          changed => {
          },
          removed => {
          }
      },
      5.027008 => {
          delta_from => 5.027007,
          changed => {
          },
          removed => {
          }
      },
      5.027009 => {
          delta_from => 5.027008,
          changed => {
          },
          removed => {
          }
      },
      5.027010 => {
          delta_from => 5.027009,
          changed => {
          },
          removed => {
          }
      },
      5.024004 => {
          delta_from => 5.024003,
          changed => {
          },
          removed => {
          }
      },
      5.026002 => {
          delta_from => 5.026001,
          changed => {
          },
          removed => {
          }
      },
      5.027011 => {
          delta_from => 5.02701,
          changed => {
          },
          removed => {
          }
      },
      5.028000 => {
          delta_from => 5.027011,
          changed => {
          },
          removed => {
          }
      },
      5.029000 => {
          delta_from => 5.028,
          changed => {
          },
          removed => {
          }
      },
  );
  
  %deprecated = _undelta(\%deprecated);
  
  %upstream = (
      'App::Cpan'             => 'cpan',
      'App::Prove'            => 'cpan',
      'App::Prove::State'     => 'cpan',
      'App::Prove::State::Result'=> 'cpan',
      'App::Prove::State::Result::Test'=> 'cpan',
      'Archive::Tar'          => 'cpan',
      'Archive::Tar::Constant'=> 'cpan',
      'Archive::Tar::File'    => 'cpan',
      'AutoLoader'            => 'cpan',
      'AutoSplit'             => 'cpan',
      'B::Debug'              => 'cpan',
      'CPAN'                  => 'cpan',
      'CPAN::Author'          => 'cpan',
      'CPAN::Bundle'          => 'cpan',
      'CPAN::CacheMgr'        => 'cpan',
      'CPAN::Complete'        => 'cpan',
      'CPAN::Debug'           => 'cpan',
      'CPAN::DeferredCode'    => 'cpan',
      'CPAN::Distribution'    => 'cpan',
      'CPAN::Distroprefs'     => 'cpan',
      'CPAN::Distrostatus'    => 'cpan',
      'CPAN::Exception::RecursiveDependency'=> 'cpan',
      'CPAN::Exception::blocked_urllist'=> 'cpan',
      'CPAN::Exception::yaml_not_installed'=> 'cpan',
      'CPAN::Exception::yaml_process_error'=> 'cpan',
      'CPAN::FTP'             => 'cpan',
      'CPAN::FTP::netrc'      => 'cpan',
      'CPAN::FirstTime'       => 'cpan',
      'CPAN::HTTP::Client'    => 'cpan',
      'CPAN::HTTP::Credentials'=> 'cpan',
      'CPAN::HandleConfig'    => 'cpan',
      'CPAN::Index'           => 'cpan',
      'CPAN::InfoObj'         => 'cpan',
      'CPAN::Kwalify'         => 'cpan',
      'CPAN::LWP::UserAgent'  => 'cpan',
      'CPAN::Meta'            => 'cpan',
      'CPAN::Meta::Converter' => 'cpan',
      'CPAN::Meta::Feature'   => 'cpan',
      'CPAN::Meta::History'   => 'cpan',
      'CPAN::Meta::Merge'     => 'cpan',
      'CPAN::Meta::Prereqs'   => 'cpan',
      'CPAN::Meta::Requirements'=> 'cpan',
      'CPAN::Meta::Spec'      => 'cpan',
      'CPAN::Meta::Validator' => 'cpan',
      'CPAN::Meta::YAML'      => 'cpan',
      'CPAN::Mirrors'         => 'cpan',
      'CPAN::Module'          => 'cpan',
      'CPAN::Nox'             => 'cpan',
      'CPAN::Plugin'          => 'cpan',
      'CPAN::Plugin::Specfile'=> 'cpan',
      'CPAN::Prompt'          => 'cpan',
      'CPAN::Queue'           => 'cpan',
      'CPAN::Shell'           => 'cpan',
      'CPAN::Tarzip'          => 'cpan',
      'CPAN::URL'             => 'cpan',
      'CPAN::Version'         => 'cpan',
      'Compress::Raw::Bzip2'  => 'cpan',
      'Compress::Raw::Zlib'   => 'cpan',
      'Compress::Zlib'        => 'cpan',
      'Config::Perl::V'       => 'cpan',
      'DB_File'               => 'cpan',
      'Digest'                => 'cpan',
      'Digest::MD5'           => 'cpan',
      'Digest::SHA'           => 'cpan',
      'Digest::base'          => 'cpan',
      'Digest::file'          => 'cpan',
      'Encode'                => 'cpan',
      'Encode::Alias'         => 'cpan',
      'Encode::Byte'          => 'cpan',
      'Encode::CJKConstants'  => 'cpan',
      'Encode::CN'            => 'cpan',
      'Encode::CN::HZ'        => 'cpan',
      'Encode::Config'        => 'cpan',
      'Encode::EBCDIC'        => 'cpan',
      'Encode::Encoder'       => 'cpan',
      'Encode::Encoding'      => 'cpan',
      'Encode::GSM0338'       => 'cpan',
      'Encode::Guess'         => 'cpan',
      'Encode::JP'            => 'cpan',
      'Encode::JP::H2Z'       => 'cpan',
      'Encode::JP::JIS7'      => 'cpan',
      'Encode::KR'            => 'cpan',
      'Encode::KR::2022_KR'   => 'cpan',
      'Encode::MIME::Header'  => 'cpan',
      'Encode::MIME::Header::ISO_2022_JP'=> 'cpan',
      'Encode::MIME::Name'    => 'cpan',
      'Encode::Symbol'        => 'cpan',
      'Encode::TW'            => 'cpan',
      'Encode::Unicode'       => 'cpan',
      'Encode::Unicode::UTF7' => 'cpan',
      'ExtUtils::Command'     => 'cpan',
      'ExtUtils::Command::MM' => 'cpan',
      'ExtUtils::Constant'    => 'cpan',
      'ExtUtils::Constant::Base'=> 'cpan',
      'ExtUtils::Constant::ProxySubs'=> 'cpan',
      'ExtUtils::Constant::Utils'=> 'cpan',
      'ExtUtils::Constant::XS'=> 'cpan',
      'ExtUtils::Install'     => 'cpan',
      'ExtUtils::Installed'   => 'cpan',
      'ExtUtils::Liblist'     => 'cpan',
      'ExtUtils::Liblist::Kid'=> 'cpan',
      'ExtUtils::MM'          => 'cpan',
      'ExtUtils::MM_AIX'      => 'cpan',
      'ExtUtils::MM_Any'      => 'cpan',
      'ExtUtils::MM_BeOS'     => 'cpan',
      'ExtUtils::MM_Cygwin'   => 'cpan',
      'ExtUtils::MM_DOS'      => 'cpan',
      'ExtUtils::MM_Darwin'   => 'cpan',
      'ExtUtils::MM_MacOS'    => 'cpan',
      'ExtUtils::MM_NW5'      => 'cpan',
      'ExtUtils::MM_OS2'      => 'cpan',
      'ExtUtils::MM_QNX'      => 'cpan',
      'ExtUtils::MM_UWIN'     => 'cpan',
      'ExtUtils::MM_Unix'     => 'cpan',
      'ExtUtils::MM_VMS'      => 'cpan',
      'ExtUtils::MM_VOS'      => 'cpan',
      'ExtUtils::MM_Win32'    => 'cpan',
      'ExtUtils::MM_Win95'    => 'cpan',
      'ExtUtils::MY'          => 'cpan',
      'ExtUtils::MakeMaker'   => 'cpan',
      'ExtUtils::MakeMaker::Config'=> 'cpan',
      'ExtUtils::MakeMaker::Locale'=> 'cpan',
      'ExtUtils::MakeMaker::version'=> 'cpan',
      'ExtUtils::MakeMaker::version::regex'=> 'cpan',
      'ExtUtils::Manifest'    => 'cpan',
      'ExtUtils::Mkbootstrap' => 'cpan',
      'ExtUtils::Mksymlists'  => 'cpan',
      'ExtUtils::Packlist'    => 'cpan',
      'ExtUtils::testlib'     => 'cpan',
      'Fatal'                 => 'cpan',
      'File::Fetch'           => 'cpan',
      'File::GlobMapper'      => 'cpan',
      'File::Path'            => 'cpan',
      'File::Temp'            => 'cpan',
      'Filter::Util::Call'    => 'cpan',
      'Getopt::Long'          => 'cpan',
      'HTTP::Tiny'            => 'cpan',
      'IO::Compress::Adapter::Bzip2'=> 'cpan',
      'IO::Compress::Adapter::Deflate'=> 'cpan',
      'IO::Compress::Adapter::Identity'=> 'cpan',
      'IO::Compress::Base'    => 'cpan',
      'IO::Compress::Base::Common'=> 'cpan',
      'IO::Compress::Bzip2'   => 'cpan',
      'IO::Compress::Deflate' => 'cpan',
      'IO::Compress::Gzip'    => 'cpan',
      'IO::Compress::Gzip::Constants'=> 'cpan',
      'IO::Compress::RawDeflate'=> 'cpan',
      'IO::Compress::Zip'     => 'cpan',
      'IO::Compress::Zip::Constants'=> 'cpan',
      'IO::Compress::Zlib::Constants'=> 'cpan',
      'IO::Compress::Zlib::Extra'=> 'cpan',
      'IO::Socket::IP'        => 'cpan',
      'IO::Uncompress::Adapter::Bunzip2'=> 'cpan',
      'IO::Uncompress::Adapter::Identity'=> 'cpan',
      'IO::Uncompress::Adapter::Inflate'=> 'cpan',
      'IO::Uncompress::AnyInflate'=> 'cpan',
      'IO::Uncompress::AnyUncompress'=> 'cpan',
      'IO::Uncompress::Base'  => 'cpan',
      'IO::Uncompress::Bunzip2'=> 'cpan',
      'IO::Uncompress::Gunzip'=> 'cpan',
      'IO::Uncompress::Inflate'=> 'cpan',
      'IO::Uncompress::RawInflate'=> 'cpan',
      'IO::Uncompress::Unzip' => 'cpan',
      'IO::Zlib'              => 'cpan',
      'IPC::Cmd'              => 'cpan',
      'IPC::Msg'              => 'cpan',
      'IPC::Semaphore'        => 'cpan',
      'IPC::SharedMem'        => 'cpan',
      'IPC::SysV'             => 'cpan',
      'JSON::PP'              => 'cpan',
      'JSON::PP::Boolean'     => 'cpan',
      'List::Util'            => 'cpan',
      'List::Util::XS'        => 'cpan',
      'Locale::Codes'         => 'cpan',
      'Locale::Codes::Constants'=> 'cpan',
      'Locale::Codes::Country'=> 'cpan',
      'Locale::Codes::Country_Codes'=> 'cpan',
      'Locale::Codes::Country_Retired'=> 'cpan',
      'Locale::Codes::Currency'=> 'cpan',
      'Locale::Codes::Currency_Codes'=> 'cpan',
      'Locale::Codes::Currency_Retired'=> 'cpan',
      'Locale::Codes::LangExt'=> 'cpan',
      'Locale::Codes::LangExt_Codes'=> 'cpan',
      'Locale::Codes::LangExt_Retired'=> 'cpan',
      'Locale::Codes::LangFam'=> 'cpan',
      'Locale::Codes::LangFam_Codes'=> 'cpan',
      'Locale::Codes::LangFam_Retired'=> 'cpan',
      'Locale::Codes::LangVar'=> 'cpan',
      'Locale::Codes::LangVar_Codes'=> 'cpan',
      'Locale::Codes::LangVar_Retired'=> 'cpan',
      'Locale::Codes::Language'=> 'cpan',
      'Locale::Codes::Language_Codes'=> 'cpan',
      'Locale::Codes::Language_Retired'=> 'cpan',
      'Locale::Codes::Script' => 'cpan',
      'Locale::Codes::Script_Codes'=> 'cpan',
      'Locale::Codes::Script_Retired'=> 'cpan',
      'Locale::Country'       => 'cpan',
      'Locale::Currency'      => 'cpan',
      'Locale::Language'      => 'cpan',
      'Locale::Maketext::Simple'=> 'cpan',
      'Locale::Script'        => 'cpan',
      'MIME::Base64'          => 'cpan',
      'MIME::QuotedPrint'     => 'cpan',
      'Math::BigFloat'        => 'cpan',
      'Math::BigFloat::Trace' => 'cpan',
      'Math::BigInt'          => 'cpan',
      'Math::BigInt::Calc'    => 'cpan',
      'Math::BigInt::CalcEmu' => 'cpan',
      'Math::BigInt::FastCalc'=> 'cpan',
      'Math::BigInt::Lib'     => 'cpan',
      'Math::BigInt::Trace'   => 'cpan',
      'Math::BigRat'          => 'cpan',
      'Math::Complex'         => 'cpan',
      'Math::Trig'            => 'cpan',
      'Memoize'               => 'cpan',
      'Memoize::AnyDBM_File'  => 'cpan',
      'Memoize::Expire'       => 'cpan',
      'Memoize::ExpireFile'   => 'cpan',
      'Memoize::ExpireTest'   => 'cpan',
      'Memoize::NDBM_File'    => 'cpan',
      'Memoize::SDBM_File'    => 'cpan',
      'Memoize::Storable'     => 'cpan',
      'Module::Load'          => 'cpan',
      'Module::Load::Conditional'=> 'cpan',
      'Module::Loaded'        => 'cpan',
      'Module::Metadata'      => 'cpan',
      'NEXT'                  => 'cpan',
      'Net::Cmd'              => 'cpan',
      'Net::Config'           => 'cpan',
      'Net::Domain'           => 'cpan',
      'Net::FTP'              => 'cpan',
      'Net::FTP::A'           => 'cpan',
      'Net::FTP::E'           => 'cpan',
      'Net::FTP::I'           => 'cpan',
      'Net::FTP::L'           => 'cpan',
      'Net::FTP::dataconn'    => 'cpan',
      'Net::NNTP'             => 'cpan',
      'Net::Netrc'            => 'cpan',
      'Net::POP3'             => 'cpan',
      'Net::SMTP'             => 'cpan',
      'Net::Time'             => 'cpan',
      'Params::Check'         => 'cpan',
      'Parse::CPAN::Meta'     => 'cpan',
      'Perl::OSType'          => 'cpan',
      'PerlIO::via::QuotedPrint'=> 'cpan',
      'Pod::Checker'          => 'cpan',
      'Pod::Escapes'          => 'cpan',
      'Pod::Find'             => 'cpan',
      'Pod::InputObjects'     => 'cpan',
      'Pod::Man'              => 'cpan',
      'Pod::ParseLink'        => 'cpan',
      'Pod::ParseUtils'       => 'cpan',
      'Pod::Parser'           => 'cpan',
      'Pod::Perldoc'          => 'cpan',
      'Pod::Perldoc::BaseTo'  => 'cpan',
      'Pod::Perldoc::GetOptsOO'=> 'cpan',
      'Pod::Perldoc::ToANSI'  => 'cpan',
      'Pod::Perldoc::ToChecker'=> 'cpan',
      'Pod::Perldoc::ToMan'   => 'cpan',
      'Pod::Perldoc::ToNroff' => 'cpan',
      'Pod::Perldoc::ToPod'   => 'cpan',
      'Pod::Perldoc::ToRtf'   => 'cpan',
      'Pod::Perldoc::ToTerm'  => 'cpan',
      'Pod::Perldoc::ToText'  => 'cpan',
      'Pod::Perldoc::ToTk'    => 'cpan',
      'Pod::Perldoc::ToXml'   => 'cpan',
      'Pod::PlainText'        => 'cpan',
      'Pod::Select'           => 'cpan',
      'Pod::Simple'           => 'cpan',
      'Pod::Simple::BlackBox' => 'cpan',
      'Pod::Simple::Checker'  => 'cpan',
      'Pod::Simple::Debug'    => 'cpan',
      'Pod::Simple::DumpAsText'=> 'cpan',
      'Pod::Simple::DumpAsXML'=> 'cpan',
      'Pod::Simple::HTML'     => 'cpan',
      'Pod::Simple::HTMLBatch'=> 'cpan',
      'Pod::Simple::HTMLLegacy'=> 'cpan',
      'Pod::Simple::LinkSection'=> 'cpan',
      'Pod::Simple::Methody'  => 'cpan',
      'Pod::Simple::Progress' => 'cpan',
      'Pod::Simple::PullParser'=> 'cpan',
      'Pod::Simple::PullParserEndToken'=> 'cpan',
      'Pod::Simple::PullParserStartToken'=> 'cpan',
      'Pod::Simple::PullParserTextToken'=> 'cpan',
      'Pod::Simple::PullParserToken'=> 'cpan',
      'Pod::Simple::RTF'      => 'cpan',
      'Pod::Simple::Search'   => 'cpan',
      'Pod::Simple::SimpleTree'=> 'cpan',
      'Pod::Simple::Text'     => 'cpan',
      'Pod::Simple::TextContent'=> 'cpan',
      'Pod::Simple::TiedOutFH'=> 'cpan',
      'Pod::Simple::Transcode'=> 'cpan',
      'Pod::Simple::TranscodeDumb'=> 'cpan',
      'Pod::Simple::TranscodeSmart'=> 'cpan',
      'Pod::Simple::XHTML'    => 'cpan',
      'Pod::Simple::XMLOutStream'=> 'cpan',
      'Pod::Text'             => 'cpan',
      'Pod::Text::Color'      => 'cpan',
      'Pod::Text::Overstrike' => 'cpan',
      'Pod::Text::Termcap'    => 'cpan',
      'Pod::Usage'            => 'cpan',
      'Scalar::Util'          => 'cpan',
      'Socket'                => 'cpan',
      'Sub::Util'             => 'cpan',
      'Sys::Syslog'           => 'cpan',
      'Sys::Syslog::Win32'    => 'cpan',
      'TAP::Base'             => 'cpan',
      'TAP::Formatter::Base'  => 'cpan',
      'TAP::Formatter::Color' => 'cpan',
      'TAP::Formatter::Console'=> 'cpan',
      'TAP::Formatter::Console::ParallelSession'=> 'cpan',
      'TAP::Formatter::Console::Session'=> 'cpan',
      'TAP::Formatter::File'  => 'cpan',
      'TAP::Formatter::File::Session'=> 'cpan',
      'TAP::Formatter::Session'=> 'cpan',
      'TAP::Harness'          => 'cpan',
      'TAP::Harness::Env'     => 'cpan',
      'TAP::Object'           => 'cpan',
      'TAP::Parser'           => 'cpan',
      'TAP::Parser::Aggregator'=> 'cpan',
      'TAP::Parser::Grammar'  => 'cpan',
      'TAP::Parser::Iterator' => 'cpan',
      'TAP::Parser::Iterator::Array'=> 'cpan',
      'TAP::Parser::Iterator::Process'=> 'cpan',
      'TAP::Parser::Iterator::Stream'=> 'cpan',
      'TAP::Parser::IteratorFactory'=> 'cpan',
      'TAP::Parser::Multiplexer'=> 'cpan',
      'TAP::Parser::Result'   => 'cpan',
      'TAP::Parser::Result::Bailout'=> 'cpan',
      'TAP::Parser::Result::Comment'=> 'cpan',
      'TAP::Parser::Result::Plan'=> 'cpan',
      'TAP::Parser::Result::Pragma'=> 'cpan',
      'TAP::Parser::Result::Test'=> 'cpan',
      'TAP::Parser::Result::Unknown'=> 'cpan',
      'TAP::Parser::Result::Version'=> 'cpan',
      'TAP::Parser::Result::YAML'=> 'cpan',
      'TAP::Parser::ResultFactory'=> 'cpan',
      'TAP::Parser::Scheduler'=> 'cpan',
      'TAP::Parser::Scheduler::Job'=> 'cpan',
      'TAP::Parser::Scheduler::Spinner'=> 'cpan',
      'TAP::Parser::Source'   => 'cpan',
      'TAP::Parser::SourceHandler'=> 'cpan',
      'TAP::Parser::SourceHandler::Executable'=> 'cpan',
      'TAP::Parser::SourceHandler::File'=> 'cpan',
      'TAP::Parser::SourceHandler::Handle'=> 'cpan',
      'TAP::Parser::SourceHandler::Perl'=> 'cpan',
      'TAP::Parser::SourceHandler::RawTAP'=> 'cpan',
      'TAP::Parser::YAMLish::Reader'=> 'cpan',
      'TAP::Parser::YAMLish::Writer'=> 'cpan',
      'Term::ANSIColor'       => 'cpan',
      'Term::Cap'             => 'cpan',
      'Test2'                 => 'cpan',
      'Test2::API'            => 'cpan',
      'Test2::API::Breakage'  => 'cpan',
      'Test2::API::Context'   => 'cpan',
      'Test2::API::Instance'  => 'cpan',
      'Test2::API::Stack'     => 'cpan',
      'Test2::Event'          => 'cpan',
      'Test2::Event::Bail'    => 'cpan',
      'Test2::Event::Diag'    => 'cpan',
      'Test2::Event::Encoding'=> 'cpan',
      'Test2::Event::Exception'=> 'cpan',
      'Test2::Event::Fail'    => 'cpan',
      'Test2::Event::Generic' => 'cpan',
      'Test2::Event::Note'    => 'cpan',
      'Test2::Event::Ok'      => 'cpan',
      'Test2::Event::Pass'    => 'cpan',
      'Test2::Event::Plan'    => 'cpan',
      'Test2::Event::Skip'    => 'cpan',
      'Test2::Event::Subtest' => 'cpan',
      'Test2::Event::TAP::Version'=> 'cpan',
      'Test2::Event::V2'      => 'cpan',
      'Test2::Event::Waiting' => 'cpan',
      'Test2::EventFacet'     => 'cpan',
      'Test2::EventFacet::About'=> 'cpan',
      'Test2::EventFacet::Amnesty'=> 'cpan',
      'Test2::EventFacet::Assert'=> 'cpan',
      'Test2::EventFacet::Control'=> 'cpan',
      'Test2::EventFacet::Error'=> 'cpan',
      'Test2::EventFacet::Hub'=> 'cpan',
      'Test2::EventFacet::Info'=> 'cpan',
      'Test2::EventFacet::Meta'=> 'cpan',
      'Test2::EventFacet::Parent'=> 'cpan',
      'Test2::EventFacet::Plan'=> 'cpan',
      'Test2::EventFacet::Render'=> 'cpan',
      'Test2::EventFacet::Trace'=> 'cpan',
      'Test2::Formatter'      => 'cpan',
      'Test2::Formatter::TAP' => 'cpan',
      'Test2::Hub'            => 'cpan',
      'Test2::Hub::Interceptor'=> 'cpan',
      'Test2::Hub::Interceptor::Terminator'=> 'cpan',
      'Test2::Hub::Subtest'   => 'cpan',
      'Test2::IPC'            => 'cpan',
      'Test2::IPC::Driver'    => 'cpan',
      'Test2::IPC::Driver::Files'=> 'cpan',
      'Test2::Tools::Tiny'    => 'cpan',
      'Test2::Util'           => 'cpan',
      'Test2::Util::ExternalMeta'=> 'cpan',
      'Test2::Util::Facets2Legacy'=> 'cpan',
      'Test2::Util::HashBase' => 'cpan',
      'Test2::Util::Trace'    => 'cpan',
      'Test::Builder'         => 'cpan',
      'Test::Builder::Formatter'=> 'cpan',
      'Test::Builder::IO::Scalar'=> 'cpan',
      'Test::Builder::Module' => 'cpan',
      'Test::Builder::Tester' => 'cpan',
      'Test::Builder::Tester::Color'=> 'cpan',
      'Test::Builder::TodoDiag'=> 'cpan',
      'Test::Harness'         => 'cpan',
      'Test::More'            => 'cpan',
      'Test::Simple'          => 'cpan',
      'Test::Tester'          => 'cpan',
      'Test::Tester::Capture' => 'cpan',
      'Test::Tester::CaptureRunner'=> 'cpan',
      'Test::Tester::Delegate'=> 'cpan',
      'Test::use::ok'         => 'cpan',
      'Text::Balanced'        => 'cpan',
      'Text::ParseWords'      => 'cpan',
      'Text::Tabs'            => 'cpan',
      'Text::Wrap'            => 'cpan',
      'Tie::RefHash'          => 'cpan',
      'Time::Local'           => 'cpan',
      'Time::Piece'           => 'cpan',
      'Time::Seconds'         => 'cpan',
      'Unicode::Collate'      => 'cpan',
      'Unicode::Collate::CJK::Big5'=> 'cpan',
      'Unicode::Collate::CJK::GB2312'=> 'cpan',
      'Unicode::Collate::CJK::JISX0208'=> 'cpan',
      'Unicode::Collate::CJK::Korean'=> 'cpan',
      'Unicode::Collate::CJK::Pinyin'=> 'cpan',
      'Unicode::Collate::CJK::Stroke'=> 'cpan',
      'Unicode::Collate::CJK::Zhuyin'=> 'cpan',
      'Unicode::Collate::Locale'=> 'cpan',
      'Win32'                 => 'cpan',
      'Win32API::File'        => 'cpan',
      'Win32API::File::inc::ExtUtils::Myconst2perl'=> 'cpan',
      'autodie'               => 'cpan',
      'autodie::Scope::Guard' => 'cpan',
      'autodie::Scope::GuardStack'=> 'cpan',
      'autodie::Util'         => 'cpan',
      'autodie::exception'    => 'cpan',
      'autodie::exception::system'=> 'cpan',
      'autodie::hints'        => 'cpan',
      'autodie::skip'         => 'cpan',
      'bigint'                => 'cpan',
      'bignum'                => 'cpan',
      'bigrat'                => 'cpan',
      'encoding'              => 'cpan',
      'experimental'          => 'cpan',
      'ok'                    => 'cpan',
      'parent'                => 'cpan',
      'perlfaq'               => 'cpan',
      'version'               => 'cpan',
      'version::regex'        => 'cpan',
  );
  
  %bug_tracker = (
      'App::Cpan'             => undef,
      'App::Prove'            => 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'App::Prove::State'     => 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'App::Prove::State::Result'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'App::Prove::State::Result::Test'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'Archive::Tar'          => undef,
      'Archive::Tar::Constant'=> undef,
      'Archive::Tar::File'    => undef,
      'B::Debug'              => undef,
      'CPAN'                  => undef,
      'CPAN::Author'          => undef,
      'CPAN::Bundle'          => undef,
      'CPAN::CacheMgr'        => undef,
      'CPAN::Complete'        => undef,
      'CPAN::Debug'           => undef,
      'CPAN::DeferredCode'    => undef,
      'CPAN::Distribution'    => undef,
      'CPAN::Distroprefs'     => undef,
      'CPAN::Distrostatus'    => undef,
      'CPAN::Exception::RecursiveDependency'=> undef,
      'CPAN::Exception::blocked_urllist'=> undef,
      'CPAN::Exception::yaml_not_installed'=> undef,
      'CPAN::Exception::yaml_process_error'=> undef,
      'CPAN::FTP'             => undef,
      'CPAN::FTP::netrc'      => undef,
      'CPAN::FirstTime'       => undef,
      'CPAN::HTTP::Client'    => undef,
      'CPAN::HTTP::Credentials'=> undef,
      'CPAN::HandleConfig'    => undef,
      'CPAN::Index'           => undef,
      'CPAN::InfoObj'         => undef,
      'CPAN::Kwalify'         => undef,
      'CPAN::LWP::UserAgent'  => undef,
      'CPAN::Meta'            => 'https://github.com/Perl-Toolchain-Gang/CPAN-Meta/issues',
      'CPAN::Meta::Converter' => 'https://github.com/Perl-Toolchain-Gang/CPAN-Meta/issues',
      'CPAN::Meta::Feature'   => 'https://github.com/Perl-Toolchain-Gang/CPAN-Meta/issues',
      'CPAN::Meta::History'   => 'https://github.com/Perl-Toolchain-Gang/CPAN-Meta/issues',
      'CPAN::Meta::Merge'     => 'https://github.com/Perl-Toolchain-Gang/CPAN-Meta/issues',
      'CPAN::Meta::Prereqs'   => 'https://github.com/Perl-Toolchain-Gang/CPAN-Meta/issues',
      'CPAN::Meta::Requirements'=> 'https://github.com/Perl-Toolchain-Gang/CPAN-Meta-Requirements/issues',
      'CPAN::Meta::Spec'      => 'https://github.com/Perl-Toolchain-Gang/CPAN-Meta/issues',
      'CPAN::Meta::Validator' => 'https://github.com/Perl-Toolchain-Gang/CPAN-Meta/issues',
      'CPAN::Meta::YAML'      => 'https://github.com/Perl-Toolchain-Gang/YAML-Tiny/issues',
      'CPAN::Mirrors'         => undef,
      'CPAN::Module'          => undef,
      'CPAN::Nox'             => undef,
      'CPAN::Plugin'          => undef,
      'CPAN::Plugin::Specfile'=> undef,
      'CPAN::Prompt'          => undef,
      'CPAN::Queue'           => undef,
      'CPAN::Shell'           => undef,
      'CPAN::Tarzip'          => undef,
      'CPAN::URL'             => undef,
      'CPAN::Version'         => undef,
      'Compress::Raw::Bzip2'  => undef,
      'Compress::Raw::Zlib'   => undef,
      'Compress::Zlib'        => undef,
      'Config::Perl::V'       => undef,
      'DB_File'               => undef,
      'Digest'                => undef,
      'Digest::MD5'           => undef,
      'Digest::SHA'           => undef,
      'Digest::base'          => undef,
      'Digest::file'          => undef,
      'Encode'                => undef,
      'Encode::Alias'         => undef,
      'Encode::Byte'          => undef,
      'Encode::CJKConstants'  => undef,
      'Encode::CN'            => undef,
      'Encode::CN::HZ'        => undef,
      'Encode::Config'        => undef,
      'Encode::EBCDIC'        => undef,
      'Encode::Encoder'       => undef,
      'Encode::Encoding'      => undef,
      'Encode::GSM0338'       => undef,
      'Encode::Guess'         => undef,
      'Encode::JP'            => undef,
      'Encode::JP::H2Z'       => undef,
      'Encode::JP::JIS7'      => undef,
      'Encode::KR'            => undef,
      'Encode::KR::2022_KR'   => undef,
      'Encode::MIME::Header'  => undef,
      'Encode::MIME::Header::ISO_2022_JP'=> undef,
      'Encode::MIME::Name'    => undef,
      'Encode::Symbol'        => undef,
      'Encode::TW'            => undef,
      'Encode::Unicode'       => undef,
      'Encode::Unicode::UTF7' => undef,
      'ExtUtils::Command'     => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::Command::MM' => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::Constant'    => undef,
      'ExtUtils::Constant::Base'=> undef,
      'ExtUtils::Constant::ProxySubs'=> undef,
      'ExtUtils::Constant::Utils'=> undef,
      'ExtUtils::Constant::XS'=> undef,
      'ExtUtils::Install'     => 'https://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-Install',
      'ExtUtils::Installed'   => 'https://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-Install',
      'ExtUtils::Liblist'     => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::Liblist::Kid'=> 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MM'          => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MM_AIX'      => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MM_Any'      => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MM_BeOS'     => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MM_Cygwin'   => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MM_DOS'      => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MM_Darwin'   => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MM_MacOS'    => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MM_NW5'      => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MM_OS2'      => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MM_QNX'      => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MM_UWIN'     => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MM_Unix'     => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MM_VMS'      => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MM_VOS'      => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MM_Win32'    => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MM_Win95'    => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MY'          => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MakeMaker'   => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MakeMaker::Config'=> 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MakeMaker::Locale'=> 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MakeMaker::version'=> 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::MakeMaker::version::regex'=> 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::Manifest'    => 'http://github.com/Perl-Toolchain-Gang/ExtUtils-Manifest/issues',
      'ExtUtils::Mkbootstrap' => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::Mksymlists'  => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'ExtUtils::Packlist'    => 'https://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-Install',
      'ExtUtils::testlib'     => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=ExtUtils-MakeMaker',
      'Fatal'                 => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=autodie',
      'File::Fetch'           => undef,
      'File::GlobMapper'      => undef,
      'File::Path'            => undef,
      'File::Temp'            => 'https://rt.cpan.org/Public/Dist/Display.html?Name=File-Temp',
      'Filter::Util::Call'    => undef,
      'Getopt::Long'          => undef,
      'HTTP::Tiny'            => 'https://github.com/chansen/p5-http-tiny/issues',
      'IO::Compress::Adapter::Bzip2'=> undef,
      'IO::Compress::Adapter::Deflate'=> undef,
      'IO::Compress::Adapter::Identity'=> undef,
      'IO::Compress::Base'    => undef,
      'IO::Compress::Base::Common'=> undef,
      'IO::Compress::Bzip2'   => undef,
      'IO::Compress::Deflate' => undef,
      'IO::Compress::Gzip'    => undef,
      'IO::Compress::Gzip::Constants'=> undef,
      'IO::Compress::RawDeflate'=> undef,
      'IO::Compress::Zip'     => undef,
      'IO::Compress::Zip::Constants'=> undef,
      'IO::Compress::Zlib::Constants'=> undef,
      'IO::Compress::Zlib::Extra'=> undef,
      'IO::Socket::IP'        => undef,
      'IO::Uncompress::Adapter::Bunzip2'=> undef,
      'IO::Uncompress::Adapter::Identity'=> undef,
      'IO::Uncompress::Adapter::Inflate'=> undef,
      'IO::Uncompress::AnyInflate'=> undef,
      'IO::Uncompress::AnyUncompress'=> undef,
      'IO::Uncompress::Base'  => undef,
      'IO::Uncompress::Bunzip2'=> undef,
      'IO::Uncompress::Gunzip'=> undef,
      'IO::Uncompress::Inflate'=> undef,
      'IO::Uncompress::RawInflate'=> undef,
      'IO::Uncompress::Unzip' => undef,
      'IO::Zlib'              => undef,
      'IPC::Cmd'              => undef,
      'IPC::Msg'              => undef,
      'IPC::Semaphore'        => undef,
      'IPC::SharedMem'        => undef,
      'IPC::SysV'             => undef,
      'JSON::PP'              => undef,
      'JSON::PP::Boolean'     => undef,
      'List::Util'            => 'https://rt.cpan.org/Public/Dist/Display.html?Name=Scalar-List-Utils',
      'List::Util::XS'        => 'https://rt.cpan.org/Public/Dist/Display.html?Name=Scalar-List-Utils',
      'Locale::Codes'         => undef,
      'Locale::Codes::Constants'=> undef,
      'Locale::Codes::Country'=> undef,
      'Locale::Codes::Country_Codes'=> undef,
      'Locale::Codes::Country_Retired'=> undef,
      'Locale::Codes::Currency'=> undef,
      'Locale::Codes::Currency_Codes'=> undef,
      'Locale::Codes::Currency_Retired'=> undef,
      'Locale::Codes::LangExt'=> undef,
      'Locale::Codes::LangExt_Codes'=> undef,
      'Locale::Codes::LangExt_Retired'=> undef,
      'Locale::Codes::LangFam'=> undef,
      'Locale::Codes::LangFam_Codes'=> undef,
      'Locale::Codes::LangFam_Retired'=> undef,
      'Locale::Codes::LangVar'=> undef,
      'Locale::Codes::LangVar_Codes'=> undef,
      'Locale::Codes::LangVar_Retired'=> undef,
      'Locale::Codes::Language'=> undef,
      'Locale::Codes::Language_Codes'=> undef,
      'Locale::Codes::Language_Retired'=> undef,
      'Locale::Codes::Script' => undef,
      'Locale::Codes::Script_Codes'=> undef,
      'Locale::Codes::Script_Retired'=> undef,
      'Locale::Country'       => undef,
      'Locale::Currency'      => undef,
      'Locale::Language'      => undef,
      'Locale::Maketext::Simple'=> undef,
      'Locale::Script'        => undef,
      'MIME::Base64'          => undef,
      'MIME::QuotedPrint'     => undef,
      'Math::BigFloat'        => undef,
      'Math::BigFloat::Trace' => undef,
      'Math::BigInt'          => undef,
      'Math::BigInt::Calc'    => undef,
      'Math::BigInt::CalcEmu' => undef,
      'Math::BigInt::FastCalc'=> undef,
      'Math::BigInt::Lib'     => undef,
      'Math::BigInt::Trace'   => undef,
      'Math::BigRat'          => undef,
      'Math::Complex'         => undef,
      'Math::Trig'            => undef,
      'Memoize'               => undef,
      'Memoize::AnyDBM_File'  => undef,
      'Memoize::Expire'       => undef,
      'Memoize::ExpireFile'   => undef,
      'Memoize::ExpireTest'   => undef,
      'Memoize::NDBM_File'    => undef,
      'Memoize::SDBM_File'    => undef,
      'Memoize::Storable'     => undef,
      'Module::Load'          => undef,
      'Module::Load::Conditional'=> undef,
      'Module::Loaded'        => undef,
      'Module::Metadata'      => 'https://rt.cpan.org/Public/Dist/Display.html?Name=Module-Metadata',
      'NEXT'                  => undef,
      'Net::Cmd'              => undef,
      'Net::Config'           => undef,
      'Net::Domain'           => undef,
      'Net::FTP'              => undef,
      'Net::FTP::A'           => undef,
      'Net::FTP::E'           => undef,
      'Net::FTP::I'           => undef,
      'Net::FTP::L'           => undef,
      'Net::FTP::dataconn'    => undef,
      'Net::NNTP'             => undef,
      'Net::Netrc'            => undef,
      'Net::POP3'             => undef,
      'Net::SMTP'             => undef,
      'Net::Time'             => undef,
      'Params::Check'         => undef,
      'Parse::CPAN::Meta'     => 'https://github.com/Perl-Toolchain-Gang/CPAN-Meta/issues',
      'Perl::OSType'          => 'https://github.com/Perl-Toolchain-Gang/Perl-OSType/issues',
      'PerlIO::via::QuotedPrint'=> undef,
      'Pod::Checker'          => undef,
      'Pod::Escapes'          => undef,
      'Pod::Find'             => undef,
      'Pod::InputObjects'     => undef,
      'Pod::Man'              => 'https://rt.cpan.org/Dist/Display.html?Name=podlators',
      'Pod::ParseLink'        => 'https://rt.cpan.org/Dist/Display.html?Name=podlators',
      'Pod::ParseUtils'       => undef,
      'Pod::Parser'           => undef,
      'Pod::Perldoc'          => undef,
      'Pod::Perldoc::BaseTo'  => undef,
      'Pod::Perldoc::GetOptsOO'=> undef,
      'Pod::Perldoc::ToANSI'  => undef,
      'Pod::Perldoc::ToChecker'=> undef,
      'Pod::Perldoc::ToMan'   => undef,
      'Pod::Perldoc::ToNroff' => undef,
      'Pod::Perldoc::ToPod'   => undef,
      'Pod::Perldoc::ToRtf'   => undef,
      'Pod::Perldoc::ToTerm'  => undef,
      'Pod::Perldoc::ToText'  => undef,
      'Pod::Perldoc::ToTk'    => undef,
      'Pod::Perldoc::ToXml'   => undef,
      'Pod::PlainText'        => undef,
      'Pod::Select'           => undef,
      'Pod::Simple'           => 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::BlackBox' => 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::Checker'  => 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::Debug'    => 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::DumpAsText'=> 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::DumpAsXML'=> 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::HTML'     => 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::HTMLBatch'=> 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::HTMLLegacy'=> 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::LinkSection'=> 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::Methody'  => 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::Progress' => 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::PullParser'=> 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::PullParserEndToken'=> 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::PullParserStartToken'=> 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::PullParserTextToken'=> 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::PullParserToken'=> 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::RTF'      => 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::Search'   => 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::SimpleTree'=> 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::Text'     => 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::TextContent'=> 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::TiedOutFH'=> 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::Transcode'=> 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::TranscodeDumb'=> 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::TranscodeSmart'=> 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::XHTML'    => 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Simple::XMLOutStream'=> 'https://github.com/perl-pod/pod-simple/issues',
      'Pod::Text'             => 'https://rt.cpan.org/Dist/Display.html?Name=podlators',
      'Pod::Text::Color'      => 'https://rt.cpan.org/Dist/Display.html?Name=podlators',
      'Pod::Text::Overstrike' => 'https://rt.cpan.org/Dist/Display.html?Name=podlators',
      'Pod::Text::Termcap'    => 'https://rt.cpan.org/Dist/Display.html?Name=podlators',
      'Pod::Usage'            => undef,
      'Scalar::Util'          => 'https://rt.cpan.org/Public/Dist/Display.html?Name=Scalar-List-Utils',
      'Socket'                => undef,
      'Sub::Util'             => 'https://rt.cpan.org/Public/Dist/Display.html?Name=Scalar-List-Utils',
      'Sys::Syslog'           => undef,
      'Sys::Syslog::Win32'    => undef,
      'TAP::Base'             => 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Formatter::Base'  => 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Formatter::Color' => 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Formatter::Console'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Formatter::Console::ParallelSession'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Formatter::Console::Session'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Formatter::File'  => 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Formatter::File::Session'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Formatter::Session'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Harness'          => 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Harness::Env'     => 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Object'           => 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser'           => 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Aggregator'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Grammar'  => 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Iterator' => 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Iterator::Array'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Iterator::Process'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Iterator::Stream'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::IteratorFactory'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Multiplexer'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Result'   => 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Result::Bailout'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Result::Comment'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Result::Plan'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Result::Pragma'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Result::Test'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Result::Unknown'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Result::Version'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Result::YAML'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::ResultFactory'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Scheduler'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Scheduler::Job'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Scheduler::Spinner'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::Source'   => 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::SourceHandler'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::SourceHandler::Executable'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::SourceHandler::File'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::SourceHandler::Handle'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::SourceHandler::Perl'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::SourceHandler::RawTAP'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::YAMLish::Reader'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'TAP::Parser::YAMLish::Writer'=> 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'Term::ANSIColor'       => 'https://rt.cpan.org/Dist/Display.html?Name=Term-ANSIColor',
      'Term::Cap'             => undef,
      'Test2'                 => 'http://github.com/Test-More/test-more/issues',
      'Test2::API'            => 'http://github.com/Test-More/test-more/issues',
      'Test2::API::Breakage'  => 'http://github.com/Test-More/test-more/issues',
      'Test2::API::Context'   => 'http://github.com/Test-More/test-more/issues',
      'Test2::API::Instance'  => 'http://github.com/Test-More/test-more/issues',
      'Test2::API::Stack'     => 'http://github.com/Test-More/test-more/issues',
      'Test2::Event'          => 'http://github.com/Test-More/test-more/issues',
      'Test2::Event::Bail'    => 'http://github.com/Test-More/test-more/issues',
      'Test2::Event::Diag'    => 'http://github.com/Test-More/test-more/issues',
      'Test2::Event::Encoding'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::Event::Exception'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::Event::Fail'    => 'http://github.com/Test-More/test-more/issues',
      'Test2::Event::Generic' => 'http://github.com/Test-More/test-more/issues',
      'Test2::Event::Note'    => 'http://github.com/Test-More/test-more/issues',
      'Test2::Event::Ok'      => 'http://github.com/Test-More/test-more/issues',
      'Test2::Event::Pass'    => 'http://github.com/Test-More/test-more/issues',
      'Test2::Event::Plan'    => 'http://github.com/Test-More/test-more/issues',
      'Test2::Event::Skip'    => 'http://github.com/Test-More/test-more/issues',
      'Test2::Event::Subtest' => 'http://github.com/Test-More/test-more/issues',
      'Test2::Event::TAP::Version'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::Event::V2'      => 'http://github.com/Test-More/test-more/issues',
      'Test2::Event::Waiting' => 'http://github.com/Test-More/test-more/issues',
      'Test2::EventFacet'     => 'http://github.com/Test-More/test-more/issues',
      'Test2::EventFacet::About'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::EventFacet::Amnesty'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::EventFacet::Assert'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::EventFacet::Control'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::EventFacet::Error'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::EventFacet::Hub'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::EventFacet::Info'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::EventFacet::Meta'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::EventFacet::Parent'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::EventFacet::Plan'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::EventFacet::Render'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::EventFacet::Trace'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::Formatter'      => 'http://github.com/Test-More/test-more/issues',
      'Test2::Formatter::TAP' => 'http://github.com/Test-More/test-more/issues',
      'Test2::Hub'            => 'http://github.com/Test-More/test-more/issues',
      'Test2::Hub::Interceptor'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::Hub::Interceptor::Terminator'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::Hub::Subtest'   => 'http://github.com/Test-More/test-more/issues',
      'Test2::IPC'            => 'http://github.com/Test-More/test-more/issues',
      'Test2::IPC::Driver'    => 'http://github.com/Test-More/test-more/issues',
      'Test2::IPC::Driver::Files'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::Tools::Tiny'    => 'http://github.com/Test-More/test-more/issues',
      'Test2::Util'           => 'http://github.com/Test-More/test-more/issues',
      'Test2::Util::ExternalMeta'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::Util::Facets2Legacy'=> 'http://github.com/Test-More/test-more/issues',
      'Test2::Util::HashBase' => 'http://github.com/Test-More/test-more/issues',
      'Test2::Util::Trace'    => 'http://github.com/Test-More/test-more/issues',
      'Test::Builder'         => 'http://github.com/Test-More/test-more/issues',
      'Test::Builder::Formatter'=> 'http://github.com/Test-More/test-more/issues',
      'Test::Builder::IO::Scalar'=> 'http://github.com/Test-More/test-more/issues',
      'Test::Builder::Module' => 'http://github.com/Test-More/test-more/issues',
      'Test::Builder::Tester' => 'http://github.com/Test-More/test-more/issues',
      'Test::Builder::Tester::Color'=> 'http://github.com/Test-More/test-more/issues',
      'Test::Builder::TodoDiag'=> 'http://github.com/Test-More/test-more/issues',
      'Test::Harness'         => 'http://rt.cpan.org/Public/Dist/Display.html?Name=Test-Harness',
      'Test::More'            => 'http://github.com/Test-More/test-more/issues',
      'Test::Simple'          => 'http://github.com/Test-More/test-more/issues',
      'Test::Tester'          => 'http://github.com/Test-More/test-more/issues',
      'Test::Tester::Capture' => 'http://github.com/Test-More/test-more/issues',
      'Test::Tester::CaptureRunner'=> 'http://github.com/Test-More/test-more/issues',
      'Test::Tester::Delegate'=> 'http://github.com/Test-More/test-more/issues',
      'Test::use::ok'         => 'http://github.com/Test-More/test-more/issues',
      'Text::Balanced'        => undef,
      'Text::ParseWords'      => undef,
      'Text::Tabs'            => undef,
      'Text::Wrap'            => undef,
      'Tie::RefHash'          => undef,
      'Time::Local'           => 'https://github.com/houseabsolute/Time-Local/issues',
      'Time::Piece'           => undef,
      'Time::Seconds'         => undef,
      'Unicode::Collate'      => undef,
      'Unicode::Collate::CJK::Big5'=> undef,
      'Unicode::Collate::CJK::GB2312'=> undef,
      'Unicode::Collate::CJK::JISX0208'=> undef,
      'Unicode::Collate::CJK::Korean'=> undef,
      'Unicode::Collate::CJK::Pinyin'=> undef,
      'Unicode::Collate::CJK::Stroke'=> undef,
      'Unicode::Collate::CJK::Zhuyin'=> undef,
      'Unicode::Collate::Locale'=> undef,
      'Win32'                 => undef,
      'Win32API::File'        => undef,
      'Win32API::File::inc::ExtUtils::Myconst2perl'=> undef,
      'autodie'               => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=autodie',
      'autodie::Scope::Guard' => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=autodie',
      'autodie::Scope::GuardStack'=> 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=autodie',
      'autodie::Util'         => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=autodie',
      'autodie::exception'    => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=autodie',
      'autodie::exception::system'=> 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=autodie',
      'autodie::hints'        => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=autodie',
      'autodie::skip'         => 'http://rt.cpan.org/NoAuth/Bugs.html?Dist=autodie',
      'bigint'                => undef,
      'bignum'                => undef,
      'bigrat'                => undef,
      'encoding'              => undef,
      'experimental'          => 'http://rt.cpan.org/Public/Dist/Display.html?Name=experimental',
      'ok'                    => 'http://github.com/Test-More/test-more/issues',
      'parent'                => undef,
      'perlfaq'               => 'https://github.com/perl-doc-cats/perlfaq/issues',
      'version'               => 'https://rt.cpan.org/Public/Dist/Display.html?Name=version',
      'version::regex'        => 'https://rt.cpan.org/Public/Dist/Display.html?Name=version',
  );
  
  # Create aliases with trailing zeros for $] use
  
  $released{'5.000'} = $released{5};
  $version{'5.000'} = $version{5};
  
  _create_aliases(\%delta);
  _create_aliases(\%released);
  _create_aliases(\%version);
  _create_aliases(\%deprecated);
  
  sub _create_aliases {
      my ($hash) = @_;
  
      for my $version (keys %$hash) {
          next unless $version >= 5.006;
  
          my $padded = sprintf "%0.6f", $version;
  
          # If the version in string form isn't the same as the numeric version,
          # alias it.
          if ($padded ne $version && $version == $padded) {
              $hash->{$padded} = $hash->{$version};
          }
      }
  }
  
  1;
  __END__
MODULE_CORELIST

$fatpacked{"Module/CoreList/Utils.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'MODULE_CORELIST_UTILS';
  package Module::CoreList::Utils;
  
  use strict;
  use warnings;
  use Module::CoreList;
  
  our $VERSION = '5.20180626';
  our %utilities;
  
  sub utilities {
      my $perl = shift;
      $perl = shift if eval { $perl->isa(__PACKAGE__) };
      return unless $perl or exists $utilities{$perl};
      return sort keys %{ $utilities{$perl} };
  }
  
  sub _released_order {   # Sort helper, to make '?' sort after everything else
      (substr($Module::CoreList::released{$a}, 0, 1) eq "?")
      ? ((substr($Module::CoreList::released{$b}, 0, 1) eq "?")
          ? 0
          : 1)
      : ((substr($Module::CoreList::released{$b}, 0, 1) eq "?")
          ? -1
          : $Module::CoreList::released{$a} cmp $Module::CoreList::released{$b} )
  }
  
  sub first_release_raw {
      my $util = shift;
      $util = shift if eval { $util->isa(__PACKAGE__) };
        #and scalar @_ and $_[0] =~ m#\A[a-zA-Z_][0-9a-zA-Z_]*(?:(::|')[0-9a-zA-Z_]+)*\z#;
      my $version = shift;
  
      my @perls = $version
          ? grep { exists $utilities{$_}{ $util } &&
                          $utilities{$_}{ $util } ge $version } keys %utilities
          : grep { exists $utilities{$_}{ $util }             } keys %utilities;
  
      return grep { exists $Module::CoreList::released{$_} } @perls;
  }
  
  sub first_release_by_date {
      my @perls = &first_release_raw;
      return unless @perls;
      return (sort _released_order @perls)[0];
  }
  
  sub first_release {
      my @perls = &first_release_raw;
      return unless @perls;
      return (sort { $a cmp $b } @perls)[0];
  }
  
  sub removed_from {
    my @perls = &removed_raw;
    return shift @perls;
  }
  
  sub removed_from_by_date {
    my @perls = sort _released_order &removed_raw;
    return shift @perls;
  }
  
  sub removed_raw {
    my $util = shift;
    $util = shift if eval { $util->isa(__PACKAGE__) };
    return unless my @perls = sort { $a cmp $b } first_release_raw($util);
    @perls = grep { exists $Module::CoreList::released{$_} } @perls;
    my $last = pop @perls;
    my @removed = grep { $_ > $last } sort { $a cmp $b } keys %utilities;
    return @removed;
  }
  
  my %delta = (
      5 => {
          changed => {
              'a2p'                   => '1',
              'c2ph'                  => '1',
              'cppstdin'              => '1',
              'find2perl'             => '1',
              'pstruct'               => '1',
              's2p'                   => '1',
          },
          removed => {
          }
      },
  
      5.001 => {
          delta_from => 5,
          changed => {
              'h2xs'                  => '1',
          },
          removed => {
          }
      },
  
      5.002 => {
          delta_from => 5.001,
          changed => {
              'h2ph'                  => '1',
              'perlbug'               => '1',
              'perldoc'               => '1',
              'pod2html'              => '1',
              'pod2latex'             => '1',
              'pod2man'               => '1',
              'pod2text'              => '1',
          },
          removed => {
          }
      },
  
      5.00307 => {
          delta_from => 5.002,
          changed => {
              'pl2pm'                 => '1',
          },
          removed => {
             'cppstdin'              => 1,
             'pstruct'               => 1,
          }
      },
  
      5.004 => {
          delta_from => 5.00307,
          changed => {
              'splain'                => '1',
          },
          removed => {
          }
      },
  
      5.005 => {
          delta_from => 5.00405,
          changed => {
              'perlcc'                => '1',
          },
          removed => {
          }
      },
  
      5.00503 => {
          delta_from => 5.005,
          changed => {
          },
          removed => {
          }
      },
  
      5.00405 => {
          delta_from => 5.004,
          changed => {
          },
          removed => {
          }
      },
  
      5.006 => {
          delta_from => 5.00504,
          changed => {
              'dprofpp'               => '1',
              'pod2usage'             => '1',
              'podchecker'            => '1',
              'podselect'             => '1',
              'pstruct'               => '1',
          },
          removed => {
          }
      },
  
      5.006001 => {
          delta_from => 5.006,
          changed => {
          },
          removed => {
          }
      },
  
      5.007003 => {
          delta_from => 5.006002,
          changed => {
              'libnetcfg'             => '1',
              'perlivp'               => '1',
              'psed'                  => '1',
              'xsubpp'                => '1',
          },
          removed => {
          }
      },
  
      5.008 => {
          delta_from => 5.007003,
          changed => {
              'enc2xs'                => '1',
              'piconv'                => '1',
          },
          removed => {
          }
      },
  
      5.008001 => {
          delta_from => 5.008,
          changed => {
              'cpan'                  => '1',
          },
          removed => {
          }
      },
  
      5.009 => {
          delta_from => 5.008009,
          changed => {
          },
          removed => {
             'corelist'              => 1,
             'instmodsh'             => 1,
             'prove'                 => 1,
          }
      },
  
      5.008002 => {
          delta_from => 5.008001,
          changed => {
          },
          removed => {
          }
      },
  
      5.006002 => {
          delta_from => 5.006001,
          changed => {
          },
          removed => {
          }
      },
  
      5.008003 => {
          delta_from => 5.008002,
          changed => {
              'instmodsh'             => '1',
              'prove'                 => '1',
          },
          removed => {
          }
      },
  
      5.00504 => {
          delta_from => 5.00503,
          changed => {
          },
          removed => {
          }
      },
  
      5.009001 => {
          delta_from => 5.009,
          changed => {
              'instmodsh'             => '1',
              'prove'                 => '1',
          },
          removed => {
          }
      },
  
      5.008004 => {
          delta_from => 5.008003,
          changed => {
          },
          removed => {
          }
      },
  
      5.008005 => {
          delta_from => 5.008004,
          changed => {
          },
          removed => {
          }
      },
  
      5.008006 => {
          delta_from => 5.008005,
          changed => {
          },
          removed => {
          }
      },
  
      5.009002 => {
          delta_from => 5.009001,
          changed => {
              'corelist'              => '1',
          },
          removed => {
          }
      },
  
      5.008007 => {
          delta_from => 5.008006,
          changed => {
          },
          removed => {
          }
      },
  
      5.009003 => {
          delta_from => 5.009002,
          changed => {
              'ptar'                  => '1',
              'ptardiff'              => '1',
              'shasum'                => '1',
          },
          removed => {
          }
      },
  
      5.008008 => {
          delta_from => 5.008007,
          changed => {
          },
          removed => {
          }
      },
  
      5.009004 => {
          delta_from => 5.009003,
          changed => {
              'config_data'           => '1',
          },
          removed => {
          }
      },
  
      5.009005 => {
          delta_from => 5.009004,
          changed => {
              'cpan2dist'             => '1',
              'cpanp'                 => '1',
              'cpanp-run-perl'        => '1',
          },
          removed => {
             'perlcc'                => 1,
          }
      },
  
      5.010000 => {
          delta_from => 5.009005,
          changed => {
          },
          removed => {
          }
      },
  
      5.008009 => {
          delta_from => 5.008008,
          changed => {
              'corelist'              => '1',
          },
          removed => {
          }
      },
  
      5.010001 => {
          delta_from => 5.010000,
          changed => {
          },
          removed => {
          }
      },
  
      5.011 => {
          delta_from => 5.010001,
          changed => {
          },
          removed => {
          }
      },
  
      5.011001 => {
          delta_from => 5.011,
          changed => {
          },
          removed => {
          }
      },
  
      5.011002 => {
          delta_from => 5.011001,
          changed => {
              'perlthanks'            => '1',
          },
          removed => {
          }
      },
  
      5.011003 => {
          delta_from => 5.011002,
          changed => {
          },
          removed => {
          }
      },
  
      5.011004 => {
          delta_from => 5.011003,
          changed => {
          },
          removed => {
          }
      },
  
      5.011005 => {
          delta_from => 5.011004,
          changed => {
          },
          removed => {
          }
      },
  
      5.012 => {
          delta_from => 5.011005,
          changed => {
          },
          removed => {
          }
      },
  
      5.013 => {
          delta_from => 5.012005,
          changed => {
          },
          removed => {
          }
      },
  
      5.012001 => {
          delta_from => 5.012,
          changed => {
          },
          removed => {
          }
      },
  
      5.013001 => {
          delta_from => 5.013,
          changed => {
          },
          removed => {
          }
      },
  
      5.013002 => {
          delta_from => 5.013001,
          changed => {
          },
          removed => {
          }
      },
  
      5.013003 => {
          delta_from => 5.013002,
          changed => {
          },
          removed => {
          }
      },
  
      5.013004 => {
          delta_from => 5.013003,
          changed => {
          },
          removed => {
          }
      },
  
      5.012002 => {
          delta_from => 5.012001,
          changed => {
          },
          removed => {
          }
      },
  
      5.013005 => {
          delta_from => 5.013004,
          changed => {
          },
          removed => {
          }
      },
  
      5.013006 => {
          delta_from => 5.013005,
          changed => {
          },
          removed => {
          }
      },
  
      5.013007 => {
          delta_from => 5.013006,
          changed => {
              'ptargrep'              => '1',
          },
          removed => {
          }
      },
  
      5.013008 => {
          delta_from => 5.013007,
          changed => {
          },
          removed => {
          }
      },
  
      5.013009 => {
          delta_from => 5.013008,
          changed => {
              'json_pp'               => '1',
          },
          removed => {
          }
      },
  
      5.012003 => {
          delta_from => 5.012002,
          changed => {
          },
          removed => {
          }
      },
  
      5.013010 => {
          delta_from => 5.013009,
          changed => {
          },
          removed => {
          }
      },
  
      5.013011 => {
          delta_from => 5.013010,
          changed => {
          },
          removed => {
          }
      },
  
      5.014 => {
          delta_from => 5.013011,
          changed => {
          },
          removed => {
          }
      },
  
      5.014001 => {
          delta_from => 5.014,
          changed => {
          },
          removed => {
          }
      },
  
      5.015 => {
          delta_from => 5.014004,
          changed => {
          },
          removed => {
             'dprofpp'               => 1,
          }
      },
  
      5.012004 => {
          delta_from => 5.012003,
          changed => {
          },
          removed => {
          }
      },
  
      5.015001 => {
          delta_from => 5.015,
          changed => {
          },
          removed => {
          }
      },
  
      5.015002 => {
          delta_from => 5.015001,
          changed => {
          },
          removed => {
          }
      },
  
      5.015003 => {
          delta_from => 5.015002,
          changed => {
          },
          removed => {
          }
      },
  
      5.014002 => {
          delta_from => 5.014001,
          changed => {
          },
          removed => {
          }
      },
  
      5.015004 => {
          delta_from => 5.015003,
          changed => {
          },
          removed => {
          }
      },
  
      5.015005 => {
          delta_from => 5.015004,
          changed => {
          },
          removed => {
          }
      },
  
      5.015006 => {
          delta_from => 5.015005,
          changed => {
              'zipdetails'            => '1',
          },
          removed => {
          }
      },
  
      5.015007 => {
          delta_from => 5.015006,
          changed => {
          },
          removed => {
          }
      },
  
      5.015008 => {
          delta_from => 5.015007,
          changed => {
          },
          removed => {
          }
      },
  
      5.015009 => {
          delta_from => 5.015008,
          changed => {
          },
          removed => {
          }
      },
  
      5.016 => {
          delta_from => 5.015009,
          changed => {
          },
          removed => {
          }
      },
  
      5.017 => {
          delta_from => 5.016003,
          changed => {
          },
          removed => {
          }
      },
  
      5.017001 => {
          delta_from => 5.017,
          changed => {
          },
          removed => {
          }
      },
  
      5.017002 => {
          delta_from => 5.017001,
          changed => {
          },
          removed => {
          }
      },
  
      5.016001 => {
          delta_from => 5.016,
          changed => {
          },
          removed => {
          }
      },
  
      5.017003 => {
          delta_from => 5.017002,
          changed => {
          },
          removed => {
          }
      },
  
      5.017004 => {
          delta_from => 5.017003,
          changed => {
          },
          removed => {
          }
      },
  
      5.014003 => {
          delta_from => 5.014002,
          changed => {
          },
          removed => {
          }
      },
  
      5.017005 => {
          delta_from => 5.017004,
          changed => {
          },
          removed => {
          }
      },
  
      5.016002 => {
          delta_from => 5.016001,
          changed => {
          },
          removed => {
          }
      },
  
      5.012005 => {
          delta_from => 5.012004,
          changed => {
          },
          removed => {
          }
      },
  
      5.017006 => {
          delta_from => 5.017005,
          changed => {
          },
          removed => {
          }
      },
  
      5.017007 => {
          delta_from => 5.017006,
          changed => {
          },
          removed => {
          }
      },
  
      5.017008 => {
          delta_from => 5.017007,
          changed => {
          },
          removed => {
          }
      },
  
      5.017009 => {
          delta_from => 5.017008,
          changed => {
          },
          removed => {
          }
      },
  
      5.014004 => {
          delta_from => 5.014003,
          changed => {
          },
          removed => {
          }
      },
  
      5.016003 => {
          delta_from => 5.016002,
          changed => {
          },
          removed => {
          }
      },
  
      5.017010 => {
          delta_from => 5.017009,
          changed => {
          },
          removed => {
          }
      },
  
      5.017011 => {
          delta_from => 5.017010,
          changed => {
          },
          removed => {
          }
      },
      5.018000 => {
          delta_from => 5.017011,
          changed => {
          },
          removed => {
          }
      },
      5.018001 => {
          delta_from => 5.018000,
          changed => {
          },
          removed => {
          }
      },
      5.018002 => {
          delta_from => 5.018001,
          changed => {
          },
          removed => {
          }
      },
      5.018003 => {
          delta_from => 5.018000,
          changed => {
          },
          removed => {
          }
      },
      5.018004 => {
          delta_from => 5.018000,
          changed => {
          },
          removed => {
          }
      },
      5.019000 => {
          delta_from => 5.018000,
          changed => {
          },
          removed => {
              'cpan2dist'             => '1',
              'cpanp'                 => '1',
              'cpanp-run-perl'        => '1',
              'pod2latex'             => '1',
          }
      },
      5.019001 => {
          delta_from => 5.019000,
          changed => {
          },
          removed => {
          }
      },
      5.019002 => {
          delta_from => 5.019001,
          changed => {
          },
          removed => {
          }
      },
      5.019003 => {
          delta_from => 5.019002,
          changed => {
          },
          removed => {
          }
      },
      5.019004 => {
          delta_from => 5.019003,
          changed => {
          },
          removed => {
          }
      },
      5.019005 => {
          delta_from => 5.019004,
          changed => {
          },
          removed => {
          }
      },
      5.019006 => {
          delta_from => 5.019005,
          changed => {
          },
          removed => {
          }
      },
      5.019007 => {
          delta_from => 5.019006,
          changed => {
          },
          removed => {
          }
      },
      5.019008 => {
          delta_from => 5.019007,
          changed => {
          },
          removed => {
          }
      },
      5.019009 => {
          delta_from => 5.019008,
          changed => {
          },
          removed => {
          }
      },
      5.019010 => {
          delta_from => 5.019009,
          changed => {
          },
          removed => {
          }
      },
      5.019011 => {
          delta_from => 5.019010,
          changed => {
          },
          removed => {
          }
      },
      5.020000 => {
          delta_from => 5.019011,
          changed => {
          },
          removed => {
          }
      },
      5.021000 => {
          delta_from => 5.020000,
          changed => {
          },
          removed => {
          }
      },
      5.021001 => {
          delta_from => 5.021000,
          changed => {
          },
          removed => {
              'a2p'                   => 1,
              'config_data'           => 1,
              'find2perl'             => 1,
              'psed'                  => 1,
              's2p'                   => 1,
          }
      },
      5.021002 => {
          delta_from => 5.021001,
          changed => {
          },
          removed => {
          }
      },
      5.021003 => {
          delta_from => 5.021002,
          changed => {
          },
          removed => {
          }
      },
      5.020001 => {
          delta_from => 5.02,
          changed => {
          },
          removed => {
          }
      },
      5.021004 => {
          delta_from => 5.021003,
          changed => {
          },
          removed => {
          }
      },
      5.021005 => {
          delta_from => 5.021004,
          changed => {
          },
          removed => {
          }
      },
      5.021006 => {
          delta_from => 5.021005,
          changed => {
          },
          removed => {
          }
      },
      5.021007 => {
          delta_from => 5.021006,
          changed => {
          },
          removed => {
          }
      },
      5.021008 => {
          delta_from => 5.021007,
          changed => {
          },
          removed => {
          }
      },
      5.020002 => {
          delta_from => 5.020001,
          changed => {
          },
          removed => {
          }
      },
      5.021009 => {
          delta_from => 5.021008,
          changed => {
              'encguess'              => '1',
          },
          removed => {
          }
      },
      5.021010 => {
          delta_from => 5.021009,
          changed => {
          },
          removed => {
          }
      },
      5.021011 => {
          delta_from => 5.02101,
          changed => {
          },
          removed => {
          }
      },
      5.022000 => {
          delta_from => 5.021011,
          changed => {
          },
          removed => {
          }
      },
      5.023000 => {
          delta_from => 5.022000,
          changed => {
          },
          removed => {
          }
      },
      5.023001 => {
          delta_from => 5.023,
          changed => {
          },
          removed => {
          }
      },
      5.023002 => {
          delta_from => 5.023001,
          changed => {
          },
          removed => {
          }
      },
      5.020003 => {
          delta_from => 5.020002,
          changed => {
          },
          removed => {
          }
      },
      5.023003 => {
          delta_from => 5.023002,
          changed => {
          },
          removed => {
          }
      },
      5.023004 => {
          delta_from => 5.023003,
          changed => {
          },
          removed => {
          }
      },
      5.023005 => {
          delta_from => 5.023004,
          changed => {
          },
          removed => {
          }
      },
      5.022001 => {
          delta_from => 5.022,
          changed => {
          },
          removed => {
          }
      },
      5.023006 => {
          delta_from => 5.023005,
          changed => {
          },
          removed => {
          }
      },
      5.023007 => {
          delta_from => 5.023006,
          changed => {
          },
          removed => {
          }
      },
      5.023008 => {
          delta_from => 5.023007,
          changed => {
          },
          removed => {
          }
      },
      5.023009 => {
          delta_from => 5.023008,
          changed => {
          },
          removed => {
          }
      },
      5.022002 => {
          delta_from => 5.022001,
          changed => {
          },
          removed => {
          }
      },
      5.024000 => {
          delta_from => 5.023009,
          changed => {
          },
          removed => {
          }
      },
      5.025000 => {
          delta_from => 5.024000,
          changed => {
          },
          removed => {
          }
      },
      5.025001 => {
          delta_from => 5.025000,
          changed => {
          },
          removed => {
          }
      },
      5.025002 => {
          delta_from => 5.025001,
          changed => {
          },
          removed => {
          }
      },
      5.025003 => {
          delta_from => 5.025002,
          changed => {
          },
          removed => {
          }
      },
      5.025004 => {
          delta_from => 5.025003,
          changed => {
          },
          removed => {
          }
      },
      5.025005 => {
          delta_from => 5.025004,
          changed => {
          },
          removed => {
          }
      },
      5.025006 => {
          delta_from => 5.025005,
          changed => {
          },
          removed => {
          }
      },
      5.025007 => {
          delta_from => 5.025006,
          changed => {
          },
          removed => {
          }
      },
      5.025008 => {
          delta_from => 5.025007,
          changed => {
          },
          removed => {
          }
      },
      5.022003 => {
          delta_from => 5.022002,
          changed => {
          },
          removed => {
          }
      },
      5.024001 => {
          delta_from => 5.024000,
          changed => {
          },
          removed => {
          }
      },
      5.025009 => {
          delta_from => 5.025008,
          changed => {
          },
          removed => {
              'c2ph'                  => 1,
              'pstruct'               => 1,
          }
      },
      5.025010 => {
          delta_from => 5.025009,
          changed => {
          },
          removed => {
          }
      },
      5.025011 => {
          delta_from => 5.025010,
          changed => {
          },
          removed => {
          }
      },
      5.025012 => {
          delta_from => 5.025011,
          changed => {
          },
          removed => {
          }
      },
      5.026000 => {
          delta_from => 5.025012,
          changed => {
          },
          removed => {
          }
      },
      5.027000 => {
          delta_from => 5.026000,
          changed => {
          },
          removed => {
          }
      },
      5.027001 => {
          delta_from => 5.027000,
          changed => {
          },
          removed => {
          }
      },
      5.022004 => {
          delta_from => 5.022003,
          changed => {
          },
          removed => {
          }
      },
      5.024002 => {
          delta_from => 5.024001,
          changed => {
          },
          removed => {
          }
      },
      5.027002 => {
          delta_from => 5.027001,
          changed => {
          },
          removed => {
          }
      },
      5.027003 => {
          delta_from => 5.027002,
          changed => {
          },
          removed => {
          }
      },
      5.027004 => {
          delta_from => 5.027003,
          changed => {
          },
          removed => {
          }
      },
      5.024003 => {
          delta_from => 5.024002,
          changed => {
          },
          removed => {
          }
      },
      5.026001 => {
          delta_from => 5.026000,
          changed => {
          },
          removed => {
          }
      },
      5.027005 => {
          delta_from => 5.027004,
          changed => {
          },
          removed => {
          }
      },
      5.027006 => {
          delta_from => 5.027005,
          changed => {
          },
          removed => {
          }
      },
      5.027007 => {
          delta_from => 5.027006,
          changed => {
          },
          removed => {
          }
      },
      5.027008 => {
          delta_from => 5.027007,
          changed => {
          },
          removed => {
          }
      },
      5.027009 => {
          delta_from => 5.027008,
          changed => {
          },
          removed => {
          }
      },
      5.027010 => {
          delta_from => 5.027009,
          changed => {
          },
          removed => {
          }
      },
      5.024004 => {
          delta_from => 5.024003,
          changed => {
          },
          removed => {
          }
      },
      5.026002 => {
          delta_from => 5.026001,
          changed => {
          },
          removed => {
          }
      },
      5.027011 => {
          delta_from => 5.027010,
          changed => {
          },
          removed => {
          }
      },
      5.028000 => {
          delta_from => 5.027011,
          changed => {
          },
          removed => {
          }
      },
      5.029000 => {
          delta_from => 5.028,
          changed => {
          },
          removed => {
          }
      },
  );
  
  %utilities = Module::CoreList::_undelta(\%delta);
  
  # Create aliases with trailing zeros for $] use
  
  $utilities{'5.000'} = $utilities{5};
  
  _create_aliases(\%utilities);
  
  sub _create_aliases {
      my ($hash) = @_;
  
      for my $version (keys %$hash) {
          next unless $version >= 5.010;
  
          my $padded = sprintf "%0.6f", $version;
  
          # If the version in string form isn't the same as the numeric version,
          # alias it.
          if ($padded ne $version && $version == $padded) {
              $hash->{$padded} = $hash->{$version};
          }
      }
  }
  
  'foo';
  
  =pod
  
  =head1 NAME
  
  Module::CoreList::Utils - what utilities shipped with versions of perl
  
  =head1 SYNOPSIS
  
   use Module::CoreList::Utils;
  
   print $Module::CoreList::Utils::utilities{5.009003}{ptar}; # prints 1
  
   print Module::CoreList::Utils->first_release('corelist');
   # prints 5.008009
  
   print Module::CoreList::Utils->first_release_by_date('corelist');
   # prints 5.009002
  
  =head1 DESCRIPTION
  
  Module::CoreList::Utils provides information on which core and dual-life utilities shipped
  with each version of L<perl>.
  
  It provides a number of mechanisms for querying this information.
  
  There is a functional programming API available for programmers to query
  information.
  
  Programmers may also query the contained hash structure to find relevant
  information.
  
  =head1 FUNCTIONS API
  
  These are the functions that are available, they may either be called as functions or class methods:
  
    Module::CoreList::Utils::first_release('corelist'); # as a function
  
    Module::CoreList::Utils->first_release('corelist'); # class method
  
  =over
  
  =item C<utilities>
  
  Requires a perl version as an argument, returns a list of utilities that shipped with
  that version of perl, or undef/empty list if that perl doesn't exist.
  
  =item C<first_release( UTILITY )>
  
  Requires a UTILITY name as an argument, returns the perl version when that utility first
  appeared in core as ordered by perl version number or undef ( in scalar context )
  or an empty list ( in list context ) if that utility is not in core.
  
  =item C<first_release_by_date( UTILITY )>
  
  Requires a UTILITY name as an argument, returns the perl version when that utility first
  appeared in core as ordered by release date or undef ( in scalar context )
  or an empty list ( in list context ) if that utility is not in core.
  
  =item C<removed_from( UTILITY )>
  
  Takes a UTILITY name as an argument, returns the first perl version where that utility
  was removed from core. Returns undef if the given utility was never in core or remains
  in core.
  
  =item C<removed_from_by_date( UTILITY )>
  
  Takes a UTILITY name as an argument, returns the first perl version by release date where that
  utility was removed from core. Returns undef if the given utility was never in core or remains
  in core.
  
  =back
  
  =head1 DATA STRUCTURES
  
  These are the hash data structures that are available:
  
  =over
  
  =item C<%Module::CoreList::Utils::utilities>
  
  A hash of hashes that is keyed on perl version as indicated
  in $].  The second level hash is utility / defined pairs.
  
  =back
  
  =head1 AUTHOR
  
  Chris C<BinGOs> Williams <chris@bingosnet.co.uk>
  
  Currently maintained by the perl 5 porters E<lt>perl5-porters@perl.orgE<gt>.
  
  This module is the result of archaeology undertaken during QA Hackathon
  in Lancaster, April 2013.
  
  =head1 LICENSE
  
  Copyright (C) 2013 Chris Williams.  All Rights Reserved.
  
  This module is free software; you can redistribute it and/or modify it
  under the same terms as Perl itself.
  
  =head1 SEE ALSO
  
  L<corelist>, L<Module::CoreList>, L<perl>, L<http://perlpunks.de/corelist>
  
  =cut
MODULE_CORELIST_UTILS

$fatpacked{"Module/Metadata.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'MODULE_METADATA';
  # -*- mode: cperl; tab-width: 8; indent-tabs-mode: nil; basic-offset: 2 -*-
  # vim:ts=8:sw=2:et:sta:sts=2:tw=78
  package Module::Metadata; # git description: v1.000032-7-gb4e8a3f
  # ABSTRACT: Gather package and POD information from perl module files
  
  # Adapted from Perl-licensed code originally distributed with
  # Module-Build by Ken Williams
  
  # This module provides routines to gather information about
  # perl modules (assuming this may be expanded in the distant
  # parrot future to look at other types of modules).
  
  sub __clean_eval { eval $_[0] }
  use strict;
  use warnings;
  
  our $VERSION = '1.000033';
  
  use Carp qw/croak/;
  use File::Spec;
  BEGIN {
         # Try really hard to not depend ony any DynaLoaded module, such as IO::File or Fcntl
         eval {
                 require Fcntl; Fcntl->import('SEEK_SET'); 1;
         } or *SEEK_SET = sub { 0 }
  }
  use version 0.87;
  BEGIN {
    if ($INC{'Log/Contextual.pm'}) {
      require "Log/Contextual/WarnLogger.pm"; # Hide from AutoPrereqs
      Log::Contextual->import('log_info',
        '-default_logger' => Log::Contextual::WarnLogger->new({ env_prefix => 'MODULE_METADATA', }),
      );
    }
    else {
      *log_info = sub (&) { warn $_[0]->() };
    }
  }
  use File::Find qw(find);
  
  my $V_NUM_REGEXP = qr{v?[0-9._]+};  # crudely, a v-string or decimal
  
  my $PKG_FIRST_WORD_REGEXP = qr{ # the FIRST word in a package name
    [a-zA-Z_]                     # the first word CANNOT start with a digit
      (?:
        [\w']?                    # can contain letters, digits, _, or ticks
        \w                        # But, NO multi-ticks or trailing ticks
      )*
  }x;
  
  my $PKG_ADDL_WORD_REGEXP = qr{ # the 2nd+ word in a package name
    \w                           # the 2nd+ word CAN start with digits
      (?:
        [\w']?                   # and can contain letters or ticks
        \w                       # But, NO multi-ticks or trailing ticks
      )*
  }x;
  
  my $PKG_NAME_REGEXP = qr{ # match a package name
    (?: :: )?               # a pkg name can start with arisdottle
    $PKG_FIRST_WORD_REGEXP  # a package word
    (?:
      (?: :: )+             ### arisdottle (allow one or many times)
      $PKG_ADDL_WORD_REGEXP ### a package word
    )*                      # ^ zero, one or many times
    (?:
      ::                    # allow trailing arisdottle
    )?
  }x;
  
  my $PKG_REGEXP  = qr{   # match a package declaration
    ^[\s\{;]*             # intro chars on a line
    package               # the word 'package'
    \s+                   # whitespace
    ($PKG_NAME_REGEXP)    # a package name
    \s*                   # optional whitespace
    ($V_NUM_REGEXP)?        # optional version number
    \s*                   # optional whitesapce
    [;\{]                 # semicolon line terminator or block start (since 5.16)
  }x;
  
  my $VARNAME_REGEXP = qr{ # match fully-qualified VERSION name
    ([\$*])         # sigil - $ or *
    (
      (             # optional leading package name
        (?:::|\')?  # possibly starting like just :: (a la $::VERSION)
        (?:\w+(?:::|\'))*  # Foo::Bar:: ...
      )?
      VERSION
    )\b
  }x;
  
  my $VERS_REGEXP = qr{ # match a VERSION definition
    (?:
      \(\s*$VARNAME_REGEXP\s*\) # with parens
    |
      $VARNAME_REGEXP           # without parens
    )
    \s*
    =[^=~>]  # = but not ==, nor =~, nor =>
  }x;
  
  sub new_from_file {
    my $class    = shift;
    my $filename = File::Spec->rel2abs( shift );
  
    return undef unless defined( $filename ) && -f $filename;
    return $class->_init(undef, $filename, @_);
  }
  
  sub new_from_handle {
    my $class    = shift;
    my $handle   = shift;
    my $filename = shift;
    return undef unless defined($handle) && defined($filename);
    $filename = File::Spec->rel2abs( $filename );
  
    return $class->_init(undef, $filename, @_, handle => $handle);
  
  }
  
  
  sub new_from_module {
    my $class   = shift;
    my $module  = shift;
    my %props   = @_;
  
    $props{inc} ||= \@INC;
    my $filename = $class->find_module_by_name( $module, $props{inc} );
    return undef unless defined( $filename ) && -f $filename;
    return $class->_init($module, $filename, %props);
  }
  
  {
  
    my $compare_versions = sub {
      my ($v1, $op, $v2) = @_;
      $v1 = version->new($v1)
        unless UNIVERSAL::isa($v1,'version');
  
      my $eval_str = "\$v1 $op \$v2";
      my $result   = eval $eval_str;
      log_info { "error comparing versions: '$eval_str' $@" } if $@;
  
      return $result;
    };
  
    my $normalize_version = sub {
      my ($version) = @_;
      if ( $version =~ /[=<>!,]/ ) { # logic, not just version
        # take as is without modification
      }
      elsif ( ref $version eq 'version' ) { # version objects
        $version = $version->is_qv ? $version->normal : $version->stringify;
      }
      elsif ( $version =~ /^[^v][^.]*\.[^.]+\./ ) { # no leading v, multiple dots
        # normalize string tuples without "v": "1.2.3" -> "v1.2.3"
        $version = "v$version";
      }
      else {
        # leave alone
      }
      return $version;
    };
  
    # separate out some of the conflict resolution logic
  
    my $resolve_module_versions = sub {
      my $packages = shift;
  
      my( $file, $version );
      my $err = '';
        foreach my $p ( @$packages ) {
          if ( defined( $p->{version} ) ) {
            if ( defined( $version ) ) {
              if ( $compare_versions->( $version, '!=', $p->{version} ) ) {
                $err .= "  $p->{file} ($p->{version})\n";
              }
              else {
                # same version declared multiple times, ignore
              }
            }
            else {
              $file    = $p->{file};
              $version = $p->{version};
            }
          }
        $file ||= $p->{file} if defined( $p->{file} );
      }
  
      if ( $err ) {
        $err = "  $file ($version)\n" . $err;
      }
  
      my %result = (
        file    => $file,
        version => $version,
        err     => $err
      );
  
      return \%result;
    };
  
    sub provides {
      my $class = shift;
  
      croak "provides() requires key/value pairs \n" if @_ % 2;
      my %args = @_;
  
      croak "provides() takes only one of 'dir' or 'files'\n"
        if $args{dir} && $args{files};
  
      croak "provides() requires a 'version' argument"
        unless defined $args{version};
  
      croak "provides() does not support version '$args{version}' metadata"
          unless grep { $args{version} eq $_ } qw/1.4 2/;
  
      $args{prefix} = 'lib' unless defined $args{prefix};
  
      my $p;
      if ( $args{dir} ) {
        $p = $class->package_versions_from_directory($args{dir});
      }
      else {
        croak "provides() requires 'files' to be an array reference\n"
          unless ref $args{files} eq 'ARRAY';
        $p = $class->package_versions_from_directory($args{files});
      }
  
      # Now, fix up files with prefix
      if ( length $args{prefix} ) { # check in case disabled with q{}
        $args{prefix} =~ s{/$}{};
        for my $v ( values %$p ) {
          $v->{file} = "$args{prefix}/$v->{file}";
        }
      }
  
      return $p
    }
  
    sub package_versions_from_directory {
      my ( $class, $dir, $files ) = @_;
  
      my @files;
  
      if ( $files ) {
        @files = @$files;
      }
      else {
        find( {
          wanted => sub {
            push @files, $_ if -f $_ && /\.pm$/;
          },
          no_chdir => 1,
        }, $dir );
      }
  
      # First, we enumerate all packages & versions,
      # separating into primary & alternative candidates
      my( %prime, %alt );
      foreach my $file (@files) {
        my $mapped_filename = File::Spec::Unix->abs2rel( $file, $dir );
        my @path = split( /\//, $mapped_filename );
        (my $prime_package = join( '::', @path )) =~ s/\.pm$//;
  
        my $pm_info = $class->new_from_file( $file );
  
        foreach my $package ( $pm_info->packages_inside ) {
          next if $package eq 'main';  # main can appear numerous times, ignore
          next if $package eq 'DB';    # special debugging package, ignore
          next if grep /^_/, split( /::/, $package ); # private package, ignore
  
          my $version = $pm_info->version( $package );
  
          $prime_package = $package if lc($prime_package) eq lc($package);
          if ( $package eq $prime_package ) {
            if ( exists( $prime{$package} ) ) {
              croak "Unexpected conflict in '$package'; multiple versions found.\n";
            }
            else {
              $mapped_filename = "$package.pm" if lc("$package.pm") eq lc($mapped_filename);
              $prime{$package}{file} = $mapped_filename;
              $prime{$package}{version} = $version if defined( $version );
            }
          }
          else {
            push( @{$alt{$package}}, {
                                      file    => $mapped_filename,
                                      version => $version,
                                     } );
          }
        }
      }
  
      # Then we iterate over all the packages found above, identifying conflicts
      # and selecting the "best" candidate for recording the file & version
      # for each package.
      foreach my $package ( keys( %alt ) ) {
        my $result = $resolve_module_versions->( $alt{$package} );
  
        if ( exists( $prime{$package} ) ) { # primary package selected
  
          if ( $result->{err} ) {
          # Use the selected primary package, but there are conflicting
          # errors among multiple alternative packages that need to be
          # reported
            log_info {
              "Found conflicting versions for package '$package'\n" .
              "  $prime{$package}{file} ($prime{$package}{version})\n" .
              $result->{err}
            };
  
          }
          elsif ( defined( $result->{version} ) ) {
          # There is a primary package selected, and exactly one
          # alternative package
  
          if ( exists( $prime{$package}{version} ) &&
               defined( $prime{$package}{version} ) ) {
            # Unless the version of the primary package agrees with the
            # version of the alternative package, report a conflict
          if ( $compare_versions->(
                   $prime{$package}{version}, '!=', $result->{version}
                 )
               ) {
  
              log_info {
                "Found conflicting versions for package '$package'\n" .
                "  $prime{$package}{file} ($prime{$package}{version})\n" .
                "  $result->{file} ($result->{version})\n"
              };
            }
  
          }
          else {
            # The prime package selected has no version so, we choose to
            # use any alternative package that does have a version
            $prime{$package}{file}    = $result->{file};
            $prime{$package}{version} = $result->{version};
          }
  
          }
          else {
          # no alt package found with a version, but we have a prime
          # package so we use it whether it has a version or not
          }
  
        }
        else { # No primary package was selected, use the best alternative
  
          if ( $result->{err} ) {
            log_info {
              "Found conflicting versions for package '$package'\n" .
              $result->{err}
            };
          }
  
          # Despite possible conflicting versions, we choose to record
          # something rather than nothing
          $prime{$package}{file}    = $result->{file};
          $prime{$package}{version} = $result->{version}
            if defined( $result->{version} );
        }
      }
  
      # Normalize versions.  Can't use exists() here because of bug in YAML::Node.
      # XXX "bug in YAML::Node" comment seems irrelevant -- dagolden, 2009-05-18
      for (grep defined $_->{version}, values %prime) {
        $_->{version} = $normalize_version->( $_->{version} );
      }
  
      return \%prime;
    }
  }
  
  
  sub _init {
    my $class    = shift;
    my $module   = shift;
    my $filename = shift;
    my %props = @_;
  
    my $handle = delete $props{handle};
    my( %valid_props, @valid_props );
    @valid_props = qw( collect_pod inc );
    @valid_props{@valid_props} = delete( @props{@valid_props} );
    warn "Unknown properties: @{[keys %props]}\n" if scalar( %props );
  
    my %data = (
      module       => $module,
      filename     => $filename,
      version      => undef,
      packages     => [],
      versions     => {},
      pod          => {},
      pod_headings => [],
      collect_pod  => 0,
  
      %valid_props,
    );
  
    my $self = bless(\%data, $class);
  
    if ( not $handle ) {
      my $filename = $self->{filename};
      open $handle, '<', $filename
        or croak( "Can't open '$filename': $!" );
  
      $self->_handle_bom($handle, $filename);
    }
    $self->_parse_fh($handle);
  
    @{$self->{packages}} = __uniq(@{$self->{packages}});
  
    unless($self->{module} and length($self->{module})) {
      # CAVEAT (possible TODO): .pmc files not treated the same as .pm
      if ($self->{filename} =~ /\.pm$/) {
        my ($v, $d, $f) = File::Spec->splitpath($self->{filename});
        $f =~ s/\..+$//;
        my @candidates = grep /(^|::)$f$/, @{$self->{packages}};
        $self->{module} = shift(@candidates); # this may be undef
      }
      else {
        # this seems like an atrocious heuristic, albeit marginally better than
        # what was here before. It should be rewritten entirely to be more like
        # "if it's not a .pm file, it's not require()able as a name, therefore
        # name() should be undef."
        if ((grep /main/, @{$self->{packages}})
            or (grep /main/, keys %{$self->{versions}})) {
          $self->{module} = 'main';
        }
        else {
          # TODO: this should maybe default to undef instead
          $self->{module} = $self->{packages}[0] || '';
        }
      }
    }
  
    $self->{version} = $self->{versions}{$self->{module}}
      if defined( $self->{module} );
  
    return $self;
  }
  
  # class method
  sub _do_find_module {
    my $class   = shift;
    my $module  = shift || croak 'find_module_by_name() requires a package name';
    my $dirs    = shift || \@INC;
  
    my $file = File::Spec->catfile(split( /::/, $module));
    foreach my $dir ( @$dirs ) {
      my $testfile = File::Spec->catfile($dir, $file);
      return [ File::Spec->rel2abs( $testfile ), $dir ]
        if -e $testfile and !-d _;  # For stuff like ExtUtils::xsubpp
      # CAVEAT (possible TODO): .pmc files are not discoverable here
      $testfile .= '.pm';
      return [ File::Spec->rel2abs( $testfile ), $dir ]
        if -e $testfile;
    }
    return;
  }
  
  # class method
  sub find_module_by_name {
    my $found = shift()->_do_find_module(@_) or return;
    return $found->[0];
  }
  
  # class method
  sub find_module_dir_by_name {
    my $found = shift()->_do_find_module(@_) or return;
    return $found->[1];
  }
  
  
  # given a line of perl code, attempt to parse it if it looks like a
  # $VERSION assignment, returning sigil, full name, & package name
  sub _parse_version_expression {
    my $self = shift;
    my $line = shift;
  
    my( $sigil, $variable_name, $package);
    if ( $line =~ /$VERS_REGEXP/o ) {
      ( $sigil, $variable_name, $package) = $2 ? ( $1, $2, $3 ) : ( $4, $5, $6 );
      if ( $package ) {
        $package = ($package eq '::') ? 'main' : $package;
        $package =~ s/::$//;
      }
    }
  
    return ( $sigil, $variable_name, $package );
  }
  
  # Look for a UTF-8/UTF-16BE/UTF-16LE BOM at the beginning of the stream.
  # If there's one, then skip it and set the :encoding layer appropriately.
  sub _handle_bom {
    my ($self, $fh, $filename) = @_;
  
    my $pos = tell $fh;
    return unless defined $pos;
  
    my $buf = ' ' x 2;
    my $count = read $fh, $buf, length $buf;
    return unless defined $count and $count >= 2;
  
    my $encoding;
    if ( $buf eq "\x{FE}\x{FF}" ) {
      $encoding = 'UTF-16BE';
    }
    elsif ( $buf eq "\x{FF}\x{FE}" ) {
      $encoding = 'UTF-16LE';
    }
    elsif ( $buf eq "\x{EF}\x{BB}" ) {
      $buf = ' ';
      $count = read $fh, $buf, length $buf;
      if ( defined $count and $count >= 1 and $buf eq "\x{BF}" ) {
        $encoding = 'UTF-8';
      }
    }
  
    if ( defined $encoding ) {
      if ( "$]" >= 5.008 ) {
        binmode( $fh, ":encoding($encoding)" );
      }
    }
    else {
      seek $fh, $pos, SEEK_SET
        or croak( sprintf "Can't reset position to the top of '$filename'" );
    }
  
    return $encoding;
  }
  
  sub _parse_fh {
    my ($self, $fh) = @_;
  
    my( $in_pod, $seen_end, $need_vers ) = ( 0, 0, 0 );
    my( @packages, %vers, %pod, @pod );
    my $package = 'main';
    my $pod_sect = '';
    my $pod_data = '';
    my $in_end = 0;
  
    while (defined( my $line = <$fh> )) {
      my $line_num = $.;
  
      chomp( $line );
  
      # From toke.c : any line that begins by "=X", where X is an alphabetic
      # character, introduces a POD segment.
      my $is_cut;
      if ( $line =~ /^=([a-zA-Z].*)/ ) {
        my $cmd = $1;
        # Then it goes back to Perl code for "=cutX" where X is a non-alphabetic
        # character (which includes the newline, but here we chomped it away).
        $is_cut = $cmd =~ /^cut(?:[^a-zA-Z]|$)/;
        $in_pod = !$is_cut;
      }
  
      if ( $in_pod ) {
  
        if ( $line =~ /^=head[1-4]\s+(.+)\s*$/ ) {
          push( @pod, $1 );
          if ( $self->{collect_pod} && length( $pod_data ) ) {
            $pod{$pod_sect} = $pod_data;
            $pod_data = '';
          }
          $pod_sect = $1;
        }
        elsif ( $self->{collect_pod} ) {
          $pod_data .= "$line\n";
        }
        next;
      }
      elsif ( $is_cut ) {
        if ( $self->{collect_pod} && length( $pod_data ) ) {
          $pod{$pod_sect} = $pod_data;
          $pod_data = '';
        }
        $pod_sect = '';
        next;
      }
  
      # Skip after __END__
      next if $in_end;
  
      # Skip comments in code
      next if $line =~ /^\s*#/;
  
      # Would be nice if we could also check $in_string or something too
      if ($line eq '__END__') {
        $in_end++;
        next;
      }
  
      last if $line eq '__DATA__';
  
      # parse $line to see if it's a $VERSION declaration
      my( $version_sigil, $version_fullname, $version_package ) =
        index($line, 'VERSION') >= 1
          ? $self->_parse_version_expression( $line )
          : ();
  
      if ( $line =~ /$PKG_REGEXP/o ) {
        $package = $1;
        my $version = $2;
        push( @packages, $package ) unless grep( $package eq $_, @packages );
        $need_vers = defined $version ? 0 : 1;
  
        if ( not exists $vers{$package} and defined $version ){
          # Upgrade to a version object.
          my $dwim_version = eval { _dwim_version($version) };
          croak "Version '$version' from $self->{filename} does not appear to be valid:\n$line\n\nThe fatal error was: $@\n"
            unless defined $dwim_version;  # "0" is OK!
          $vers{$package} = $dwim_version;
        }
      }
  
      # VERSION defined with full package spec, i.e. $Module::VERSION
      elsif ( $version_fullname && $version_package ) {
        # we do NOT save this package in found @packages
        $need_vers = 0 if $version_package eq $package;
  
        unless ( defined $vers{$version_package} && length $vers{$version_package} ) {
          $vers{$version_package} = $self->_evaluate_version_line( $version_sigil, $version_fullname, $line );
        }
      }
  
      # first non-comment line in undeclared package main is VERSION
      elsif ( $package eq 'main' && $version_fullname && !exists($vers{main}) ) {
        $need_vers = 0;
        my $v = $self->_evaluate_version_line( $version_sigil, $version_fullname, $line );
        $vers{$package} = $v;
        push( @packages, 'main' );
      }
  
      # first non-comment line in undeclared package defines package main
      elsif ( $package eq 'main' && !exists($vers{main}) && $line =~ /\w/ ) {
        $need_vers = 1;
        $vers{main} = '';
        push( @packages, 'main' );
      }
  
      # only keep if this is the first $VERSION seen
      elsif ( $version_fullname && $need_vers ) {
        $need_vers = 0;
        my $v = $self->_evaluate_version_line( $version_sigil, $version_fullname, $line );
  
        unless ( defined $vers{$package} && length $vers{$package} ) {
          $vers{$package} = $v;
        }
      }
    } # end loop over each line
  
    if ( $self->{collect_pod} && length($pod_data) ) {
      $pod{$pod_sect} = $pod_data;
    }
  
    $self->{versions} = \%vers;
    $self->{packages} = \@packages;
    $self->{pod} = \%pod;
    $self->{pod_headings} = \@pod;
  }
  
  sub __uniq (@)
  {
      my (%seen, $key);
      grep { not $seen{ $key = $_ }++ } @_;
  }
  
  {
  my $pn = 0;
  sub _evaluate_version_line {
    my $self = shift;
    my( $sigil, $variable_name, $line ) = @_;
  
    # We compile into a local sub because 'use version' would cause
    # compiletime/runtime issues with local()
    $pn++; # everybody gets their own package
    my $eval = qq{ my \$dummy = q#  Hide from _packages_inside()
      #; package Module::Metadata::_version::p${pn};
      use version;
      sub {
        local $sigil$variable_name;
        $line;
        return \$$variable_name if defined \$$variable_name;
        return \$Module::Metadata::_version::p${pn}::$variable_name;
      };
    };
  
    $eval = $1 if $eval =~ m{^(.+)}s;
  
    local $^W;
    # Try to get the $VERSION
    my $vsub = __clean_eval($eval);
    # some modules say $VERSION <equal sign> $Foo::Bar::VERSION, but Foo::Bar isn't
    # installed, so we need to hunt in ./lib for it
    if ( $@ =~ /Can't locate/ && -d 'lib' ) {
      local @INC = ('lib',@INC);
      $vsub = __clean_eval($eval);
    }
    warn "Error evaling version line '$eval' in $self->{filename}: $@\n"
      if $@;
  
    (ref($vsub) eq 'CODE') or
      croak "failed to build version sub for $self->{filename}";
  
    my $result = eval { $vsub->() };
    # FIXME: $eval is not the right thing to print here
    croak "Could not get version from $self->{filename} by executing:\n$eval\n\nThe fatal error was: $@\n"
      if $@;
  
    # Upgrade it into a version object
    my $version = eval { _dwim_version($result) };
  
    # FIXME: $eval is not the right thing to print here
    croak "Version '$result' from $self->{filename} does not appear to be valid:\n$eval\n\nThe fatal error was: $@\n"
      unless defined $version; # "0" is OK!
  
    return $version;
  }
  }
  
  # Try to DWIM when things fail the lax version test in obvious ways
  {
    my @version_prep = (
      # Best case, it just works
      sub { return shift },
  
      # If we still don't have a version, try stripping any
      # trailing junk that is prohibited by lax rules
      sub {
        my $v = shift;
        $v =~ s{([0-9])[a-z-].*$}{$1}i; # 1.23-alpha or 1.23b
        return $v;
      },
  
      # Activestate apparently creates custom versions like '1.23_45_01', which
      # cause version.pm to think it's an invalid alpha.  So check for that
      # and strip them
      sub {
        my $v = shift;
        my $num_dots = () = $v =~ m{(\.)}g;
        my $num_unders = () = $v =~ m{(_)}g;
        my $leading_v = substr($v,0,1) eq 'v';
        if ( ! $leading_v && $num_dots < 2 && $num_unders > 1 ) {
          $v =~ s{_}{}g;
          $num_unders = () = $v =~ m{(_)}g;
        }
        return $v;
      },
  
      # Worst case, try numifying it like we would have before version objects
      sub {
        my $v = shift;
        no warnings 'numeric';
        return 0 + $v;
      },
  
    );
  
    sub _dwim_version {
      my ($result) = shift;
  
      return $result if ref($result) eq 'version';
  
      my ($version, $error);
      for my $f (@version_prep) {
        $result = $f->($result);
        $version = eval { version->new($result) };
        $error ||= $@ if $@; # capture first failure
        last if defined $version;
      }
  
      croak $error unless defined $version;
  
      return $version;
    }
  }
  
  ############################################################
  
  # accessors
  sub name            { $_[0]->{module}            }
  
  sub filename        { $_[0]->{filename}          }
  sub packages_inside { @{$_[0]->{packages}}       }
  sub pod_inside      { @{$_[0]->{pod_headings}}   }
  sub contains_pod    { 0+@{$_[0]->{pod_headings}} }
  
  sub version {
      my $self = shift;
      my $mod  = shift || $self->{module};
      my $vers;
      if ( defined( $mod ) && length( $mod ) &&
           exists( $self->{versions}{$mod} ) ) {
          return $self->{versions}{$mod};
      }
      else {
          return undef;
      }
  }
  
  sub pod {
      my $self = shift;
      my $sect = shift;
      if ( defined( $sect ) && length( $sect ) &&
           exists( $self->{pod}{$sect} ) ) {
          return $self->{pod}{$sect};
      }
      else {
          return undef;
      }
  }
  
  sub is_indexable {
    my ($self, $package) = @_;
  
    my @indexable_packages = grep { $_ ne 'main' } $self->packages_inside;
  
    # check for specific package, if provided
    return !! grep { $_ eq $package } @indexable_packages if $package;
  
    # otherwise, check for any indexable packages at all
    return !! @indexable_packages;
  }
  
  1;
  
  __END__
  
  =pod
  
  =encoding UTF-8
  
  =head1 NAME
  
  Module::Metadata - Gather package and POD information from perl module files
  
  =head1 VERSION
  
  version 1.000033
  
  =head1 SYNOPSIS
  
    use Module::Metadata;
  
    # information about a .pm file
    my $info = Module::Metadata->new_from_file( $file );
    my $version = $info->version;
  
    # CPAN META 'provides' field for .pm files in a directory
    my $provides = Module::Metadata->provides(
      dir => 'lib', version => 2
    );
  
  =head1 DESCRIPTION
  
  This module provides a standard way to gather metadata about a .pm file through
  (mostly) static analysis and (some) code execution.  When determining the
  version of a module, the C<$VERSION> assignment is C<eval>ed, as is traditional
  in the CPAN toolchain.
  
  =head1 CLASS METHODS
  
  =head2 C<< new_from_file($filename, collect_pod => 1) >>
  
  Constructs a C<Module::Metadata> object given the path to a file.  Returns
  undef if the filename does not exist.
  
  C<collect_pod> is a optional boolean argument that determines whether POD
  data is collected and stored for reference.  POD data is not collected by
  default.  POD headings are always collected.
  
  If the file begins by an UTF-8, UTF-16BE or UTF-16LE byte-order mark, then
  it is skipped before processing, and the content of the file is also decoded
  appropriately starting from perl 5.8.
  
  =head2 C<< new_from_handle($handle, $filename, collect_pod => 1) >>
  
  This works just like C<new_from_file>, except that a handle can be provided
  as the first argument.
  
  Note that there is no validation to confirm that the handle is a handle or
  something that can act like one.  Passing something that isn't a handle will
  cause a exception when trying to read from it.  The C<filename> argument is
  mandatory or undef will be returned.
  
  You are responsible for setting the decoding layers on C<$handle> if
  required.
  
  =head2 C<< new_from_module($module, collect_pod => 1, inc => \@dirs) >>
  
  Constructs a C<Module::Metadata> object given a module or package name.
  Returns undef if the module cannot be found.
  
  In addition to accepting the C<collect_pod> argument as described above,
  this method accepts a C<inc> argument which is a reference to an array of
  directories to search for the module.  If none are given, the default is
  @INC.
  
  If the file that contains the module begins by an UTF-8, UTF-16BE or
  UTF-16LE byte-order mark, then it is skipped before processing, and the
  content of the file is also decoded appropriately starting from perl 5.8.
  
  =head2 C<< find_module_by_name($module, \@dirs) >>
  
  Returns the path to a module given the module or package name. A list
  of directories can be passed in as an optional parameter, otherwise
  @INC is searched.
  
  Can be called as either an object or a class method.
  
  =head2 C<< find_module_dir_by_name($module, \@dirs) >>
  
  Returns the entry in C<@dirs> (or C<@INC> by default) that contains
  the module C<$module>. A list of directories can be passed in as an
  optional parameter, otherwise @INC is searched.
  
  Can be called as either an object or a class method.
  
  =head2 C<< provides( %options ) >>
  
  This is a convenience wrapper around C<package_versions_from_directory>
  to generate a CPAN META C<provides> data structure.  It takes key/value
  pairs.  Valid option keys include:
  
  =over
  
  =item version B<(required)>
  
  Specifies which version of the L<CPAN::Meta::Spec> should be used as
  the format of the C<provides> output.  Currently only '1.4' and '2'
  are supported (and their format is identical).  This may change in
  the future as the definition of C<provides> changes.
  
  The C<version> option is required.  If it is omitted or if
  an unsupported version is given, then C<provides> will throw an error.
  
  =item dir
  
  Directory to search recursively for F<.pm> files.  May not be specified with
  C<files>.
  
  =item files
  
  Array reference of files to examine.  May not be specified with C<dir>.
  
  =item prefix
  
  String to prepend to the C<file> field of the resulting output. This defaults
  to F<lib>, which is the common case for most CPAN distributions with their
  F<.pm> files in F<lib>.  This option ensures the META information has the
  correct relative path even when the C<dir> or C<files> arguments are
  absolute or have relative paths from a location other than the distribution
  root.
  
  =back
  
  For example, given C<dir> of 'lib' and C<prefix> of 'lib', the return value
  is a hashref of the form:
  
    {
      'Package::Name' => {
        version => '0.123',
        file => 'lib/Package/Name.pm'
      },
      'OtherPackage::Name' => ...
    }
  
  =head2 C<< package_versions_from_directory($dir, \@files?) >>
  
  Scans C<$dir> for .pm files (unless C<@files> is given, in which case looks
  for those files in C<$dir> - and reads each file for packages and versions,
  returning a hashref of the form:
  
    {
      'Package::Name' => {
        version => '0.123',
        file => 'Package/Name.pm'
      },
      'OtherPackage::Name' => ...
    }
  
  The C<DB> and C<main> packages are always omitted, as are any "private"
  packages that have leading underscores in the namespace (e.g.
  C<Foo::_private>)
  
  Note that the file path is relative to C<$dir> if that is specified.
  This B<must not> be used directly for CPAN META C<provides>.  See
  the C<provides> method instead.
  
  =head2 C<< log_info (internal) >>
  
  Used internally to perform logging; imported from Log::Contextual if
  Log::Contextual has already been loaded, otherwise simply calls warn.
  
  =head1 OBJECT METHODS
  
  =head2 C<< name() >>
  
  Returns the name of the package represented by this module. If there
  is more than one package, it makes a best guess based on the
  filename. If it's a script (i.e. not a *.pm) the package name is
  'main'.
  
  =head2 C<< version($package) >>
  
  Returns the version as defined by the $VERSION variable for the
  package as returned by the C<name> method if no arguments are
  given. If given the name of a package it will attempt to return the
  version of that package if it is specified in the file.
  
  =head2 C<< filename() >>
  
  Returns the absolute path to the file.
  Note that this file may not actually exist on disk yet, e.g. if the module was read from an in-memory filehandle.
  
  =head2 C<< packages_inside() >>
  
  Returns a list of packages. Note: this is a raw list of packages
  discovered (or assumed, in the case of C<main>).  It is not
  filtered for C<DB>, C<main> or private packages the way the
  C<provides> method does.  Invalid package names are not returned,
  for example "Foo:Bar".  Strange but valid package names are
  returned, for example "Foo::Bar::", and are left up to the caller
  on how to handle.
  
  =head2 C<< pod_inside() >>
  
  Returns a list of POD sections.
  
  =head2 C<< contains_pod() >>
  
  Returns true if there is any POD in the file.
  
  =head2 C<< pod($section) >>
  
  Returns the POD data in the given section.
  
  =head2 C<< is_indexable($package) >> or C<< is_indexable() >>
  
  Available since version 1.000020.
  
  Returns a boolean indicating whether the package (if provided) or any package
  (otherwise) is eligible for indexing by PAUSE, the Perl Authors Upload Server.
  Note This only checks for valid C<package> declarations, and does not take any
  ownership information into account.
  
  =head1 SUPPORT
  
  Bugs may be submitted through L<the RT bug tracker|https://rt.cpan.org/Public/Dist/Display.html?Name=Module-Metadata>
  (or L<bug-Module-Metadata@rt.cpan.org|mailto:bug-Module-Metadata@rt.cpan.org>).
  
  There is also a mailing list available for users of this distribution, at
  L<http://lists.perl.org/list/cpan-workers.html>.
  
  There is also an irc channel available for users of this distribution, at
  L<C<#toolchain> on C<irc.perl.org>|irc://irc.perl.org/#toolchain>.
  
  =head1 AUTHOR
  
  Original code from Module::Build::ModuleInfo by Ken Williams
  <kwilliams@cpan.org>, Randy W. Sims <RandyS@ThePierianSpring.org>
  
  Released as Module::Metadata by Matt S Trout (mst) <mst@shadowcat.co.uk> with
  assistance from David Golden (xdg) <dagolden@cpan.org>.
  
  =head1 CONTRIBUTORS
  
  =for stopwords Karen Etheridge David Golden Vincent Pit Matt S Trout Chris Nehren Graham Knop Olivier Mengué Tomas Doran Tatsuhiko Miyagawa tokuhirom Kent Fredric Peter Rabbitson Steve Hay Jerry D. Hedden Craig A. Berry Mitchell Steinbrunner Edward Zborowski Gareth Harper James Raspass 'BinGOs' Williams Josh Jore
  
  =over 4
  
  =item *
  
  Karen Etheridge <ether@cpan.org>
  
  =item *
  
  David Golden <dagolden@cpan.org>
  
  =item *
  
  Vincent Pit <perl@profvince.com>
  
  =item *
  
  Matt S Trout <mst@shadowcat.co.uk>
  
  =item *
  
  Chris Nehren <apeiron@cpan.org>
  
  =item *
  
  Graham Knop <haarg@haarg.org>
  
  =item *
  
  Olivier Mengué <dolmen@cpan.org>
  
  =item *
  
  Tomas Doran <bobtfish@bobtfish.net>
  
  =item *
  
  Tatsuhiko Miyagawa <miyagawa@bulknews.net>
  
  =item *
  
  tokuhirom <tokuhirom@gmail.com>
  
  =item *
  
  Kent Fredric <kentnl@cpan.org>
  
  =item *
  
  Peter Rabbitson <ribasushi@cpan.org>
  
  =item *
  
  Steve Hay <steve.m.hay@googlemail.com>
  
  =item *
  
  Jerry D. Hedden <jdhedden@cpan.org>
  
  =item *
  
  Craig A. Berry <cberry@cpan.org>
  
  =item *
  
  Craig A. Berry <craigberry@mac.com>
  
  =item *
  
  David Mitchell <davem@iabyn.com>
  
  =item *
  
  David Steinbrunner <dsteinbrunner@pobox.com>
  
  =item *
  
  Edward Zborowski <ed@rubensteintech.com>
  
  =item *
  
  Gareth Harper <gareth@broadbean.com>
  
  =item *
  
  James Raspass <jraspass@gmail.com>
  
  =item *
  
  Chris 'BinGOs' Williams <chris@bingosnet.co.uk>
  
  =item *
  
  Josh Jore <jjore@cpan.org>
  
  =back
  
  =head1 COPYRIGHT & LICENSE
  
  Original code Copyright (c) 2001-2011 Ken Williams.
  Additional code Copyright (c) 2010-2011 Matt Trout and David Golden.
  All rights reserved.
  
  This library is free software; you can redistribute it and/or
  modify it under the same terms as Perl itself.
  
  =cut
MODULE_METADATA

$fatpacked{"Parse/CPAN/Meta.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'PARSE_CPAN_META';
  use 5.008001;
  use strict;
  use warnings;
  package Parse::CPAN::Meta;
  # ABSTRACT: Parse META.yml and META.json CPAN metadata files
  
  our $VERSION = '2.150010';
  
  use Exporter;
  use Carp 'croak';
  
  our @ISA = qw/Exporter/;
  our @EXPORT_OK = qw/Load LoadFile/;
  
  sub load_file {
    my ($class, $filename) = @_;
  
    my $meta = _slurp($filename);
  
    if ($filename =~ /\.ya?ml$/) {
      return $class->load_yaml_string($meta);
    }
    elsif ($filename =~ /\.json$/) {
      return $class->load_json_string($meta);
    }
    else {
      $class->load_string($meta); # try to detect yaml/json
    }
  }
  
  sub load_string {
    my ($class, $string) = @_;
    if ( $string =~ /^---/ ) { # looks like YAML
      return $class->load_yaml_string($string);
    }
    elsif ( $string =~ /^\s*\{/ ) { # looks like JSON
      return $class->load_json_string($string);
    }
    else { # maybe doc-marker-free YAML
      return $class->load_yaml_string($string);
    }
  }
  
  sub load_yaml_string {
    my ($class, $string) = @_;
    my $backend = $class->yaml_backend();
    my $data = eval { no strict 'refs'; &{"$backend\::Load"}($string) };
    croak $@ if $@;
    return $data || {}; # in case document was valid but empty
  }
  
  sub load_json_string {
    my ($class, $string) = @_;
    require Encode;
    # load_json_string takes characters, decode_json expects bytes
    my $encoded = Encode::encode('UTF-8', $string, Encode::PERLQQ());
    my $data = eval { $class->json_decoder()->can('decode_json')->($encoded) };
    croak $@ if $@;
    return $data || {};
  }
  
  sub yaml_backend {
    if ($ENV{PERL_CORE} or not defined $ENV{PERL_YAML_BACKEND} ) {
      _can_load( 'CPAN::Meta::YAML', 0.011 )
        or croak "CPAN::Meta::YAML 0.011 is not available\n";
      return "CPAN::Meta::YAML";
    }
    else {
      my $backend = $ENV{PERL_YAML_BACKEND};
      _can_load( $backend )
        or croak "Could not load PERL_YAML_BACKEND '$backend'\n";
      $backend->can("Load")
        or croak "PERL_YAML_BACKEND '$backend' does not implement Load()\n";
      return $backend;
    }
  }
  
  sub json_decoder {
    if ($ENV{PERL_CORE}) {
      _can_load( 'JSON::PP' => 2.27300 )
        or croak "JSON::PP 2.27300 is not available\n";
      return 'JSON::PP';
    }
    if (my $decoder = $ENV{CPAN_META_JSON_DECODER}) {
      _can_load( $decoder )
        or croak "Could not load CPAN_META_JSON_DECODER '$decoder'\n";
      $decoder->can('decode_json')
        or croak "No decode_json sub provided by CPAN_META_JSON_DECODER '$decoder'\n";
      return $decoder;
    }
    return $_[0]->json_backend;
  }
  
  sub json_backend {
    if ($ENV{PERL_CORE}) {
      _can_load( 'JSON::PP' => 2.27300 )
        or croak "JSON::PP 2.27300 is not available\n";
      return 'JSON::PP';
    }
    if (my $backend = $ENV{CPAN_META_JSON_BACKEND}) {
      _can_load( $backend )
        or croak "Could not load CPAN_META_JSON_BACKEND '$backend'\n";
      $backend->can('new')
        or croak "No constructor provided by CPAN_META_JSON_BACKEND '$backend'\n";
      return $backend;
    }
    if (! $ENV{PERL_JSON_BACKEND} or $ENV{PERL_JSON_BACKEND} eq 'JSON::PP') {
      _can_load( 'JSON::PP' => 2.27300 )
        or croak "JSON::PP 2.27300 is not available\n";
      return 'JSON::PP';
    }
    else {
      _can_load( 'JSON' => 2.5 )
        or croak  "JSON 2.5 is required for " .
                  "\$ENV{PERL_JSON_BACKEND} = '$ENV{PERL_JSON_BACKEND}'\n";
      return "JSON";
    }
  }
  
  sub _slurp {
    require Encode;
    open my $fh, "<:raw", "$_[0]" ## no critic
      or die "can't open $_[0] for reading: $!";
    my $content = do { local $/; <$fh> };
    $content = Encode::decode('UTF-8', $content, Encode::PERLQQ());
    return $content;
  }
  
  sub _can_load {
    my ($module, $version) = @_;
    (my $file = $module) =~ s{::}{/}g;
    $file .= ".pm";
    return 1 if $INC{$file};
    return 0 if exists $INC{$file}; # prior load failed
    eval { require $file; 1 }
      or return 0;
    if ( defined $version ) {
      eval { $module->VERSION($version); 1 }
        or return 0;
    }
    return 1;
  }
  
  # Kept for backwards compatibility only
  # Create an object from a file
  sub LoadFile ($) { ## no critic
    return Load(_slurp(shift));
  }
  
  # Parse a document from a string.
  sub Load ($) { ## no critic
    require CPAN::Meta::YAML;
    my $object = eval { CPAN::Meta::YAML::Load(shift) };
    croak $@ if $@;
    return $object;
  }
  
  1;
  
  __END__
  
  =pod
  
  =encoding UTF-8
  
  =head1 NAME
  
  Parse::CPAN::Meta - Parse META.yml and META.json CPAN metadata files
  
  =head1 VERSION
  
  version 2.150010
  
  =head1 SYNOPSIS
  
      #############################################
      # In your file
  
      ---
      name: My-Distribution
      version: 1.23
      resources:
        homepage: "http://example.com/dist/My-Distribution"
  
  
      #############################################
      # In your program
  
      use Parse::CPAN::Meta;
  
      my $distmeta = Parse::CPAN::Meta->load_file('META.yml');
  
      # Reading properties
      my $name     = $distmeta->{name};
      my $version  = $distmeta->{version};
      my $homepage = $distmeta->{resources}{homepage};
  
  =head1 DESCRIPTION
  
  B<Parse::CPAN::Meta> is a parser for F<META.json> and F<META.yml> files, using
  L<JSON::PP> and/or L<CPAN::Meta::YAML>.
  
  B<Parse::CPAN::Meta> provides three methods: C<load_file>, C<load_json_string>,
  and C<load_yaml_string>.  These will read and deserialize CPAN metafiles, and
  are described below in detail.
  
  B<Parse::CPAN::Meta> provides a legacy API of only two functions,
  based on the YAML functions of the same name. Wherever possible,
  identical calling semantics are used.  These may only be used with YAML sources.
  
  All error reporting is done with exceptions (die'ing).
  
  Note that META files are expected to be in UTF-8 encoding, only.  When
  converted string data, it must first be decoded from UTF-8.
  
  =begin Pod::Coverage
  
  
  
  
  =end Pod::Coverage
  
  =head1 METHODS
  
  =head2 load_file
  
    my $metadata_structure = Parse::CPAN::Meta->load_file('META.json');
  
    my $metadata_structure = Parse::CPAN::Meta->load_file('META.yml');
  
  This method will read the named file and deserialize it to a data structure,
  determining whether it should be JSON or YAML based on the filename.
  The file will be read using the ":utf8" IO layer.
  
  =head2 load_yaml_string
  
    my $metadata_structure = Parse::CPAN::Meta->load_yaml_string($yaml_string);
  
  This method deserializes the given string of YAML and returns the first
  document in it.  (CPAN metadata files should always have only one document.)
  If the source was UTF-8 encoded, the string must be decoded before calling
  C<load_yaml_string>.
  
  =head2 load_json_string
  
    my $metadata_structure = Parse::CPAN::Meta->load_json_string($json_string);
  
  This method deserializes the given string of JSON and the result.
  If the source was UTF-8 encoded, the string must be decoded before calling
  C<load_json_string>.
  
  =head2 load_string
  
    my $metadata_structure = Parse::CPAN::Meta->load_string($some_string);
  
  If you don't know whether a string contains YAML or JSON data, this method
  will use some heuristics and guess.  If it can't tell, it assumes YAML.
  
  =head2 yaml_backend
  
    my $backend = Parse::CPAN::Meta->yaml_backend;
  
  Returns the module name of the YAML serializer. See L</ENVIRONMENT>
  for details.
  
  =head2 json_backend
  
    my $backend = Parse::CPAN::Meta->json_backend;
  
  Returns the module name of the JSON serializer.  If C<CPAN_META_JSON_BACKEND>
  is set, this will be whatever that's set to.  If not, this will either
  be L<JSON::PP> or L<JSON>.  If C<PERL_JSON_BACKEND> is set,
  this will return L<JSON> as further delegation is handled by
  the L<JSON> module.  See L</ENVIRONMENT> for details.
  
  =head2 json_decoder
  
    my $decoder = Parse::CPAN::Meta->json_decoder;
  
  Returns the module name of the JSON decoder.  Unlike L</json_backend>, this
  is not necessarily a full L<JSON>-style module, but only something that will
  provide a C<decode_json> subroutine.  If C<CPAN_META_JSON_DECODER> is set,
  this will be whatever that's set to.  If not, this will be whatever has
  been selected as L</json_backend>.  See L</ENVIRONMENT> for more notes.
  
  =head1 FUNCTIONS
  
  For maintenance clarity, no functions are exported by default.  These functions
  are available for backwards compatibility only and are best avoided in favor of
  C<load_file>.
  
  =head2 Load
  
    my @yaml = Parse::CPAN::Meta::Load( $string );
  
  Parses a string containing a valid YAML stream into a list of Perl data
  structures.
  
  =head2 LoadFile
  
    my @yaml = Parse::CPAN::Meta::LoadFile( 'META.yml' );
  
  Reads the YAML stream from a file instead of a string.
  
  =head1 ENVIRONMENT
  
  =head2 CPAN_META_JSON_DECODER
  
  By default, L<JSON::PP> will be used for deserializing JSON data.  If the
  C<CPAN_META_JSON_DECODER> environment variable exists, this is expected to
  be the name of a loadable module that provides a C<decode_json> subroutine,
  which will then be used for deserialization.  Relying only on the existence
  of said subroutine allows for maximum compatibility, since this API is
  provided by all of L<JSON::PP>, L<JSON::XS>, L<Cpanel::JSON::XS>,
  L<JSON::MaybeXS>, L<JSON::Tiny>, and L<Mojo::JSON>.
  
  =head2 CPAN_META_JSON_BACKEND
  
  By default, L<JSON::PP> will be used for deserializing JSON data.  If the
  C<CPAN_META_JSON_BACKEND> environment variable exists, this is expected to
  be the name of a loadable module that provides the L<JSON> API, since
  downstream code expects to be able to call C<new> on this class.  As such,
  while L<JSON::PP>, L<JSON::XS>, L<Cpanel::JSON::XS> and L<JSON::MaybeXS> will
  work for this, to use L<Mojo::JSON> or L<JSON::Tiny> for decoding requires
  setting L</CPAN_META_JSON_DECODER>.
  
  =head2 PERL_JSON_BACKEND
  
  If the C<CPAN_META_JSON_BACKEND> environment variable does not exist, and if
  C<PERL_JSON_BACKEND> environment variable exists, is true and is not
  "JSON::PP", then the L<JSON> module (version 2.5 or greater) will be loaded and
  used to interpret C<PERL_JSON_BACKEND>.  If L<JSON> is not installed or is too
  old, an exception will be thrown.  Note that at the time of writing, the only
  useful values are 1, which will tell L<JSON> to guess, or L<JSON::XS> - if
  you want to use a newer JSON module, see L</CPAN_META_JSON_BACKEND>.
  
  =head2 PERL_YAML_BACKEND
  
  By default, L<CPAN::Meta::YAML> will be used for deserializing YAML data. If
  the C<PERL_YAML_BACKEND> environment variable is defined, then it is interpreted
  as a module to use for deserialization.  The given module must be installed,
  must load correctly and must implement the C<Load()> function or an exception
  will be thrown.
  
  =head1 AUTHORS
  
  =over 4
  
  =item *
  
  David Golden <dagolden@cpan.org>
  
  =item *
  
  Ricardo Signes <rjbs@cpan.org>
  
  =item *
  
  Adam Kennedy <adamk@cpan.org>
  
  =back
  
  =head1 COPYRIGHT AND LICENSE
  
  This software is copyright (c) 2010 by David Golden, Ricardo Signes, Adam Kennedy and Contributors.
  
  This is free software; you can redistribute it and/or modify it under
  the same terms as the Perl 5 programming language system itself.
  
  =cut
PARSE_CPAN_META

$fatpacked{"Perl/PrereqScanner/Lite.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'PERL_PREREQSCANNER_LITE';
  package Perl::PrereqScanner::Lite;
  use 5.008005;
  use strict;
  use warnings;
  use Carp ();
  use Compiler::Lexer;
  use CPAN::Meta::Requirements;
  use Perl::PrereqScanner::Lite::Constants;
  
  our $VERSION = "0.28";
  
  sub new {
      my ($class, $opt) = @_;
  
      my $lexer;
      if ($opt->{no_prereq}) {
          $lexer = Compiler::Lexer->new({verbose => 1}),
      }
      else {
          $lexer = Compiler::Lexer->new(),
      }
  
      my $extra_scanners = [];
      if (my $scanner_names = $opt->{extra_scanners}) {
          if (ref $scanner_names eq 'ARRAY') {
              for my $scanner_name (@$scanner_names) {
                  my $extra_scanner;
                  if (substr($scanner_name, 0, 1) eq '+') {
                      $extra_scanner = substr $scanner_name, 1;
                  }
                  else {
                      $extra_scanner = "Perl::PrereqScanner::Lite::Scanner::$scanner_name";
                  }
  
                  eval "require $extra_scanner"; ## no critic
                  push @$extra_scanners, $extra_scanner;
              }
          } else {
              Carp::croak "'extra_scanners' option must be array reference";
          }
      }
  
      bless {
          lexer          => $lexer,
          extra_scanners => $extra_scanners,
          module_reqs    => CPAN::Meta::Requirements->new,
      }, $class;
  }
  
  sub add_extra_scanner {
      my ($self, $scanner_name) = @_;
  
      my $extra_scanner;
      if (substr($scanner_name, 0, 1) eq '+') {
          $extra_scanner = substr $scanner_name, 1;
      }
      else {
          $extra_scanner = "Perl::PrereqScanner::Lite::Scanner::$scanner_name";
      }
  
      eval "require $extra_scanner"; ## no critic
      push @{$self->{extra_scanners}}, $extra_scanner;
  }
  
  sub scan_string {
      my ($self, $string) = @_;
  
      my $tokens = $self->{lexer}->tokenize($string);
      $self->_scan($tokens);
  }
  
  sub scan_file {
      my ($self, $file) = @_;
  
      open my $fh, '<', $file or die "Cannot open file: $file";
      my $script = do { local $/; <$fh>; };
  
      $self->scan_string($script);
  }
  
  sub scan_tokens {
      my ($self, $tokens) = @_;
      $self->_scan($tokens);
  }
  
  sub scan_module {
      my ($self, $module) = @_;
  
      require Module::Path;
  
      if (defined(my $path = Module::Path::module_path($module))) {
          return $self->scan_file($path);
      }
  }
  
  sub _scan {
      my ($self, $tokens) = @_;
  
      my $module_name    = '';
      my $module_version = 0;
  
      my $not_decl_module_name = '';
  
      my $is_in_reglist   = 0;
      my $is_in_usedecl   = 0;
      my $is_in_reqdecl   = 0;
      my $is_inherited    = 0;
      my $is_in_list      = 0;
      my $is_version_decl = 0;
      my $is_aliased      = 0;
      my $is_prev_version = 0;
      my $is_prev_module_name = 0;
  
      my $does_garbage_exist = 0;
      my $does_use_lib_or_constant = 0;
  
      my $latest_prereq = '';
  
      TOP:
      for (my $i = 0; my $token = $tokens->[$i]; $i++) {
          my $token_type = $token->{type};
  
          # For require statement
          if ($token_type == REQUIRE_DECL || ($token_type == BUILTIN_FUNC && $token->{data} eq 'no')) {
              $is_in_reqdecl = 1;
              next;
          }
          if ($is_in_reqdecl) {
              # e.g.
              #   require Foo;
              if ($token_type == REQUIRED_NAME || $token_type == KEY) {
                  $latest_prereq = $self->add_minimum($token->{data} => 0);
  
                  $is_in_reqdecl = 0;
                  next;
              }
  
              # e.g.
              #   require Foo::Bar;
              if ($token_type == NAMESPACE || $token_type == NAMESPACE_RESOLVER) {
                  $module_name .= $token->{data};
                  next;
              }
  
              # End of declare of require statement
              if ($token_type == SEMI_COLON) {
                  if ($module_name) {
                      $latest_prereq = $self->add_minimum($module_name => 0);
                  }
  
                  $module_name   = '';
                  $is_in_reqdecl = 0;
                  next;
              }
  
              next;
          }
  
          # For use statement
          if ($token_type == USE_DECL) {
              $is_in_usedecl = 1;
              next;
          }
          if ($is_in_usedecl) {
              # e.g.
              #   use Foo;
              #   use parent qw/Foo/;
              #
              if ($token_type == USED_NAME || $token_type == IF_STMT) {
                  # XXX                       ~~~~~~~~~~~~~~~~~~~~~~
                  # Workaround for `use if` statement
                  # It is a matter of Compiler::Lexer (maybe).
                  #
                  #   use if $] < 5.009_005, 'MRO::Compat';
  
                  $module_name = $token->{data};
  
                  if ($module_name eq 'lib' || $module_name eq 'constant') {
                      $latest_prereq = $self->add_minimum($module_name, 0);
                      $does_use_lib_or_constant = 1;
                  }
                  elsif ($module_name =~ /(?:base|parent)/) {
                      $is_inherited = 1;
                  }
                  elsif ($module_name =~ 'aliased') {
                      $is_aliased = 1;
                  }
  
                  $is_prev_module_name = 1;
                  next;
              }
  
              # End of declare of use statement
              if ($token_type == SEMI_COLON || $token_type == LEFT_BRACE || $token_type == LEFT_BRACKET) {
                  if ($module_name && !$does_use_lib_or_constant) {
                      $latest_prereq = $self->add_minimum($module_name => $module_version);
                  }
  
                  $module_name    = '';
                  $module_version = 0;
                  $is_in_reglist  = 0;
                  $is_inherited   = 0;
                  $is_in_list     = 0;
                  $is_in_usedecl  = 0;
                  $is_aliased     = 0;
                  $does_garbage_exist  = 0;
                  $is_prev_module_name = 0;
                  $does_use_lib_or_constant = 0;
  
                  next;
              }
  
              # e.g.
              #   use Foo::Bar;
              if ($token_type == NAMESPACE || $token_type == NAMESPACE_RESOLVER) {
                  $module_name .= $token->{data};
                  $is_prev_module_name = 1;
                  next;
              }
  
              # Section for parent/base
              if ($is_inherited) {
                  # For qw() notation
                  # e.g.
                  #   use parent qw/Foo Bar/;
                  if ($token_type == REG_LIST) {
                      $is_in_reglist = 1;
                  }
                  elsif ($is_in_reglist) {
                      if ($token_type == REG_EXP) {
                          for my $_module_name (split /\s+/, $token->{data}) {
                              $latest_prereq = $self->add_minimum($_module_name => 0);
                          }
                          $is_in_reglist = 0;
                      }
                  }
  
                  # For simply list
                  # e.g.
                  #   use parent ('Foo' 'Bar');
                  elsif ($token_type == LEFT_PAREN) {
                      $is_in_list = 1;
                  }
                  elsif ($token_type == RIGHT_PAREN) {
                      $is_in_list = 0;
                  }
                  elsif ($is_in_list) {
                      if ($token_type == STRING || $token_type == RAW_STRING) {
                          $latest_prereq = $self->add_minimum($token->{data} => 0);
                      }
                  }
  
                  # For string
                  # e.g.
                  #   use parent "Foo"
                  elsif ($token_type == STRING || $token_type == RAW_STRING) {
                      $latest_prereq = $self->add_minimum($token->{data} => 0);
                  }
  
                  $is_prev_module_name = 0;
                  next;
              }
  
              if ($token_type == DOUBLE || $token_type == INT || $token_type == VERSION_STRING) {
                  if (!$module_name) {
                      if (!$does_garbage_exist) {
                          # For perl version
                          # e.g.
                          #   use 5.012;
                          my $perl_version = $token->{data};
                          $latest_prereq = $self->add_minimum('perl' => $perl_version);
                          $is_in_usedecl = 0;
                      }
                  }
                  elsif($is_prev_module_name) {
                      # For module version
                      # e.g.
                      #   use Foo::Bar 0.0.1;'
                      #   use Foo::Bar v0.0.1;
                      #   use Foo::Bar 0.0_1;
                      $module_version = $token->{data};
                  }
  
                  $is_prev_module_name = 0;
                  $is_prev_version = 1;
                  next;
              }
  
              if ($is_aliased) {
                  if ($token_type == STRING || $token_type == RAW_STRING) {
                      $latest_prereq = $self->add_minimum($token->{data} => 0);
                      $is_aliased = 0;
                  }
                  next;
              }
  
              if (($is_prev_module_name || $is_prev_version) && $token_type == LEFT_PAREN) {
                  my $left_paren_num = 1;
                  for ($i++; $token = $tokens->[$i]; $i++) { # skip content that is surrounded by parens
                      $token_type = $token->{type};
  
                      if ($token_type == LEFT_PAREN) {
                          $left_paren_num++;
                      }
                      elsif ($token_type == RIGHT_PAREN) {
                          last if --$left_paren_num <= 0;
                      }
                  }
                  next;
              }
  
              if ($token_type != WHITESPACE) {
                  $does_garbage_exist  = 1;
                  $is_prev_module_name = 0;
                  $is_prev_version = 0;
              }
              next;
          }
  
          for my $extra_scanner (@{$self->{extra_scanners}}) {
              if ($extra_scanner->scan($self, $token, $token_type)) {
                  next TOP;
              }
          }
  
          if ($token_type == COMMENT && $token->{data} =~ /\A##\s*no prereq\Z/) {
              $self->{module_reqs}->clear_requirement($latest_prereq);
              next;
          }
      }
  
      return $self->{module_reqs};
  }
  
  sub add_minimum {
      my ($self, $module_name, $module_version) = @_;
  
      if ($module_name) {
          $self->{module_reqs}->add_minimum($module_name => $module_version);
      }
  
      return $module_name;
  }
  
  1;
  __END__
  
  =encoding utf-8
  
  =for stopwords prepend reimplement tokenizer
  
  =head1 NAME
  
  Perl::PrereqScanner::Lite - Lightweight Prereqs Scanner for Perl
  
  =head1 SYNOPSIS
  
      use Perl::PrereqScanner::Lite;
  
      my $scanner = Perl::PrereqScanner::Lite->new;
      $scanner->add_extra_scanner('Moose'); # add extra scanner for moose style
      my $modules = $scanner->scan_file('path/to/file');
  
  =head1 DESCRIPTION
  
  Perl::PrereqScanner::Lite is the lightweight prereqs scanner for perl.
  This scanner uses L<Compiler::Lexer> as tokenizer, therefore processing speed is really fast.
  
  =head1 METHODS
  
  =head2 new($opt)
  
  Create a scanner instance.
  
  C<$opt> must be hash reference. It accepts following keys of hash:
  
  =over 4
  
  =item * extra_scanners
  
  It specifies extra scanners. This item must be array reference.
  
  e.g.
  
      my $scanner = Perl::PrereqScanner::Lite->new(
          extra_scanners => [qw/Moose Version/]
      );
  
  See also L</add_extra_scanner($scanner_name)>.
  
  =item * no_prereq
  
  It specifies to use C<## no prereq> or not. Please see also L</ADDITIONAL NOTATION>.
  
  =back
  
  =head2 scan_file($file_path)
  
  Scan and figure out prereqs which is instance of C<CPAN::Meta::Requirements> by file path.
  
  =head2 scan_string($string)
  
  Scan and figure out prereqs which is instance of C<CPAN::Meta::Requirements> by source code string written in perl.
  
  e.g.
  
      open my $fh, '<', __FILE__;
      my $string = do { local $/; <$fh> };
      my $modules = $scanner->scan_string($string);
  
  =head2 scan_module($module_name)
  
  Scan and figure out prereqs which is instance of C<CPAN::Meta::Requirements> by module name.
  
  e.g.
  
      my $modules = $scanner->scan_module('Perl::PrereqScanner::Lite');
  
  =head2 scan_tokens($tokens)
  
  Scan and figure out prereqs which is instance of C<CPAN::Meta::Requirements> by tokens of L<Compiler::Lexer>.
  
  e.g.
  
      open my $fh, '<', __FILE__;
      my $string = do { local $/; <$fh> };
      my $tokens = Compiler::Lexer->new->tokenize($string);
      my $modules = $scanner->scan_tokens($tokens);
  
  =head2 add_extra_scanner($scanner_name)
  
  Add extra scanner to scan and figure out prereqs. This module loads extra scanner such as C<Perl::PrereqScanner::Lite::Scanner::$scanner_name> if specifying scanner name through this method.
  
  If you want to specify an extra scanner from external package without C<Perl::PrereqScanner::Lite::> prefix, you can prepend C<+> to C<$scanner_name>. Like so C<+Your::Awesome::Scanner>.
  
  Extra scanners that are default supported are followings;
  
  =over 8
  
  =item * L<Perl::PrereqScanner::Lite::Scanner::Moose>
  
  =item * L<Perl::PrereqScanner::Lite::Scanner::Version>
  
  =back
  
  =head1 ADDITIONAL NOTATION
  
  If C<no_prereq> is enabled by C<new()> (like so: C<Perl::PrereqScanner::Lite-E<gt>new({no_prereq =E<gt> 1})>),
  this module recognize C<## no prereq> optional comment. The requiring declaration with this comment on the same line will be ignored as prereq.
  
  For example
  
      use Foo;
      use Bar; ## no prereq
  
  In this case C<Foo> is the prereq, however C<Bar> is ignored.
  
  =head1 SPEED COMPARISON
  
  =head2 Plain
  
                                  Rate   Perl::PrereqScanner Perl::PrereqScanner::Lite
      Perl::PrereqScanner       8.57/s                    --                      -97%
      Perl::PrereqScanner::Lite  246/s                 2770%                        --
  
  =head2 With Moose scanner
  
                                  Rate   Perl::PrereqScanner Perl::PrereqScanner::Lite
      Perl::PrereqScanner       9.00/s                    --                      -94%
      Perl::PrereqScanner::Lite  152/s                 1587%                        --
  
  =head1 NOTES
  
  This is a quotation from L<https://github.com/moznion/Perl-PrereqScanner-Lite/issues/13>.
  
  =begin text
  
  The interface of an this module object suggests every scan_* call is not affected by any other, yet the code is storing the requirements in that object. This is quite surprising.
  
  I'd suggest that either it must change to be more functional-style, or this behavior should be clearly documented.
  
  =end text
  
  Yes, it's true. This design is so ugly and not smart.
  So I have to redesign and reimplement this module, and I have some plans.
  
  If you have a mind to expand this module by implementing external scanner,
  please be careful.
  Every C<scan_*> calls must not affect to any others through the
  singleton of this module (called it C<$c> in L<https://github.com/moznion/Perl-PrereqScanner-Lite/blob/c03638b2e2a39d92f4d7df360af5a6be65dc417a/lib/Perl/PrereqScanner/Lite/Scanner/Moose.pm#L8>).
  
  =head1 SEE ALSO
  
  L<Perl::PrereqScanner>, L<Compiler::Lexer>
  
  =head1 LICENSE
  
  Copyright (C) moznion.
  
  This library is free software; you can redistribute it and/or modify
  it under the same terms as Perl itself.
  
  =head1 AUTHOR
  
  moznion E<lt>moznion@gmail.comE<gt>
  
  =cut
  
PERL_PREREQSCANNER_LITE

$fatpacked{"Perl/PrereqScanner/Lite/Constants.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'PERL_PREREQSCANNER_LITE_CONSTANTS';
  package Perl::PrereqScanner::Lite::Constants;
  use strict;
  use warnings;
  use utf8;
  use Compiler::Lexer::Constants;
  
  use parent qw(Exporter);
  
  our @EXPORT = qw(
      REQUIRE_DECL REQUIRED_NAME NAMESPACE_RESOLVER NAMESPACE
      SEMI_COLON USE_DECL USED_NAME REG_LIST REG_EXP LEFT_PAREN
      RIGHT_PAREN STRING RAW_STRING VERSION_STRING INT DOUBLE KEY
      METHOD WHITESPACE COMMENT LEFT_BRACE RIGHT_BRACE
      LEFT_BRACKET RIGHT_BRACKET BUILTIN_FUNC
      IF_STMT COMMA
  );
  
  use constant {
      REQUIRE_DECL       => Compiler::Lexer::TokenType::T_RequireDecl,
      REQUIRED_NAME      => Compiler::Lexer::TokenType::T_RequiredName,
      NAMESPACE_RESOLVER => Compiler::Lexer::TokenType::T_NamespaceResolver,
      NAMESPACE          => Compiler::Lexer::TokenType::T_Namespace,
      SEMI_COLON         => Compiler::Lexer::TokenType::T_SemiColon,
      USE_DECL           => Compiler::Lexer::TokenType::T_UseDecl,
      USED_NAME          => Compiler::Lexer::TokenType::T_UsedName,
      REG_LIST           => Compiler::Lexer::TokenType::T_RegList,
      REG_EXP            => Compiler::Lexer::TokenType::T_RegExp,
      STRING             => Compiler::Lexer::TokenType::T_String,
      RAW_STRING         => Compiler::Lexer::TokenType::T_RawString,
      VERSION_STRING     => Compiler::Lexer::TokenType::T_VersionString,
      INT                => Compiler::Lexer::TokenType::T_Int,
      DOUBLE             => Compiler::Lexer::TokenType::T_Double,
      KEY                => Compiler::Lexer::TokenType::T_Key,
      METHOD             => Compiler::Lexer::TokenType::T_Method,
      WHITESPACE         => Compiler::Lexer::TokenType::T_WhiteSpace,
      COMMENT            => Compiler::Lexer::TokenType::T_Comment,
      IF_STMT            => Compiler::Lexer::TokenType::T_IfStmt,
      COMMA              => Compiler::Lexer::TokenType::T_Comma,
  
      LEFT_PAREN   => Compiler::Lexer::TokenType::T_LeftParenthesis,
      RIGHT_PAREN  => Compiler::Lexer::TokenType::T_RightParenthesis,
      LEFT_BRACE   => Compiler::Lexer::TokenType::T_LeftBrace,
      RIGHT_BRACE   => Compiler::Lexer::TokenType::T_RightBrace,
      LEFT_BRACKET => Compiler::Lexer::TokenType::T_LeftBracket,
      RIGHT_BRACKET => Compiler::Lexer::TokenType::T_RightBracket,
  
      BUILTIN_FUNC => Compiler::Lexer::TokenType::T_BuiltinFunc,
  };
  
  1;
  
PERL_PREREQSCANNER_LITE_CONSTANTS

$fatpacked{"Perl/PrereqScanner/Lite/Scanner/Moose.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'PERL_PREREQSCANNER_LITE_SCANNER_MOOSE';
  package Perl::PrereqScanner::Lite::Scanner::Moose;
  use strict;
  use warnings;
  use utf8;
  use Perl::PrereqScanner::Lite::Constants;
  
  sub scan {
      my ($class, $c, $token, $token_type) = @_;
  
      my $token_data = $token->data;
      if ($token_type == KEY && ($token_data eq 'extends' || $token_data eq 'with')) {
          $c->{is_in_moose_inherited} = 1;
          return 1;
      }
  
      if ($c->{is_in_moose_inherited}) {
          # to skip content which is is curly bracket -> { ... }
          {
              if ($token_type == LEFT_BRACE) {
                  $c->{is_in_moose_role_def} = 1;
                  return 1;
              }
  
              if ($token_type == RIGHT_BRACE) {
                  $c->{is_in_moose_role_def} = 0;
                  return 1;
              }
  
              if ($c->{is_in_moose_role_def}) {
                  return 1;
              }
          }
  
          # For qw() notation
          # e.g.
          #   extends qw/Foo Bar/;
          #   with qw/Foo Bar/;
          if ($token_type == REG_LIST) {
              $c->{is_in_moose_inherited_reglist} = 1;
              return 1;
          }
          if ($c->{is_in_moose_inherited_reglist} && !$c->{does_exist_moose_garbage}) {
              if ($token_type == REG_EXP) {
                  for my $_module_name (split /\s+/, $token_data) {
                      $c->add_minimum($_module_name => 0);
                  }
                  $c->{is_in_moose_inherited_reglist} = 0;
              }
              return 1;
          }
  
          # For simply list
          # e.g.
          #   extends ('Foo', 'Bar');
          #   with ('Foo', 'Bar');
          if ($token_type == LEFT_PAREN) {
              $c->{is_in_moose_inherited_list} = 1;
              return 1;
          }
          if ($token_type == RIGHT_PAREN) {
              $c->{is_in_moose_inherited_list} = 0;
              return 1;
          }
          if ($c->{is_in_moose_inherited_list}) {
              if (($token_type == STRING || $token_type == RAW_STRING) && !$c->{does_exist_moose_garbage}) {
                  $c->add_minimum($token_data => 0);
              }
              return 1;
          }
  
          # For string
          # e.g.
          #   extends "Foo"
          #   with "Foo"
          if ((($token_type == STRING || $token_type == RAW_STRING)) && !$c->{does_exist_moose_garbage}) {
              $c->add_minimum($token_data => 0);
              return 1;
          }
  
          # End of extends or with
          if ($token_type == SEMI_COLON) {
              $c->{is_in_moose_inherited}         = 0;
              $c->{is_in_moose_inherited_reglist} = 0;
              $c->{is_in_moose_inherited_list}    = 0;
              $c->{does_exist_moose_garbage}      = 0;
              return 1;
          }
  
          # For
          #   extends 'Class1', 'Class2';
          if ($token_type != COMMA) {
              $c->{does_exist_moose_garbage} = 1;
          }
  
          return 1;
      }
  
      return;
  }
  
  1;
  
  =encoding utf-8
  
  =head1 NAME
  
  Perl::PrereqScanner::Lite::Scanner::Moose - Extra Perl::PrereqScanner::Lite Scanner for Moose Family
  
  =head1 SYNOPSIS
  
      use Perl::PrereqScanner::Lite;
  
      my $scanner = Perl::PrereqScanner::Lite->new;
      $scanner->add_extra_scanner('Moose');
  
  =head1 DESCRIPTION
  
  Perl::PrereqScanner::Lite::Scanner::Moose is the extra scanner for Perl::PrereqScanner::Lite. This scanner supports C<extends> and C<with> notation for Moose family.
  
  =head1 LICENSE
  
  Copyright (C) moznion.
  
  This library is free software; you can redistribute it and/or modify
  it under the same terms as Perl itself.
  
  =head1 AUTHOR
  
  moznion E<lt>moznion@gmail.comE<gt>
  
  =cut
  
PERL_PREREQSCANNER_LITE_SCANNER_MOOSE

$fatpacked{"Perl/PrereqScanner/Lite/Scanner/Version.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'PERL_PREREQSCANNER_LITE_SCANNER_VERSION';
  package Perl::PrereqScanner::Lite::Scanner::Version;
  use strict;
  use warnings;
  use utf8;
  use Perl::PrereqScanner::Lite::Constants;
  
  sub scan {
      my ($class, $c, $token, $token_type) = @_;
  
      if ($token_type == KEY || $token_type == NAMESPACE || $token_type == NAMESPACE_RESOLVER) {
          $c->{not_decl_module_name} .= $token->{data};
          return 1;
      }
  
      if ($token_type == METHOD && $token->{data} eq 'VERSION') {
          $c->{is_version_decl} = 1;
          return 1;
      }
  
      if ($c->{is_version_decl} && $token_type == INT || $token_type == DOUBLE || $token_type == VERSION_STRING) {
          if ($c->{module_reqs}->{requirements}->{$c->{not_decl_module_name}}) {
              $c->add_minimum($c->{not_decl_module_name} => $token->{data});
          }
          $c->{is_version_decl} = 0;
          $c->{not_decl_module_name} = '';
          return 1;
      }
  
      if ($token_type == SEMI_COLON) {
          $c->{is_version_decl} = 0;
          $c->{not_decl_module_name} = '';
          return 1;
      }
  }
  
  1;
  
  =encoding utf-8
  
  =head1 NAME
  
  Perl::PrereqScanner::Lite::Scanner::Version - Extra Perl::PrereqScanner::Lite Scanner for VERSION method
  
  =head1 SYNOPSIS
  
      use Perl::PrereqScanner::Lite;
  
      my $scanner = Perl::PrereqScanner::Lite->new;
      $scanner->add_extra_scanner('Version');
  
  =head1 DESCRIPTION
  
  Perl::PrereqScanner::Lite::Scanner::Version is the extra scanner for Perl::PrereqScanner::Lite.
  This scanner supports C<VERSION> method. It retrieves version from the argument of C<VERSION>.
  
  For example,
  
      require Foo::Bar;
      Foo::Bar->VERSION(1.00);
  
  =head1 LICENSE
  
  Copyright (C) moznion.
  
  This library is free software; you can redistribute it and/or modify
  it under the same terms as Perl itself.
  
  =head1 AUTHOR
  
  moznion E<lt>moznion@gmail.comE<gt>
  
  =cut
  
PERL_PREREQSCANNER_LITE_SCANNER_VERSION

$fatpacked{"darwin-2level/Compiler/Lexer.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'DARWIN-2LEVEL_COMPILER_LEXER';
  package Compiler::Lexer;
  use strict;
  use warnings;
  use 5.008_001;
  use File::Find;
  use Compiler::Lexer::Token;
  use Compiler::Lexer::Constants;
  
  require Exporter;
  our @ISA = qw(Exporter);
  our %EXPORT_TAGS = ( 'all' => [ qw() ] );
  our @EXPORT_OK = ( @{ $EXPORT_TAGS{'all'} } );
  our @EXPORT = qw();
  our $VERSION = '0.22';
  require XSLoader;
  XSLoader::load(__PACKAGE__, $VERSION);
  
  my $inc;
  
  sub new {
      my ($class, $args) = @_;
      my $options = +{};
      if (ref $args eq 'HASH') {
          $options = $args;
      } elsif (ref $args eq 'SCALAR') {
          $options->{filename} = $args;
      }
      $options->{filename} ||= '-';
      $options->{verbose}  ||= 0;
      return $class->_new($options);
  }
  
  sub set_library_path {
      my ($self, $_inc) = @_;
      $inc = $_inc;
  }
  
  sub load_module {
      my ($self, $name) = @_;
      $name =~ s|::|/|g;
      my @include_path = ($inc) ? @$inc : @INC;
      my $module_path = '';
      foreach my $path (@include_path) {
          next unless -e $path;
          find(sub {
              return if ($module_path);
              my $absolute_path = $File::Find::name;
              if ($absolute_path =~ "$name.pm") {
                  $module_path = $absolute_path;
              }
          }, $path);
          last if ($module_path);
      }
      return undef unless $module_path;
      open my $fh, '<', $module_path;
      return do { local $/; <$fh> };
  }
  
  sub recursive_tokenize {
      my ($self, $script) = @_;
      my %results;
      $self->__recursive_tokenize(\%results, $script);
      $results{main} = $self->tokenize($script);
      return \%results;
  }
  
  sub __recursive_tokenize {
      my ($self, $results, $script) = @_;
      my $modules = $self->get_used_modules($script);
      foreach my $module (@$modules) {
          my $name = $module->{name};
          next if (defined $results->{$name});
          $results->{$name} ||= [];
          my $code = $self->load_module($name);
          next unless ($code);
          $results->{$name} = $self->tokenize($code);
          $self->__recursive_tokenize($results, $code);
      }
  }
  
  1;
  __END__
  
  =encoding utf-8
  
  =head1 NAME
  
  Compiler::Lexer - Lexical Analyzer for Perl5
  
  =head1 SYNOPSIS
  
    use Compiler::Lexer;
    use Data::Dumper;
  
    my $filename = $ARGV[0];
    open my $fh, '<', $filename or die "Cannot open $filename: $!";
    my $script = do { local $/; <$fh> };
  
    my $lexer = Compiler::Lexer->new($filename);
    my $tokens = $lexer->tokenize($script);
    print Dumper $tokens;
  
    my $modules = $lexer->get_used_modules($script);
    print Dumper $modules;
  
  =head1 METHODS
  
  =over 4
  
  =item my $lexer = Compiler::Lexer->new($options);
  
  create new instance.
  You can create object from $options in hash reference.
  
  B<options list>
  
  =over 4
  
  =item filename
  
  =item verbose : includes token of Pod, Comment and WhiteSpace
  
  =back
  
  =item $lexer->tokenize($script);
  
  get token objects includes parameter of 'name' or 'type' or 'line' and so on.
  This method requires perl source code in string.
  
  =item $lexer->set_library_path(['path1', 'path2' ...])
  
  set libraries path for reading recursively. Default paths are @INC.
  
  =item $lexer->recursive_tokenize($script)
  
  get hash reference like { 'module_nameA' => [], 'module_nameB' => [] ... }.
  This method requires per source code in string.
  
  =item $lexer->get_used_modules($script);
  
  get names of used module.
  This method requires perl source code in string.
  
  =back
  
  =head1 AUTHOR
  
  Masaaki Goshima (goccy) E<lt>goccy(at)cpan.orgE<gt>
  
  =head1 CONTRIBUTORS
  
  tokuhirom: Tokuhiro Matsuno
  
  =head1 LICENSE AND COPYRIGHT
  
  Copyright (c) 2013, Masaaki Goshima (goccy). All rights reserved.
  
  This library is free software; you can redistribute it and/or modify
  it under the same terms as Perl itself.
  
  =cut
DARWIN-2LEVEL_COMPILER_LEXER

$fatpacked{"darwin-2level/Compiler/Lexer/Constants.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'DARWIN-2LEVEL_COMPILER_LEXER_CONSTANTS';
  use strict;
  use warnings;
  
  package Compiler::Lexer::TokenType;
  use constant {
      T_Return => 0,
      T_Add => 1,
      T_Sub => 2,
      T_Mul => 3,
      T_Div => 4,
      T_Mod => 5,
      T_ThreeTermOperator => 6,
      T_Greater => 7,
      T_Less => 8,
      T_StringAdd => 9,
      T_Ref => 10,
      T_Glob => 11,
      T_BitNot => 12,
      T_BitOr => 13,
      T_AlphabetOr => 14,
      T_BitAnd => 15,
      T_AlphabetAnd => 16,
      T_BitXOr => 17,
      T_AlphabetXOr => 18,
      T_StringMul => 19,
      T_AddEqual => 20,
      T_SubEqual => 21,
      T_MulEqual => 22,
      T_DivEqual => 23,
      T_ModEqual => 24,
      T_StringAddEqual => 25,
      T_LeftShiftEqual => 26,
      T_RightShiftEqual => 27,
      T_StringMulEqual => 28,
      T_GreaterEqual => 29,
      T_LessEqual => 30,
      T_EqualEqual => 31,
      T_Diamond => 32,
      T_Compare => 33,
      T_PolymorphicCompare => 34,
      T_RegOK => 35,
      T_RegNot => 36,
      T_NotEqual => 37,
      T_StringLess => 38,
      T_StringLessEqual => 39,
      T_StringGreater => 40,
      T_StringGreaterEqual => 41,
      T_StringEqual => 42,
      T_StringNotEqual => 43,
      T_StringCompare => 44,
      T_Inc => 45,
      T_Dec => 46,
      T_Exp => 47,
      T_PowerEqual => 48,
      T_DefaultEqual => 49,
      T_LeftShift => 50,
      T_RightShift => 51,
      T_And => 52,
      T_Or => 53,
      T_AndBitEqual => 54,
      T_OrBitEqual => 55,
      T_NotBitEqual => 56,
      T_OrEqual => 57,
      T_AndEqual => 58,
      T_Slice => 59,
      T_DefaultOperator => 60,
      T_ToDo => 61,
      T_VarDecl => 62,
      T_FunctionDecl => 63,
      T_Method => 64,
      T_Assign => 65,
      T_ArraySize => 66,
      T_Is => 67,
      T_Not => 68,
      T_AlphabetNot => 69,
      T_BuiltinFunc => 70,
      T_RequireDecl => 71,
      T_Import => 72,
      T_SpecificKeyword => 73,
      T_DataWord => 74,
      T_ModWord => 75,
      T_AUTOLOAD => 76,
      T_CORE => 77,
      T_DESTROY => 78,
      T_STDIN => 79,
      T_STDOUT => 80,
      T_STDERR => 81,
      T_Redo => 82,
      T_Next => 83,
      T_Last => 84,
      T_Goto => 85,
      T_Continue => 86,
      T_Do => 87,
      T_Break => 88,
      T_Handle => 89,
      T_LocalDecl => 90,
      T_OurDecl => 91,
      T_StateDecl => 92,
      T_UseDecl => 93,
      T_UsedName => 94,
      T_RequiredName => 95,
      T_IfStmt => 96,
      T_ElseStmt => 97,
      T_ElsifStmt => 98,
      T_UnlessStmt => 99,
      T_UntilStmt => 100,
      T_WhenStmt => 101,
      T_GivenStmt => 102,
      T_DefaultStmt => 103,
      T_Comma => 104,
      T_Colon => 105,
      T_SemiColon => 106,
      T_LeftParenthesis => 107,
      T_RightParenthesis => 108,
      T_LeftBrace => 109,
      T_RightBrace => 110,
      T_LeftBracket => 111,
      T_RightBracket => 112,
      T_ArrayDereference => 113,
      T_HashDereference => 114,
      T_ScalarDereference => 115,
      T_CodeDereference => 116,
      T_ShortScalarDereference => 117,
      T_ShortArrayDereference => 118,
      T_ShortHashDereference => 119,
      T_ShortCodeDereference => 120,
      T_ArraySizeDereference => 121,
      T_Key => 122,
      T_BareWord => 123,
      T_Arrow => 124,
      T_Pointer => 125,
      T_NamespaceResolver => 126,
      T_Namespace => 127,
      T_Package => 128,
      T_Class => 129,
      T_CallDecl => 130,
      T_CodeRef => 131,
      T_WhileStmt => 132,
      T_ForStmt => 133,
      T_ForeachStmt => 134,
      T_Annotation => 135,
      T_ArgumentArray => 136,
      T_SpecificValue => 137,
      T_ConstValue => 138,
      T_ProgramArgument => 139,
      T_LibraryDirectories => 140,
      T_Environment => 141,
      T_Include => 142,
      T_Signal => 143,
      T_RegOpt => 144,
      T_RegQuote => 145,
      T_RegDoubleQuote => 146,
      T_RegList => 147,
      T_RegExec => 148,
      T_RegDecl => 149,
      T_RegMatch => 150,
      T_RegDelim => 151,
      T_HandleDelim => 152,
      T_RegMiddleDelim => 153,
      T_RegAllReplace => 154,
      T_RegReplace => 155,
      T_RegReplaceFrom => 156,
      T_RegReplaceTo => 157,
      T_FieldDecl => 158,
      T_TypeRef => 159,
      T_LabelRef => 160,
      T_LocalVarDecl => 161,
      T_GlobalVarDecl => 162,
      T_MultiLocalVarDecl => 163,
      T_MultiGlobalVarDecl => 164,
      T_Prototype => 165,
      T_Var => 166,
      T_CodeVar => 167,
      T_ArrayVar => 168,
      T_HashVar => 169,
      T_Int => 170,
      T_Double => 171,
      T_String => 172,
      T_RawString => 173,
      T_ExecString => 174,
      T_VersionString => 175,
      T_HereDocumentTag => 176,
      T_HereDocumentRawTag => 177,
      T_HereDocumentExecTag => 178,
      T_HereDocumentBareTag => 179,
      T_RawHereDocument => 180,
      T_HereDocument => 181,
      T_HereDocumentEnd => 182,
      T_FormatDecl => 183,
      T_Format => 184,
      T_FormatEnd => 185,
      T_Object => 186,
      T_RegExp => 187,
      T_Array => 188,
      T_Hash => 189,
      T_Operator => 190,
      T_LocalVar => 191,
      T_LocalArrayVar => 192,
      T_LocalHashVar => 193,
      T_GlobalVar => 194,
      T_GlobalArrayVar => 195,
      T_GlobalHashVar => 196,
      T_ArrayRef => 197,
      T_HashRef => 198,
      T_ArrayAt => 199,
      T_HashAt => 200,
      T_ArraySet => 201,
      T_HashSet => 202,
      T_Function => 203,
      T_Call => 204,
      T_Argument => 205,
      T_List => 206,
      T_Default => 207,
      T_Pod => 208,
      T_Comment => 209,
      T_WhiteSpace => 210,
      T_Undefined => 211,
      T_PostDeref => 212,
      T_PostDerefStar => 213,
      T_PostDerefArraySliceOpenBracket => 214,
      T_PostDerefArraySliceCloseBracket => 215,
      T_PostDerefHashSliceOpenBrace => 216,
      T_PostDerefHashSliceCloseBrace => 217,
      T_PostDerefCodeOpenParen => 218,
      T_PostDerefCodeCloseParen => 219
  };
  
  package Compiler::Lexer::SyntaxType;
  use constant {
      T_Value => 0,
      T_Term => 1,
      T_Expr => 2,
      T_Stmt => 3,
      T_BlockStmt => 4
  };
  
  package Compiler::Lexer::Kind;
  use constant {
      T_Return => 0,
      T_Operator => 1,
      T_Assign => 2,
      T_Decl => 3,
      T_Function => 4,
      T_SingleTerm => 5,
      T_Import => 6,
      T_SpecificKeyword => 7,
      T_DataWord => 8,
      T_ModWord => 9,
      T_AUTOLOAD => 10,
      T_CORE => 11,
      T_DESTROY => 12,
      T_Handle => 13,
      T_Control => 14,
      T_Do => 15,
      T_Module => 16,
      T_Stmt => 17,
      T_DefaultStmt => 18,
      T_Comma => 19,
      T_Colon => 20,
      T_StmtEnd => 21,
      T_Symbol => 22,
      T_Modifier => 23,
      T_Term => 24,
      T_Namespace => 25,
      T_Package => 26,
      T_Class => 27,
      T_Annotation => 28,
      T_RegOpt => 29,
      T_RegPrefix => 30,
      T_RegReplacePrefix => 31,
      T_Ref => 32,
      T_Get => 33,
      T_Set => 34,
      T_Verbose => 35,
      T_Undefined => 36
  };
  
  1;
DARWIN-2LEVEL_COMPILER_LEXER_CONSTANTS

$fatpacked{"darwin-2level/Compiler/Lexer/Token.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'DARWIN-2LEVEL_COMPILER_LEXER_TOKEN';
  package Compiler::Lexer::Token;
  use strict;
  use warnings;
  
  my $FIELDS = [qw/
      stype
      type
      kind
      line
      name
      data
      has_warnings
  /];
  
  {
      no strict 'refs';
      foreach my $field (@$FIELDS) {
          *{__PACKAGE__ . '::' . $field} = sub {
              my ($self, $value) = @_;
              return $self->{$field} unless defined $value;
              $self->{$field} = $value;
          };
      }
  }
  
  1;
  __END__
  
  =encoding utf-8
  
  =for stopwords stype
  
  =head1 NAME
  
  Compiler::Lexer::Token
  
  =head1 SYNOPSIS
  
  Compiler::Lexer::Token includes the following members.
  
  =over
  
  =item stype
  
  constant of Compiler::Lexer::SyntaxType
  
  =item type
  
  constant of Compiler::Lexer::TokenType
  
  =item kind
  
  constant of Compiler::Lexer::Kind
  
  =item name
  
  name of Compiler::Lexer::TokenType
  
  =item data
  
  raw data
  
  =item has_warnings
  
  flag of whether unknown keyword or not
  
  =back
  
  =head1 METHODS
  
  support simple get/set accessors like Class::Accessor::Fast
  
  example:
  
    my $type = $token->type;                            # get accessor
    $token->type(Compiler::Lexer::TokenType::T_RegExp); # set accessor
  
  =head1 AUTHOR
  
  Masaaki Goshima (goccy) E<lt>goccy(at)cpan.orgE<gt>
  
  =head1 LICENSE AND COPYRIGHT
  
  Copyright (c) 2013, Masaaki Goshima (goccy). All rights reserved.
  
  This library is free software; you can redistribute it and/or modify
  it under the same terms as Perl itself.
  
  =cut
DARWIN-2LEVEL_COMPILER_LEXER_TOKEN

$fatpacked{"darwin-2level/version.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'DARWIN-2LEVEL_VERSION';
  #!perl -w
  package version;
  
  use 5.006002;
  use strict;
  use warnings::register;
  if ($] >= 5.015) {
      warnings::register_categories(qw/version/);
  }
  
  our $VERSION = 0.9924;
  our $CLASS = 'version';
  our (@ISA, $STRICT, $LAX);
  
  # !!!!Delete this next block completely when adding to Perl core!!!!
  {
      local $SIG{'__DIE__'};
      eval "use version::vxs $VERSION";
      if ( $@ ) { # don't have the XS version installed
  	eval "use version::vpp $VERSION"; # don't tempt fate
  	die "$@" if ( $@ );
  	push @ISA, "version::vpp";
  	local $^W;
  	*version::qv = \&version::vpp::qv;
  	*version::declare = \&version::vpp::declare;
  	*version::_VERSION = \&version::vpp::_VERSION;
  	*version::vcmp = \&version::vpp::vcmp;
  	*version::new = \&version::vpp::new;
  	*version::numify = \&version::vpp::numify;
  	*version::normal = \&version::vpp::normal;
  	if ($] >= 5.009000) {
  	    no strict 'refs';
  	    *version::stringify = \&version::vpp::stringify;
  	    *{'version::(""'} = \&version::vpp::stringify;
  	    *{'version::(<=>'} = \&version::vpp::vcmp;
  	    *{'version::(cmp'} = \&version::vpp::vcmp;
  	    *version::parse = \&version::vpp::parse;
  	}
      }
      else { # use XS module
  	push @ISA, "version::vxs";
  	local $^W;
  	*version::declare = \&version::vxs::declare;
  	*version::qv = \&version::vxs::qv;
  	*version::_VERSION = \&version::vxs::_VERSION;
  	*version::vcmp = \&version::vxs::VCMP;
  	*version::new = \&version::vxs::new;
  	*version::numify = \&version::vxs::numify;
  	*version::normal = \&version::vxs::normal;
  	if ($] >= 5.009000) {
  	    no strict 'refs';
  	    *version::stringify = \&version::vxs::stringify;
  	    *{'version::(""'} = \&version::vxs::stringify;
  	    *{'version::(<=>'} = \&version::vxs::VCMP;
  	    *{'version::(cmp'} = \&version::vxs::VCMP;
  	    *version::parse = \&version::vxs::parse;
  	}
      }
  }
  
  # avoid using Exporter
  require version::regex;
  *version::is_lax = \&version::regex::is_lax;
  *version::is_strict = \&version::regex::is_strict;
  *LAX = \$version::regex::LAX;
  *LAX_DECIMAL_VERSION = \$version::regex::LAX_DECIMAL_VERSION;
  *LAX_DOTTED_DECIMAL_VERSION = \$version::regex::LAX_DOTTED_DECIMAL_VERSION;
  *STRICT = \$version::regex::STRICT;
  *STRICT_DECIMAL_VERSION = \$version::regex::STRICT_DECIMAL_VERSION;
  *STRICT_DOTTED_DECIMAL_VERSION = \$version::regex::STRICT_DOTTED_DECIMAL_VERSION;
  
  sub import {
      no strict 'refs';
      my ($class) = shift;
  
      # Set up any derived class
      unless ($class eq $CLASS) {
  	local $^W;
  	*{$class.'::declare'} =  \&{$CLASS.'::declare'};
  	*{$class.'::qv'} = \&{$CLASS.'::qv'};
      }
  
      my %args;
      if (@_) { # any remaining terms are arguments
  	map { $args{$_} = 1 } @_
      }
      else { # no parameters at all on use line
  	%args =
  	(
  	    qv => 1,
  	    'UNIVERSAL::VERSION' => 1,
  	);
      }
  
      my $callpkg = caller();
  
      if (exists($args{declare})) {
  	*{$callpkg.'::declare'} =
  	    sub {return $class->declare(shift) }
  	  unless defined(&{$callpkg.'::declare'});
      }
  
      if (exists($args{qv})) {
  	*{$callpkg.'::qv'} =
  	    sub {return $class->qv(shift) }
  	  unless defined(&{$callpkg.'::qv'});
      }
  
      if (exists($args{'UNIVERSAL::VERSION'})) {
  	local $^W;
  	*UNIVERSAL::VERSION
  		= \&{$CLASS.'::_VERSION'};
      }
  
      if (exists($args{'VERSION'})) {
  	*{$callpkg.'::VERSION'} = \&{$CLASS.'::_VERSION'};
      }
  
      if (exists($args{'is_strict'})) {
  	*{$callpkg.'::is_strict'} = \&{$CLASS.'::is_strict'}
  	  unless defined(&{$callpkg.'::is_strict'});
      }
  
      if (exists($args{'is_lax'})) {
  	*{$callpkg.'::is_lax'} = \&{$CLASS.'::is_lax'}
  	  unless defined(&{$callpkg.'::is_lax'});
      }
  }
  
  
  1;
DARWIN-2LEVEL_VERSION

$fatpacked{"darwin-2level/version/regex.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'DARWIN-2LEVEL_VERSION_REGEX';
  package version::regex;
  
  use strict;
  
  our $VERSION = 0.9924;
  
  #--------------------------------------------------------------------------#
  # Version regexp components
  #--------------------------------------------------------------------------#
  
  # Fraction part of a decimal version number.  This is a common part of
  # both strict and lax decimal versions
  
  my $FRACTION_PART = qr/\.[0-9]+/;
  
  # First part of either decimal or dotted-decimal strict version number.
  # Unsigned integer with no leading zeroes (except for zero itself) to
  # avoid confusion with octal.
  
  my $STRICT_INTEGER_PART = qr/0|[1-9][0-9]*/;
  
  # First part of either decimal or dotted-decimal lax version number.
  # Unsigned integer, but allowing leading zeros.  Always interpreted
  # as decimal.  However, some forms of the resulting syntax give odd
  # results if used as ordinary Perl expressions, due to how perl treats
  # octals.  E.g.
  #   version->new("010" ) == 10
  #   version->new( 010  ) == 8
  #   version->new( 010.2) == 82  # "8" . "2"
  
  my $LAX_INTEGER_PART = qr/[0-9]+/;
  
  # Second and subsequent part of a strict dotted-decimal version number.
  # Leading zeroes are permitted, and the number is always decimal.
  # Limited to three digits to avoid overflow when converting to decimal
  # form and also avoid problematic style with excessive leading zeroes.
  
  my $STRICT_DOTTED_DECIMAL_PART = qr/\.[0-9]{1,3}/;
  
  # Second and subsequent part of a lax dotted-decimal version number.
  # Leading zeroes are permitted, and the number is always decimal.  No
  # limit on the numerical value or number of digits, so there is the
  # possibility of overflow when converting to decimal form.
  
  my $LAX_DOTTED_DECIMAL_PART = qr/\.[0-9]+/;
  
  # Alpha suffix part of lax version number syntax.  Acts like a
  # dotted-decimal part.
  
  my $LAX_ALPHA_PART = qr/_[0-9]+/;
  
  #--------------------------------------------------------------------------#
  # Strict version regexp definitions
  #--------------------------------------------------------------------------#
  
  # Strict decimal version number.
  
  our $STRICT_DECIMAL_VERSION =
      qr/ $STRICT_INTEGER_PART $FRACTION_PART? /x;
  
  # Strict dotted-decimal version number.  Must have both leading "v" and
  # at least three parts, to avoid confusion with decimal syntax.
  
  our $STRICT_DOTTED_DECIMAL_VERSION =
      qr/ v $STRICT_INTEGER_PART $STRICT_DOTTED_DECIMAL_PART{2,} /x;
  
  # Complete strict version number syntax -- should generally be used
  # anchored: qr/ \A $STRICT \z /x
  
  our $STRICT =
      qr/ $STRICT_DECIMAL_VERSION | $STRICT_DOTTED_DECIMAL_VERSION /x;
  
  #--------------------------------------------------------------------------#
  # Lax version regexp definitions
  #--------------------------------------------------------------------------#
  
  # Lax decimal version number.  Just like the strict one except for
  # allowing an alpha suffix or allowing a leading or trailing
  # decimal-point
  
  our $LAX_DECIMAL_VERSION =
      qr/ $LAX_INTEGER_PART (?: $FRACTION_PART | \. )? $LAX_ALPHA_PART?
  	|
  	$FRACTION_PART $LAX_ALPHA_PART?
      /x;
  
  # Lax dotted-decimal version number.  Distinguished by having either
  # leading "v" or at least three non-alpha parts.  Alpha part is only
  # permitted if there are at least two non-alpha parts. Strangely
  # enough, without the leading "v", Perl takes .1.2 to mean v0.1.2,
  # so when there is no "v", the leading part is optional
  
  our $LAX_DOTTED_DECIMAL_VERSION =
      qr/
  	v $LAX_INTEGER_PART (?: $LAX_DOTTED_DECIMAL_PART+ $LAX_ALPHA_PART? )?
  	|
  	$LAX_INTEGER_PART? $LAX_DOTTED_DECIMAL_PART{2,} $LAX_ALPHA_PART?
      /x;
  
  # Complete lax version number syntax -- should generally be used
  # anchored: qr/ \A $LAX \z /x
  #
  # The string 'undef' is a special case to make for easier handling
  # of return values from ExtUtils::MM->parse_version
  
  our $LAX =
      qr/ undef | $LAX_DOTTED_DECIMAL_VERSION | $LAX_DECIMAL_VERSION /x;
  
  #--------------------------------------------------------------------------#
  
  # Preloaded methods go here.
  sub is_strict	{ defined $_[0] && $_[0] =~ qr/ \A $STRICT \z /x }
  sub is_lax	{ defined $_[0] && $_[0] =~ qr/ \A $LAX \z /x }
  
  1;
DARWIN-2LEVEL_VERSION_REGEX

$fatpacked{"darwin-2level/version/vpp.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'DARWIN-2LEVEL_VERSION_VPP';
  package charstar;
  # a little helper class to emulate C char* semantics in Perl
  # so that prescan_version can use the same code as in C
  
  use overload (
      '""'	=> \&thischar,
      '0+'	=> \&thischar,
      '++'	=> \&increment,
      '--'	=> \&decrement,
      '+'		=> \&plus,
      '-'		=> \&minus,
      '*'		=> \&multiply,
      'cmp'	=> \&cmp,
      '<=>'	=> \&spaceship,
      'bool'	=> \&thischar,
      '='		=> \&clone,
  );
  
  sub new {
      my ($self, $string) = @_;
      my $class = ref($self) || $self;
  
      my $obj = {
  	string  => [split(//,$string)],
  	current => 0,
      };
      return bless $obj, $class;
  }
  
  sub thischar {
      my ($self) = @_;
      my $last = $#{$self->{string}};
      my $curr = $self->{current};
      if ($curr >= 0 && $curr <= $last) {
  	return $self->{string}->[$curr];
      }
      else {
  	return '';
      }
  }
  
  sub increment {
      my ($self) = @_;
      $self->{current}++;
  }
  
  sub decrement {
      my ($self) = @_;
      $self->{current}--;
  }
  
  sub plus {
      my ($self, $offset) = @_;
      my $rself = $self->clone;
      $rself->{current} += $offset;
      return $rself;
  }
  
  sub minus {
      my ($self, $offset) = @_;
      my $rself = $self->clone;
      $rself->{current} -= $offset;
      return $rself;
  }
  
  sub multiply {
      my ($left, $right, $swapped) = @_;
      my $char = $left->thischar();
      return $char * $right;
  }
  
  sub spaceship {
      my ($left, $right, $swapped) = @_;
      unless (ref($right)) { # not an object already
  	$right = $left->new($right);
      }
      return $left->{current} <=> $right->{current};
  }
  
  sub cmp {
      my ($left, $right, $swapped) = @_;
      unless (ref($right)) { # not an object already
  	if (length($right) == 1) { # comparing single character only
  	    return $left->thischar cmp $right;
  	}
  	$right = $left->new($right);
      }
      return $left->currstr cmp $right->currstr;
  }
  
  sub bool {
      my ($self) = @_;
      my $char = $self->thischar;
      return ($char ne '');
  }
  
  sub clone {
      my ($left, $right, $swapped) = @_;
      $right = {
  	string  => [@{$left->{string}}],
  	current => $left->{current},
      };
      return bless $right, ref($left);
  }
  
  sub currstr {
      my ($self, $s) = @_;
      my $curr = $self->{current};
      my $last = $#{$self->{string}};
      if (defined($s) && $s->{current} < $last) {
  	$last = $s->{current};
      }
  
      my $string = join('', @{$self->{string}}[$curr..$last]);
      return $string;
  }
  
  package version::vpp;
  
  use 5.006002;
  use strict;
  use warnings::register;
  
  use Config;
  
  our $VERSION = 0.9924;
  our $CLASS = 'version::vpp';
  our ($LAX, $STRICT, $WARN_CATEGORY);
  
  if ($] > 5.015) {
      warnings::register_categories(qw/version/);
      $WARN_CATEGORY = 'version';
  } else {
      $WARN_CATEGORY = 'numeric';
  }
  
  require version::regex;
  *version::vpp::is_strict = \&version::regex::is_strict;
  *version::vpp::is_lax = \&version::regex::is_lax;
  *LAX = \$version::regex::LAX;
  *STRICT = \$version::regex::STRICT;
  
  use overload (
      '""'       => \&stringify,
      '0+'       => \&numify,
      'cmp'      => \&vcmp,
      '<=>'      => \&vcmp,
      'bool'     => \&vbool,
      '+'        => \&vnoop,
      '-'        => \&vnoop,
      '*'        => \&vnoop,
      '/'        => \&vnoop,
      '+='        => \&vnoop,
      '-='        => \&vnoop,
      '*='        => \&vnoop,
      '/='        => \&vnoop,
      'abs'      => \&vnoop,
  );
  
  sub import {
      no strict 'refs';
      my ($class) = shift;
  
      # Set up any derived class
      unless ($class eq $CLASS) {
  	local $^W;
  	*{$class.'::declare'} =  \&{$CLASS.'::declare'};
  	*{$class.'::qv'} = \&{$CLASS.'::qv'};
      }
  
      my %args;
      if (@_) { # any remaining terms are arguments
  	map { $args{$_} = 1 } @_
      }
      else { # no parameters at all on use line
  	%args =
  	(
  	    qv => 1,
  	    'UNIVERSAL::VERSION' => 1,
  	);
      }
  
      my $callpkg = caller();
  
      if (exists($args{declare})) {
  	*{$callpkg.'::declare'} =
  	    sub {return $class->declare(shift) }
  	  unless defined(&{$callpkg.'::declare'});
      }
  
      if (exists($args{qv})) {
  	*{$callpkg.'::qv'} =
  	    sub {return $class->qv(shift) }
  	  unless defined(&{$callpkg.'::qv'});
      }
  
      if (exists($args{'UNIVERSAL::VERSION'})) {
  	no warnings qw/redefine/;
  	*UNIVERSAL::VERSION
  		= \&{$CLASS.'::_VERSION'};
      }
  
      if (exists($args{'VERSION'})) {
  	*{$callpkg.'::VERSION'} = \&{$CLASS.'::_VERSION'};
      }
  
      if (exists($args{'is_strict'})) {
  	*{$callpkg.'::is_strict'} = \&{$CLASS.'::is_strict'}
  	  unless defined(&{$callpkg.'::is_strict'});
      }
  
      if (exists($args{'is_lax'})) {
  	*{$callpkg.'::is_lax'} = \&{$CLASS.'::is_lax'}
  	  unless defined(&{$callpkg.'::is_lax'});
      }
  }
  
  my $VERSION_MAX = 0x7FFFFFFF;
  
  # implement prescan_version as closely to the C version as possible
  use constant TRUE  => 1;
  use constant FALSE => 0;
  
  sub isDIGIT {
      my ($char) = shift->thischar();
      return ($char =~ /\d/);
  }
  
  sub isALPHA {
      my ($char) = shift->thischar();
      return ($char =~ /[a-zA-Z]/);
  }
  
  sub isSPACE {
      my ($char) = shift->thischar();
      return ($char =~ /\s/);
  }
  
  sub BADVERSION {
      my ($s, $errstr, $error) = @_;
      if ($errstr) {
  	$$errstr = $error;
      }
      return $s;
  }
  
  sub prescan_version {
      my ($s, $strict, $errstr, $sqv, $ssaw_decimal, $swidth, $salpha) = @_;
      my $qv          = defined $sqv          ? $$sqv          : FALSE;
      my $saw_decimal = defined $ssaw_decimal ? $$ssaw_decimal : 0;
      my $width       = defined $swidth       ? $$swidth       : 3;
      my $alpha       = defined $salpha       ? $$salpha       : FALSE;
  
      my $d = $s;
  
      if ($qv && isDIGIT($d)) {
  	goto dotted_decimal_version;
      }
  
      if ($d eq 'v') { # explicit v-string
  	$d++;
  	if (isDIGIT($d)) {
  	    $qv = TRUE;
  	}
  	else { # degenerate v-string
  	    # requires v1.2.3
  	    return BADVERSION($s,$errstr,"Invalid version format (dotted-decimal versions require at least three parts)");
  	}
  
  dotted_decimal_version:
  	if ($strict && $d eq '0' && isDIGIT($d+1)) {
  	    # no leading zeros allowed
  	    return BADVERSION($s,$errstr,"Invalid version format (no leading zeros)");
  	}
  
  	while (isDIGIT($d)) { 	# integer part
  	    $d++;
  	}
  
  	if ($d eq '.')
  	{
  	    $saw_decimal++;
  	    $d++; 		# decimal point
  	}
  	else
  	{
  	    if ($strict) {
  		# require v1.2.3
  		return BADVERSION($s,$errstr,"Invalid version format (dotted-decimal versions require at least three parts)");
  	    }
  	    else {
  		goto version_prescan_finish;
  	    }
  	}
  
  	{
  	    my $i = 0;
  	    my $j = 0;
  	    while (isDIGIT($d)) {	# just keep reading
  		$i++;
  		while (isDIGIT($d)) {
  		    $d++; $j++;
  		    # maximum 3 digits between decimal
  		    if ($strict && $j > 3) {
  			return BADVERSION($s,$errstr,"Invalid version format (maximum 3 digits between decimals)");
  		    }
  		}
  		if ($d eq '_') {
  		    if ($strict) {
  			return BADVERSION($s,$errstr,"Invalid version format (no underscores)");
  		    }
  		    if ( $alpha ) {
  			return BADVERSION($s,$errstr,"Invalid version format (multiple underscores)");
  		    }
  		    $d++;
  		    $alpha = TRUE;
  		}
  		elsif ($d eq '.') {
  		    if ($alpha) {
  			return BADVERSION($s,$errstr,"Invalid version format (underscores before decimal)");
  		    }
  		    $saw_decimal++;
  		    $d++;
  		}
  		elsif (!isDIGIT($d)) {
  		    last;
  		}
  		$j = 0;
  	    }
  
  	    if ($strict && $i < 2) {
  		# requires v1.2.3
  		return BADVERSION($s,$errstr,"Invalid version format (dotted-decimal versions require at least three parts)");
  	    }
  	}
      } 					# end if dotted-decimal
      else
      {					# decimal versions
  	my $j = 0;
  	# special $strict case for leading '.' or '0'
  	if ($strict) {
  	    if ($d eq '.') {
  		return BADVERSION($s,$errstr,"Invalid version format (0 before decimal required)");
  	    }
  	    if ($d eq '0' && isDIGIT($d+1)) {
  		return BADVERSION($s,$errstr,"Invalid version format (no leading zeros)");
  	    }
  	}
  
  	# and we never support negative version numbers
  	if ($d eq '-') {
  	    return BADVERSION($s,$errstr,"Invalid version format (negative version number)");
  	}
  
  	# consume all of the integer part
  	while (isDIGIT($d)) {
  	    $d++;
  	}
  
  	# look for a fractional part
  	if ($d eq '.') {
  	    # we found it, so consume it
  	    $saw_decimal++;
  	    $d++;
  	}
  	elsif (!$d || $d eq ';' || isSPACE($d) || $d eq '}') {
  	    if ( $d == $s ) {
  		# found nothing
  		return BADVERSION($s,$errstr,"Invalid version format (version required)");
  	    }
  	    # found just an integer
  	    goto version_prescan_finish;
  	}
  	elsif ( $d == $s ) {
  	    # didn't find either integer or period
  	    return BADVERSION($s,$errstr,"Invalid version format (non-numeric data)");
  	}
  	elsif ($d eq '_') {
  	    # underscore can't come after integer part
  	    if ($strict) {
  		return BADVERSION($s,$errstr,"Invalid version format (no underscores)");
  	    }
  	    elsif (isDIGIT($d+1)) {
  		return BADVERSION($s,$errstr,"Invalid version format (alpha without decimal)");
  	    }
  	    else {
  		return BADVERSION($s,$errstr,"Invalid version format (misplaced underscore)");
  	    }
  	}
  	elsif ($d) {
  	    # anything else after integer part is just invalid data
  	    return BADVERSION($s,$errstr,"Invalid version format (non-numeric data)");
  	}
  
  	# scan the fractional part after the decimal point
  	if ($d && !isDIGIT($d) && ($strict || ! ($d eq ';' || isSPACE($d) || $d eq '}') )) {
  		# $strict or lax-but-not-the-end
  		return BADVERSION($s,$errstr,"Invalid version format (fractional part required)");
  	}
  
  	while (isDIGIT($d)) {
  	    $d++; $j++;
  	    if ($d eq '.' && isDIGIT($d-1)) {
  		if ($alpha) {
  		    return BADVERSION($s,$errstr,"Invalid version format (underscores before decimal)");
  		}
  		if ($strict) {
  		    return BADVERSION($s,$errstr,"Invalid version format (dotted-decimal versions must begin with 'v')");
  		}
  		$d = $s; # start all over again
  		$qv = TRUE;
  		goto dotted_decimal_version;
  	    }
  	    if ($d eq '_') {
  		if ($strict) {
  		    return BADVERSION($s,$errstr,"Invalid version format (no underscores)");
  		}
  		if ( $alpha ) {
  		    return BADVERSION($s,$errstr,"Invalid version format (multiple underscores)");
  		}
  		if ( ! isDIGIT($d+1) ) {
  		    return BADVERSION($s,$errstr,"Invalid version format (misplaced underscore)");
  		}
  		$width = $j;
  		$d++;
  		$alpha = TRUE;
  	    }
  	}
      }
  
  version_prescan_finish:
      while (isSPACE($d)) {
  	$d++;
      }
  
      if ($d && !isDIGIT($d) && (! ($d eq ';' || $d eq '}') )) {
  	# trailing non-numeric data
  	return BADVERSION($s,$errstr,"Invalid version format (non-numeric data)");
      }
      if ($saw_decimal > 1 && ($d-1) eq '.') {
  	# no trailing period allowed
  	return BADVERSION($s,$errstr,"Invalid version format (trailing decimal)");
      }
  
      if (defined $sqv) {
  	$$sqv = $qv;
      }
      if (defined $swidth) {
  	$$swidth = $width;
      }
      if (defined $ssaw_decimal) {
  	$$ssaw_decimal = $saw_decimal;
      }
      if (defined $salpha) {
  	$$salpha = $alpha;
      }
      return $d;
  }
  
  sub scan_version {
      my ($s, $rv, $qv) = @_;
      my $start;
      my $pos;
      my $last;
      my $errstr;
      my $saw_decimal = 0;
      my $width = 3;
      my $alpha = FALSE;
      my $vinf = FALSE;
      my @av;
  
      $s = new charstar $s;
  
      while (isSPACE($s)) { # leading whitespace is OK
  	$s++;
      }
  
      $last = prescan_version($s, FALSE, \$errstr, \$qv, \$saw_decimal,
  	\$width, \$alpha);
  
      if ($errstr) {
  	# 'undef' is a special case and not an error
  	if ( $s ne 'undef') {
  	    require Carp;
  	    Carp::croak($errstr);
  	}
      }
  
      $start = $s;
      if ($s eq 'v') {
  	$s++;
      }
      $pos = $s;
  
      if ( $qv ) {
  	$$rv->{qv} = $qv;
      }
      if ( $alpha ) {
  	$$rv->{alpha} = $alpha;
      }
      if ( !$qv && $width < 3 ) {
  	$$rv->{width} = $width;
      }
  
      while (isDIGIT($pos) || $pos eq '_') {
  	$pos++;
      }
      if (!isALPHA($pos)) {
  	my $rev;
  
  	for (;;) {
  	    $rev = 0;
  	    {
    		# this is atoi() that delimits on underscores
    		my $end = $pos;
    		my $mult = 1;
  		my $orev;
  
  		#  the following if() will only be true after the decimal
  		#  point of a version originally created with a bare
  		#  floating point number, i.e. not quoted in any way
  		#
   		if ( !$qv && $s > $start && $saw_decimal == 1 ) {
  		    $mult *= 100;
   		    while ( $s < $end ) {
  			next if $s eq '_';
  			$orev = $rev;
   			$rev += $s * $mult;
   			$mult /= 10;
  			if (   (abs($orev) > abs($rev))
  			    || (abs($rev) > $VERSION_MAX )) {
  			    warn("Integer overflow in version %d",
  					   $VERSION_MAX);
  			    $s = $end - 1;
  			    $rev = $VERSION_MAX;
  			    $vinf = 1;
  			}
   			$s++;
  			if ( $s eq '_' ) {
  			    $s++;
  			}
   		    }
    		}
   		else {
   		    while (--$end >= $s) {
  			next if $end eq '_';
  			$orev = $rev;
   			$rev += $end * $mult;
   			$mult *= 10;
  			if (   (abs($orev) > abs($rev))
  			    || (abs($rev) > $VERSION_MAX )) {
  			    warn("Integer overflow in version");
  			    $end = $s - 1;
  			    $rev = $VERSION_MAX;
  			    $vinf = 1;
  			}
   		    }
   		}
    	    }
  
    	    # Append revision
  	    push @av, $rev;
  	    if ( $vinf ) {
  		$s = $last;
  		last;
  	    }
  	    elsif ( $pos eq '.' ) {
  		$s = ++$pos;
  	    }
  	    elsif ( $pos eq '_' && isDIGIT($pos+1) ) {
  		$s = ++$pos;
  	    }
  	    elsif ( $pos eq ',' && isDIGIT($pos+1) ) {
  		$s = ++$pos;
  	    }
  	    elsif ( isDIGIT($pos) ) {
  		$s = $pos;
  	    }
  	    else {
  		$s = $pos;
  		last;
  	    }
  	    if ( $qv ) {
  		while ( isDIGIT($pos) || $pos eq '_') {
  		    $pos++;
  		}
  	    }
  	    else {
  		my $digits = 0;
  		while ( ( isDIGIT($pos) || $pos eq '_' ) && $digits < 3 ) {
  		    if ( $pos ne '_' ) {
  			$digits++;
  		    }
  		    $pos++;
  		}
  	    }
  	}
      }
      if ( $qv ) { # quoted versions always get at least three terms
  	my $len = $#av;
  	#  This for loop appears to trigger a compiler bug on OS X, as it
  	#  loops infinitely. Yes, len is negative. No, it makes no sense.
  	#  Compiler in question is:
  	#  gcc version 3.3 20030304 (Apple Computer, Inc. build 1640)
  	#  for ( len = 2 - len; len > 0; len-- )
  	#  av_push(MUTABLE_AV(sv), newSViv(0));
  	#
  	$len = 2 - $len;
  	while ($len-- > 0) {
  	    push @av, 0;
  	}
      }
  
      # need to save off the current version string for later
      if ( $vinf ) {
  	$$rv->{original} = "v.Inf";
  	$$rv->{vinf} = 1;
      }
      elsif ( $s > $start ) {
  	$$rv->{original} = $start->currstr($s);
  	if ( $qv && $saw_decimal == 1 && $start ne 'v' ) {
  	    # need to insert a v to be consistent
  	    $$rv->{original} = 'v' . $$rv->{original};
  	}
      }
      else {
  	$$rv->{original} = '0';
  	push(@av, 0);
      }
  
      # And finally, store the AV in the hash
      $$rv->{version} = \@av;
  
      # fix RT#19517 - special case 'undef' as string
      if ($s eq 'undef') {
  	$s += 5;
      }
  
      return $s;
  }
  
  sub new {
      my $class = shift;
      unless (defined $class or $#_ > 1) {
  	require Carp;
  	Carp::croak('Usage: version::new(class, version)');
      }
  
      my $self = bless ({}, ref ($class) || $class);
      my $qv = FALSE;
  
      if ( $#_ == 1 ) { # must be CVS-style
  	$qv = TRUE;
      }
      my $value = pop; # always going to be the last element
  
      if ( ref($value) && eval('$value->isa("version")') ) {
  	# Can copy the elements directly
  	$self->{version} = [ @{$value->{version} } ];
  	$self->{qv} = 1 if $value->{qv};
  	$self->{alpha} = 1 if $value->{alpha};
  	$self->{original} = ''.$value->{original};
  	return $self;
      }
  
      if ( not defined $value or $value =~ /^undef$/ ) {
  	# RT #19517 - special case for undef comparison
  	# or someone forgot to pass a value
  	push @{$self->{version}}, 0;
  	$self->{original} = "0";
  	return ($self);
      }
  
  
      if (ref($value) =~ m/ARRAY|HASH/) {
  	require Carp;
  	Carp::croak("Invalid version format (non-numeric data)");
      }
  
      $value = _un_vstring($value);
  
      if ($Config{d_setlocale}) {
  	use POSIX qw/locale_h/;
  	use if $Config{d_setlocale}, 'locale';
  	my $currlocale = setlocale(LC_ALL);
  
  	# if the current locale uses commas for decimal points, we
  	# just replace commas with decimal places, rather than changing
  	# locales
  	if ( localeconv()->{decimal_point} eq ',' ) {
  	    $value =~ tr/,/./;
  	}
      }
  
      # exponential notation
      if ( $value =~ /\d+.?\d*e[-+]?\d+/ ) {
  	$value = sprintf("%.9f",$value);
  	$value =~ s/(0+)$//; # trim trailing zeros
      }
  
      my $s = scan_version($value, \$self, $qv);
  
      if ($s) { # must be something left over
  	warn(sprintf "Version string '%s' contains invalid data; "
  		   ."ignoring: '%s'", $value, $s);
      }
  
      return ($self);
  }
  
  *parse = \&new;
  
  sub numify {
      my ($self) = @_;
      unless (_verify($self)) {
  	require Carp;
  	Carp::croak("Invalid version object");
      }
      my $alpha = $self->{alpha} || "";
      my $len = $#{$self->{version}};
      my $digit = $self->{version}[0];
      my $string = sprintf("%d.", $digit );
  
      if ($alpha and warnings::enabled()) {
  	warnings::warn($WARN_CATEGORY, 'alpha->numify() is lossy');
      }
  
      for ( my $i = 1 ; $i <= $len ; $i++ ) {
  	$digit = $self->{version}[$i];
  	$string .= sprintf("%03d", $digit);
      }
  
      if ( $len == 0 ) {
  	$string .= sprintf("000");
      }
  
      return $string;
  }
  
  sub normal {
      my ($self) = @_;
      unless (_verify($self)) {
  	require Carp;
  	Carp::croak("Invalid version object");
      }
  
      my $len = $#{$self->{version}};
      my $digit = $self->{version}[0];
      my $string = sprintf("v%d", $digit );
  
      for ( my $i = 1 ; $i <= $len ; $i++ ) {
  	$digit = $self->{version}[$i];
  	$string .= sprintf(".%d", $digit);
      }
  
      if ( $len <= 2 ) {
  	for ( $len = 2 - $len; $len != 0; $len-- ) {
  	    $string .= sprintf(".%0d", 0);
  	}
      }
  
      return $string;
  }
  
  sub stringify {
      my ($self) = @_;
      unless (_verify($self)) {
  	require Carp;
  	Carp::croak("Invalid version object");
      }
      return exists $self->{original}
      	? $self->{original}
  	: exists $self->{qv}
  	    ? $self->normal
  	    : $self->numify;
  }
  
  sub vcmp {
      my ($left,$right,$swap) = @_;
      my $class = ref($left);
      unless ( UNIVERSAL::isa($right, $class) ) {
  	$right = $class->new($right);
      }
  
      if ( $swap ) {
  	($left, $right) = ($right, $left);
      }
      unless (_verify($left)) {
  	require Carp;
  	Carp::croak("Invalid version object");
      }
      unless (_verify($right)) {
  	require Carp;
  	Carp::croak("Invalid version format");
      }
      my $l = $#{$left->{version}};
      my $r = $#{$right->{version}};
      my $m = $l < $r ? $l : $r;
      my $lalpha = $left->is_alpha;
      my $ralpha = $right->is_alpha;
      my $retval = 0;
      my $i = 0;
      while ( $i <= $m && $retval == 0 ) {
  	$retval = $left->{version}[$i] <=> $right->{version}[$i];
  	$i++;
      }
  
      # possible match except for trailing 0's
      if ( $retval == 0 && $l != $r ) {
  	if ( $l < $r ) {
  	    while ( $i <= $r && $retval == 0 ) {
  		if ( $right->{version}[$i] != 0 ) {
  		    $retval = -1; # not a match after all
  		}
  		$i++;
  	    }
  	}
  	else {
  	    while ( $i <= $l && $retval == 0 ) {
  		if ( $left->{version}[$i] != 0 ) {
  		    $retval = +1; # not a match after all
  		}
  		$i++;
  	    }
  	}
      }
  
      return $retval;
  }
  
  sub vbool {
      my ($self) = @_;
      return vcmp($self,$self->new("0"),1);
  }
  
  sub vnoop {
      require Carp;
      Carp::croak("operation not supported with version object");
  }
  
  sub is_alpha {
      my ($self) = @_;
      return (exists $self->{alpha});
  }
  
  sub qv {
      my $value = shift;
      my $class = $CLASS;
      if (@_) {
  	$class = ref($value) || $value;
  	$value = shift;
      }
  
      $value = _un_vstring($value);
      $value = 'v'.$value unless $value =~ /(^v|\d+\.\d+\.\d)/;
      my $obj = $CLASS->new($value);
      return bless $obj, $class;
  }
  
  *declare = \&qv;
  
  sub is_qv {
      my ($self) = @_;
      return (exists $self->{qv});
  }
  
  
  sub _verify {
      my ($self) = @_;
      if ( ref($self)
  	&& eval { exists $self->{version} }
  	&& ref($self->{version}) eq 'ARRAY'
  	) {
  	return 1;
      }
      else {
  	return 0;
      }
  }
  
  sub _is_non_alphanumeric {
      my $s = shift;
      $s = new charstar $s;
      while ($s) {
  	return 0 if isSPACE($s); # early out
  	return 1 unless (isALPHA($s) || isDIGIT($s) || $s =~ /[.-]/);
  	$s++;
      }
      return 0;
  }
  
  sub _un_vstring {
      my $value = shift;
      # may be a v-string
      if ( length($value) >= 1 && $value !~ /[,._]/
  	&& _is_non_alphanumeric($value)) {
  	my $tvalue;
  	if ( $] >= 5.008_001 ) {
  	    $tvalue = _find_magic_vstring($value);
  	    $value = $tvalue if length $tvalue;
  	}
  	elsif ( $] >= 5.006_000 ) {
  	    $tvalue = sprintf("v%vd",$value);
  	    if ( $tvalue =~ /^v\d+(\.\d+)*$/ ) {
  		# must be a v-string
  		$value = $tvalue;
  	    }
  	}
      }
      return $value;
  }
  
  sub _find_magic_vstring {
      my $value = shift;
      my $tvalue = '';
      require B;
      my $sv = B::svref_2object(\$value);
      my $magic = ref($sv) eq 'B::PVMG' ? $sv->MAGIC : undef;
      while ( $magic ) {
  	if ( $magic->TYPE eq 'V' ) {
  	    $tvalue = $magic->PTR;
  	    $tvalue =~ s/^v?(.+)$/v$1/;
  	    last;
  	}
  	else {
  	    $magic = $magic->MOREMAGIC;
  	}
      }
      $tvalue =~ tr/_//d;
      return $tvalue;
  }
  
  sub _VERSION {
      my ($obj, $req) = @_;
      my $class = ref($obj) || $obj;
  
      no strict 'refs';
      if ( exists $INC{"$class.pm"} and not %{"$class\::"} and $] >= 5.008) {
  	 # file but no package
  	require Carp;
  	Carp::croak( "$class defines neither package nor VERSION"
  	    ."--version check failed");
      }
  
      my $version = eval "\$$class\::VERSION";
      if ( defined $version ) {
  	local $^W if $] <= 5.008;
  	$version = version::vpp->new($version);
      }
  
      if ( defined $req ) {
  	unless ( defined $version ) {
  	    require Carp;
  	    my $msg =  $] < 5.006
  	    ? "$class version $req required--this is only version "
  	    : "$class does not define \$$class\::VERSION"
  	      ."--version check failed";
  
  	    if ( $ENV{VERSION_DEBUG} ) {
  		Carp::confess($msg);
  	    }
  	    else {
  		Carp::croak($msg);
  	    }
  	}
  
  	$req = version::vpp->new($req);
  
  	if ( $req > $version ) {
  	    require Carp;
  	    if ( $req->is_qv ) {
  		Carp::croak(
  		    sprintf ("%s version %s required--".
  			"this is only version %s", $class,
  			$req->normal, $version->normal)
  		);
  	    }
  	    else {
  		Carp::croak(
  		    sprintf ("%s version %s required--".
  			"this is only version %s", $class,
  			$req->stringify, $version->stringify)
  		);
  	    }
  	}
      }
  
      return defined $version ? $version->stringify : undef;
  }
  
  1; #this line is important and will help the module return a true value
DARWIN-2LEVEL_VERSION_VPP

$fatpacked{"darwin-2level/version/vxs.pm"} = '#line '.(1+__LINE__).' "'.__FILE__."\"\n".<<'DARWIN-2LEVEL_VERSION_VXS';
  #!perl -w
  package version::vxs;
  
  use v5.10;
  use strict;
  
  our $VERSION = 0.9924;
  our $CLASS = 'version::vxs';
  our @ISA;
  
  eval {
      require XSLoader;
      local $^W; # shut up the 'redefined' warning for UNIVERSAL::VERSION
      XSLoader::load('version::vxs', $VERSION);
      1;
  } or do {
      require DynaLoader;
      push @ISA, 'DynaLoader'; 
      local $^W; # shut up the 'redefined' warning for UNIVERSAL::VERSION
      bootstrap version::vxs $VERSION;
  };
  
  # Preloaded methods go here.
  
  1;
DARWIN-2LEVEL_VERSION_VXS

s/^  //mg for values %fatpacked;

my $class = 'FatPacked::'.(0+\%fatpacked);
no strict 'refs';
*{"${class}::files"} = sub { keys %{$_[0]} };

if ($] < 5.008) {
  *{"${class}::INC"} = sub {
    if (my $fat = $_[0]{$_[1]}) {
      my $pos = 0;
      my $last = length $fat;
      return (sub {
        return 0 if $pos == $last;
        my $next = (1 + index $fat, "\n", $pos) || $last;
        $_ .= substr $fat, $pos, $next - $pos;
        $pos = $next;
        return 1;
      });
    }
  };
}

else {
  *{"${class}::INC"} = sub {
    if (my $fat = $_[0]{$_[1]}) {
      open my $fh, '<', \$fat
        or die "FatPacker error loading $_[1] (could be a perl installation issue?)";
      return $fh;
    }
    return;
  };
}

unshift @INC, bless \%fatpacked, $class;
  } # END OF FATPACK CODE

#!/Users/st21277/perl5/perlbrew/perls/perl-5.18.4/bin/perl
use strict;
use warnings;
use utf8;
use 5.008001;

use Getopt::Long ();
use File::Basename ();
use Module::CPANfile ();

use App::scan_prereqs_cpanfile qw(
    debugf find_perl_files scan_inner_packages scan scan_test_requires load_diff_src
);

my $version;
my $diff;
my $include_empty;
my $scan_test_requires;
my $dir = ".";
my $ignorefile;
my $ignore_regexp;
my @ignore = qw(eg examples share fatlib _build .git blib local .build);
my $add_ignore;
my $p = Getopt::Long::Parser->new(
    config => [qw(posix_default no_ignore_case auto_help)]
);
$p->getoptions(
    'version!'       => \$version,
    'diff=s'         => \$diff,
    'ignore=s'       => \$add_ignore,
    'ignore-file=s'    => \$ignorefile,
    'include-empty!' => \$include_empty,
    'scan-test-requires' => \$scan_test_requires,
    'dir=s'          => \$dir,
);
push @ignore, split /,/,$add_ignore if $add_ignore;

if ($ignorefile) {
    ! -r $ignorefile && die "Unable to read ignore-file '$ignorefile' !" ;
    open my $fh, '<', $ignorefile;
    chomp(my @lines = <$fh>);
    $ignore_regexp = join '|', @lines;
    close $fh;
}

if ($version) {
    printf "%s %s\n",
        File::Basename::basename($0),
        $App::scan_prereqs_cpanfile::VERSION;
    exit 0;
}


{
    my ($runtime_files, $test_files, $configure_files, $develop_files) = find_perl_files($dir, ignore => \@ignore, ignore_regexp => $ignore_regexp);
    debugf($develop_files);

    my @inner_packages = scan_inner_packages(@$test_files, @$runtime_files, @$configure_files, @$develop_files);
    my $meta_prereqs = $diff ? load_diff_src($diff) : +{};

    # runtime
    my $runtime_prereqs = scan($runtime_files, \@inner_packages, $meta_prereqs, [qw(runtime)], 'runtime', +{});

    # test
    my $test_prereqs = scan($test_files, \@inner_packages, $meta_prereqs, [qw(test runtime)], 'test', $runtime_prereqs);

    # configure
    my $configure_prereqs = scan($configure_files, \@inner_packages, $meta_prereqs, [qw(configure runtime)], 'configure', $runtime_prereqs);

    # develop
    my $develop_prereqs = scan($develop_files, \@inner_packages, $meta_prereqs, [qw(develop test runtime)], 'develop', +{ %{$runtime_prereqs||{}}, %{$test_prereqs||{}}});

    if ($scan_test_requires) {
        $develop_prereqs = scan_test_requires($dir, $develop_prereqs);
    }

    print Module::CPANfile->from_prereqs(
        {
            runtime => {
                requires => $runtime_prereqs,
            },
            configure => {
                requires => $configure_prereqs,
            },
            test => {
                requires => $test_prereqs,
            },
            develop => {
                requires => $develop_prereqs,
            },
        }
    )->to_string($include_empty);
}

__END__

=head1 NAME

scan-prereqs-cpanfile - Scan prerequisite modules and generate CPANfile

=head1 SYNOPSIS

    % scan-prereqs-cpanfile

        --diff=META.json      # Generate diff from META.json
        --diff=cpanfile       # Generate diff from cpanfile
        --ignore=extlib
        --dir=/foo/bar
        --scan-test-requires

=head1 DESCRIPTION

This script scans prerequisite modules from your code, and generate CPANfile.
You can also list missing prerequisite modules.

=head1 SCANNING RULES

=over 4

=item Used modules in `Build.PL` or `Makefile.PL` as 'test' requires

=item Used modules in `t/` as 'test' requires

=item Used modules in `xt/`, `benchmark/` and `author/` as 'develop' requires

=item Used modules in other directories as 'runtime' requires

=back

=head1 OPTIONS

=over 4

=item --diff

        --diff=META.json      # Generate diff from META.json
        --diff=cpanfile       # Generate diff from cpanfile

Compare the scanning result with META.json, META.yml or cpanfile.
With this option, scan-prereqs-cpanfile displays missing prerequisite modules only.

=item --ignore

    --ignore=tools,extlib

Ignore some directories.

=item --ignore-file

    --ignore-file=ignored.regex

Ignore all files and directories matching a regex pattern listed in this file.

=item --include-empty

By default, phases without any prereqs are not dumped, By giving this option, cpanfile will have an empty block such as:

    on test => sub {

    };

Defaults to false.

=item --scan-test-requires

Scan test files and include the modules specified by L<Test::Requires> as 'develop' requires.

=item --dir

    --dir=DIRECTORY

Scan for modules in DIRECTORY (instead of '.') 

=back

=head1 AUTHOR

Tokuhiro Matsuno

=head1 SEE ALSO

L<Module::CPANfile>, L<Perl::PrereqScanner::Lite>

